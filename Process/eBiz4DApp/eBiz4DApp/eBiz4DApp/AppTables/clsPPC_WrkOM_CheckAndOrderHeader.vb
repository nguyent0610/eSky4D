'-- ------------------------------------------------------------
'-- Class name    :  clsPPC_WrkOM_CheckAndOrderHeader
'-- Created date  :  10/2/2012
'-- Created by    :  
'-- Updated by    :  
'-- Generated by    :  Class Maker v1.0
'-- ------------------------------------------------------------

'-- Import Libraries --
Imports HQFramework.Common
Imports HQFramework.DAL
Public Class clsPPC_WrkOM_CheckAndOrderHeader
#Region "Constants"
	Private Const PP_PPC_WrkOM_CheckAndOrderHeader As String = "PP_PPC_WrkOM_CheckAndOrderHeader"
#End Region 

#Region "Member Variables"
	Private mvarCheckOrderID As System.String

	Private mvarTranDate As System.DateTime

	Private mvarReasonID As System.String

	Private mvarType As System.String

	Private mvarStatus As System.String

	Private mvarCustID As System.String

	Private mvarSlsperID As System.String

#End Region 

	Private m_Dal As DataAccess
#Region "Constructors"
	Public Sub New()
		m_Dal = New DataAccess
		Reset()
	End Sub
	Public Sub New(ByVal dal As DataAccess)
		m_Dal = dal
		Reset()
	End Sub
#End Region 

#Region "Public Properties"
	Public Property CheckOrderID() As System.String
		Get
			Return mvarCheckOrderID
		End Get
		Set(ByVal Value As System.String)
			mvarCheckOrderID = Value
		End Set
	End Property

	Public Property TranDate() As System.DateTime
		Get
			Return mvarTranDate
		End Get
		Set(ByVal Value As System.DateTime)
			mvarTranDate = Value
		End Set
	End Property

	Public Property ReasonID() As System.String
		Get
			Return mvarReasonID
		End Get
		Set(ByVal Value As System.String)
			mvarReasonID = Value
		End Set
	End Property

	Public Property Type() As System.String
		Get
			Return mvarType
		End Get
		Set(ByVal Value As System.String)
			mvarType = Value
		End Set
	End Property

	Public Property Status() As System.String
		Get
			Return mvarStatus
		End Get
		Set(ByVal Value As System.String)
			mvarStatus = Value
		End Set
	End Property

	Public Property CustID() As System.String
		Get
			Return mvarCustID
		End Get
		Set(ByVal Value As System.String)
			mvarCustID = Value
		End Set
	End Property

	Public Property SlsperID() As System.String
		Get
			Return mvarSlsperID
		End Get
		Set(ByVal Value As System.String)
			mvarSlsperID = Value
		End Set
	End Property

#End Region 

#Region "Public Methods"
	Public Function Add() as Boolean 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "AddNew", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@CheckOrderID", DbType.String,clsCommon.GetValueDBNull(Me.mvarCheckOrderID), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@TranDate", DbType.DateTime,clsCommon.GetValueDBNull(Me.mvarTranDate), ParameterDirection.Input,16 ))
			pc.Add(New ParamStruct("@ReasonID", DbType.String,clsCommon.GetValueDBNull(Me.mvarReasonID), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@Type", DbType.String,clsCommon.GetValueDBNull(Me.mvarType), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@Status", DbType.String,clsCommon.GetValueDBNull(Me.mvarStatus), ParameterDirection.Input,1 ))
			pc.Add(New ParamStruct("@CustID", DbType.String,clsCommon.GetValueDBNull(Me.mvarCustID), ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@SlsperID", DbType.String,clsCommon.GetValueDBNull(Me.mvarSlsperID), ParameterDirection.Input,10 ))
			DAL.ExecPreparedSQL(PP_PPC_WrkOM_CheckAndOrderHeader, CommandType.StoredProcedure, pc,"")
		Me.mvarCheckOrderID = clsCommon.GetValue(pc.Item("@CheckOrderID").Value, mvarCheckOrderID.GetType().FullName)
		Return (Me.mvarCheckOrderID <> String.Empty )
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Function Update() as Boolean 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "Update", ParameterDirection.Input,50 ))
			 pc.Add(New ParamStruct("@CheckOrderID",DbType.String, clsCommon.GetValueDBNull(me.mvarCheckOrderID), ParameterDirection.Input,10 ))
			 pc.Add(New ParamStruct("@TranDate",DbType.DateTime, clsCommon.GetValueDBNull(me.mvarTranDate), ParameterDirection.Input,16 ))
			 pc.Add(New ParamStruct("@ReasonID",DbType.String, clsCommon.GetValueDBNull(me.mvarReasonID), ParameterDirection.Input,10 ))
			 pc.Add(New ParamStruct("@Type",DbType.String, clsCommon.GetValueDBNull(me.mvarType), ParameterDirection.Input,10 ))
			 pc.Add(New ParamStruct("@Status",DbType.String, clsCommon.GetValueDBNull(me.mvarStatus), ParameterDirection.Input,1 ))
			 pc.Add(New ParamStruct("@CustID",DbType.String, clsCommon.GetValueDBNull(me.mvarCustID), ParameterDirection.Input,50 ))
			 pc.Add(New ParamStruct("@SlsperID",DbType.String, clsCommon.GetValueDBNull(me.mvarSlsperID), ParameterDirection.Input,10 ))
			Return (DAL.ExecNonQuery(PP_PPC_WrkOM_CheckAndOrderHeader, CommandType.StoredProcedure, pc,"") > 0)
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Function Delete(ByVal CheckOrderID As System.String) as Boolean 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "Delete", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@CheckOrderID",DbType.String, clsCommon.GetValueDBNull(CheckOrderID), ParameterDirection.Input,10 ))
			Return (DAL.ExecNonQuery(PP_PPC_WrkOM_CheckAndOrderHeader, CommandType.StoredProcedure, pc,"") > 0)
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Function GetAll(ByVal CheckOrderID As System.String) as DataTable 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			Dim ds As New DataSet
			pc.Add(New ParamStruct("@Action", DbType.String, "GetListData", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@CheckOrderID", DbType.String, clsCommon.GetValueDBNull(CheckOrderID), ParameterDirection.Input, 10 ))
			ds = DAL.ExecDataSet(PP_PPC_WrkOM_CheckAndOrderHeader, CommandType.StoredProcedure, pc,"")
			Dim keys(0) As DataColumn
			Dim column As DataColumn
			column = ds.Tables(0).Columns("CheckOrderID")
			Keys(0) = column
			ds.Tables(0).PrimaryKey = Keys
			Return ds.Tables(0)
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Sub Reset()
		mvarCheckOrderID = String.Empty
		mvarTranDate = Today
		mvarReasonID = String.Empty
		mvarType = String.Empty
		mvarStatus = String.Empty
		mvarCustID = String.Empty
		mvarSlsperID = String.Empty
	End Sub
	Public Function GetByKey(ByVal CheckOrderID As System.String) as Boolean 
		Dim DAL As DataAccess = m_Dal
		Dim ds As New DataSet 
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "GetData_ByKey", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@CheckOrderID", DbType.String, clsCommon.GetValueDBNull(CheckOrderID), ParameterDirection.InputOutput, 10 ))
			ds = DAL.ExecDataSet(PP_PPC_WrkOM_CheckAndOrderHeader, CommandType.StoredProcedure, pc,"")
			me.Reset()
			If ds Is Nothing Then
				Return False
			End If
			If ds.Tables(0).Rows.Count > 0 Then
				FillData(ds.Tables(0).Rows(0))
				Return True
			End If
		Catch ex As Exception
			Throw ex 
		End Try
		Return False
	End Function
	Public Sub FillData(row as DataRow)
		mvarCheckOrderID =  clsCommon.GetValue(row("CheckOrderID"), mvarCheckOrderID.GetType().FullName)
		mvarTranDate =  clsCommon.GetValue(row("TranDate"), mvarTranDate.GetType().FullName)
		mvarReasonID =  clsCommon.GetValue(row("ReasonID"), mvarReasonID.GetType().FullName)
		mvarType =  clsCommon.GetValue(row("Type"), mvarType.GetType().FullName)
		mvarStatus =  clsCommon.GetValue(row("Status"), mvarStatus.GetType().FullName)
		mvarCustID =  clsCommon.GetValue(row("CustID"), mvarCustID.GetType().FullName)
		mvarSlsperID =  clsCommon.GetValue(row("SlsperID"), mvarSlsperID.GetType().FullName)
	End Sub
#End Region 

#Region "Private Methods"
#End Region 

End Class
