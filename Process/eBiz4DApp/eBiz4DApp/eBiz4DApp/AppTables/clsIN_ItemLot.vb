'-- ------------------------------------------------------------
'-- Class name    :  clsIN_ItemLot
'-- Created date  :  4/7/2015
'-- Created by    :  
'-- Updated by    :  
'-- Generated by    :  Class Maker v1.0
'-- ------------------------------------------------------------

'-- Import Libraries --
Imports HQFramework.Common
Imports HQFramework.DAL
Public Class clsIN_ItemLot
#Region "Constants"
	Private Const PP_IN_ItemLot As String = "PP_IN_ItemLot"
#End Region 

#Region "Member Variables"
	Private mvarSiteID As System.String

	Private mvarInvtID As System.String

	Private mvarLotSerNbr As System.String

	Private mvarCost As System.Double

	Private mvarExpDate As System.DateTime

	Private mvarLIFODate As System.DateTime

	Private mvarMfgrLotSerNbr As System.String

	Private mvarQtyAlloc As System.Double

	Private mvarQtyAllocIN As System.Double

	Private mvarQtyAllocOther As System.Double

	Private mvarQtyAllocPORet As System.Double

	Private mvarQtyAllocSO As System.Double

	Private mvarQtyAvail As System.Double

	Private mvarQtyOnHand As System.Double

	Private mvarQtyShipNotInv As System.Double

	Private mvarWarrantyDate As System.DateTime

	Private mvarCrtd_DateTime As System.DateTime

	Private mvarCrtd_Prog As System.String

	Private mvarCrtd_User As System.String

	Private mvarLUpd_DateTime As System.DateTime

	Private mvarLUpd_Prog As System.String

	Private mvarLUpd_User As System.String

	Private mvartstamp As System.String

#End Region 

	Private m_Dal As DataAccess
#Region "Constructors"
	Public Sub New()
		m_Dal = New DataAccess
		Reset()
	End Sub
	Public Sub New(ByVal dal As DataAccess)
		m_Dal = dal
		Reset()
	End Sub
#End Region 

#Region "Public Properties"
	Public Property SiteID() As System.String
		Get
			Return mvarSiteID
		End Get
		Set(ByVal Value As System.String)
			mvarSiteID = Value
		End Set
	End Property

	Public Property InvtID() As System.String
		Get
			Return mvarInvtID
		End Get
		Set(ByVal Value As System.String)
			mvarInvtID = Value
		End Set
	End Property

	Public Property LotSerNbr() As System.String
		Get
			Return mvarLotSerNbr
		End Get
		Set(ByVal Value As System.String)
			mvarLotSerNbr = Value
		End Set
	End Property

	Public Property Cost() As System.Double
		Get
			Return mvarCost
		End Get
		Set(ByVal Value As System.Double)
			mvarCost = Value
		End Set
	End Property

	Public Property ExpDate() As System.DateTime
		Get
			Return mvarExpDate
		End Get
		Set(ByVal Value As System.DateTime)
			mvarExpDate = Value
		End Set
	End Property

	Public Property LIFODate() As System.DateTime
		Get
			Return mvarLIFODate
		End Get
		Set(ByVal Value As System.DateTime)
			mvarLIFODate = Value
		End Set
	End Property

	Public Property MfgrLotSerNbr() As System.String
		Get
			Return mvarMfgrLotSerNbr
		End Get
		Set(ByVal Value As System.String)
			mvarMfgrLotSerNbr = Value
		End Set
	End Property

	Public Property QtyAlloc() As System.Double
		Get
			Return mvarQtyAlloc
		End Get
		Set(ByVal Value As System.Double)
			mvarQtyAlloc = Value
		End Set
	End Property

	Public Property QtyAllocIN() As System.Double
		Get
			Return mvarQtyAllocIN
		End Get
		Set(ByVal Value As System.Double)
			mvarQtyAllocIN = Value
		End Set
	End Property

	Public Property QtyAllocOther() As System.Double
		Get
			Return mvarQtyAllocOther
		End Get
		Set(ByVal Value As System.Double)
			mvarQtyAllocOther = Value
		End Set
	End Property

	Public Property QtyAllocPORet() As System.Double
		Get
			Return mvarQtyAllocPORet
		End Get
		Set(ByVal Value As System.Double)
			mvarQtyAllocPORet = Value
		End Set
	End Property

	Public Property QtyAllocSO() As System.Double
		Get
			Return mvarQtyAllocSO
		End Get
		Set(ByVal Value As System.Double)
			mvarQtyAllocSO = Value
		End Set
	End Property

	Public Property QtyAvail() As System.Double
		Get
			Return mvarQtyAvail
		End Get
		Set(ByVal Value As System.Double)
			mvarQtyAvail = Value
		End Set
	End Property

	Public Property QtyOnHand() As System.Double
		Get
			Return mvarQtyOnHand
		End Get
		Set(ByVal Value As System.Double)
			mvarQtyOnHand = Value
		End Set
	End Property

	Public Property QtyShipNotInv() As System.Double
		Get
			Return mvarQtyShipNotInv
		End Get
		Set(ByVal Value As System.Double)
			mvarQtyShipNotInv = Value
		End Set
	End Property

	Public Property WarrantyDate() As System.DateTime
		Get
			Return mvarWarrantyDate
		End Get
		Set(ByVal Value As System.DateTime)
			mvarWarrantyDate = Value
		End Set
	End Property

	Public Property Crtd_DateTime() As System.DateTime
		Get
			Return mvarCrtd_DateTime
		End Get
		Set(ByVal Value As System.DateTime)
			mvarCrtd_DateTime = Value
		End Set
	End Property

	Public Property Crtd_Prog() As System.String
		Get
			Return mvarCrtd_Prog
		End Get
		Set(ByVal Value As System.String)
			mvarCrtd_Prog = Value
		End Set
	End Property

	Public Property Crtd_User() As System.String
		Get
			Return mvarCrtd_User
		End Get
		Set(ByVal Value As System.String)
			mvarCrtd_User = Value
		End Set
	End Property

	Public Property LUpd_DateTime() As System.DateTime
		Get
			Return mvarLUpd_DateTime
		End Get
		Set(ByVal Value As System.DateTime)
			mvarLUpd_DateTime = Value
		End Set
	End Property

	Public Property LUpd_Prog() As System.String
		Get
			Return mvarLUpd_Prog
		End Get
		Set(ByVal Value As System.String)
			mvarLUpd_Prog = Value
		End Set
	End Property

	Public Property LUpd_User() As System.String
		Get
			Return mvarLUpd_User
		End Get
		Set(ByVal Value As System.String)
			mvarLUpd_User = Value
		End Set
	End Property

	Public Property tstamp() As System.String
		Get
			Return mvartstamp
		End Get
		Set(ByVal Value As System.String)
			mvartstamp = Value
		End Set
	End Property

#End Region 

#Region "Public Methods"
	Public Function Add() as Boolean 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "AddNew", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@SiteID", DbType.String,clsCommon.GetValueDBNull(Me.mvarSiteID), ParameterDirection.Input,30 ))
			pc.Add(New ParamStruct("@InvtID", DbType.String,clsCommon.GetValueDBNull(Me.mvarInvtID), ParameterDirection.Input,30 ))
			pc.Add(New ParamStruct("@LotSerNbr", DbType.String,clsCommon.GetValueDBNull(Me.mvarLotSerNbr), ParameterDirection.Input,25 ))
			pc.Add(New ParamStruct("@Cost", DbType.Decimal,clsCommon.GetValueDBNull(Me.mvarCost), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@ExpDate", DbType.DateTime,clsCommon.GetValueDBNull(Me.mvarExpDate.Date), ParameterDirection.Input,16 ))
			pc.Add(New ParamStruct("@LIFODate", DbType.DateTime,clsCommon.GetValueDBNull(Me.mvarLIFODate.Date), ParameterDirection.Input,16 ))
			pc.Add(New ParamStruct("@MfgrLotSerNbr", DbType.String,clsCommon.GetValueDBNull(Me.mvarMfgrLotSerNbr), ParameterDirection.Input,25 ))
			pc.Add(New ParamStruct("@QtyAlloc", DbType.Decimal,clsCommon.GetValueDBNull(Me.mvarQtyAlloc), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@QtyAllocIN", DbType.Decimal,clsCommon.GetValueDBNull(Me.mvarQtyAllocIN), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@QtyAllocOther", DbType.Decimal,clsCommon.GetValueDBNull(Me.mvarQtyAllocOther), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@QtyAllocPORet", DbType.Decimal,clsCommon.GetValueDBNull(Me.mvarQtyAllocPORet), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@QtyAllocSO", DbType.Decimal,clsCommon.GetValueDBNull(Me.mvarQtyAllocSO), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@QtyAvail", DbType.Decimal,clsCommon.GetValueDBNull(Me.mvarQtyAvail), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@QtyOnHand", DbType.Decimal,clsCommon.GetValueDBNull(Me.mvarQtyOnHand), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@QtyShipNotInv", DbType.Decimal,clsCommon.GetValueDBNull(Me.mvarQtyShipNotInv), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@WarrantyDate", DbType.DateTime,clsCommon.GetValueDBNull(Me.mvarWarrantyDate.Date), ParameterDirection.Input,16 ))
			pc.Add(New ParamStruct("@Crtd_DateTime", DbType.DateTime,clsCommon.GetValueDBNull(Me.mvarCrtd_DateTime), ParameterDirection.Input,16 ))
			pc.Add(New ParamStruct("@Crtd_Prog", DbType.String,clsCommon.GetValueDBNull(Me.mvarCrtd_Prog), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@Crtd_User", DbType.String,clsCommon.GetValueDBNull(Me.mvarCrtd_User), ParameterDirection.Input,30 ))
			pc.Add(New ParamStruct("@LUpd_DateTime", DbType.DateTime,clsCommon.GetValueDBNull(Me.mvarLUpd_DateTime), ParameterDirection.Input,16 ))
			pc.Add(New ParamStruct("@LUpd_Prog", DbType.String,clsCommon.GetValueDBNull(Me.mvarLUpd_Prog), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@LUpd_User", DbType.String,clsCommon.GetValueDBNull(Me.mvarLUpd_User), ParameterDirection.Input,30 ))
			pc.Add(New ParamStruct("@tstamp", DbType.String,clsCommon.GetValueDBNull(Me.mvartstamp), ParameterDirection.Input,18 ))
			DAL.ExecPreparedSQL(PP_IN_ItemLot, CommandType.StoredProcedure, pc,"")
		Me.mvarSiteID = clsCommon.GetValue(pc.Item("@SiteID").Value, mvarSiteID.GetType().FullName)
		Return (Me.mvarSiteID <> String.Empty )
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Function Update() as Boolean 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "Update", ParameterDirection.Input,50 ))
			 pc.Add(New ParamStruct("@SiteID",DbType.String, clsCommon.GetValueDBNull(me.mvarSiteID), ParameterDirection.Input,30 ))
			 pc.Add(New ParamStruct("@InvtID",DbType.String, clsCommon.GetValueDBNull(me.mvarInvtID), ParameterDirection.Input,30 ))
			 pc.Add(New ParamStruct("@LotSerNbr",DbType.String, clsCommon.GetValueDBNull(me.mvarLotSerNbr), ParameterDirection.Input,25 ))
			 pc.Add(New ParamStruct("@Cost",DbType.Decimal, clsCommon.GetValueDBNull(me.mvarCost), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@ExpDate",DbType.DateTime, clsCommon.GetValueDBNull(me.mvarExpDate.Date), ParameterDirection.Input,16 ))
			 pc.Add(New ParamStruct("@LIFODate",DbType.DateTime, clsCommon.GetValueDBNull(me.mvarLIFODate.Date), ParameterDirection.Input,16 ))
			 pc.Add(New ParamStruct("@MfgrLotSerNbr",DbType.String, clsCommon.GetValueDBNull(me.mvarMfgrLotSerNbr), ParameterDirection.Input,25 ))
			 pc.Add(New ParamStruct("@QtyAlloc",DbType.Decimal, clsCommon.GetValueDBNull(me.mvarQtyAlloc), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@QtyAllocIN",DbType.Decimal, clsCommon.GetValueDBNull(me.mvarQtyAllocIN), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@QtyAllocOther",DbType.Decimal, clsCommon.GetValueDBNull(me.mvarQtyAllocOther), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@QtyAllocPORet",DbType.Decimal, clsCommon.GetValueDBNull(me.mvarQtyAllocPORet), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@QtyAllocSO",DbType.Decimal, clsCommon.GetValueDBNull(me.mvarQtyAllocSO), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@QtyAvail",DbType.Decimal, clsCommon.GetValueDBNull(me.mvarQtyAvail), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@QtyOnHand",DbType.Decimal, clsCommon.GetValueDBNull(me.mvarQtyOnHand), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@QtyShipNotInv",DbType.Decimal, clsCommon.GetValueDBNull(me.mvarQtyShipNotInv), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@WarrantyDate",DbType.DateTime, clsCommon.GetValueDBNull(me.mvarWarrantyDate.Date), ParameterDirection.Input,16 ))
			 pc.Add(New ParamStruct("@Crtd_DateTime",DbType.DateTime, clsCommon.GetValueDBNull(me.mvarCrtd_DateTime), ParameterDirection.Input,16 ))
			 pc.Add(New ParamStruct("@Crtd_Prog",DbType.String, clsCommon.GetValueDBNull(me.mvarCrtd_Prog), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@Crtd_User",DbType.String, clsCommon.GetValueDBNull(me.mvarCrtd_User), ParameterDirection.Input,30 ))
			 pc.Add(New ParamStruct("@LUpd_DateTime",DbType.DateTime, clsCommon.GetValueDBNull(me.mvarLUpd_DateTime), ParameterDirection.Input,16 ))
			 pc.Add(New ParamStruct("@LUpd_Prog",DbType.String, clsCommon.GetValueDBNull(me.mvarLUpd_Prog), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@LUpd_User",DbType.String, clsCommon.GetValueDBNull(me.mvarLUpd_User), ParameterDirection.Input,30 ))
			 pc.Add(New ParamStruct("@tstamp",DbType.String, clsCommon.GetValueDBNull(me.mvartstamp), ParameterDirection.Input,18 ))
			Return (DAL.ExecNonQuery(PP_IN_ItemLot, CommandType.StoredProcedure, pc,"") > 0)
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Function Delete(ByVal SiteID As System.String, ByVal InvtID As System.String, ByVal LotSerNbr As System.String) as Boolean 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "Delete", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@SiteID",DbType.String, clsCommon.GetValueDBNull(SiteID), ParameterDirection.Input,30 ))
			pc.Add(New ParamStruct("@InvtID",DbType.String, clsCommon.GetValueDBNull(InvtID), ParameterDirection.Input,30 ))
			pc.Add(New ParamStruct("@LotSerNbr",DbType.String, clsCommon.GetValueDBNull(LotSerNbr), ParameterDirection.Input,25 ))
			Return (DAL.ExecNonQuery(PP_IN_ItemLot, CommandType.StoredProcedure, pc,"") > 0)
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Function GetAll(ByVal SiteID As System.String, ByVal InvtID As System.String, ByVal LotSerNbr As System.String) as DataTable 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			Dim ds As New DataSet
			pc.Add(New ParamStruct("@Action", DbType.String, "GetListData", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@SiteID", DbType.String, clsCommon.GetValueDBNull(SiteID), ParameterDirection.Input, 30 ))
			pc.Add(New ParamStruct("@InvtID", DbType.String, clsCommon.GetValueDBNull(InvtID), ParameterDirection.Input, 30 ))
			pc.Add(New ParamStruct("@LotSerNbr", DbType.String, clsCommon.GetValueDBNull(LotSerNbr), ParameterDirection.Input, 25 ))
			ds = DAL.ExecDataSet(PP_IN_ItemLot, CommandType.StoredProcedure, pc,"")
			Dim keys(2) As DataColumn
			Dim column As DataColumn
			column = ds.Tables(0).Columns("SiteID")
			Keys(0) = column
			column = ds.Tables(0).Columns("InvtID")
			Keys(1) = column
			column = ds.Tables(0).Columns("LotSerNbr")
			Keys(2) = column
			ds.Tables(0).PrimaryKey = Keys
			Return ds.Tables(0)
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Sub Reset()
		mvarSiteID = String.Empty
		mvarInvtID = String.Empty
		mvarLotSerNbr = String.Empty
		mvarCost = 0
		mvarExpDate = Today
		mvarLIFODate = Today
		mvarMfgrLotSerNbr = String.Empty
		mvarQtyAlloc = 0
		mvarQtyAllocIN = 0
		mvarQtyAllocOther = 0
		mvarQtyAllocPORet = 0
		mvarQtyAllocSO = 0
		mvarQtyAvail = 0
		mvarQtyOnHand = 0
		mvarQtyShipNotInv = 0
		mvarWarrantyDate = Today
		mvarCrtd_DateTime = Today
		mvarCrtd_Prog = String.Empty
		mvarCrtd_User = String.Empty
		mvarLUpd_DateTime = Today
		mvarLUpd_Prog = String.Empty
		mvarLUpd_User = String.Empty
		mvartstamp = String.Empty
	End Sub
	Public Function GetByKey(ByVal SiteID As System.String, ByVal InvtID As System.String, ByVal LotSerNbr As System.String) as Boolean 
		Dim DAL As DataAccess = m_Dal
		Dim ds As New DataSet 
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "GetData_ByKey", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@SiteID", DbType.String, clsCommon.GetValueDBNull(SiteID), ParameterDirection.InputOutput, 30 ))
			pc.Add(New ParamStruct("@InvtID", DbType.String, clsCommon.GetValueDBNull(InvtID), ParameterDirection.InputOutput, 30 ))
			pc.Add(New ParamStruct("@LotSerNbr", DbType.String, clsCommon.GetValueDBNull(LotSerNbr), ParameterDirection.InputOutput, 25 ))
			ds = DAL.ExecDataSet(PP_IN_ItemLot, CommandType.StoredProcedure, pc,"")
			me.Reset()
			If ds Is Nothing Then
				Return False
			End If
			If ds.Tables(0).Rows.Count > 0 Then
				FillData(ds.Tables(0).Rows(0))
				Return True
			End If
		Catch ex As Exception
			Throw ex 
		End Try
		Return False
	End Function
	Public Sub FillData(row as DataRow)
		mvarSiteID =  clsCommon.GetValue(row("SiteID"), mvarSiteID.GetType().FullName)
		mvarInvtID =  clsCommon.GetValue(row("InvtID"), mvarInvtID.GetType().FullName)
		mvarLotSerNbr =  clsCommon.GetValue(row("LotSerNbr"), mvarLotSerNbr.GetType().FullName)
		mvarCost =  clsCommon.GetValue(row("Cost"), mvarCost.GetType().FullName)
		mvarExpDate =  clsCommon.GetValue(row("ExpDate"), mvarExpDate.GetType().FullName)
		mvarLIFODate =  clsCommon.GetValue(row("LIFODate"), mvarLIFODate.GetType().FullName)
		mvarMfgrLotSerNbr =  clsCommon.GetValue(row("MfgrLotSerNbr"), mvarMfgrLotSerNbr.GetType().FullName)
		mvarQtyAlloc =  clsCommon.GetValue(row("QtyAlloc"), mvarQtyAlloc.GetType().FullName)
		mvarQtyAllocIN =  clsCommon.GetValue(row("QtyAllocIN"), mvarQtyAllocIN.GetType().FullName)
		mvarQtyAllocOther =  clsCommon.GetValue(row("QtyAllocOther"), mvarQtyAllocOther.GetType().FullName)
		mvarQtyAllocPORet =  clsCommon.GetValue(row("QtyAllocPORet"), mvarQtyAllocPORet.GetType().FullName)
		mvarQtyAllocSO =  clsCommon.GetValue(row("QtyAllocSO"), mvarQtyAllocSO.GetType().FullName)
		mvarQtyAvail =  clsCommon.GetValue(row("QtyAvail"), mvarQtyAvail.GetType().FullName)
		mvarQtyOnHand =  clsCommon.GetValue(row("QtyOnHand"), mvarQtyOnHand.GetType().FullName)
		mvarQtyShipNotInv =  clsCommon.GetValue(row("QtyShipNotInv"), mvarQtyShipNotInv.GetType().FullName)
		mvarWarrantyDate =  clsCommon.GetValue(row("WarrantyDate"), mvarWarrantyDate.GetType().FullName)
		mvarCrtd_DateTime =  clsCommon.GetValue(row("Crtd_DateTime"), mvarCrtd_DateTime.GetType().FullName)
		mvarCrtd_Prog =  clsCommon.GetValue(row("Crtd_Prog"), mvarCrtd_Prog.GetType().FullName)
		mvarCrtd_User =  clsCommon.GetValue(row("Crtd_User"), mvarCrtd_User.GetType().FullName)
		mvarLUpd_DateTime =  clsCommon.GetValue(row("LUpd_DateTime"), mvarLUpd_DateTime.GetType().FullName)
		mvarLUpd_Prog =  clsCommon.GetValue(row("LUpd_Prog"), mvarLUpd_Prog.GetType().FullName)
		mvarLUpd_User =  clsCommon.GetValue(row("LUpd_User"), mvarLUpd_User.GetType().FullName)
		mvartstamp =  clsCommon.GetValue(row("tstamp"), mvartstamp.GetType().FullName)
	End Sub
#End Region 

#Region "Private Methods"
#End Region 

End Class
