'-- ------------------------------------------------------------
'-- Class name    :  clsEO_PPO_Detail
'-- Created date  :  10/2/2012
'-- Created by    :  
'-- Updated by    :  
'-- Generated by    :  Class Maker v1.0
'-- ------------------------------------------------------------

'-- Import Libraries --
Imports HQFramework.Common
Imports HQFramework.DAL
Public Class clsEO_PPO_Detail
#Region "Constants"
	Private Const PP_EO_PPO_Detail As String = "PP_EO_PPO_Detail"
#End Region 

#Region "Member Variables"
	Private mvarPPONbr As System.String

	Private mvarInvtID As System.String

	Private mvarOrderQty As System.Double

	Private mvarAdjustQty As System.Double

	Private mvarUOM As System.String

	Private mvarSalesPrice As System.Double

	Private mvarSalesQty As System.Double

	Private mvarSafetyStock As System.Double

	Private mvarSalesWeeks As System.Double

	Private mvarCalWeeks As System.Int32

	Private mvarWeekDays As System.Int32

	Private mvarPhysicalStock As System.Double

	Private mvarVirtualStock As System.Double

	Private mvarLUpd_DateTime As System.DateTime

	Private mvarLUpd_Prog As System.String

	Private mvarLUpd_User As System.String

	Private mvarCrtd_DateTime As System.DateTime

	Private mvarCrtd_Prog As System.String

	Private mvarCrtd_User As System.String

	Private mvartstamp As System.String

#End Region 

	Private m_Dal As DataAccess
#Region "Constructors"
	Public Sub New()
		m_Dal = New DataAccess
		Reset()
	End Sub
	Public Sub New(ByVal dal As DataAccess)
		m_Dal = dal
		Reset()
	End Sub
#End Region 

#Region "Public Properties"
	Public Property PPONbr() As System.String
		Get
			Return mvarPPONbr
		End Get
		Set(ByVal Value As System.String)
			mvarPPONbr = Value
		End Set
	End Property

	Public Property InvtID() As System.String
		Get
			Return mvarInvtID
		End Get
		Set(ByVal Value As System.String)
			mvarInvtID = Value
		End Set
	End Property

	Public Property OrderQty() As System.Double
		Get
			Return mvarOrderQty
		End Get
		Set(ByVal Value As System.Double)
			mvarOrderQty = Value
		End Set
	End Property

	Public Property AdjustQty() As System.Double
		Get
			Return mvarAdjustQty
		End Get
		Set(ByVal Value As System.Double)
			mvarAdjustQty = Value
		End Set
	End Property

	Public Property UOM() As System.String
		Get
			Return mvarUOM
		End Get
		Set(ByVal Value As System.String)
			mvarUOM = Value
		End Set
	End Property

	Public Property SalesPrice() As System.Double
		Get
			Return mvarSalesPrice
		End Get
		Set(ByVal Value As System.Double)
			mvarSalesPrice = Value
		End Set
	End Property

	Public Property SalesQty() As System.Double
		Get
			Return mvarSalesQty
		End Get
		Set(ByVal Value As System.Double)
			mvarSalesQty = Value
		End Set
	End Property

	Public Property SafetyStock() As System.Double
		Get
			Return mvarSafetyStock
		End Get
		Set(ByVal Value As System.Double)
			mvarSafetyStock = Value
		End Set
	End Property

	Public Property SalesWeeks() As System.Double
		Get
			Return mvarSalesWeeks
		End Get
		Set(ByVal Value As System.Double)
			mvarSalesWeeks = Value
		End Set
	End Property

	Public Property CalWeeks() As System.Int32
		Get
			Return mvarCalWeeks
		End Get
		Set(ByVal Value As System.Int32)
			mvarCalWeeks = Value
		End Set
	End Property

	Public Property WeekDays() As System.Int32
		Get
			Return mvarWeekDays
		End Get
		Set(ByVal Value As System.Int32)
			mvarWeekDays = Value
		End Set
	End Property

	Public Property PhysicalStock() As System.Double
		Get
			Return mvarPhysicalStock
		End Get
		Set(ByVal Value As System.Double)
			mvarPhysicalStock = Value
		End Set
	End Property

	Public Property VirtualStock() As System.Double
		Get
			Return mvarVirtualStock
		End Get
		Set(ByVal Value As System.Double)
			mvarVirtualStock = Value
		End Set
	End Property

	Public Property LUpd_DateTime() As System.DateTime
		Get
			Return mvarLUpd_DateTime
		End Get
		Set(ByVal Value As System.DateTime)
			mvarLUpd_DateTime = Value
		End Set
	End Property

	Public Property LUpd_Prog() As System.String
		Get
			Return mvarLUpd_Prog
		End Get
		Set(ByVal Value As System.String)
			mvarLUpd_Prog = Value
		End Set
	End Property

	Public Property LUpd_User() As System.String
		Get
			Return mvarLUpd_User
		End Get
		Set(ByVal Value As System.String)
			mvarLUpd_User = Value
		End Set
	End Property

	Public Property Crtd_DateTime() As System.DateTime
		Get
			Return mvarCrtd_DateTime
		End Get
		Set(ByVal Value As System.DateTime)
			mvarCrtd_DateTime = Value
		End Set
	End Property

	Public Property Crtd_Prog() As System.String
		Get
			Return mvarCrtd_Prog
		End Get
		Set(ByVal Value As System.String)
			mvarCrtd_Prog = Value
		End Set
	End Property

	Public Property Crtd_User() As System.String
		Get
			Return mvarCrtd_User
		End Get
		Set(ByVal Value As System.String)
			mvarCrtd_User = Value
		End Set
	End Property

	Public Property tstamp() As System.String
		Get
			Return mvartstamp
		End Get
		Set(ByVal Value As System.String)
			mvartstamp = Value
		End Set
	End Property

#End Region 

#Region "Public Methods"
	Public Function Add() as Boolean 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "AddNew", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@PPONbr", DbType.String,clsCommon.GetValueDBNull(Me.mvarPPONbr), ParameterDirection.Input,100 ))
			pc.Add(New ParamStruct("@InvtID", DbType.String,clsCommon.GetValueDBNull(Me.mvarInvtID), ParameterDirection.Input,30 ))
			pc.Add(New ParamStruct("@OrderQty", DbType.Decimal,clsCommon.GetValueDBNull(Me.mvarOrderQty), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@AdjustQty", DbType.Decimal,clsCommon.GetValueDBNull(Me.mvarAdjustQty), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@UOM", DbType.String,clsCommon.GetValueDBNull(Me.mvarUOM), ParameterDirection.Input,15 ))
			pc.Add(New ParamStruct("@SalesPrice", DbType.Decimal,clsCommon.GetValueDBNull(Me.mvarSalesPrice), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@SalesQty", DbType.Decimal,clsCommon.GetValueDBNull(Me.mvarSalesQty), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@SafetyStock", DbType.Decimal,clsCommon.GetValueDBNull(Me.mvarSafetyStock), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@SalesWeeks", DbType.Decimal,clsCommon.GetValueDBNull(Me.mvarSalesWeeks), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@CalWeeks", DbType.int32,clsCommon.GetValueDBNull(Me.mvarCalWeeks), ParameterDirection.Input,4 ))
			pc.Add(New ParamStruct("@WeekDays", DbType.int32,clsCommon.GetValueDBNull(Me.mvarWeekDays), ParameterDirection.Input,4 ))
			pc.Add(New ParamStruct("@PhysicalStock", DbType.Decimal,clsCommon.GetValueDBNull(Me.mvarPhysicalStock), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@VirtualStock", DbType.Decimal,clsCommon.GetValueDBNull(Me.mvarVirtualStock), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@LUpd_DateTime", DbType.DateTime,clsCommon.GetValueDBNull(Me.mvarLUpd_DateTime), ParameterDirection.Input,16 ))
			pc.Add(New ParamStruct("@LUpd_Prog", DbType.String,clsCommon.GetValueDBNull(Me.mvarLUpd_Prog), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@LUpd_User", DbType.String,clsCommon.GetValueDBNull(Me.mvarLUpd_User), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@Crtd_DateTime", DbType.DateTime,clsCommon.GetValueDBNull(Me.mvarCrtd_DateTime), ParameterDirection.Input,16 ))
			pc.Add(New ParamStruct("@Crtd_Prog", DbType.String,clsCommon.GetValueDBNull(Me.mvarCrtd_Prog), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@Crtd_User", DbType.String,clsCommon.GetValueDBNull(Me.mvarCrtd_User), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@tstamp", DbType.String,clsCommon.GetValueDBNull(Me.mvartstamp), ParameterDirection.Input,18 ))
			DAL.ExecPreparedSQL(PP_EO_PPO_Detail, CommandType.StoredProcedure, pc,"")
		Me.mvarPPONbr = clsCommon.GetValue(pc.Item("@PPONbr").Value, mvarPPONbr.GetType().FullName)
		Return (Me.mvarPPONbr <> String.Empty )
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Function Update() as Boolean 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "Update", ParameterDirection.Input,50 ))
			 pc.Add(New ParamStruct("@PPONbr",DbType.String, clsCommon.GetValueDBNull(me.mvarPPONbr), ParameterDirection.Input,100 ))
			 pc.Add(New ParamStruct("@InvtID",DbType.String, clsCommon.GetValueDBNull(me.mvarInvtID), ParameterDirection.Input,30 ))
			 pc.Add(New ParamStruct("@OrderQty",DbType.Decimal, clsCommon.GetValueDBNull(me.mvarOrderQty), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@AdjustQty",DbType.Decimal, clsCommon.GetValueDBNull(me.mvarAdjustQty), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@UOM",DbType.String, clsCommon.GetValueDBNull(me.mvarUOM), ParameterDirection.Input,15 ))
			 pc.Add(New ParamStruct("@SalesPrice",DbType.Decimal, clsCommon.GetValueDBNull(me.mvarSalesPrice), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@SalesQty",DbType.Decimal, clsCommon.GetValueDBNull(me.mvarSalesQty), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@SafetyStock",DbType.Decimal, clsCommon.GetValueDBNull(me.mvarSafetyStock), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@SalesWeeks",DbType.Decimal, clsCommon.GetValueDBNull(me.mvarSalesWeeks), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@CalWeeks",DbType.int32, clsCommon.GetValueDBNull(me.mvarCalWeeks), ParameterDirection.Input,4 ))
			 pc.Add(New ParamStruct("@WeekDays",DbType.int32, clsCommon.GetValueDBNull(me.mvarWeekDays), ParameterDirection.Input,4 ))
			 pc.Add(New ParamStruct("@PhysicalStock",DbType.Decimal, clsCommon.GetValueDBNull(me.mvarPhysicalStock), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@VirtualStock",DbType.Decimal, clsCommon.GetValueDBNull(me.mvarVirtualStock), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@LUpd_DateTime",DbType.DateTime, clsCommon.GetValueDBNull(me.mvarLUpd_DateTime), ParameterDirection.Input,16 ))
			 pc.Add(New ParamStruct("@LUpd_Prog",DbType.String, clsCommon.GetValueDBNull(me.mvarLUpd_Prog), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@LUpd_User",DbType.String, clsCommon.GetValueDBNull(me.mvarLUpd_User), ParameterDirection.Input,10 ))
			 pc.Add(New ParamStruct("@Crtd_DateTime",DbType.DateTime, clsCommon.GetValueDBNull(me.mvarCrtd_DateTime), ParameterDirection.Input,16 ))
			 pc.Add(New ParamStruct("@Crtd_Prog",DbType.String, clsCommon.GetValueDBNull(me.mvarCrtd_Prog), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@Crtd_User",DbType.String, clsCommon.GetValueDBNull(me.mvarCrtd_User), ParameterDirection.Input,10 ))
			 pc.Add(New ParamStruct("@tstamp",DbType.String, clsCommon.GetValueDBNull(me.mvartstamp), ParameterDirection.Input,18 ))
			Return (DAL.ExecNonQuery(PP_EO_PPO_Detail, CommandType.StoredProcedure, pc,"") > 0)
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Function Delete(ByVal PPONbr As System.String, ByVal InvtID As System.String) as Boolean 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "Delete", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@PPONbr",DbType.String, clsCommon.GetValueDBNull(PPONbr), ParameterDirection.Input,100 ))
			pc.Add(New ParamStruct("@InvtID",DbType.String, clsCommon.GetValueDBNull(InvtID), ParameterDirection.Input,30 ))
			Return (DAL.ExecNonQuery(PP_EO_PPO_Detail, CommandType.StoredProcedure, pc,"") > 0)
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Function GetAll(ByVal PPONbr As System.String, ByVal InvtID As System.String) as DataTable 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			Dim ds As New DataSet
			pc.Add(New ParamStruct("@Action", DbType.String, "GetListData", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@PPONbr", DbType.String, clsCommon.GetValueDBNull(PPONbr), ParameterDirection.Input, 100 ))
			pc.Add(New ParamStruct("@InvtID", DbType.String, clsCommon.GetValueDBNull(InvtID), ParameterDirection.Input, 30 ))
			ds = DAL.ExecDataSet(PP_EO_PPO_Detail, CommandType.StoredProcedure, pc,"")
			Dim keys(1) As DataColumn
			Dim column As DataColumn
			column = ds.Tables(0).Columns("PPONbr")
			Keys(0) = column
			column = ds.Tables(0).Columns("InvtID")
			Keys(1) = column
			ds.Tables(0).PrimaryKey = Keys
			Return ds.Tables(0)
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Sub Reset()
		mvarPPONbr = String.Empty
		mvarInvtID = String.Empty
		mvarOrderQty = 0
		mvarAdjustQty = 0
		mvarUOM = String.Empty
		mvarSalesPrice = 0
		mvarSalesQty = 0
		mvarSafetyStock = 0
		mvarSalesWeeks = 0
		mvarCalWeeks = 0
		mvarWeekDays = 0
		mvarPhysicalStock = 0
		mvarVirtualStock = 0
		mvarLUpd_DateTime = Today
		mvarLUpd_Prog = String.Empty
		mvarLUpd_User = String.Empty
		mvarCrtd_DateTime = Today
		mvarCrtd_Prog = String.Empty
		mvarCrtd_User = String.Empty
		mvartstamp = String.Empty
	End Sub
	Public Function GetByKey(ByVal PPONbr As System.String, ByVal InvtID As System.String) as Boolean 
		Dim DAL As DataAccess = m_Dal
		Dim ds As New DataSet 
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "GetData_ByKey", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@PPONbr", DbType.String, clsCommon.GetValueDBNull(PPONbr), ParameterDirection.InputOutput, 100 ))
			pc.Add(New ParamStruct("@InvtID", DbType.String, clsCommon.GetValueDBNull(InvtID), ParameterDirection.InputOutput, 30 ))
			ds = DAL.ExecDataSet(PP_EO_PPO_Detail, CommandType.StoredProcedure, pc,"")
			me.Reset()
			If ds Is Nothing Then
				Return False
			End If
			If ds.Tables(0).Rows.Count > 0 Then
				FillData(ds.Tables(0).Rows(0))
				Return True
			End If
		Catch ex As Exception
			Throw ex 
		End Try
		Return False
	End Function
	Public Sub FillData(row as DataRow)
		mvarPPONbr =  clsCommon.GetValue(row("PPONbr"), mvarPPONbr.GetType().FullName)
		mvarInvtID =  clsCommon.GetValue(row("InvtID"), mvarInvtID.GetType().FullName)
		mvarOrderQty =  clsCommon.GetValue(row("OrderQty"), mvarOrderQty.GetType().FullName)
		mvarAdjustQty =  clsCommon.GetValue(row("AdjustQty"), mvarAdjustQty.GetType().FullName)
		mvarUOM =  clsCommon.GetValue(row("UOM"), mvarUOM.GetType().FullName)
		mvarSalesPrice =  clsCommon.GetValue(row("SalesPrice"), mvarSalesPrice.GetType().FullName)
		mvarSalesQty =  clsCommon.GetValue(row("SalesQty"), mvarSalesQty.GetType().FullName)
		mvarSafetyStock =  clsCommon.GetValue(row("SafetyStock"), mvarSafetyStock.GetType().FullName)
		mvarSalesWeeks =  clsCommon.GetValue(row("SalesWeeks"), mvarSalesWeeks.GetType().FullName)
		mvarCalWeeks =  clsCommon.GetValue(row("CalWeeks"), mvarCalWeeks.GetType().FullName)
		mvarWeekDays =  clsCommon.GetValue(row("WeekDays"), mvarWeekDays.GetType().FullName)
		mvarPhysicalStock =  clsCommon.GetValue(row("PhysicalStock"), mvarPhysicalStock.GetType().FullName)
		mvarVirtualStock =  clsCommon.GetValue(row("VirtualStock"), mvarVirtualStock.GetType().FullName)
		mvarLUpd_DateTime =  clsCommon.GetValue(row("LUpd_DateTime"), mvarLUpd_DateTime.GetType().FullName)
		mvarLUpd_Prog =  clsCommon.GetValue(row("LUpd_Prog"), mvarLUpd_Prog.GetType().FullName)
		mvarLUpd_User =  clsCommon.GetValue(row("LUpd_User"), mvarLUpd_User.GetType().FullName)
		mvarCrtd_DateTime =  clsCommon.GetValue(row("Crtd_DateTime"), mvarCrtd_DateTime.GetType().FullName)
		mvarCrtd_Prog =  clsCommon.GetValue(row("Crtd_Prog"), mvarCrtd_Prog.GetType().FullName)
		mvarCrtd_User =  clsCommon.GetValue(row("Crtd_User"), mvarCrtd_User.GetType().FullName)
		mvartstamp =  clsCommon.GetValue(row("tstamp"), mvartstamp.GetType().FullName)
	End Sub
#End Region 

#Region "Private Methods"
#End Region 

End Class
