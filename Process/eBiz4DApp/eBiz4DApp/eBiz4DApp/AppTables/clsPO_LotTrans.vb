'-- ------------------------------------------------------------
'-- Class name    :  clsPO_LotTrans
'-- Created date  :  09/04/14
'-- Created by    :  
'-- Updated by    :  
'-- Generated by    :  Class Maker v1.0
'-- ------------------------------------------------------------

'-- Import Libraries --
Imports HQFramework
Imports HQFramework.DAL
Imports HQFramework.Common

Public Class clsPO_LotTrans
#Region "Constants"
    Private Const PP_PO_LotTrans As String = "PP_PO_LotTrans"
#End Region

#Region "Member Variables"
    Private mvarBranchID As System.String

    Private mvarBatNbr As System.String

    Private mvarRefNbr As System.String

    Private mvarLotSerNbr As System.String

    Private mvarPOTranLineRef As System.String

    Private mvarExpDate As System.DateTime

    Private mvarInvtID As System.String

    Private mvarInvtMult As System.Int16

    Private mvarKitID As System.String

    Private mvarMfgrLotSerNbr As System.String

    Private mvarQty As System.Double

    Private mvarSiteID As System.String

    Private mvarToSiteID As System.String

    Private mvarToWhseLoc As System.String

    Private mvarTranDate As System.DateTime

    Private mvarTranType As System.String

    Private mvarTranScr As System.String

    Private mvarUnitCost As System.Double

    Private mvarUnitPrice As System.Double

    Private mvarWarrantyDate As System.DateTime

    Private mvarWhseLoc As System.String

    Private mvarCrtd_Prog As System.String

    Private mvarCrtd_User As System.String

    Private mvarCrtd_DateTime As System.DateTime

    Private mvarLUpd_Prog As System.String

    Private mvarLUpd_User As System.String

    Private mvarLUpd_DateTime As System.DateTime

    Private mvartstamp As System.String

    Private mvarCnvFact As System.Double

    Private mvarUnitMultDiv As System.String

    Private mvarUnitDesc As System.String

#End Region

    Private m_Dal As DataAccess
#Region "Constructors"
    Public Sub New()
        m_Dal = New DataAccess
        Reset()
    End Sub
    Public Sub New(ByVal dal As DataAccess)
        m_Dal = dal
        Reset()
    End Sub
#End Region

#Region "Public Properties"
    Public Property BranchID() As System.String
        Get
            Return mvarBranchID
        End Get
        Set(ByVal Value As System.String)
            mvarBranchID = Value
        End Set
    End Property

    Public Property BatNbr() As System.String
        Get
            Return mvarBatNbr
        End Get
        Set(ByVal Value As System.String)
            mvarBatNbr = Value
        End Set
    End Property

    Public Property RefNbr() As System.String
        Get
            Return mvarRefNbr
        End Get
        Set(ByVal Value As System.String)
            mvarRefNbr = Value
        End Set
    End Property

    Public Property LotSerNbr() As System.String
        Get
            Return mvarLotSerNbr
        End Get
        Set(ByVal Value As System.String)
            mvarLotSerNbr = Value
        End Set
    End Property

    Public Property POTranLineRef() As System.String
        Get
            Return mvarPOTranLineRef
        End Get
        Set(ByVal Value As System.String)
            mvarPOTranLineRef = Value
        End Set
    End Property

    Public Property ExpDate() As System.DateTime
        Get
            Return mvarExpDate
        End Get
        Set(ByVal Value As System.DateTime)
            mvarExpDate = Value
        End Set
    End Property

    Public Property InvtID() As System.String
        Get
            Return mvarInvtID
        End Get
        Set(ByVal Value As System.String)
            mvarInvtID = Value
        End Set
    End Property

    Public Property InvtMult() As System.Int16
        Get
            Return mvarInvtMult
        End Get
        Set(ByVal Value As System.Int16)
            mvarInvtMult = Value
        End Set
    End Property

    Public Property KitID() As System.String
        Get
            Return mvarKitID
        End Get
        Set(ByVal Value As System.String)
            mvarKitID = Value
        End Set
    End Property

    Public Property MfgrLotSerNbr() As System.String
        Get
            Return mvarMfgrLotSerNbr
        End Get
        Set(ByVal Value As System.String)
            mvarMfgrLotSerNbr = Value
        End Set
    End Property

    Public Property Qty() As System.Double
        Get
            Return mvarQty
        End Get
        Set(ByVal Value As System.Double)
            mvarQty = Value
        End Set
    End Property

    Public Property SiteID() As System.String
        Get
            Return mvarSiteID
        End Get
        Set(ByVal Value As System.String)
            mvarSiteID = Value
        End Set
    End Property

    Public Property ToSiteID() As System.String
        Get
            Return mvarToSiteID
        End Get
        Set(ByVal Value As System.String)
            mvarToSiteID = Value
        End Set
    End Property

    Public Property ToWhseLoc() As System.String
        Get
            Return mvarToWhseLoc
        End Get
        Set(ByVal Value As System.String)
            mvarToWhseLoc = Value
        End Set
    End Property

    Public Property TranDate() As System.DateTime
        Get
            Return mvarTranDate
        End Get
        Set(ByVal Value As System.DateTime)
            mvarTranDate = Value
        End Set
    End Property

    Public Property TranType() As System.String
        Get
            Return mvarTranType
        End Get
        Set(ByVal Value As System.String)
            mvarTranType = Value
        End Set
    End Property

    Public Property TranScr() As System.String
        Get
            Return mvarTranScr
        End Get
        Set(ByVal Value As System.String)
            mvarTranScr = Value
        End Set
    End Property

    Public Property UnitCost() As System.Double
        Get
            Return mvarUnitCost
        End Get
        Set(ByVal Value As System.Double)
            mvarUnitCost = Value
        End Set
    End Property

    Public Property UnitPrice() As System.Double
        Get
            Return mvarUnitPrice
        End Get
        Set(ByVal Value As System.Double)
            mvarUnitPrice = Value
        End Set
    End Property

    Public Property WarrantyDate() As System.DateTime
        Get
            Return mvarWarrantyDate
        End Get
        Set(ByVal Value As System.DateTime)
            mvarWarrantyDate = Value
        End Set
    End Property

    Public Property WhseLoc() As System.String
        Get
            Return mvarWhseLoc
        End Get
        Set(ByVal Value As System.String)
            mvarWhseLoc = Value
        End Set
    End Property

    Public Property Crtd_Prog() As System.String
        Get
            Return mvarCrtd_Prog
        End Get
        Set(ByVal Value As System.String)
            mvarCrtd_Prog = Value
        End Set
    End Property

    Public Property Crtd_User() As System.String
        Get
            Return mvarCrtd_User
        End Get
        Set(ByVal Value As System.String)
            mvarCrtd_User = Value
        End Set
    End Property

    Public Property Crtd_DateTime() As System.DateTime
        Get
            Return mvarCrtd_DateTime
        End Get
        Set(ByVal Value As System.DateTime)
            mvarCrtd_DateTime = Value
        End Set
    End Property

    Public Property LUpd_Prog() As System.String
        Get
            Return mvarLUpd_Prog
        End Get
        Set(ByVal Value As System.String)
            mvarLUpd_Prog = Value
        End Set
    End Property

    Public Property LUpd_User() As System.String
        Get
            Return mvarLUpd_User
        End Get
        Set(ByVal Value As System.String)
            mvarLUpd_User = Value
        End Set
    End Property

    Public Property LUpd_DateTime() As System.DateTime
        Get
            Return mvarLUpd_DateTime
        End Get
        Set(ByVal Value As System.DateTime)
            mvarLUpd_DateTime = Value
        End Set
    End Property

    Public Property tstamp() As System.String
        Get
            Return mvartstamp
        End Get
        Set(ByVal Value As System.String)
            mvartstamp = Value
        End Set
    End Property

    Public Property CnvFact() As System.Double
        Get
            Return mvarCnvFact
        End Get
        Set(ByVal Value As System.Double)
            mvarCnvFact = Value
        End Set
    End Property

    Public Property UnitMultDiv() As System.String
        Get
            Return mvarUnitMultDiv
        End Get
        Set(ByVal Value As System.String)
            mvarUnitMultDiv = Value
        End Set
    End Property

    Public Property UnitDesc() As System.String
        Get
            Return mvarUnitDesc
        End Get
        Set(ByVal Value As System.String)
            mvarUnitDesc = Value
        End Set
    End Property

#End Region

#Region "Public Methods"
    Public Function Add() As Boolean
        Dim DAL As DataAccess = m_Dal
        Try
            Dim pc As New ParamCollection
            pc.Add(New ParamStruct("@Action", DbType.String, "AddNew", ParameterDirection.Input, 50))
            pc.Add(New ParamStruct("@BranchID", DbType.String, clsCommon.GetValueDBNull(Me.mvarBranchID), ParameterDirection.Input, 30))
            pc.Add(New ParamStruct("@BatNbr", DbType.String, clsCommon.GetValueDBNull(Me.mvarBatNbr), ParameterDirection.Input, 10))
            pc.Add(New ParamStruct("@RefNbr", DbType.String, clsCommon.GetValueDBNull(Me.mvarRefNbr), ParameterDirection.Input, 15))
            pc.Add(New ParamStruct("@LotSerNbr", DbType.String, clsCommon.GetValueDBNull(Me.mvarLotSerNbr), ParameterDirection.Input, 25))
            pc.Add(New ParamStruct("@POTranLineRef", DbType.String, clsCommon.GetValueDBNull(Me.mvarPOTranLineRef), ParameterDirection.Input, 5))
            pc.Add(New ParamStruct("@ExpDate", DbType.DateTime, clsCommon.GetValueDBNull(Me.mvarExpDate.Date), ParameterDirection.Input, 16))
            pc.Add(New ParamStruct("@InvtID", DbType.String, clsCommon.GetValueDBNull(Me.mvarInvtID), ParameterDirection.Input, 30))
            pc.Add(New ParamStruct("@InvtMult", DbType.Int16, clsCommon.GetValueDBNull(Me.mvarInvtMult), ParameterDirection.Input, 2))
            pc.Add(New ParamStruct("@KitID", DbType.String, clsCommon.GetValueDBNull(Me.mvarKitID), ParameterDirection.Input, 30))
            pc.Add(New ParamStruct("@MfgrLotSerNbr", DbType.String, clsCommon.GetValueDBNull(Me.mvarMfgrLotSerNbr), ParameterDirection.Input, 25))
            pc.Add(New ParamStruct("@Qty", DbType.Decimal, clsCommon.GetValueDBNull(Me.mvarQty), ParameterDirection.Input, 8))
            pc.Add(New ParamStruct("@SiteID", DbType.String, clsCommon.GetValueDBNull(Me.mvarSiteID), ParameterDirection.Input, 10))
            pc.Add(New ParamStruct("@ToSiteID", DbType.String, clsCommon.GetValueDBNull(Me.mvarToSiteID), ParameterDirection.Input, 10))
            pc.Add(New ParamStruct("@ToWhseLoc", DbType.String, clsCommon.GetValueDBNull(Me.mvarToWhseLoc), ParameterDirection.Input, 10))
            pc.Add(New ParamStruct("@TranDate", DbType.DateTime, clsCommon.GetValueDBNull(Me.mvarTranDate.Date), ParameterDirection.Input, 16))
            pc.Add(New ParamStruct("@TranType", DbType.String, clsCommon.GetValueDBNull(Me.mvarTranType), ParameterDirection.Input, 2))
            pc.Add(New ParamStruct("@TranScr", DbType.String, clsCommon.GetValueDBNull(Me.mvarTranScr), ParameterDirection.Input, 2))
            pc.Add(New ParamStruct("@UnitCost", DbType.Decimal, clsCommon.GetValueDBNull(Me.mvarUnitCost), ParameterDirection.Input, 8))
            pc.Add(New ParamStruct("@UnitPrice", DbType.Decimal, clsCommon.GetValueDBNull(Me.mvarUnitPrice), ParameterDirection.Input, 8))
            pc.Add(New ParamStruct("@WarrantyDate", DbType.DateTime, clsCommon.GetValueDBNull(Me.mvarWarrantyDate.Date), ParameterDirection.Input, 16))
            pc.Add(New ParamStruct("@WhseLoc", DbType.String, clsCommon.GetValueDBNull(Me.mvarWhseLoc), ParameterDirection.Input, 10))
            pc.Add(New ParamStruct("@Crtd_Prog", DbType.String, clsCommon.GetValueDBNull(Me.mvarCrtd_Prog), ParameterDirection.Input, 8))
            pc.Add(New ParamStruct("@Crtd_User", DbType.String, clsCommon.GetValueDBNull(Me.mvarCrtd_User), ParameterDirection.Input, 10))
            pc.Add(New ParamStruct("@Crtd_DateTime", DbType.DateTime, clsCommon.GetValueDBNull(Me.mvarCrtd_DateTime), ParameterDirection.Input, 16))
            pc.Add(New ParamStruct("@LUpd_Prog", DbType.String, clsCommon.GetValueDBNull(Me.mvarLUpd_Prog), ParameterDirection.Input, 8))
            pc.Add(New ParamStruct("@LUpd_User", DbType.String, clsCommon.GetValueDBNull(Me.mvarLUpd_User), ParameterDirection.Input, 10))
            pc.Add(New ParamStruct("@LUpd_DateTime", DbType.DateTime, clsCommon.GetValueDBNull(Me.mvarLUpd_DateTime), ParameterDirection.Input, 16))
            pc.Add(New ParamStruct("@tstamp", DbType.String, clsCommon.GetValueDBNull(Me.mvartstamp), ParameterDirection.Input, 18))
            pc.Add(New ParamStruct("@CnvFact", DbType.Decimal, clsCommon.GetValueDBNull(Me.mvarCnvFact), ParameterDirection.Input, 8))
            pc.Add(New ParamStruct("@UnitMultDiv", DbType.String, clsCommon.GetValueDBNull(Me.mvarUnitMultDiv), ParameterDirection.Input, 1))
            pc.Add(New ParamStruct("@UnitDesc", DbType.String, clsCommon.GetValueDBNull(Me.mvarUnitDesc), ParameterDirection.Input, 15))
            DAL.ExecPreparedSQL(PP_PO_LotTrans, CommandType.StoredProcedure, pc, "")
            Me.mvarBranchID = clsCommon.GetValue(pc.Item("@BranchID").Value, mvarBranchID.GetType().FullName)
            Return (Me.mvarBranchID <> String.Empty)
        Catch ex As Exception
            Throw ex
        End Try
    End Function
    Public Function Update() As Boolean
        Dim DAL As DataAccess = m_Dal
        Try
            Dim pc As New ParamCollection
            pc.Add(New ParamStruct("@Action", DbType.String, "Update", ParameterDirection.Input, 50))
            pc.Add(New ParamStruct("@BranchID", DbType.String, clsCommon.GetValueDBNull(Me.mvarBranchID), ParameterDirection.Input, 30))
            pc.Add(New ParamStruct("@BatNbr", DbType.String, clsCommon.GetValueDBNull(Me.mvarBatNbr), ParameterDirection.Input, 10))
            pc.Add(New ParamStruct("@RefNbr", DbType.String, clsCommon.GetValueDBNull(Me.mvarRefNbr), ParameterDirection.Input, 15))
            pc.Add(New ParamStruct("@LotSerNbr", DbType.String, clsCommon.GetValueDBNull(Me.mvarLotSerNbr), ParameterDirection.Input, 25))
            pc.Add(New ParamStruct("@POTranLineRef", DbType.String, clsCommon.GetValueDBNull(Me.mvarPOTranLineRef), ParameterDirection.Input, 5))
            pc.Add(New ParamStruct("@ExpDate", DbType.DateTime, clsCommon.GetValueDBNull(Me.mvarExpDate.Date), ParameterDirection.Input, 16))
            pc.Add(New ParamStruct("@InvtID", DbType.String, clsCommon.GetValueDBNull(Me.mvarInvtID), ParameterDirection.Input, 30))
            pc.Add(New ParamStruct("@InvtMult", DbType.Int16, clsCommon.GetValueDBNull(Me.mvarInvtMult), ParameterDirection.Input, 2))
            pc.Add(New ParamStruct("@KitID", DbType.String, clsCommon.GetValueDBNull(Me.mvarKitID), ParameterDirection.Input, 30))
            pc.Add(New ParamStruct("@MfgrLotSerNbr", DbType.String, clsCommon.GetValueDBNull(Me.mvarMfgrLotSerNbr), ParameterDirection.Input, 25))
            pc.Add(New ParamStruct("@Qty", DbType.Decimal, clsCommon.GetValueDBNull(Me.mvarQty), ParameterDirection.Input, 8))
            pc.Add(New ParamStruct("@SiteID", DbType.String, clsCommon.GetValueDBNull(Me.mvarSiteID), ParameterDirection.Input, 10))
            pc.Add(New ParamStruct("@ToSiteID", DbType.String, clsCommon.GetValueDBNull(Me.mvarToSiteID), ParameterDirection.Input, 10))
            pc.Add(New ParamStruct("@ToWhseLoc", DbType.String, clsCommon.GetValueDBNull(Me.mvarToWhseLoc), ParameterDirection.Input, 10))
            pc.Add(New ParamStruct("@TranDate", DbType.DateTime, clsCommon.GetValueDBNull(Me.mvarTranDate.Date), ParameterDirection.Input, 16))
            pc.Add(New ParamStruct("@TranType", DbType.String, clsCommon.GetValueDBNull(Me.mvarTranType), ParameterDirection.Input, 2))
            pc.Add(New ParamStruct("@TranScr", DbType.String, clsCommon.GetValueDBNull(Me.mvarTranScr), ParameterDirection.Input, 2))
            pc.Add(New ParamStruct("@UnitCost", DbType.Decimal, clsCommon.GetValueDBNull(Me.mvarUnitCost), ParameterDirection.Input, 8))
            pc.Add(New ParamStruct("@UnitPrice", DbType.Decimal, clsCommon.GetValueDBNull(Me.mvarUnitPrice), ParameterDirection.Input, 8))
            pc.Add(New ParamStruct("@WarrantyDate", DbType.DateTime, clsCommon.GetValueDBNull(Me.mvarWarrantyDate.Date), ParameterDirection.Input, 16))
            pc.Add(New ParamStruct("@WhseLoc", DbType.String, clsCommon.GetValueDBNull(Me.mvarWhseLoc), ParameterDirection.Input, 10))
            pc.Add(New ParamStruct("@Crtd_Prog", DbType.String, clsCommon.GetValueDBNull(Me.mvarCrtd_Prog), ParameterDirection.Input, 8))
            pc.Add(New ParamStruct("@Crtd_User", DbType.String, clsCommon.GetValueDBNull(Me.mvarCrtd_User), ParameterDirection.Input, 10))
            pc.Add(New ParamStruct("@Crtd_DateTime", DbType.DateTime, clsCommon.GetValueDBNull(Me.mvarCrtd_DateTime), ParameterDirection.Input, 16))
            pc.Add(New ParamStruct("@LUpd_Prog", DbType.String, clsCommon.GetValueDBNull(Me.mvarLUpd_Prog), ParameterDirection.Input, 8))
            pc.Add(New ParamStruct("@LUpd_User", DbType.String, clsCommon.GetValueDBNull(Me.mvarLUpd_User), ParameterDirection.Input, 10))
            pc.Add(New ParamStruct("@LUpd_DateTime", DbType.DateTime, clsCommon.GetValueDBNull(Me.mvarLUpd_DateTime), ParameterDirection.Input, 16))
            pc.Add(New ParamStruct("@tstamp", DbType.String, clsCommon.GetValueDBNull(Me.mvartstamp), ParameterDirection.Input, 18))
            pc.Add(New ParamStruct("@CnvFact", DbType.Decimal, clsCommon.GetValueDBNull(Me.mvarCnvFact), ParameterDirection.Input, 8))
            pc.Add(New ParamStruct("@UnitMultDiv", DbType.String, clsCommon.GetValueDBNull(Me.mvarUnitMultDiv), ParameterDirection.Input, 1))
            pc.Add(New ParamStruct("@UnitDesc", DbType.String, clsCommon.GetValueDBNull(Me.mvarUnitDesc), ParameterDirection.Input, 15))
            Return (DAL.ExecNonQuery(PP_PO_LotTrans, CommandType.StoredProcedure, pc, "") > 0)
        Catch ex As Exception
            Throw ex
        End Try
    End Function
    Public Function Delete(ByVal BranchID As System.String, ByVal BatNbr As System.String, ByVal RefNbr As System.String, ByVal LotSerNbr As System.String, ByVal POTranLineRef As System.String) As Boolean
        Dim DAL As DataAccess = m_Dal
        Try
            Dim pc As New ParamCollection
            pc.Add(New ParamStruct("@Action", DbType.String, "Delete", ParameterDirection.Input, 50))
            pc.Add(New ParamStruct("@BranchID", DbType.String, clsCommon.GetValueDBNull(BranchID), ParameterDirection.Input, 30))
            pc.Add(New ParamStruct("@BatNbr", DbType.String, clsCommon.GetValueDBNull(BatNbr), ParameterDirection.Input, 10))
            pc.Add(New ParamStruct("@RefNbr", DbType.String, clsCommon.GetValueDBNull(RefNbr), ParameterDirection.Input, 15))
            pc.Add(New ParamStruct("@LotSerNbr", DbType.String, clsCommon.GetValueDBNull(LotSerNbr), ParameterDirection.Input, 25))
            pc.Add(New ParamStruct("@POTranLineRef", DbType.String, clsCommon.GetValueDBNull(POTranLineRef), ParameterDirection.Input, 5))
            Return (DAL.ExecNonQuery(PP_PO_LotTrans, CommandType.StoredProcedure, pc, "") > 0)
        Catch ex As Exception
            Throw ex
        End Try
    End Function
    Public Function GetAll(ByVal BranchID As System.String, ByVal BatNbr As System.String, ByVal RefNbr As System.String, ByVal LotSerNbr As System.String, ByVal POTranLineRef As System.String) As DataTable
        Dim DAL As DataAccess = m_Dal
        Try
            Dim pc As New ParamCollection
            Dim ds As New DataSet
            pc.Add(New ParamStruct("@Action", DbType.String, "GetListData", ParameterDirection.Input, 50))
            pc.Add(New ParamStruct("@BranchID", DbType.String, clsCommon.GetValueDBNull(BranchID), ParameterDirection.Input, 30))
            pc.Add(New ParamStruct("@BatNbr", DbType.String, clsCommon.GetValueDBNull(BatNbr), ParameterDirection.Input, 10))
            pc.Add(New ParamStruct("@RefNbr", DbType.String, clsCommon.GetValueDBNull(RefNbr), ParameterDirection.Input, 15))
            pc.Add(New ParamStruct("@LotSerNbr", DbType.String, clsCommon.GetValueDBNull(LotSerNbr), ParameterDirection.Input, 25))
            pc.Add(New ParamStruct("@POTranLineRef", DbType.String, clsCommon.GetValueDBNull(POTranLineRef), ParameterDirection.Input, 5))
            ds = DAL.ExecDataSet(PP_PO_LotTrans, CommandType.StoredProcedure, pc, "")
            Dim keys(4) As DataColumn
            Dim column As DataColumn
            column = ds.Tables(0).Columns("BranchID")
            keys(0) = column
            column = ds.Tables(0).Columns("BatNbr")
            keys(1) = column
            column = ds.Tables(0).Columns("RefNbr")
            keys(2) = column
            column = ds.Tables(0).Columns("LotSerNbr")
            keys(3) = column
            column = ds.Tables(0).Columns("POTranLineRef")
            keys(4) = column
            ds.Tables(0).PrimaryKey = keys
            Return ds.Tables(0)
        Catch ex As Exception
            Throw ex
        End Try
    End Function
    Public Sub Reset()
        mvarBranchID = String.Empty
        mvarBatNbr = String.Empty
        mvarRefNbr = String.Empty
        mvarLotSerNbr = String.Empty
        mvarPOTranLineRef = String.Empty
        mvarExpDate = Today
        mvarInvtID = String.Empty
        mvarInvtMult = 0
        mvarKitID = String.Empty
        mvarMfgrLotSerNbr = String.Empty
        mvarQty = 0
        mvarSiteID = String.Empty
        mvarToSiteID = String.Empty
        mvarToWhseLoc = String.Empty
        mvarTranDate = Today
        mvarTranType = String.Empty
        mvarTranScr = String.Empty
        mvarUnitCost = 0
        mvarUnitPrice = 0
        mvarWarrantyDate = Today
        mvarWhseLoc = String.Empty
        mvarCrtd_Prog = String.Empty
        mvarCrtd_User = String.Empty
        mvarCrtd_DateTime = Today
        mvarLUpd_Prog = String.Empty
        mvarLUpd_User = String.Empty
        mvarLUpd_DateTime = Today
        mvartstamp = String.Empty
        mvarCnvFact = 0
        mvarUnitMultDiv = String.Empty
        mvarUnitDesc = String.Empty
    End Sub
    Public Function GetByKey(ByVal BranchID As System.String, ByVal BatNbr As System.String, ByVal RefNbr As System.String, ByVal LotSerNbr As System.String, ByVal POTranLineRef As System.String) As Boolean
        Dim DAL As DataAccess = m_Dal
        Dim ds As New DataSet
        Try
            Dim pc As New ParamCollection
            pc.Add(New ParamStruct("@Action", DbType.String, "GetData_ByKey", ParameterDirection.Input, 50))
            pc.Add(New ParamStruct("@BranchID", DbType.String, clsCommon.GetValueDBNull(BranchID), ParameterDirection.InputOutput, 30))
            pc.Add(New ParamStruct("@BatNbr", DbType.String, clsCommon.GetValueDBNull(BatNbr), ParameterDirection.InputOutput, 10))
            pc.Add(New ParamStruct("@RefNbr", DbType.String, clsCommon.GetValueDBNull(RefNbr), ParameterDirection.InputOutput, 15))
            pc.Add(New ParamStruct("@LotSerNbr", DbType.String, clsCommon.GetValueDBNull(LotSerNbr), ParameterDirection.InputOutput, 25))
            pc.Add(New ParamStruct("@POTranLineRef", DbType.String, clsCommon.GetValueDBNull(POTranLineRef), ParameterDirection.InputOutput, 5))
            ds = DAL.ExecDataSet(PP_PO_LotTrans, CommandType.StoredProcedure, pc, "")
            Me.Reset()
            If ds Is Nothing Then
                Return False
            End If
            If ds.Tables(0).Rows.Count > 0 Then
                FillData(ds.Tables(0).Rows(0))
                Return True
            End If
        Catch ex As Exception
            Throw ex
        End Try
        Return False
    End Function
    Public Sub FillData(row As DataRow)
        mvarBranchID = clsCommon.GetValue(row("BranchID"), mvarBranchID.GetType().FullName)
        mvarBatNbr = clsCommon.GetValue(row("BatNbr"), mvarBatNbr.GetType().FullName)
        mvarRefNbr = clsCommon.GetValue(row("RefNbr"), mvarRefNbr.GetType().FullName)
        mvarLotSerNbr = clsCommon.GetValue(row("LotSerNbr"), mvarLotSerNbr.GetType().FullName)
        mvarPOTranLineRef = clsCommon.GetValue(row("POTranLineRef"), mvarPOTranLineRef.GetType().FullName)
        mvarExpDate = clsCommon.GetValue(row("ExpDate"), mvarExpDate.GetType().FullName)
        mvarInvtID = clsCommon.GetValue(row("InvtID"), mvarInvtID.GetType().FullName)
        mvarInvtMult = clsCommon.GetValue(row("InvtMult"), mvarInvtMult.GetType().FullName)
        mvarKitID = clsCommon.GetValue(row("KitID"), mvarKitID.GetType().FullName)
        mvarMfgrLotSerNbr = clsCommon.GetValue(row("MfgrLotSerNbr"), mvarMfgrLotSerNbr.GetType().FullName)
        mvarQty = clsCommon.GetValue(row("Qty"), mvarQty.GetType().FullName)
        mvarSiteID = clsCommon.GetValue(row("SiteID"), mvarSiteID.GetType().FullName)
        mvarToSiteID = clsCommon.GetValue(row("ToSiteID"), mvarToSiteID.GetType().FullName)
        mvarToWhseLoc = clsCommon.GetValue(row("ToWhseLoc"), mvarToWhseLoc.GetType().FullName)
        mvarTranDate = clsCommon.GetValue(row("TranDate"), mvarTranDate.GetType().FullName)
        mvarTranType = clsCommon.GetValue(row("TranType"), mvarTranType.GetType().FullName)
        mvarTranScr = clsCommon.GetValue(row("TranScr"), mvarTranScr.GetType().FullName)
        mvarUnitCost = clsCommon.GetValue(row("UnitCost"), mvarUnitCost.GetType().FullName)
        mvarUnitPrice = clsCommon.GetValue(row("UnitPrice"), mvarUnitPrice.GetType().FullName)
        mvarWarrantyDate = clsCommon.GetValue(row("WarrantyDate"), mvarWarrantyDate.GetType().FullName)
        mvarWhseLoc = clsCommon.GetValue(row("WhseLoc"), mvarWhseLoc.GetType().FullName)
        mvarCrtd_Prog = clsCommon.GetValue(row("Crtd_Prog"), mvarCrtd_Prog.GetType().FullName)
        mvarCrtd_User = clsCommon.GetValue(row("Crtd_User"), mvarCrtd_User.GetType().FullName)
        mvarCrtd_DateTime = clsCommon.GetValue(row("Crtd_DateTime"), mvarCrtd_DateTime.GetType().FullName)
        mvarLUpd_Prog = clsCommon.GetValue(row("LUpd_Prog"), mvarLUpd_Prog.GetType().FullName)
        mvarLUpd_User = clsCommon.GetValue(row("LUpd_User"), mvarLUpd_User.GetType().FullName)
        mvarLUpd_DateTime = clsCommon.GetValue(row("LUpd_DateTime"), mvarLUpd_DateTime.GetType().FullName)
        mvartstamp = clsCommon.GetValue(row("tstamp"), mvartstamp.GetType().FullName)
        mvarCnvFact = clsCommon.GetValue(row("CnvFact"), mvarCnvFact.GetType().FullName)
        mvarUnitMultDiv = clsCommon.GetValue(row("UnitMultDiv"), mvarUnitMultDiv.GetType().FullName)
        mvarUnitDesc = clsCommon.GetValue(row("UnitDesc"), mvarUnitDesc.GetType().FullName)
    End Sub
#End Region

#Region "Private Methods"
#End Region

End Class
