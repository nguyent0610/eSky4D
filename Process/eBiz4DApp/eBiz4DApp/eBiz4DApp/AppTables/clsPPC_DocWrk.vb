'-- ------------------------------------------------------------
'-- Class name    :  clsPPC_DocWrk
'-- Created date  :  10/2/2012
'-- Created by    :  
'-- Updated by    :  
'-- Generated by    :  Class Maker v1.0
'-- ------------------------------------------------------------

'-- Import Libraries --
Imports HQFramework.Common
Imports HQFramework.DAL
Public Class clsPPC_DocWrk
#Region "Constants"
	Private Const PP_PPC_DocWrk As String = "PP_PPC_DocWrk"
#End Region 

#Region "Member Variables"
	Private mvarBatNbr As System.String

	Private mvarRefNbr As System.String

	Private mvarOrdNbr As System.String

	Private mvarDocBal As System.Double

	Private mvarOrigDocAmt As System.Double

	Private mvarCustID As System.String

	Private mvarInvcNbr As System.String

	Private mvarPaid As System.Double

	Private mvarStatus As System.Int32

	Private mvarDocDate As System.String

	Private mvarSlsperId As System.String

#End Region 

	Private m_Dal As DataAccess
#Region "Constructors"
	Public Sub New()
		m_Dal = New DataAccess
		Reset()
	End Sub
	Public Sub New(ByVal dal As DataAccess)
		m_Dal = dal
		Reset()
	End Sub
#End Region 

#Region "Public Properties"
	Public Property BatNbr() As System.String
		Get
			Return mvarBatNbr
		End Get
		Set(ByVal Value As System.String)
			mvarBatNbr = Value
		End Set
	End Property

	Public Property RefNbr() As System.String
		Get
			Return mvarRefNbr
		End Get
		Set(ByVal Value As System.String)
			mvarRefNbr = Value
		End Set
	End Property

	Public Property OrdNbr() As System.String
		Get
			Return mvarOrdNbr
		End Get
		Set(ByVal Value As System.String)
			mvarOrdNbr = Value
		End Set
	End Property

	Public Property DocBal() As System.Double
		Get
			Return mvarDocBal
		End Get
		Set(ByVal Value As System.Double)
			mvarDocBal = Value
		End Set
	End Property

	Public Property OrigDocAmt() As System.Double
		Get
			Return mvarOrigDocAmt
		End Get
		Set(ByVal Value As System.Double)
			mvarOrigDocAmt = Value
		End Set
	End Property

	Public Property CustID() As System.String
		Get
			Return mvarCustID
		End Get
		Set(ByVal Value As System.String)
			mvarCustID = Value
		End Set
	End Property

	Public Property InvcNbr() As System.String
		Get
			Return mvarInvcNbr
		End Get
		Set(ByVal Value As System.String)
			mvarInvcNbr = Value
		End Set
	End Property

	Public Property Paid() As System.Double
		Get
			Return mvarPaid
		End Get
		Set(ByVal Value As System.Double)
			mvarPaid = Value
		End Set
	End Property

	Public Property Status() As System.Int32
		Get
			Return mvarStatus
		End Get
		Set(ByVal Value As System.Int32)
			mvarStatus = Value
		End Set
	End Property

	Public Property DocDate() As System.String
		Get
			Return mvarDocDate
		End Get
		Set(ByVal Value As System.String)
			mvarDocDate = Value
		End Set
	End Property

	Public Property SlsperId() As System.String
		Get
			Return mvarSlsperId
		End Get
		Set(ByVal Value As System.String)
			mvarSlsperId = Value
		End Set
	End Property

#End Region 

#Region "Public Methods"
	Public Function Add() as Boolean 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "AddNew", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@BatNbr", DbType.String,clsCommon.GetValueDBNull(Me.mvarBatNbr), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@RefNbr", DbType.String,clsCommon.GetValueDBNull(Me.mvarRefNbr), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@OrdNbr", DbType.String,clsCommon.GetValueDBNull(Me.mvarOrdNbr), ParameterDirection.Input,15 ))
			pc.Add(New ParamStruct("@DocBal", DbType.Decimal,clsCommon.GetValueDBNull(Me.mvarDocBal), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@OrigDocAmt", DbType.Decimal,clsCommon.GetValueDBNull(Me.mvarOrigDocAmt), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@CustID", DbType.String,clsCommon.GetValueDBNull(Me.mvarCustID), ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@InvcNbr", DbType.String,clsCommon.GetValueDBNull(Me.mvarInvcNbr), ParameterDirection.Input,15 ))
			pc.Add(New ParamStruct("@Paid", DbType.Decimal,clsCommon.GetValueDBNull(Me.mvarPaid), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@Status", DbType.int32,clsCommon.GetValueDBNull(Me.mvarStatus), ParameterDirection.Input,4 ))
			pc.Add(New ParamStruct("@DocDate", DbType.String,clsCommon.GetValueDBNull(Me.mvarDocDate), ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@SlsperId", DbType.String,clsCommon.GetValueDBNull(Me.mvarSlsperId), ParameterDirection.Input,15 ))
			DAL.ExecPreparedSQL(PP_PPC_DocWrk, CommandType.StoredProcedure, pc,"")
		Me.mvarBatNbr = clsCommon.GetValue(pc.Item("@BatNbr").Value, mvarBatNbr.GetType().FullName)
		Return (Me.mvarBatNbr <> String.Empty )
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Function Update() as Boolean 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "Update", ParameterDirection.Input,50 ))
			 pc.Add(New ParamStruct("@BatNbr",DbType.String, clsCommon.GetValueDBNull(me.mvarBatNbr), ParameterDirection.Input,10 ))
			 pc.Add(New ParamStruct("@RefNbr",DbType.String, clsCommon.GetValueDBNull(me.mvarRefNbr), ParameterDirection.Input,10 ))
			 pc.Add(New ParamStruct("@OrdNbr",DbType.String, clsCommon.GetValueDBNull(me.mvarOrdNbr), ParameterDirection.Input,15 ))
			 pc.Add(New ParamStruct("@DocBal",DbType.Decimal, clsCommon.GetValueDBNull(me.mvarDocBal), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@OrigDocAmt",DbType.Decimal, clsCommon.GetValueDBNull(me.mvarOrigDocAmt), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@CustID",DbType.String, clsCommon.GetValueDBNull(me.mvarCustID), ParameterDirection.Input,50 ))
			 pc.Add(New ParamStruct("@InvcNbr",DbType.String, clsCommon.GetValueDBNull(me.mvarInvcNbr), ParameterDirection.Input,15 ))
			 pc.Add(New ParamStruct("@Paid",DbType.Decimal, clsCommon.GetValueDBNull(me.mvarPaid), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@Status",DbType.int32, clsCommon.GetValueDBNull(me.mvarStatus), ParameterDirection.Input,4 ))
			 pc.Add(New ParamStruct("@DocDate",DbType.String, clsCommon.GetValueDBNull(me.mvarDocDate), ParameterDirection.Input,50 ))
			 pc.Add(New ParamStruct("@SlsperId",DbType.String, clsCommon.GetValueDBNull(me.mvarSlsperId), ParameterDirection.Input,15 ))
			Return (DAL.ExecNonQuery(PP_PPC_DocWrk, CommandType.StoredProcedure, pc,"") > 0)
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Function Delete() as Boolean 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "Delete", ParameterDirection.Input,50 ))
			Return (DAL.ExecNonQuery(PP_PPC_DocWrk, CommandType.StoredProcedure, pc,"") > 0)
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Function GetAll() as DataTable 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			Dim ds As New DataSet
			pc.Add(New ParamStruct("@Action", DbType.String, "GetListData", ParameterDirection.Input,50 ))
			ds = DAL.ExecDataSet(PP_PPC_DocWrk, CommandType.StoredProcedure, pc,"")
			Return ds.Tables(0)
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Sub Reset()
		mvarBatNbr = String.Empty
		mvarRefNbr = String.Empty
		mvarOrdNbr = String.Empty
		mvarDocBal = 0
		mvarOrigDocAmt = 0
		mvarCustID = String.Empty
		mvarInvcNbr = String.Empty
		mvarPaid = 0
		mvarStatus = 0
		mvarDocDate = String.Empty
		mvarSlsperId = String.Empty
	End Sub
	Public Function GetByKey() as Boolean 
		Dim DAL As DataAccess = m_Dal
		Dim ds As New DataSet 
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "GetData_ByKey", ParameterDirection.Input,50 ))
			ds = DAL.ExecDataSet(PP_PPC_DocWrk, CommandType.StoredProcedure, pc,"")
			me.Reset()
			If ds Is Nothing Then
				Return False
			End If
			If ds.Tables(0).Rows.Count > 0 Then
				FillData(ds.Tables(0).Rows(0))
				Return True
			End If
		Catch ex As Exception
			Throw ex 
		End Try
		Return False
	End Function
	Public Sub FillData(row as DataRow)
		mvarBatNbr =  clsCommon.GetValue(row("BatNbr"), mvarBatNbr.GetType().FullName)
		mvarRefNbr =  clsCommon.GetValue(row("RefNbr"), mvarRefNbr.GetType().FullName)
		mvarOrdNbr =  clsCommon.GetValue(row("OrdNbr"), mvarOrdNbr.GetType().FullName)
		mvarDocBal =  clsCommon.GetValue(row("DocBal"), mvarDocBal.GetType().FullName)
		mvarOrigDocAmt =  clsCommon.GetValue(row("OrigDocAmt"), mvarOrigDocAmt.GetType().FullName)
		mvarCustID =  clsCommon.GetValue(row("CustID"), mvarCustID.GetType().FullName)
		mvarInvcNbr =  clsCommon.GetValue(row("InvcNbr"), mvarInvcNbr.GetType().FullName)
		mvarPaid =  clsCommon.GetValue(row("Paid"), mvarPaid.GetType().FullName)
		mvarStatus =  clsCommon.GetValue(row("Status"), mvarStatus.GetType().FullName)
		mvarDocDate =  clsCommon.GetValue(row("DocDate"), mvarDocDate.GetType().FullName)
		mvarSlsperId =  clsCommon.GetValue(row("SlsperId"), mvarSlsperId.GetType().FullName)
	End Sub
#End Region 

#Region "Private Methods"
#End Region 

End Class
