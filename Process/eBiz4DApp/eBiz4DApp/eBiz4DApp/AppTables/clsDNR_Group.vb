'-- ------------------------------------------------------------
'-- Class name    :  clsDNR_Group
'-- Created date  :  10/2/2012
'-- Created by    :  
'-- Updated by    :  
'-- Generated by    :  Class Maker v1.0
'-- ------------------------------------------------------------

'-- Import Libraries --
Imports HQFramework.Common
Imports HQFramework.DAL
Public Class clsDNR_Group
#Region "Constants"
	Private Const PP_DNR_Group As String = "PP_DNR_Group"
#End Region 

#Region "Member Variables"
	Private mvarReportID As System.String

	Private mvarFieldName As System.String

	Private mvarGroupOrder As System.String

#End Region 

	Private m_Dal As DataAccess
#Region "Constructors"
	Public Sub New()
		m_Dal = New DataAccess
		Reset()
	End Sub
	Public Sub New(ByVal dal As DataAccess)
		m_Dal = dal
		Reset()
	End Sub
#End Region 

#Region "Public Properties"
	Public Property ReportID() As System.String
		Get
			Return mvarReportID
		End Get
		Set(ByVal Value As System.String)
			mvarReportID = Value
		End Set
	End Property

	Public Property FieldName() As System.String
		Get
			Return mvarFieldName
		End Get
		Set(ByVal Value As System.String)
			mvarFieldName = Value
		End Set
	End Property

	Public Property GroupOrder() As System.String
		Get
			Return mvarGroupOrder
		End Get
		Set(ByVal Value As System.String)
			mvarGroupOrder = Value
		End Set
	End Property

#End Region 

#Region "Public Methods"
	Public Function Add() as Boolean 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "AddNew", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@ReportID", DbType.String,clsCommon.GetValueDBNull(Me.mvarReportID), ParameterDirection.Input,30 ))
			pc.Add(New ParamStruct("@FieldName", DbType.String,clsCommon.GetValueDBNull(Me.mvarFieldName), ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@GroupOrder", DbType.String,clsCommon.GetValueDBNull(Me.mvarGroupOrder), ParameterDirection.Input,10 ))
			DAL.ExecPreparedSQL(PP_DNR_Group, CommandType.StoredProcedure, pc,"")
		Me.mvarReportID = clsCommon.GetValue(pc.Item("@ReportID").Value, mvarReportID.GetType().FullName)
		Return (Me.mvarReportID <> String.Empty )
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Function Update() as Boolean 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "Update", ParameterDirection.Input,50 ))
			 pc.Add(New ParamStruct("@ReportID",DbType.String, clsCommon.GetValueDBNull(me.mvarReportID), ParameterDirection.Input,30 ))
			 pc.Add(New ParamStruct("@FieldName",DbType.String, clsCommon.GetValueDBNull(me.mvarFieldName), ParameterDirection.Input,50 ))
			 pc.Add(New ParamStruct("@GroupOrder",DbType.String, clsCommon.GetValueDBNull(me.mvarGroupOrder), ParameterDirection.Input,10 ))
			Return (DAL.ExecNonQuery(PP_DNR_Group, CommandType.StoredProcedure, pc,"") > 0)
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Function Delete(ByVal ReportID As System.String, ByVal FieldName As System.String, ByVal GroupOrder As System.String) as Boolean 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "Delete", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@ReportID",DbType.String, clsCommon.GetValueDBNull(ReportID), ParameterDirection.Input,30 ))
			pc.Add(New ParamStruct("@FieldName",DbType.String, clsCommon.GetValueDBNull(FieldName), ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@GroupOrder",DbType.String, clsCommon.GetValueDBNull(GroupOrder), ParameterDirection.Input,10 ))
			Return (DAL.ExecNonQuery(PP_DNR_Group, CommandType.StoredProcedure, pc,"") > 0)
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Function GetAll(ByVal ReportID As System.String, ByVal FieldName As System.String, ByVal GroupOrder As System.String) as DataTable 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			Dim ds As New DataSet
			pc.Add(New ParamStruct("@Action", DbType.String, "GetListData", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@ReportID", DbType.String, clsCommon.GetValueDBNull(ReportID), ParameterDirection.Input, 30 ))
			pc.Add(New ParamStruct("@FieldName", DbType.String, clsCommon.GetValueDBNull(FieldName), ParameterDirection.Input, 50 ))
			pc.Add(New ParamStruct("@GroupOrder", DbType.String, clsCommon.GetValueDBNull(GroupOrder), ParameterDirection.Input, 10 ))
			ds = DAL.ExecDataSet(PP_DNR_Group, CommandType.StoredProcedure, pc,"")
			Dim keys(2) As DataColumn
			Dim column As DataColumn
			column = ds.Tables(0).Columns("ReportID")
			Keys(0) = column
			column = ds.Tables(0).Columns("FieldName")
			Keys(1) = column
			column = ds.Tables(0).Columns("GroupOrder")
			Keys(2) = column
			ds.Tables(0).PrimaryKey = Keys
			Return ds.Tables(0)
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Sub Reset()
		mvarReportID = String.Empty
		mvarFieldName = String.Empty
		mvarGroupOrder = String.Empty
	End Sub
	Public Function GetByKey(ByVal ReportID As System.String, ByVal FieldName As System.String, ByVal GroupOrder As System.String) as Boolean 
		Dim DAL As DataAccess = m_Dal
		Dim ds As New DataSet 
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "GetData_ByKey", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@ReportID", DbType.String, clsCommon.GetValueDBNull(ReportID), ParameterDirection.InputOutput, 30 ))
			pc.Add(New ParamStruct("@FieldName", DbType.String, clsCommon.GetValueDBNull(FieldName), ParameterDirection.InputOutput, 50 ))
			pc.Add(New ParamStruct("@GroupOrder", DbType.String, clsCommon.GetValueDBNull(GroupOrder), ParameterDirection.InputOutput, 10 ))
			ds = DAL.ExecDataSet(PP_DNR_Group, CommandType.StoredProcedure, pc,"")
			me.Reset()
			If ds Is Nothing Then
				Return False
			End If
			If ds.Tables(0).Rows.Count > 0 Then
				FillData(ds.Tables(0).Rows(0))
				Return True
			End If
		Catch ex As Exception
			Throw ex 
		End Try
		Return False
	End Function
	Public Sub FillData(row as DataRow)
		mvarReportID =  clsCommon.GetValue(row("ReportID"), mvarReportID.GetType().FullName)
		mvarFieldName =  clsCommon.GetValue(row("FieldName"), mvarFieldName.GetType().FullName)
		mvarGroupOrder =  clsCommon.GetValue(row("GroupOrder"), mvarGroupOrder.GetType().FullName)
	End Sub
#End Region 

#Region "Private Methods"
#End Region 

End Class
