'-- ------------------------------------------------------------
'-- Class name    :  clsIF_FT_UploadFileList
'-- Created date  :  10/2/2012
'-- Created by    :  
'-- Updated by    :  
'-- Generated by    :  Class Maker v1.0
'-- ------------------------------------------------------------

'-- Import Libraries --
Imports HQFramework.Common
Imports HQFramework.DAL
Public Class clsIF_FT_UploadFileList
#Region "Constants"
	Private Const PP_IF_FT_UploadFileList As String = "PP_IF_FT_UploadFileList"
#End Region 

#Region "Member Variables"
	Private mvarGroupIdRegEx As System.String

	Private mvarUserIdRegEx As System.String

	Private mvarFileNameRegEx As System.String

	Private mvarPath As System.String

	Private mvarCmdPostAction As System.String

	Private mvarDBPostAction As System.String

	Private mvarPriority As System.Int32

#End Region 

	Private m_Dal As DataAccess
#Region "Constructors"
	Public Sub New()
		m_Dal = New DataAccess
		Reset()
	End Sub
	Public Sub New(ByVal dal As DataAccess)
		m_Dal = dal
		Reset()
	End Sub
#End Region 

#Region "Public Properties"
	Public Property GroupIdRegEx() As System.String
		Get
			Return mvarGroupIdRegEx
		End Get
		Set(ByVal Value As System.String)
			mvarGroupIdRegEx = Value
		End Set
	End Property

	Public Property UserIdRegEx() As System.String
		Get
			Return mvarUserIdRegEx
		End Get
		Set(ByVal Value As System.String)
			mvarUserIdRegEx = Value
		End Set
	End Property

	Public Property FileNameRegEx() As System.String
		Get
			Return mvarFileNameRegEx
		End Get
		Set(ByVal Value As System.String)
			mvarFileNameRegEx = Value
		End Set
	End Property

	Public Property Path() As System.String
		Get
			Return mvarPath
		End Get
		Set(ByVal Value As System.String)
			mvarPath = Value
		End Set
	End Property

	Public Property CmdPostAction() As System.String
		Get
			Return mvarCmdPostAction
		End Get
		Set(ByVal Value As System.String)
			mvarCmdPostAction = Value
		End Set
	End Property

	Public Property DBPostAction() As System.String
		Get
			Return mvarDBPostAction
		End Get
		Set(ByVal Value As System.String)
			mvarDBPostAction = Value
		End Set
	End Property

	Public Property Priority() As System.Int32
		Get
			Return mvarPriority
		End Get
		Set(ByVal Value As System.Int32)
			mvarPriority = Value
		End Set
	End Property

#End Region 

#Region "Public Methods"
	Public Function Add() as Boolean 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "AddNew", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@GroupIdRegEx", DbType.String,clsCommon.GetValueDBNull(Me.mvarGroupIdRegEx), ParameterDirection.Input,100 ))
			pc.Add(New ParamStruct("@UserIdRegEx", DbType.String,clsCommon.GetValueDBNull(Me.mvarUserIdRegEx), ParameterDirection.Input,100 ))
			pc.Add(New ParamStruct("@FileNameRegEx", DbType.String,clsCommon.GetValueDBNull(Me.mvarFileNameRegEx), ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@Path", DbType.String,clsCommon.GetValueDBNull(Me.mvarPath), ParameterDirection.Input,200 ))
			pc.Add(New ParamStruct("@CmdPostAction", DbType.String,clsCommon.GetValueDBNull(Me.mvarCmdPostAction), ParameterDirection.Input,400 ))
			pc.Add(New ParamStruct("@DBPostAction", DbType.String,clsCommon.GetValueDBNull(Me.mvarDBPostAction), ParameterDirection.Input,400 ))
			pc.Add(New ParamStruct("@Priority", DbType.int32,clsCommon.GetValueDBNull(Me.mvarPriority), ParameterDirection.Input,4 ))
			DAL.ExecPreparedSQL(PP_IF_FT_UploadFileList, CommandType.StoredProcedure, pc,"")
		Me.mvarGroupIdRegEx = clsCommon.GetValue(pc.Item("@GroupIdRegEx").Value, mvarGroupIdRegEx.GetType().FullName)
		Return (Me.mvarGroupIdRegEx <> String.Empty )
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Function Update() as Boolean 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "Update", ParameterDirection.Input,50 ))
			 pc.Add(New ParamStruct("@GroupIdRegEx",DbType.String, clsCommon.GetValueDBNull(me.mvarGroupIdRegEx), ParameterDirection.Input,100 ))
			 pc.Add(New ParamStruct("@UserIdRegEx",DbType.String, clsCommon.GetValueDBNull(me.mvarUserIdRegEx), ParameterDirection.Input,100 ))
			 pc.Add(New ParamStruct("@FileNameRegEx",DbType.String, clsCommon.GetValueDBNull(me.mvarFileNameRegEx), ParameterDirection.Input,50 ))
			 pc.Add(New ParamStruct("@Path",DbType.String, clsCommon.GetValueDBNull(me.mvarPath), ParameterDirection.Input,200 ))
			 pc.Add(New ParamStruct("@CmdPostAction",DbType.String, clsCommon.GetValueDBNull(me.mvarCmdPostAction), ParameterDirection.Input,400 ))
			 pc.Add(New ParamStruct("@DBPostAction",DbType.String, clsCommon.GetValueDBNull(me.mvarDBPostAction), ParameterDirection.Input,400 ))
			 pc.Add(New ParamStruct("@Priority",DbType.int32, clsCommon.GetValueDBNull(me.mvarPriority), ParameterDirection.Input,4 ))
			Return (DAL.ExecNonQuery(PP_IF_FT_UploadFileList, CommandType.StoredProcedure, pc,"") > 0)
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Function Delete(ByVal GroupIdRegEx As System.String, ByVal UserIdRegEx As System.String, ByVal FileNameRegEx As System.String) as Boolean 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "Delete", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@GroupIdRegEx",DbType.String, clsCommon.GetValueDBNull(GroupIdRegEx), ParameterDirection.Input,100 ))
			pc.Add(New ParamStruct("@UserIdRegEx",DbType.String, clsCommon.GetValueDBNull(UserIdRegEx), ParameterDirection.Input,100 ))
			pc.Add(New ParamStruct("@FileNameRegEx",DbType.String, clsCommon.GetValueDBNull(FileNameRegEx), ParameterDirection.Input,50 ))
			Return (DAL.ExecNonQuery(PP_IF_FT_UploadFileList, CommandType.StoredProcedure, pc,"") > 0)
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Function GetAll(ByVal GroupIdRegEx As System.String, ByVal UserIdRegEx As System.String, ByVal FileNameRegEx As System.String) as DataTable 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			Dim ds As New DataSet
			pc.Add(New ParamStruct("@Action", DbType.String, "GetListData", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@GroupIdRegEx", DbType.String, clsCommon.GetValueDBNull(GroupIdRegEx), ParameterDirection.Input, 100 ))
			pc.Add(New ParamStruct("@UserIdRegEx", DbType.String, clsCommon.GetValueDBNull(UserIdRegEx), ParameterDirection.Input, 100 ))
			pc.Add(New ParamStruct("@FileNameRegEx", DbType.String, clsCommon.GetValueDBNull(FileNameRegEx), ParameterDirection.Input, 50 ))
			ds = DAL.ExecDataSet(PP_IF_FT_UploadFileList, CommandType.StoredProcedure, pc,"")
			Dim keys(2) As DataColumn
			Dim column As DataColumn
			column = ds.Tables(0).Columns("GroupIdRegEx")
			Keys(0) = column
			column = ds.Tables(0).Columns("UserIdRegEx")
			Keys(1) = column
			column = ds.Tables(0).Columns("FileNameRegEx")
			Keys(2) = column
			ds.Tables(0).PrimaryKey = Keys
			Return ds.Tables(0)
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Sub Reset()
		mvarGroupIdRegEx = String.Empty
		mvarUserIdRegEx = String.Empty
		mvarFileNameRegEx = String.Empty
		mvarPath = String.Empty
		mvarCmdPostAction = String.Empty
		mvarDBPostAction = String.Empty
		mvarPriority = 0
	End Sub
	Public Function GetByKey(ByVal GroupIdRegEx As System.String, ByVal UserIdRegEx As System.String, ByVal FileNameRegEx As System.String) as Boolean 
		Dim DAL As DataAccess = m_Dal
		Dim ds As New DataSet 
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "GetData_ByKey", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@GroupIdRegEx", DbType.String, clsCommon.GetValueDBNull(GroupIdRegEx), ParameterDirection.InputOutput, 100 ))
			pc.Add(New ParamStruct("@UserIdRegEx", DbType.String, clsCommon.GetValueDBNull(UserIdRegEx), ParameterDirection.InputOutput, 100 ))
			pc.Add(New ParamStruct("@FileNameRegEx", DbType.String, clsCommon.GetValueDBNull(FileNameRegEx), ParameterDirection.InputOutput, 50 ))
			ds = DAL.ExecDataSet(PP_IF_FT_UploadFileList, CommandType.StoredProcedure, pc,"")
			me.Reset()
			If ds Is Nothing Then
				Return False
			End If
			If ds.Tables(0).Rows.Count > 0 Then
				FillData(ds.Tables(0).Rows(0))
				Return True
			End If
		Catch ex As Exception
			Throw ex 
		End Try
		Return False
	End Function
	Public Sub FillData(row as DataRow)
		mvarGroupIdRegEx =  clsCommon.GetValue(row("GroupIdRegEx"), mvarGroupIdRegEx.GetType().FullName)
		mvarUserIdRegEx =  clsCommon.GetValue(row("UserIdRegEx"), mvarUserIdRegEx.GetType().FullName)
		mvarFileNameRegEx =  clsCommon.GetValue(row("FileNameRegEx"), mvarFileNameRegEx.GetType().FullName)
		mvarPath =  clsCommon.GetValue(row("Path"), mvarPath.GetType().FullName)
		mvarCmdPostAction =  clsCommon.GetValue(row("CmdPostAction"), mvarCmdPostAction.GetType().FullName)
		mvarDBPostAction =  clsCommon.GetValue(row("DBPostAction"), mvarDBPostAction.GetType().FullName)
		mvarPriority =  clsCommon.GetValue(row("Priority"), mvarPriority.GetType().FullName)
	End Sub
#End Region 

#Region "Private Methods"
#End Region 

End Class
