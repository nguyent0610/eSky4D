'-- ------------------------------------------------------------
'-- Class name    :  clsPPC_Wrk_OM_SalesOrdDet1
'-- Created date  :  10/2/2012
'-- Created by    :  
'-- Updated by    :  
'-- Generated by    :  Class Maker v1.0
'-- ------------------------------------------------------------

'-- Import Libraries --
Imports HQFramework.Common
Imports HQFramework.DAL
Public Class clsPPC_Wrk_OM_SalesOrdDet1
#Region "Constants"
	Private Const PP_PPC_Wrk_OM_SalesOrdDet1 As String = "PP_PPC_Wrk_OM_SalesOrdDet1"
#End Region 

#Region "Member Variables"
	Private mvarSlsperID As System.String

	Private mvarOrderNbr As System.String

	Private mvarLineRef As System.String

	Private mvarInvtID As System.String

	Private mvarTotalQty As System.Double

	Private mvarDeliveryQty As System.Double

	Private mvarStatus As System.Int16

	Private mvarReasonCD As System.String

	Private mvarNote As System.String

	Private mvarShipdate As System.DateTime

	Private mvarFeedback As System.String

	Private mvarType As System.String

#End Region 

	Private m_Dal As DataAccess
#Region "Constructors"
	Public Sub New()
		m_Dal = New DataAccess
		Reset()
	End Sub
	Public Sub New(ByVal dal As DataAccess)
		m_Dal = dal
		Reset()
	End Sub
#End Region 

#Region "Public Properties"
	Public Property SlsperID() As System.String
		Get
			Return mvarSlsperID
		End Get
		Set(ByVal Value As System.String)
			mvarSlsperID = Value
		End Set
	End Property

	Public Property OrderNbr() As System.String
		Get
			Return mvarOrderNbr
		End Get
		Set(ByVal Value As System.String)
			mvarOrderNbr = Value
		End Set
	End Property

	Public Property LineRef() As System.String
		Get
			Return mvarLineRef
		End Get
		Set(ByVal Value As System.String)
			mvarLineRef = Value
		End Set
	End Property

	Public Property InvtID() As System.String
		Get
			Return mvarInvtID
		End Get
		Set(ByVal Value As System.String)
			mvarInvtID = Value
		End Set
	End Property

	Public Property TotalQty() As System.Double
		Get
			Return mvarTotalQty
		End Get
		Set(ByVal Value As System.Double)
			mvarTotalQty = Value
		End Set
	End Property

	Public Property DeliveryQty() As System.Double
		Get
			Return mvarDeliveryQty
		End Get
		Set(ByVal Value As System.Double)
			mvarDeliveryQty = Value
		End Set
	End Property

	Public Property Status() As System.Int16
		Get
			Return mvarStatus
		End Get
		Set(ByVal Value As System.Int16)
			mvarStatus = Value
		End Set
	End Property

	Public Property ReasonCD() As System.String
		Get
			Return mvarReasonCD
		End Get
		Set(ByVal Value As System.String)
			mvarReasonCD = Value
		End Set
	End Property

	Public Property Note() As System.String
		Get
			Return mvarNote
		End Get
		Set(ByVal Value As System.String)
			mvarNote = Value
		End Set
	End Property

	Public Property Shipdate() As System.DateTime
		Get
			Return mvarShipdate
		End Get
		Set(ByVal Value As System.DateTime)
			mvarShipdate = Value
		End Set
	End Property

	Public Property Feedback() As System.String
		Get
			Return mvarFeedback
		End Get
		Set(ByVal Value As System.String)
			mvarFeedback = Value
		End Set
	End Property

	Public Property Type() As System.String
		Get
			Return mvarType
		End Get
		Set(ByVal Value As System.String)
			mvarType = Value
		End Set
	End Property

#End Region 

#Region "Public Methods"
	Public Function Add() as Boolean 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "AddNew", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@SlsperID", DbType.String,clsCommon.GetValueDBNull(Me.mvarSlsperID), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@OrderNbr", DbType.String,clsCommon.GetValueDBNull(Me.mvarOrderNbr), ParameterDirection.Input,15 ))
			pc.Add(New ParamStruct("@LineRef", DbType.String,clsCommon.GetValueDBNull(Me.mvarLineRef), ParameterDirection.Input,5 ))
			pc.Add(New ParamStruct("@InvtID", DbType.String,clsCommon.GetValueDBNull(Me.mvarInvtID), ParameterDirection.Input,30 ))
			pc.Add(New ParamStruct("@TotalQty", DbType.Decimal,clsCommon.GetValueDBNull(Me.mvarTotalQty), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@DeliveryQty", DbType.Decimal,clsCommon.GetValueDBNull(Me.mvarDeliveryQty), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@Status", DbType.int16,clsCommon.GetValueDBNull(Me.mvarStatus), ParameterDirection.Input,2 ))
			pc.Add(New ParamStruct("@ReasonCD", DbType.String,clsCommon.GetValueDBNull(Me.mvarReasonCD), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@Note", DbType.String,clsCommon.GetValueDBNull(Me.mvarNote), ParameterDirection.Input,Nothing ))
			pc.Add(New ParamStruct("@Shipdate", DbType.DateTime,clsCommon.GetValueDBNull(Me.mvarShipdate.Date), ParameterDirection.Input,16 ))
			pc.Add(New ParamStruct("@Feedback", DbType.String,clsCommon.GetValueDBNull(Me.mvarFeedback), ParameterDirection.Input,Nothing ))
			pc.Add(New ParamStruct("@Type", DbType.String,clsCommon.GetValueDBNull(Me.mvarType), ParameterDirection.Input,50 ))
			DAL.ExecPreparedSQL(PP_PPC_Wrk_OM_SalesOrdDet1, CommandType.StoredProcedure, pc,"")
		Me.mvarSlsperID = clsCommon.GetValue(pc.Item("@SlsperID").Value, mvarSlsperID.GetType().FullName)
		Return (Me.mvarSlsperID <> String.Empty )
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Function Update() as Boolean 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "Update", ParameterDirection.Input,50 ))
			 pc.Add(New ParamStruct("@SlsperID",DbType.String, clsCommon.GetValueDBNull(me.mvarSlsperID), ParameterDirection.Input,10 ))
			 pc.Add(New ParamStruct("@OrderNbr",DbType.String, clsCommon.GetValueDBNull(me.mvarOrderNbr), ParameterDirection.Input,15 ))
			 pc.Add(New ParamStruct("@LineRef",DbType.String, clsCommon.GetValueDBNull(me.mvarLineRef), ParameterDirection.Input,5 ))
			 pc.Add(New ParamStruct("@InvtID",DbType.String, clsCommon.GetValueDBNull(me.mvarInvtID), ParameterDirection.Input,30 ))
			 pc.Add(New ParamStruct("@TotalQty",DbType.Decimal, clsCommon.GetValueDBNull(me.mvarTotalQty), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@DeliveryQty",DbType.Decimal, clsCommon.GetValueDBNull(me.mvarDeliveryQty), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@Status",DbType.int16, clsCommon.GetValueDBNull(me.mvarStatus), ParameterDirection.Input,2 ))
			 pc.Add(New ParamStruct("@ReasonCD",DbType.String, clsCommon.GetValueDBNull(me.mvarReasonCD), ParameterDirection.Input,10 ))
			 pc.Add(New ParamStruct("@Note",DbType.String, clsCommon.GetValueDBNull(me.mvarNote), ParameterDirection.Input,Nothing ))
			 pc.Add(New ParamStruct("@Shipdate",DbType.DateTime, clsCommon.GetValueDBNull(me.mvarShipdate.Date), ParameterDirection.Input,16 ))
			 pc.Add(New ParamStruct("@Feedback",DbType.String, clsCommon.GetValueDBNull(me.mvarFeedback), ParameterDirection.Input,Nothing ))
			 pc.Add(New ParamStruct("@Type",DbType.String, clsCommon.GetValueDBNull(me.mvarType), ParameterDirection.Input,50 ))
			Return (DAL.ExecNonQuery(PP_PPC_Wrk_OM_SalesOrdDet1, CommandType.StoredProcedure, pc,"") > 0)
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Function Delete(ByVal SlsperID As System.String, ByVal OrderNbr As System.String, ByVal LineRef As System.String) as Boolean 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "Delete", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@SlsperID",DbType.String, clsCommon.GetValueDBNull(SlsperID), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@OrderNbr",DbType.String, clsCommon.GetValueDBNull(OrderNbr), ParameterDirection.Input,15 ))
			pc.Add(New ParamStruct("@LineRef",DbType.String, clsCommon.GetValueDBNull(LineRef), ParameterDirection.Input,5 ))
			Return (DAL.ExecNonQuery(PP_PPC_Wrk_OM_SalesOrdDet1, CommandType.StoredProcedure, pc,"") > 0)
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Function GetAll(ByVal SlsperID As System.String, ByVal OrderNbr As System.String, ByVal LineRef As System.String) as DataTable 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			Dim ds As New DataSet
			pc.Add(New ParamStruct("@Action", DbType.String, "GetListData", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@SlsperID", DbType.String, clsCommon.GetValueDBNull(SlsperID), ParameterDirection.Input, 10 ))
			pc.Add(New ParamStruct("@OrderNbr", DbType.String, clsCommon.GetValueDBNull(OrderNbr), ParameterDirection.Input, 15 ))
			pc.Add(New ParamStruct("@LineRef", DbType.String, clsCommon.GetValueDBNull(LineRef), ParameterDirection.Input, 5 ))
			ds = DAL.ExecDataSet(PP_PPC_Wrk_OM_SalesOrdDet1, CommandType.StoredProcedure, pc,"")
			Dim keys(2) As DataColumn
			Dim column As DataColumn
			column = ds.Tables(0).Columns("SlsperID")
			Keys(0) = column
			column = ds.Tables(0).Columns("OrderNbr")
			Keys(1) = column
			column = ds.Tables(0).Columns("LineRef")
			Keys(2) = column
			ds.Tables(0).PrimaryKey = Keys
			Return ds.Tables(0)
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Sub Reset()
		mvarSlsperID = String.Empty
		mvarOrderNbr = String.Empty
		mvarLineRef = String.Empty
		mvarInvtID = String.Empty
		mvarTotalQty = 0
		mvarDeliveryQty = 0
		mvarStatus = 0
		mvarReasonCD = String.Empty
		mvarNote = String.Empty
		mvarShipdate = Today
		mvarFeedback = String.Empty
		mvarType = String.Empty
	End Sub
	Public Function GetByKey(ByVal SlsperID As System.String, ByVal OrderNbr As System.String, ByVal LineRef As System.String) as Boolean 
		Dim DAL As DataAccess = m_Dal
		Dim ds As New DataSet 
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "GetData_ByKey", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@SlsperID", DbType.String, clsCommon.GetValueDBNull(SlsperID), ParameterDirection.InputOutput, 10 ))
			pc.Add(New ParamStruct("@OrderNbr", DbType.String, clsCommon.GetValueDBNull(OrderNbr), ParameterDirection.InputOutput, 15 ))
			pc.Add(New ParamStruct("@LineRef", DbType.String, clsCommon.GetValueDBNull(LineRef), ParameterDirection.InputOutput, 5 ))
			ds = DAL.ExecDataSet(PP_PPC_Wrk_OM_SalesOrdDet1, CommandType.StoredProcedure, pc,"")
			me.Reset()
			If ds Is Nothing Then
				Return False
			End If
			If ds.Tables(0).Rows.Count > 0 Then
				FillData(ds.Tables(0).Rows(0))
				Return True
			End If
		Catch ex As Exception
			Throw ex 
		End Try
		Return False
	End Function
	Public Sub FillData(row as DataRow)
		mvarSlsperID =  clsCommon.GetValue(row("SlsperID"), mvarSlsperID.GetType().FullName)
		mvarOrderNbr =  clsCommon.GetValue(row("OrderNbr"), mvarOrderNbr.GetType().FullName)
		mvarLineRef =  clsCommon.GetValue(row("LineRef"), mvarLineRef.GetType().FullName)
		mvarInvtID =  clsCommon.GetValue(row("InvtID"), mvarInvtID.GetType().FullName)
		mvarTotalQty =  clsCommon.GetValue(row("TotalQty"), mvarTotalQty.GetType().FullName)
		mvarDeliveryQty =  clsCommon.GetValue(row("DeliveryQty"), mvarDeliveryQty.GetType().FullName)
		mvarStatus =  clsCommon.GetValue(row("Status"), mvarStatus.GetType().FullName)
		mvarReasonCD =  clsCommon.GetValue(row("ReasonCD"), mvarReasonCD.GetType().FullName)
		mvarNote =  clsCommon.GetValue(row("Note"), mvarNote.GetType().FullName)
		mvarShipdate =  clsCommon.GetValue(row("Shipdate"), mvarShipdate.GetType().FullName)
		mvarFeedback =  clsCommon.GetValue(row("Feedback"), mvarFeedback.GetType().FullName)
		mvarType =  clsCommon.GetValue(row("Type"), mvarType.GetType().FullName)
	End Sub
#End Region 

#Region "Private Methods"
#End Region 

End Class
