'-- ------------------------------------------------------------
'-- Class name    :  clsCA_Setup
'-- Created date  :  10/2/2012
'-- Created by    :  
'-- Updated by    :  
'-- Generated by    :  Class Maker v1.0
'-- ------------------------------------------------------------

'-- Import Libraries --
Imports HQFramework.Common
Imports HQFramework.DAL
Public Class clsCA_Setup
#Region "Constants"
	Private Const PP_CA_Setup As String = "PP_CA_Setup"
#End Region 

#Region "Member Variables"
	Private mvarBranchID As System.String

	Private mvarSetUpID As System.String

	Private mvarLastBatNbr As System.String

	Private mvarLastPaymentNbr As System.String

	Private mvarLastReceiptNbr As System.String

	Private mvarPreFixBat As System.String

	Private mvarCrtd_DateTime As System.DateTime

	Private mvarCrtd_Prog As System.String

	Private mvarCrtd_User As System.String

	Private mvarLUpd_DateTime As System.DateTime

	Private mvarLUpd_Prog As System.String

	Private mvarLUpd_User As System.String

	Private mvartstamp As System.String

#End Region 

	Private m_Dal As DataAccess
#Region "Constructors"
	Public Sub New()
		m_Dal = New DataAccess
		Reset()
	End Sub
	Public Sub New(ByVal dal As DataAccess)
		m_Dal = dal
		Reset()
	End Sub
#End Region 

#Region "Public Properties"
	Public Property BranchID() As System.String
		Get
			Return mvarBranchID
		End Get
		Set(ByVal Value As System.String)
			mvarBranchID = Value
		End Set
	End Property

	Public Property SetUpID() As System.String
		Get
			Return mvarSetUpID
		End Get
		Set(ByVal Value As System.String)
			mvarSetUpID = Value
		End Set
	End Property

	Public Property LastBatNbr() As System.String
		Get
			Return mvarLastBatNbr
		End Get
		Set(ByVal Value As System.String)
			mvarLastBatNbr = Value
		End Set
	End Property

	Public Property LastPaymentNbr() As System.String
		Get
			Return mvarLastPaymentNbr
		End Get
		Set(ByVal Value As System.String)
			mvarLastPaymentNbr = Value
		End Set
	End Property

	Public Property LastReceiptNbr() As System.String
		Get
			Return mvarLastReceiptNbr
		End Get
		Set(ByVal Value As System.String)
			mvarLastReceiptNbr = Value
		End Set
	End Property

	Public Property PreFixBat() As System.String
		Get
			Return mvarPreFixBat
		End Get
		Set(ByVal Value As System.String)
			mvarPreFixBat = Value
		End Set
	End Property

	Public Property Crtd_DateTime() As System.DateTime
		Get
			Return mvarCrtd_DateTime
		End Get
		Set(ByVal Value As System.DateTime)
			mvarCrtd_DateTime = Value
		End Set
	End Property

	Public Property Crtd_Prog() As System.String
		Get
			Return mvarCrtd_Prog
		End Get
		Set(ByVal Value As System.String)
			mvarCrtd_Prog = Value
		End Set
	End Property

	Public Property Crtd_User() As System.String
		Get
			Return mvarCrtd_User
		End Get
		Set(ByVal Value As System.String)
			mvarCrtd_User = Value
		End Set
	End Property

	Public Property LUpd_DateTime() As System.DateTime
		Get
			Return mvarLUpd_DateTime
		End Get
		Set(ByVal Value As System.DateTime)
			mvarLUpd_DateTime = Value
		End Set
	End Property

	Public Property LUpd_Prog() As System.String
		Get
			Return mvarLUpd_Prog
		End Get
		Set(ByVal Value As System.String)
			mvarLUpd_Prog = Value
		End Set
	End Property

	Public Property LUpd_User() As System.String
		Get
			Return mvarLUpd_User
		End Get
		Set(ByVal Value As System.String)
			mvarLUpd_User = Value
		End Set
	End Property

	Public Property tstamp() As System.String
		Get
			Return mvartstamp
		End Get
		Set(ByVal Value As System.String)
			mvartstamp = Value
		End Set
	End Property

#End Region 

#Region "Public Methods"
	Public Function Add() as Boolean 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "AddNew", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@BranchID", DbType.String,clsCommon.GetValueDBNull(Me.mvarBranchID), ParameterDirection.Input,30 ))
			pc.Add(New ParamStruct("@SetUpID", DbType.String,clsCommon.GetValueDBNull(Me.mvarSetUpID), ParameterDirection.Input,2 ))
			pc.Add(New ParamStruct("@LastBatNbr", DbType.String,clsCommon.GetValueDBNull(Me.mvarLastBatNbr), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@LastPaymentNbr", DbType.String,clsCommon.GetValueDBNull(Me.mvarLastPaymentNbr), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@LastReceiptNbr", DbType.String,clsCommon.GetValueDBNull(Me.mvarLastReceiptNbr), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@PreFixBat", DbType.String,clsCommon.GetValueDBNull(Me.mvarPreFixBat), ParameterDirection.Input,2 ))
			pc.Add(New ParamStruct("@Crtd_DateTime", DbType.DateTime,clsCommon.GetValueDBNull(Me.mvarCrtd_DateTime), ParameterDirection.Input,16 ))
			pc.Add(New ParamStruct("@Crtd_Prog", DbType.String,clsCommon.GetValueDBNull(Me.mvarCrtd_Prog), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@Crtd_User", DbType.String,clsCommon.GetValueDBNull(Me.mvarCrtd_User), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@LUpd_DateTime", DbType.DateTime,clsCommon.GetValueDBNull(Me.mvarLUpd_DateTime), ParameterDirection.Input,16 ))
			pc.Add(New ParamStruct("@LUpd_Prog", DbType.String,clsCommon.GetValueDBNull(Me.mvarLUpd_Prog), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@LUpd_User", DbType.String,clsCommon.GetValueDBNull(Me.mvarLUpd_User), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@tstamp", DbType.String,clsCommon.GetValueDBNull(Me.mvartstamp), ParameterDirection.Input,18 ))
			DAL.ExecPreparedSQL(PP_CA_Setup, CommandType.StoredProcedure, pc,"")
		Me.mvarBranchID = clsCommon.GetValue(pc.Item("@BranchID").Value, mvarBranchID.GetType().FullName)
		Return (Me.mvarBranchID <> String.Empty )
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Function Update() as Boolean 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "Update", ParameterDirection.Input,50 ))
			 pc.Add(New ParamStruct("@BranchID",DbType.String, clsCommon.GetValueDBNull(me.mvarBranchID), ParameterDirection.Input,30 ))
			 pc.Add(New ParamStruct("@SetUpID",DbType.String, clsCommon.GetValueDBNull(me.mvarSetUpID), ParameterDirection.Input,2 ))
			 pc.Add(New ParamStruct("@LastBatNbr",DbType.String, clsCommon.GetValueDBNull(me.mvarLastBatNbr), ParameterDirection.Input,10 ))
			 pc.Add(New ParamStruct("@LastPaymentNbr",DbType.String, clsCommon.GetValueDBNull(me.mvarLastPaymentNbr), ParameterDirection.Input,10 ))
			 pc.Add(New ParamStruct("@LastReceiptNbr",DbType.String, clsCommon.GetValueDBNull(me.mvarLastReceiptNbr), ParameterDirection.Input,10 ))
			 pc.Add(New ParamStruct("@PreFixBat",DbType.String, clsCommon.GetValueDBNull(me.mvarPreFixBat), ParameterDirection.Input,2 ))
			 pc.Add(New ParamStruct("@Crtd_DateTime",DbType.DateTime, clsCommon.GetValueDBNull(me.mvarCrtd_DateTime), ParameterDirection.Input,16 ))
			 pc.Add(New ParamStruct("@Crtd_Prog",DbType.String, clsCommon.GetValueDBNull(me.mvarCrtd_Prog), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@Crtd_User",DbType.String, clsCommon.GetValueDBNull(me.mvarCrtd_User), ParameterDirection.Input,10 ))
			 pc.Add(New ParamStruct("@LUpd_DateTime",DbType.DateTime, clsCommon.GetValueDBNull(me.mvarLUpd_DateTime), ParameterDirection.Input,16 ))
			 pc.Add(New ParamStruct("@LUpd_Prog",DbType.String, clsCommon.GetValueDBNull(me.mvarLUpd_Prog), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@LUpd_User",DbType.String, clsCommon.GetValueDBNull(me.mvarLUpd_User), ParameterDirection.Input,10 ))
			 pc.Add(New ParamStruct("@tstamp",DbType.String, clsCommon.GetValueDBNull(me.mvartstamp), ParameterDirection.Input,18 ))
			Return (DAL.ExecNonQuery(PP_CA_Setup, CommandType.StoredProcedure, pc,"") > 0)
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Function Delete(ByVal BranchID As System.String, ByVal SetUpID As System.String) as Boolean 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "Delete", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@BranchID",DbType.String, clsCommon.GetValueDBNull(BranchID), ParameterDirection.Input,30 ))
			pc.Add(New ParamStruct("@SetUpID",DbType.String, clsCommon.GetValueDBNull(SetUpID), ParameterDirection.Input,2 ))
			Return (DAL.ExecNonQuery(PP_CA_Setup, CommandType.StoredProcedure, pc,"") > 0)
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Function GetAll(ByVal BranchID As System.String, ByVal SetUpID As System.String) as DataTable 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			Dim ds As New DataSet
			pc.Add(New ParamStruct("@Action", DbType.String, "GetListData", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@BranchID", DbType.String, clsCommon.GetValueDBNull(BranchID), ParameterDirection.Input, 30 ))
			pc.Add(New ParamStruct("@SetUpID", DbType.String, clsCommon.GetValueDBNull(SetUpID), ParameterDirection.Input, 2 ))
			ds = DAL.ExecDataSet(PP_CA_Setup, CommandType.StoredProcedure, pc,"")
			Dim keys(1) As DataColumn
			Dim column As DataColumn
			column = ds.Tables(0).Columns("BranchID")
			Keys(0) = column
			column = ds.Tables(0).Columns("SetUpID")
			Keys(1) = column
			ds.Tables(0).PrimaryKey = Keys
			Return ds.Tables(0)
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Sub Reset()
		mvarBranchID = String.Empty
		mvarSetUpID = String.Empty
		mvarLastBatNbr = String.Empty
		mvarLastPaymentNbr = String.Empty
		mvarLastReceiptNbr = String.Empty
		mvarPreFixBat = String.Empty
		mvarCrtd_DateTime = Today
		mvarCrtd_Prog = String.Empty
		mvarCrtd_User = String.Empty
		mvarLUpd_DateTime = Today
		mvarLUpd_Prog = String.Empty
		mvarLUpd_User = String.Empty
		mvartstamp = String.Empty
	End Sub
	Public Function GetByKey(ByVal BranchID As System.String, ByVal SetUpID As System.String) as Boolean 
		Dim DAL As DataAccess = m_Dal
		Dim ds As New DataSet 
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "GetData_ByKey", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@BranchID", DbType.String, clsCommon.GetValueDBNull(BranchID), ParameterDirection.InputOutput, 30 ))
			pc.Add(New ParamStruct("@SetUpID", DbType.String, clsCommon.GetValueDBNull(SetUpID), ParameterDirection.InputOutput, 2 ))
			ds = DAL.ExecDataSet(PP_CA_Setup, CommandType.StoredProcedure, pc,"")
			me.Reset()
			If ds Is Nothing Then
				Return False
			End If
			If ds.Tables(0).Rows.Count > 0 Then
				FillData(ds.Tables(0).Rows(0))
				Return True
			End If
		Catch ex As Exception
			Throw ex 
		End Try
		Return False
	End Function
	Public Sub FillData(row as DataRow)
		mvarBranchID =  clsCommon.GetValue(row("BranchID"), mvarBranchID.GetType().FullName)
		mvarSetUpID =  clsCommon.GetValue(row("SetUpID"), mvarSetUpID.GetType().FullName)
		mvarLastBatNbr =  clsCommon.GetValue(row("LastBatNbr"), mvarLastBatNbr.GetType().FullName)
		mvarLastPaymentNbr =  clsCommon.GetValue(row("LastPaymentNbr"), mvarLastPaymentNbr.GetType().FullName)
		mvarLastReceiptNbr =  clsCommon.GetValue(row("LastReceiptNbr"), mvarLastReceiptNbr.GetType().FullName)
		mvarPreFixBat =  clsCommon.GetValue(row("PreFixBat"), mvarPreFixBat.GetType().FullName)
		mvarCrtd_DateTime =  clsCommon.GetValue(row("Crtd_DateTime"), mvarCrtd_DateTime.GetType().FullName)
		mvarCrtd_Prog =  clsCommon.GetValue(row("Crtd_Prog"), mvarCrtd_Prog.GetType().FullName)
		mvarCrtd_User =  clsCommon.GetValue(row("Crtd_User"), mvarCrtd_User.GetType().FullName)
		mvarLUpd_DateTime =  clsCommon.GetValue(row("LUpd_DateTime"), mvarLUpd_DateTime.GetType().FullName)
		mvarLUpd_Prog =  clsCommon.GetValue(row("LUpd_Prog"), mvarLUpd_Prog.GetType().FullName)
		mvarLUpd_User =  clsCommon.GetValue(row("LUpd_User"), mvarLUpd_User.GetType().FullName)
		mvartstamp =  clsCommon.GetValue(row("tstamp"), mvartstamp.GetType().FullName)
	End Sub
#End Region 

#Region "Private Methods"
#End Region 

End Class
