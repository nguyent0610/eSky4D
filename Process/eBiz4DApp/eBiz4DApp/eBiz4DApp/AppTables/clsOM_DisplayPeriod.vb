'-- ------------------------------------------------------------
'-- Class name    :  clsOM_DisplayPeriod
'-- Created date  :  5/6/2013
'-- Created by    :  
'-- Updated by    :  
'-- Generated by    :  Class Maker v1.0
'-- ------------------------------------------------------------

'-- Import Libraries --
Imports HQFramework.Common
Imports HQFramework.DAL
Public Class clsOM_DisplayPeriod
#Region "Constants"
	Private Const PP_OM_DisplayPeriod As String = "PP_OM_DisplayPeriod"
#End Region 

#Region "Member Variables"
	Private mvarDisplayID As System.String

	Private mvarPeriod As System.Int32

	Private mvarStartDateCheck As System.DateTime

	Private mvarEndDateCheck As System.DateTime

	Private mvarStartDateReward As System.DateTime

	Private mvarEndDateReward As System.DateTime

	Private mvarStartDateDisplay As System.DateTime

	Private mvarEndDateDisplay As System.DateTime

	Private mvarTotAmt As System.Double

	Private mvarCrtd_DateTime As System.DateTime

	Private mvarCrtd_Prog As System.String

	Private mvarCrtd_User As System.String

	Private mvarLUpd_DateTime As System.DateTime

	Private mvarLUpd_Prog As System.String

	Private mvarLUpd_User As System.String

	Private mvartstamp As System.String

#End Region 

	Private m_Dal As DataAccess
#Region "Constructors"
	Public Sub New()
		m_Dal = New DataAccess
		Reset()
	End Sub
	Public Sub New(ByVal dal As DataAccess)
		m_Dal = dal
		Reset()
	End Sub
#End Region 

#Region "Public Properties"
	Public Property DisplayID() As System.String
		Get
			Return mvarDisplayID
		End Get
		Set(ByVal Value As System.String)
			mvarDisplayID = Value
		End Set
	End Property

	Public Property Period() As System.Int32
		Get
			Return mvarPeriod
		End Get
		Set(ByVal Value As System.Int32)
			mvarPeriod = Value
		End Set
	End Property

	Public Property StartDateCheck() As System.DateTime
		Get
			Return mvarStartDateCheck
		End Get
		Set(ByVal Value As System.DateTime)
			mvarStartDateCheck = Value
		End Set
	End Property

	Public Property EndDateCheck() As System.DateTime
		Get
			Return mvarEndDateCheck
		End Get
		Set(ByVal Value As System.DateTime)
			mvarEndDateCheck = Value
		End Set
	End Property

	Public Property StartDateReward() As System.DateTime
		Get
			Return mvarStartDateReward
		End Get
		Set(ByVal Value As System.DateTime)
			mvarStartDateReward = Value
		End Set
	End Property

	Public Property EndDateReward() As System.DateTime
		Get
			Return mvarEndDateReward
		End Get
		Set(ByVal Value As System.DateTime)
			mvarEndDateReward = Value
		End Set
	End Property

	Public Property StartDateDisplay() As System.DateTime
		Get
			Return mvarStartDateDisplay
		End Get
		Set(ByVal Value As System.DateTime)
			mvarStartDateDisplay = Value
		End Set
	End Property

	Public Property EndDateDisplay() As System.DateTime
		Get
			Return mvarEndDateDisplay
		End Get
		Set(ByVal Value As System.DateTime)
			mvarEndDateDisplay = Value
		End Set
	End Property

	Public Property TotAmt() As System.Double
		Get
			Return mvarTotAmt
		End Get
		Set(ByVal Value As System.Double)
			mvarTotAmt = Value
		End Set
	End Property

	Public Property Crtd_DateTime() As System.DateTime
		Get
			Return mvarCrtd_DateTime
		End Get
		Set(ByVal Value As System.DateTime)
			mvarCrtd_DateTime = Value
		End Set
	End Property

	Public Property Crtd_Prog() As System.String
		Get
			Return mvarCrtd_Prog
		End Get
		Set(ByVal Value As System.String)
			mvarCrtd_Prog = Value
		End Set
	End Property

	Public Property Crtd_User() As System.String
		Get
			Return mvarCrtd_User
		End Get
		Set(ByVal Value As System.String)
			mvarCrtd_User = Value
		End Set
	End Property

	Public Property LUpd_DateTime() As System.DateTime
		Get
			Return mvarLUpd_DateTime
		End Get
		Set(ByVal Value As System.DateTime)
			mvarLUpd_DateTime = Value
		End Set
	End Property

	Public Property LUpd_Prog() As System.String
		Get
			Return mvarLUpd_Prog
		End Get
		Set(ByVal Value As System.String)
			mvarLUpd_Prog = Value
		End Set
	End Property

	Public Property LUpd_User() As System.String
		Get
			Return mvarLUpd_User
		End Get
		Set(ByVal Value As System.String)
			mvarLUpd_User = Value
		End Set
	End Property

	Public Property tstamp() As System.String
		Get
			Return mvartstamp
		End Get
		Set(ByVal Value As System.String)
			mvartstamp = Value
		End Set
	End Property

#End Region 

#Region "Public Methods"
	Public Function Add() as Boolean 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "AddNew", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@DisplayID", DbType.String,clsCommon.GetValueDBNull(Me.mvarDisplayID), ParameterDirection.Input,30 ))
			pc.Add(New ParamStruct("@Period", DbType.int32,clsCommon.GetValueDBNull(Me.mvarPeriod), ParameterDirection.Input,4 ))
			pc.Add(New ParamStruct("@StartDateCheck", DbType.DateTime,clsCommon.GetValueDBNull(Me.mvarStartDateCheck), ParameterDirection.Input,16 ))
			pc.Add(New ParamStruct("@EndDateCheck", DbType.DateTime,clsCommon.GetValueDBNull(Me.mvarEndDateCheck), ParameterDirection.Input,16 ))
			pc.Add(New ParamStruct("@StartDateReward", DbType.DateTime,clsCommon.GetValueDBNull(Me.mvarStartDateReward), ParameterDirection.Input,16 ))
			pc.Add(New ParamStruct("@EndDateReward", DbType.DateTime,clsCommon.GetValueDBNull(Me.mvarEndDateReward), ParameterDirection.Input,16 ))
			pc.Add(New ParamStruct("@StartDateDisplay", DbType.DateTime,clsCommon.GetValueDBNull(Me.mvarStartDateDisplay), ParameterDirection.Input,16 ))
			pc.Add(New ParamStruct("@EndDateDisplay", DbType.DateTime,clsCommon.GetValueDBNull(Me.mvarEndDateDisplay), ParameterDirection.Input,16 ))
			pc.Add(New ParamStruct("@TotAmt", DbType.Decimal,clsCommon.GetValueDBNull(Me.mvarTotAmt), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@Crtd_DateTime", DbType.DateTime,clsCommon.GetValueDBNull(Me.mvarCrtd_DateTime), ParameterDirection.Input,16 ))
			pc.Add(New ParamStruct("@Crtd_Prog", DbType.String,clsCommon.GetValueDBNull(Me.mvarCrtd_Prog), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@Crtd_User", DbType.String,clsCommon.GetValueDBNull(Me.mvarCrtd_User), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@LUpd_DateTime", DbType.DateTime,clsCommon.GetValueDBNull(Me.mvarLUpd_DateTime), ParameterDirection.Input,16 ))
			pc.Add(New ParamStruct("@LUpd_Prog", DbType.String,clsCommon.GetValueDBNull(Me.mvarLUpd_Prog), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@LUpd_User", DbType.String,clsCommon.GetValueDBNull(Me.mvarLUpd_User), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@tstamp", DbType.String,clsCommon.GetValueDBNull(Me.mvartstamp), ParameterDirection.Input,18 ))
			DAL.ExecPreparedSQL(PP_OM_DisplayPeriod, CommandType.StoredProcedure, pc,"")
		Me.mvarDisplayID = clsCommon.GetValue(pc.Item("@DisplayID").Value, mvarDisplayID.GetType().FullName)
		Return (Me.mvarDisplayID <> String.Empty )
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Function Update() as Boolean 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "Update", ParameterDirection.Input,50 ))
			 pc.Add(New ParamStruct("@DisplayID",DbType.String, clsCommon.GetValueDBNull(me.mvarDisplayID), ParameterDirection.Input,30 ))
			 pc.Add(New ParamStruct("@Period",DbType.int32, clsCommon.GetValueDBNull(me.mvarPeriod), ParameterDirection.Input,4 ))
			 pc.Add(New ParamStruct("@StartDateCheck",DbType.DateTime, clsCommon.GetValueDBNull(me.mvarStartDateCheck), ParameterDirection.Input,16 ))
			 pc.Add(New ParamStruct("@EndDateCheck",DbType.DateTime, clsCommon.GetValueDBNull(me.mvarEndDateCheck), ParameterDirection.Input,16 ))
			 pc.Add(New ParamStruct("@StartDateReward",DbType.DateTime, clsCommon.GetValueDBNull(me.mvarStartDateReward), ParameterDirection.Input,16 ))
			 pc.Add(New ParamStruct("@EndDateReward",DbType.DateTime, clsCommon.GetValueDBNull(me.mvarEndDateReward), ParameterDirection.Input,16 ))
			 pc.Add(New ParamStruct("@StartDateDisplay",DbType.DateTime, clsCommon.GetValueDBNull(me.mvarStartDateDisplay), ParameterDirection.Input,16 ))
			 pc.Add(New ParamStruct("@EndDateDisplay",DbType.DateTime, clsCommon.GetValueDBNull(me.mvarEndDateDisplay), ParameterDirection.Input,16 ))
			 pc.Add(New ParamStruct("@TotAmt",DbType.Decimal, clsCommon.GetValueDBNull(me.mvarTotAmt), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@Crtd_DateTime",DbType.DateTime, clsCommon.GetValueDBNull(me.mvarCrtd_DateTime), ParameterDirection.Input,16 ))
			 pc.Add(New ParamStruct("@Crtd_Prog",DbType.String, clsCommon.GetValueDBNull(me.mvarCrtd_Prog), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@Crtd_User",DbType.String, clsCommon.GetValueDBNull(me.mvarCrtd_User), ParameterDirection.Input,10 ))
			 pc.Add(New ParamStruct("@LUpd_DateTime",DbType.DateTime, clsCommon.GetValueDBNull(me.mvarLUpd_DateTime), ParameterDirection.Input,16 ))
			 pc.Add(New ParamStruct("@LUpd_Prog",DbType.String, clsCommon.GetValueDBNull(me.mvarLUpd_Prog), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@LUpd_User",DbType.String, clsCommon.GetValueDBNull(me.mvarLUpd_User), ParameterDirection.Input,10 ))
			 pc.Add(New ParamStruct("@tstamp",DbType.String, clsCommon.GetValueDBNull(me.mvartstamp), ParameterDirection.Input,18 ))
			Return (DAL.ExecNonQuery(PP_OM_DisplayPeriod, CommandType.StoredProcedure, pc,"") > 0)
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Function Delete(ByVal DisplayID As System.String, ByVal Period As System.Int32) as Boolean 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "Delete", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@DisplayID",DbType.String, clsCommon.GetValueDBNull(DisplayID), ParameterDirection.Input,30 ))
			pc.Add(New ParamStruct("@Period",DbType.int32, clsCommon.GetValueDBNull(Period), ParameterDirection.Input,4 ))
			Return (DAL.ExecNonQuery(PP_OM_DisplayPeriod, CommandType.StoredProcedure, pc,"") > 0)
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Function GetAll(ByVal DisplayID As System.String, ByVal Period As System.Int32) as DataTable 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			Dim ds As New DataSet
			pc.Add(New ParamStruct("@Action", DbType.String, "GetListData", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@DisplayID", DbType.String, clsCommon.GetValueDBNull(DisplayID), ParameterDirection.Input, 30 ))
			pc.Add(New ParamStruct("@Period", DbType.int32, clsCommon.GetValueDBNull(Period), ParameterDirection.Input, 4 ))
			ds = DAL.ExecDataSet(PP_OM_DisplayPeriod, CommandType.StoredProcedure, pc,"")
			Dim keys(1) As DataColumn
			Dim column As DataColumn
			column = ds.Tables(0).Columns("DisplayID")
			Keys(0) = column
			column = ds.Tables(0).Columns("Period")
			Keys(1) = column
			ds.Tables(0).PrimaryKey = Keys
			Return ds.Tables(0)
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Sub Reset()
		mvarDisplayID = String.Empty
		mvarPeriod = 0
		mvarStartDateCheck = Today
		mvarEndDateCheck = Today
		mvarStartDateReward = Today
		mvarEndDateReward = Today
		mvarStartDateDisplay = Today
		mvarEndDateDisplay = Today
		mvarTotAmt = 0
		mvarCrtd_DateTime = Today
		mvarCrtd_Prog = String.Empty
		mvarCrtd_User = String.Empty
		mvarLUpd_DateTime = Today
		mvarLUpd_Prog = String.Empty
		mvarLUpd_User = String.Empty
		mvartstamp = String.Empty
	End Sub
	Public Function GetByKey(ByVal DisplayID As System.String, ByVal Period As System.Int32) as Boolean 
		Dim DAL As DataAccess = m_Dal
		Dim ds As New DataSet 
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "GetData_ByKey", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@DisplayID", DbType.String, clsCommon.GetValueDBNull(DisplayID), ParameterDirection.InputOutput, 30 ))
			pc.Add(New ParamStruct("@Period", DbType.int32, clsCommon.GetValueDBNull(Period), ParameterDirection.InputOutput, 4 ))
			ds = DAL.ExecDataSet(PP_OM_DisplayPeriod, CommandType.StoredProcedure, pc,"")
			me.Reset()
			If ds Is Nothing Then
				Return False
			End If
			If ds.Tables(0).Rows.Count > 0 Then
				FillData(ds.Tables(0).Rows(0))
				Return True
			End If
		Catch ex As Exception
			Throw ex 
		End Try
		Return False
	End Function
	Public Sub FillData(row as DataRow)
		mvarDisplayID =  clsCommon.GetValue(row("DisplayID"), mvarDisplayID.GetType().FullName)
		mvarPeriod =  clsCommon.GetValue(row("Period"), mvarPeriod.GetType().FullName)
		mvarStartDateCheck =  clsCommon.GetValue(row("StartDateCheck"), mvarStartDateCheck.GetType().FullName)
		mvarEndDateCheck =  clsCommon.GetValue(row("EndDateCheck"), mvarEndDateCheck.GetType().FullName)
		mvarStartDateReward =  clsCommon.GetValue(row("StartDateReward"), mvarStartDateReward.GetType().FullName)
		mvarEndDateReward =  clsCommon.GetValue(row("EndDateReward"), mvarEndDateReward.GetType().FullName)
		mvarStartDateDisplay =  clsCommon.GetValue(row("StartDateDisplay"), mvarStartDateDisplay.GetType().FullName)
		mvarEndDateDisplay =  clsCommon.GetValue(row("EndDateDisplay"), mvarEndDateDisplay.GetType().FullName)
		mvarTotAmt =  clsCommon.GetValue(row("TotAmt"), mvarTotAmt.GetType().FullName)
		mvarCrtd_DateTime =  clsCommon.GetValue(row("Crtd_DateTime"), mvarCrtd_DateTime.GetType().FullName)
		mvarCrtd_Prog =  clsCommon.GetValue(row("Crtd_Prog"), mvarCrtd_Prog.GetType().FullName)
		mvarCrtd_User =  clsCommon.GetValue(row("Crtd_User"), mvarCrtd_User.GetType().FullName)
		mvarLUpd_DateTime =  clsCommon.GetValue(row("LUpd_DateTime"), mvarLUpd_DateTime.GetType().FullName)
		mvarLUpd_Prog =  clsCommon.GetValue(row("LUpd_Prog"), mvarLUpd_Prog.GetType().FullName)
		mvarLUpd_User =  clsCommon.GetValue(row("LUpd_User"), mvarLUpd_User.GetType().FullName)
		mvartstamp =  clsCommon.GetValue(row("tstamp"), mvartstamp.GetType().FullName)
	End Sub
#End Region 

#Region "Private Methods"
#End Region 

End Class
