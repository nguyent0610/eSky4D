'-- ------------------------------------------------------------
'-- Class name    :  clsIF_SM_Wrk
'-- Created date  :  10/2/2012
'-- Created by    :  
'-- Updated by    :  
'-- Generated by    :  Class Maker v1.0
'-- ------------------------------------------------------------

'-- Import Libraries --
Imports HQFramework.Common
Imports HQFramework.DAL
Public Class clsIF_SM_Wrk
#Region "Constants"
	Private Const PP_IF_SM_Wrk As String = "PP_IF_SM_Wrk"
#End Region 

#Region "Member Variables"
	Private mvarMailID As System.Int32

	Private mvarUsrID As System.String

#End Region 

	Private m_Dal As DataAccess
#Region "Constructors"
	Public Sub New()
		m_Dal = New DataAccess
		Reset()
	End Sub
	Public Sub New(ByVal dal As DataAccess)
		m_Dal = dal
		Reset()
	End Sub
#End Region 

#Region "Public Properties"
	Public Property MailID() As System.Int32
		Get
			Return mvarMailID
		End Get
		Set(ByVal Value As System.Int32)
			mvarMailID = Value
		End Set
	End Property

	Public Property UsrID() As System.String
		Get
			Return mvarUsrID
		End Get
		Set(ByVal Value As System.String)
			mvarUsrID = Value
		End Set
	End Property

#End Region 

#Region "Public Methods"
	Public Function Add() as Boolean 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "AddNew", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@MailID", DbType.int32,clsCommon.GetValueDBNull(Me.mvarMailID), ParameterDirection.Input,4 ))
			pc.Add(New ParamStruct("@UsrID", DbType.String,clsCommon.GetValueDBNull(Me.mvarUsrID), ParameterDirection.Input,10 ))
			DAL.ExecPreparedSQL(PP_IF_SM_Wrk, CommandType.StoredProcedure, pc,"")
		Me.mvarMailID = clsCommon.GetValue(pc.Item("@MailID").Value, mvarMailID.GetType().FullName)
		Return True
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Function Update() as Boolean 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "Update", ParameterDirection.Input,50 ))
			 pc.Add(New ParamStruct("@MailID",DbType.int32, clsCommon.GetValueDBNull(me.mvarMailID), ParameterDirection.Input,4 ))
			 pc.Add(New ParamStruct("@UsrID",DbType.String, clsCommon.GetValueDBNull(me.mvarUsrID), ParameterDirection.Input,10 ))
			Return (DAL.ExecNonQuery(PP_IF_SM_Wrk, CommandType.StoredProcedure, pc,"") > 0)
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Function Delete(ByVal MailID As System.Int32, ByVal UsrID As System.String) as Boolean 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "Delete", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@MailID",DbType.int32, clsCommon.GetValueDBNull(MailID), ParameterDirection.Input,4 ))
			pc.Add(New ParamStruct("@UsrID",DbType.String, clsCommon.GetValueDBNull(UsrID), ParameterDirection.Input,10 ))
			Return (DAL.ExecNonQuery(PP_IF_SM_Wrk, CommandType.StoredProcedure, pc,"") > 0)
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Function GetAll(ByVal MailID As System.Int32, ByVal UsrID As System.String) as DataTable 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			Dim ds As New DataSet
			pc.Add(New ParamStruct("@Action", DbType.String, "GetListData", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@MailID", DbType.int32, clsCommon.GetValueDBNull(MailID), ParameterDirection.Input, 4 ))
			pc.Add(New ParamStruct("@UsrID", DbType.String, clsCommon.GetValueDBNull(UsrID), ParameterDirection.Input, 10 ))
			ds = DAL.ExecDataSet(PP_IF_SM_Wrk, CommandType.StoredProcedure, pc,"")
			Dim keys(1) As DataColumn
			Dim column As DataColumn
			column = ds.Tables(0).Columns("MailID")
			Keys(0) = column
			column = ds.Tables(0).Columns("UsrID")
			Keys(1) = column
			ds.Tables(0).PrimaryKey = Keys
			Return ds.Tables(0)
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Sub Reset()
		mvarMailID = 0
		mvarUsrID = String.Empty
	End Sub
	Public Function GetByKey(ByVal MailID As System.Int32, ByVal UsrID As System.String) as Boolean 
		Dim DAL As DataAccess = m_Dal
		Dim ds As New DataSet 
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "GetData_ByKey", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@MailID", DbType.int32, clsCommon.GetValueDBNull(MailID), ParameterDirection.InputOutput, 4 ))
			pc.Add(New ParamStruct("@UsrID", DbType.String, clsCommon.GetValueDBNull(UsrID), ParameterDirection.InputOutput, 10 ))
			ds = DAL.ExecDataSet(PP_IF_SM_Wrk, CommandType.StoredProcedure, pc,"")
			me.Reset()
			If ds Is Nothing Then
				Return False
			End If
			If ds.Tables(0).Rows.Count > 0 Then
				FillData(ds.Tables(0).Rows(0))
				Return True
			End If
		Catch ex As Exception
			Throw ex 
		End Try
		Return False
	End Function
	Public Sub FillData(row as DataRow)
		mvarMailID =  clsCommon.GetValue(row("MailID"), mvarMailID.GetType().FullName)
		mvarUsrID =  clsCommon.GetValue(row("UsrID"), mvarUsrID.GetType().FullName)
	End Sub
#End Region 

#Region "Private Methods"
#End Region 

End Class
