'-- ------------------------------------------------------------
'-- Class name    :  clsIF_IE_Setup
'-- Created date  :  10/2/2012
'-- Created by    :  
'-- Updated by    :  
'-- Generated by    :  Class Maker v1.0
'-- ------------------------------------------------------------

'-- Import Libraries --
Imports HQFramework.Common
Imports HQFramework.DAL
Public Class clsIF_IE_Setup
#Region "Constants"
	Private Const PP_IF_IE_Setup As String = "PP_IF_IE_Setup"
#End Region 

#Region "Member Variables"
	Private mvarSetupID As System.String

	Private mvarScanTime As System.Int32

	Private mvarServerName As System.String

	Private mvarRunTime As System.Int32

	Private mvarHostName As System.String

	Private mvarExpNewData As System.Boolean

	Private mvarIsAlert As System.Boolean

#End Region 

	Private m_Dal As DataAccess
#Region "Constructors"
	Public Sub New()
		m_Dal = New DataAccess
		Reset()
	End Sub
	Public Sub New(ByVal dal As DataAccess)
		m_Dal = dal
		Reset()
	End Sub
#End Region 

#Region "Public Properties"
	Public Property SetupID() As System.String
		Get
			Return mvarSetupID
		End Get
		Set(ByVal Value As System.String)
			mvarSetupID = Value
		End Set
	End Property

	Public Property ScanTime() As System.Int32
		Get
			Return mvarScanTime
		End Get
		Set(ByVal Value As System.Int32)
			mvarScanTime = Value
		End Set
	End Property

	Public Property ServerName() As System.String
		Get
			Return mvarServerName
		End Get
		Set(ByVal Value As System.String)
			mvarServerName = Value
		End Set
	End Property

	Public Property RunTime() As System.Int32
		Get
			Return mvarRunTime
		End Get
		Set(ByVal Value As System.Int32)
			mvarRunTime = Value
		End Set
	End Property

	Public Property HostName() As System.String
		Get
			Return mvarHostName
		End Get
		Set(ByVal Value As System.String)
			mvarHostName = Value
		End Set
	End Property

	Public Property ExpNewData() As System.Boolean
		Get
			Return mvarExpNewData
		End Get
		Set(ByVal Value As System.Boolean)
			mvarExpNewData = Value
		End Set
	End Property

	Public Property IsAlert() As System.Boolean
		Get
			Return mvarIsAlert
		End Get
		Set(ByVal Value As System.Boolean)
			mvarIsAlert = Value
		End Set
	End Property

#End Region 

#Region "Public Methods"
	Public Function Add() as Boolean 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "AddNew", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@SetupID", DbType.String,clsCommon.GetValueDBNull(Me.mvarSetupID), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@ScanTime", DbType.int32,clsCommon.GetValueDBNull(Me.mvarScanTime), ParameterDirection.Input,4 ))
			pc.Add(New ParamStruct("@ServerName", DbType.String,clsCommon.GetValueDBNull(Me.mvarServerName), ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@RunTime", DbType.int32,clsCommon.GetValueDBNull(Me.mvarRunTime), ParameterDirection.Input,4 ))
			pc.Add(New ParamStruct("@HostName", DbType.String,clsCommon.GetValueDBNull(Me.mvarHostName), ParameterDirection.Input,21 ))
			pc.Add(New ParamStruct("@ExpNewData", DbType.Boolean,clsCommon.GetValueDBNull(Me.mvarExpNewData), ParameterDirection.Input,2 ))
			pc.Add(New ParamStruct("@IsAlert", DbType.Boolean,clsCommon.GetValueDBNull(Me.mvarIsAlert), ParameterDirection.Input,2 ))
			DAL.ExecPreparedSQL(PP_IF_IE_Setup, CommandType.StoredProcedure, pc,"")
		Me.mvarSetupID = clsCommon.GetValue(pc.Item("@SetupID").Value, mvarSetupID.GetType().FullName)
		Return (Me.mvarSetupID <> String.Empty )
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Function Update() as Boolean 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "Update", ParameterDirection.Input,50 ))
			 pc.Add(New ParamStruct("@SetupID",DbType.String, clsCommon.GetValueDBNull(me.mvarSetupID), ParameterDirection.Input,10 ))
			 pc.Add(New ParamStruct("@ScanTime",DbType.int32, clsCommon.GetValueDBNull(me.mvarScanTime), ParameterDirection.Input,4 ))
			 pc.Add(New ParamStruct("@ServerName",DbType.String, clsCommon.GetValueDBNull(me.mvarServerName), ParameterDirection.Input,50 ))
			 pc.Add(New ParamStruct("@RunTime",DbType.int32, clsCommon.GetValueDBNull(me.mvarRunTime), ParameterDirection.Input,4 ))
			 pc.Add(New ParamStruct("@HostName",DbType.String, clsCommon.GetValueDBNull(me.mvarHostName), ParameterDirection.Input,21 ))
			 pc.Add(New ParamStruct("@ExpNewData",DbType.Boolean, clsCommon.GetValueDBNull(me.mvarExpNewData), ParameterDirection.Input,2 ))
			 pc.Add(New ParamStruct("@IsAlert",DbType.Boolean, clsCommon.GetValueDBNull(me.mvarIsAlert), ParameterDirection.Input,2 ))
			Return (DAL.ExecNonQuery(PP_IF_IE_Setup, CommandType.StoredProcedure, pc,"") > 0)
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Function Delete(ByVal SetupID As System.String) as Boolean 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "Delete", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@SetupID",DbType.String, clsCommon.GetValueDBNull(SetupID), ParameterDirection.Input,10 ))
			Return (DAL.ExecNonQuery(PP_IF_IE_Setup, CommandType.StoredProcedure, pc,"") > 0)
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Function GetAll(ByVal SetupID As System.String) as DataTable 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			Dim ds As New DataSet
			pc.Add(New ParamStruct("@Action", DbType.String, "GetListData", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@SetupID", DbType.String, clsCommon.GetValueDBNull(SetupID), ParameterDirection.Input, 10 ))
			ds = DAL.ExecDataSet(PP_IF_IE_Setup, CommandType.StoredProcedure, pc,"")
			Dim keys(0) As DataColumn
			Dim column As DataColumn
			column = ds.Tables(0).Columns("SetupID")
			Keys(0) = column
			ds.Tables(0).PrimaryKey = Keys
			Return ds.Tables(0)
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Sub Reset()
		mvarSetupID = String.Empty
		mvarScanTime = 0
		mvarServerName = String.Empty
		mvarRunTime = 0
		mvarHostName = String.Empty
		mvarExpNewData = False
		mvarIsAlert = False
	End Sub
	Public Function GetByKey(ByVal SetupID As System.String) as Boolean 
		Dim DAL As DataAccess = m_Dal
		Dim ds As New DataSet 
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "GetData_ByKey", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@SetupID", DbType.String, clsCommon.GetValueDBNull(SetupID), ParameterDirection.InputOutput, 10 ))
			ds = DAL.ExecDataSet(PP_IF_IE_Setup, CommandType.StoredProcedure, pc,"")
			me.Reset()
			If ds Is Nothing Then
				Return False
			End If
			If ds.Tables(0).Rows.Count > 0 Then
				FillData(ds.Tables(0).Rows(0))
				Return True
			End If
		Catch ex As Exception
			Throw ex 
		End Try
		Return False
	End Function
	Public Sub FillData(row as DataRow)
		mvarSetupID =  clsCommon.GetValue(row("SetupID"), mvarSetupID.GetType().FullName)
		mvarScanTime =  clsCommon.GetValue(row("ScanTime"), mvarScanTime.GetType().FullName)
		mvarServerName =  clsCommon.GetValue(row("ServerName"), mvarServerName.GetType().FullName)
		mvarRunTime =  clsCommon.GetValue(row("RunTime"), mvarRunTime.GetType().FullName)
		mvarHostName =  clsCommon.GetValue(row("HostName"), mvarHostName.GetType().FullName)
		mvarExpNewData =  clsCommon.GetValue(row("ExpNewData"), mvarExpNewData.GetType().FullName)
		mvarIsAlert =  clsCommon.GetValue(row("IsAlert"), mvarIsAlert.GetType().FullName)
	End Sub
#End Region 

#Region "Private Methods"
#End Region 

End Class
