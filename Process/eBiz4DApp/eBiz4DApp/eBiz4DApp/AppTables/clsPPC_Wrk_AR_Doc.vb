'-- ------------------------------------------------------------
'-- Class name    :  clsPPC_Wrk_AR_Doc
'-- Created date  :  10/2/2012
'-- Created by    :  
'-- Updated by    :  
'-- Generated by    :  Class Maker v1.0
'-- ------------------------------------------------------------

'-- Import Libraries --
Imports HQFramework.Common
Imports HQFramework.DAL
Public Class clsPPC_Wrk_AR_Doc
#Region "Constants"
	Private Const PP_PPC_Wrk_AR_Doc As String = "PP_PPC_Wrk_AR_Doc"
#End Region 

#Region "Member Variables"
	Private mvarSlsperID As System.String

	Private mvarBatNbr As System.String

	Private mvarRefNbr As System.String

	Private mvarOrdNbr As System.String

	Private mvarDocBal As System.Double

	Private mvarAdjAmt As System.Double

	Private mvarOrigDocAmt As System.Double

	Private mvarCustID As System.String

	Private mvarInvcNbr As System.String

	Private mvarDocDate As System.DateTime

	Private mvarSyncStatus As System.Int32

	Private mvarCrtd_DateTime As System.DateTime

	Private mvarLUpd_DateTime As System.DateTime

#End Region 

	Private m_Dal As DataAccess
#Region "Constructors"
	Public Sub New()
		m_Dal = New DataAccess
		Reset()
	End Sub
	Public Sub New(ByVal dal As DataAccess)
		m_Dal = dal
		Reset()
	End Sub
#End Region 

#Region "Public Properties"
	Public Property SlsperID() As System.String
		Get
			Return mvarSlsperID
		End Get
		Set(ByVal Value As System.String)
			mvarSlsperID = Value
		End Set
	End Property

	Public Property BatNbr() As System.String
		Get
			Return mvarBatNbr
		End Get
		Set(ByVal Value As System.String)
			mvarBatNbr = Value
		End Set
	End Property

	Public Property RefNbr() As System.String
		Get
			Return mvarRefNbr
		End Get
		Set(ByVal Value As System.String)
			mvarRefNbr = Value
		End Set
	End Property

	Public Property OrdNbr() As System.String
		Get
			Return mvarOrdNbr
		End Get
		Set(ByVal Value As System.String)
			mvarOrdNbr = Value
		End Set
	End Property

	Public Property DocBal() As System.Double
		Get
			Return mvarDocBal
		End Get
		Set(ByVal Value As System.Double)
			mvarDocBal = Value
		End Set
	End Property

	Public Property AdjAmt() As System.Double
		Get
			Return mvarAdjAmt
		End Get
		Set(ByVal Value As System.Double)
			mvarAdjAmt = Value
		End Set
	End Property

	Public Property OrigDocAmt() As System.Double
		Get
			Return mvarOrigDocAmt
		End Get
		Set(ByVal Value As System.Double)
			mvarOrigDocAmt = Value
		End Set
	End Property

	Public Property CustID() As System.String
		Get
			Return mvarCustID
		End Get
		Set(ByVal Value As System.String)
			mvarCustID = Value
		End Set
	End Property

	Public Property InvcNbr() As System.String
		Get
			Return mvarInvcNbr
		End Get
		Set(ByVal Value As System.String)
			mvarInvcNbr = Value
		End Set
	End Property

	Public Property DocDate() As System.DateTime
		Get
			Return mvarDocDate
		End Get
		Set(ByVal Value As System.DateTime)
			mvarDocDate = Value
		End Set
	End Property

	Public Property SyncStatus() As System.Int32
		Get
			Return mvarSyncStatus
		End Get
		Set(ByVal Value As System.Int32)
			mvarSyncStatus = Value
		End Set
	End Property

	Public Property Crtd_DateTime() As System.DateTime
		Get
			Return mvarCrtd_DateTime
		End Get
		Set(ByVal Value As System.DateTime)
			mvarCrtd_DateTime = Value
		End Set
	End Property

	Public Property LUpd_DateTime() As System.DateTime
		Get
			Return mvarLUpd_DateTime
		End Get
		Set(ByVal Value As System.DateTime)
			mvarLUpd_DateTime = Value
		End Set
	End Property

#End Region 

#Region "Public Methods"
	Public Function Add() as Boolean 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "AddNew", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@SlsperID", DbType.String,clsCommon.GetValueDBNull(Me.mvarSlsperID), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@BatNbr", DbType.String,clsCommon.GetValueDBNull(Me.mvarBatNbr), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@RefNbr", DbType.String,clsCommon.GetValueDBNull(Me.mvarRefNbr), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@OrdNbr", DbType.String,clsCommon.GetValueDBNull(Me.mvarOrdNbr), ParameterDirection.Input,15 ))
			pc.Add(New ParamStruct("@DocBal", DbType.Decimal,clsCommon.GetValueDBNull(Me.mvarDocBal), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@AdjAmt", DbType.Decimal,clsCommon.GetValueDBNull(Me.mvarAdjAmt), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@OrigDocAmt", DbType.Decimal,clsCommon.GetValueDBNull(Me.mvarOrigDocAmt), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@CustID", DbType.String,clsCommon.GetValueDBNull(Me.mvarCustID), ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@InvcNbr", DbType.String,clsCommon.GetValueDBNull(Me.mvarInvcNbr), ParameterDirection.Input,15 ))
			pc.Add(New ParamStruct("@DocDate", DbType.DateTime,clsCommon.GetValueDBNull(Me.mvarDocDate), ParameterDirection.Input,16 ))
			pc.Add(New ParamStruct("@SyncStatus", DbType.int32,clsCommon.GetValueDBNull(Me.mvarSyncStatus), ParameterDirection.Input,4 ))
			pc.Add(New ParamStruct("@Crtd_DateTime", DbType.DateTime,clsCommon.GetValueDBNull(Me.mvarCrtd_DateTime), ParameterDirection.Input,16 ))
			pc.Add(New ParamStruct("@LUpd_DateTime", DbType.DateTime,clsCommon.GetValueDBNull(Me.mvarLUpd_DateTime), ParameterDirection.Input,16 ))
			DAL.ExecPreparedSQL(PP_PPC_Wrk_AR_Doc, CommandType.StoredProcedure, pc,"")
		Me.mvarSlsperID = clsCommon.GetValue(pc.Item("@SlsperID").Value, mvarSlsperID.GetType().FullName)
		Return (Me.mvarSlsperID <> String.Empty )
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Function Update() as Boolean 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "Update", ParameterDirection.Input,50 ))
			 pc.Add(New ParamStruct("@SlsperID",DbType.String, clsCommon.GetValueDBNull(me.mvarSlsperID), ParameterDirection.Input,10 ))
			 pc.Add(New ParamStruct("@BatNbr",DbType.String, clsCommon.GetValueDBNull(me.mvarBatNbr), ParameterDirection.Input,10 ))
			 pc.Add(New ParamStruct("@RefNbr",DbType.String, clsCommon.GetValueDBNull(me.mvarRefNbr), ParameterDirection.Input,10 ))
			 pc.Add(New ParamStruct("@OrdNbr",DbType.String, clsCommon.GetValueDBNull(me.mvarOrdNbr), ParameterDirection.Input,15 ))
			 pc.Add(New ParamStruct("@DocBal",DbType.Decimal, clsCommon.GetValueDBNull(me.mvarDocBal), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@AdjAmt",DbType.Decimal, clsCommon.GetValueDBNull(me.mvarAdjAmt), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@OrigDocAmt",DbType.Decimal, clsCommon.GetValueDBNull(me.mvarOrigDocAmt), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@CustID",DbType.String, clsCommon.GetValueDBNull(me.mvarCustID), ParameterDirection.Input,50 ))
			 pc.Add(New ParamStruct("@InvcNbr",DbType.String, clsCommon.GetValueDBNull(me.mvarInvcNbr), ParameterDirection.Input,15 ))
			 pc.Add(New ParamStruct("@DocDate",DbType.DateTime, clsCommon.GetValueDBNull(me.mvarDocDate), ParameterDirection.Input,16 ))
			 pc.Add(New ParamStruct("@SyncStatus",DbType.int32, clsCommon.GetValueDBNull(me.mvarSyncStatus), ParameterDirection.Input,4 ))
			 pc.Add(New ParamStruct("@Crtd_DateTime",DbType.DateTime, clsCommon.GetValueDBNull(me.mvarCrtd_DateTime), ParameterDirection.Input,16 ))
			 pc.Add(New ParamStruct("@LUpd_DateTime",DbType.DateTime, clsCommon.GetValueDBNull(me.mvarLUpd_DateTime), ParameterDirection.Input,16 ))
			Return (DAL.ExecNonQuery(PP_PPC_Wrk_AR_Doc, CommandType.StoredProcedure, pc,"") > 0)
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Function Delete(ByVal BatNbr As System.String, ByVal RefNbr As System.String) as Boolean 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "Delete", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@BatNbr",DbType.String, clsCommon.GetValueDBNull(BatNbr), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@RefNbr",DbType.String, clsCommon.GetValueDBNull(RefNbr), ParameterDirection.Input,10 ))
			Return (DAL.ExecNonQuery(PP_PPC_Wrk_AR_Doc, CommandType.StoredProcedure, pc,"") > 0)
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Function GetAll(ByVal BatNbr As System.String, ByVal RefNbr As System.String) as DataTable 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			Dim ds As New DataSet
			pc.Add(New ParamStruct("@Action", DbType.String, "GetListData", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@BatNbr", DbType.String, clsCommon.GetValueDBNull(BatNbr), ParameterDirection.Input, 10 ))
			pc.Add(New ParamStruct("@RefNbr", DbType.String, clsCommon.GetValueDBNull(RefNbr), ParameterDirection.Input, 10 ))
			ds = DAL.ExecDataSet(PP_PPC_Wrk_AR_Doc, CommandType.StoredProcedure, pc,"")
			Dim keys(1) As DataColumn
			Dim column As DataColumn
			column = ds.Tables(0).Columns("BatNbr")
			Keys(0) = column
			column = ds.Tables(0).Columns("RefNbr")
			Keys(1) = column
			ds.Tables(0).PrimaryKey = Keys
			Return ds.Tables(0)
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Sub Reset()
		mvarSlsperID = String.Empty
		mvarBatNbr = String.Empty
		mvarRefNbr = String.Empty
		mvarOrdNbr = String.Empty
		mvarDocBal = 0
		mvarAdjAmt = 0
		mvarOrigDocAmt = 0
		mvarCustID = String.Empty
		mvarInvcNbr = String.Empty
		mvarDocDate = Today
		mvarSyncStatus = 0
		mvarCrtd_DateTime = Today
		mvarLUpd_DateTime = Today
	End Sub
	Public Function GetByKey(ByVal BatNbr As System.String, ByVal RefNbr As System.String) as Boolean 
		Dim DAL As DataAccess = m_Dal
		Dim ds As New DataSet 
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "GetData_ByKey", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@BatNbr", DbType.String, clsCommon.GetValueDBNull(BatNbr), ParameterDirection.InputOutput, 10 ))
			pc.Add(New ParamStruct("@RefNbr", DbType.String, clsCommon.GetValueDBNull(RefNbr), ParameterDirection.InputOutput, 10 ))
			ds = DAL.ExecDataSet(PP_PPC_Wrk_AR_Doc, CommandType.StoredProcedure, pc,"")
			me.Reset()
			If ds Is Nothing Then
				Return False
			End If
			If ds.Tables(0).Rows.Count > 0 Then
				FillData(ds.Tables(0).Rows(0))
				Return True
			End If
		Catch ex As Exception
			Throw ex 
		End Try
		Return False
	End Function
	Public Sub FillData(row as DataRow)
		mvarSlsperID =  clsCommon.GetValue(row("SlsperID"), mvarSlsperID.GetType().FullName)
		mvarBatNbr =  clsCommon.GetValue(row("BatNbr"), mvarBatNbr.GetType().FullName)
		mvarRefNbr =  clsCommon.GetValue(row("RefNbr"), mvarRefNbr.GetType().FullName)
		mvarOrdNbr =  clsCommon.GetValue(row("OrdNbr"), mvarOrdNbr.GetType().FullName)
		mvarDocBal =  clsCommon.GetValue(row("DocBal"), mvarDocBal.GetType().FullName)
		mvarAdjAmt =  clsCommon.GetValue(row("AdjAmt"), mvarAdjAmt.GetType().FullName)
		mvarOrigDocAmt =  clsCommon.GetValue(row("OrigDocAmt"), mvarOrigDocAmt.GetType().FullName)
		mvarCustID =  clsCommon.GetValue(row("CustID"), mvarCustID.GetType().FullName)
		mvarInvcNbr =  clsCommon.GetValue(row("InvcNbr"), mvarInvcNbr.GetType().FullName)
		mvarDocDate =  clsCommon.GetValue(row("DocDate"), mvarDocDate.GetType().FullName)
		mvarSyncStatus =  clsCommon.GetValue(row("SyncStatus"), mvarSyncStatus.GetType().FullName)
		mvarCrtd_DateTime =  clsCommon.GetValue(row("Crtd_DateTime"), mvarCrtd_DateTime.GetType().FullName)
		mvarLUpd_DateTime =  clsCommon.GetValue(row("LUpd_DateTime"), mvarLUpd_DateTime.GetType().FullName)
	End Sub
#End Region 

#Region "Private Methods"
#End Region 

End Class
