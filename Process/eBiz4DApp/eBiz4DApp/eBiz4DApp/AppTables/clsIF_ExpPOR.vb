'-- ------------------------------------------------------------
'-- Class name    :  clsIF_ExpPOR
'-- Created date  :  10/2/2012
'-- Created by    :  
'-- Updated by    :  
'-- Generated by    :  Class Maker v1.0
'-- ------------------------------------------------------------

'-- Import Libraries --
Imports HQFramework.Common
Imports HQFramework.DAL
Public Class clsIF_ExpPOR
#Region "Constants"
	Private Const PP_IF_ExpPOR As String = "PP_IF_ExpPOR"
#End Region 

#Region "Member Variables"
	Private mvarInternetAddress As System.String

	Private mvarUsrID As System.String

	Private mvarProgID As System.String

	Private mvarProcID As System.String

	Private mvarBatNbr As System.String

	Private mvarRcptNbr As System.String

	Private mvarBranchID As System.String

	Private mvarImpExp As System.String

#End Region 

	Private m_Dal As DataAccess
#Region "Constructors"
	Public Sub New()
		m_Dal = New DataAccess
		Reset()
	End Sub
	Public Sub New(ByVal dal As DataAccess)
		m_Dal = dal
		Reset()
	End Sub
#End Region 

#Region "Public Properties"
	Public Property InternetAddress() As System.String
		Get
			Return mvarInternetAddress
		End Get
		Set(ByVal Value As System.String)
			mvarInternetAddress = Value
		End Set
	End Property

	Public Property UsrID() As System.String
		Get
			Return mvarUsrID
		End Get
		Set(ByVal Value As System.String)
			mvarUsrID = Value
		End Set
	End Property

	Public Property ProgID() As System.String
		Get
			Return mvarProgID
		End Get
		Set(ByVal Value As System.String)
			mvarProgID = Value
		End Set
	End Property

	Public Property ProcID() As System.String
		Get
			Return mvarProcID
		End Get
		Set(ByVal Value As System.String)
			mvarProcID = Value
		End Set
	End Property

	Public Property BatNbr() As System.String
		Get
			Return mvarBatNbr
		End Get
		Set(ByVal Value As System.String)
			mvarBatNbr = Value
		End Set
	End Property

	Public Property RcptNbr() As System.String
		Get
			Return mvarRcptNbr
		End Get
		Set(ByVal Value As System.String)
			mvarRcptNbr = Value
		End Set
	End Property

	Public Property BranchID() As System.String
		Get
			Return mvarBranchID
		End Get
		Set(ByVal Value As System.String)
			mvarBranchID = Value
		End Set
	End Property

	Public Property ImpExp() As System.String
		Get
			Return mvarImpExp
		End Get
		Set(ByVal Value As System.String)
			mvarImpExp = Value
		End Set
	End Property

#End Region 

#Region "Public Methods"
	Public Function Add() as Boolean 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "AddNew", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@InternetAddress", DbType.String,clsCommon.GetValueDBNull(Me.mvarInternetAddress), ParameterDirection.Input,21 ))
			pc.Add(New ParamStruct("@UsrID", DbType.String,clsCommon.GetValueDBNull(Me.mvarUsrID), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@ProgID", DbType.String,clsCommon.GetValueDBNull(Me.mvarProgID), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@ProcID", DbType.String,clsCommon.GetValueDBNull(Me.mvarProcID), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@BatNbr", DbType.String,clsCommon.GetValueDBNull(Me.mvarBatNbr), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@RcptNbr", DbType.String,clsCommon.GetValueDBNull(Me.mvarRcptNbr), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@BranchID",DbType.String, clsCommon.GetValueDBNull(BranchID), ParameterDirection.Input,30 ))
			pc.Add(New ParamStruct("@ImpExp", DbType.String,clsCommon.GetValueDBNull(Me.mvarImpExp), ParameterDirection.Input,1 ))
			DAL.ExecPreparedSQL(PP_IF_ExpPOR, CommandType.StoredProcedure, pc,"")
		Me.mvarInternetAddress = clsCommon.GetValue(pc.Item("@InternetAddress").Value, mvarInternetAddress.GetType().FullName)
		Return (Me.mvarInternetAddress <> String.Empty )
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Function Update() as Boolean 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "Update", ParameterDirection.Input,50 ))
			 pc.Add(New ParamStruct("@InternetAddress",DbType.String, clsCommon.GetValueDBNull(me.mvarInternetAddress), ParameterDirection.Input,21 ))
			 pc.Add(New ParamStruct("@UsrID",DbType.String, clsCommon.GetValueDBNull(me.mvarUsrID), ParameterDirection.Input,10 ))
			 pc.Add(New ParamStruct("@ProgID",DbType.String, clsCommon.GetValueDBNull(me.mvarProgID), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@ProcID",DbType.String, clsCommon.GetValueDBNull(me.mvarProcID), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@BatNbr",DbType.String, clsCommon.GetValueDBNull(me.mvarBatNbr), ParameterDirection.Input,10 ))
			 pc.Add(New ParamStruct("@RcptNbr",DbType.String, clsCommon.GetValueDBNull(me.mvarRcptNbr), ParameterDirection.Input,10 ))
			 pc.Add(New ParamStruct("@BranchID",DbType.String, clsCommon.GetValueDBNull(me.mvarBranchID), ParameterDirection.Input,30 ))
			 pc.Add(New ParamStruct("@ImpExp",DbType.String, clsCommon.GetValueDBNull(me.mvarImpExp), ParameterDirection.Input,1 ))
			Return (DAL.ExecNonQuery(PP_IF_ExpPOR, CommandType.StoredProcedure, pc,"") > 0)
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Function Delete(ByVal InternetAddress As System.String, ByVal UsrID As System.String, ByVal ProgID As System.String, ByVal ProcID As System.String, ByVal BatNbr As System.String, ByVal RcptNbr As System.String, ByVal BranchID As System.String, ByVal ImpExp As System.String) as Boolean 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "Delete", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@InternetAddress",DbType.String, clsCommon.GetValueDBNull(InternetAddress), ParameterDirection.Input,21 ))
			pc.Add(New ParamStruct("@UsrID",DbType.String, clsCommon.GetValueDBNull(UsrID), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@ProgID",DbType.String, clsCommon.GetValueDBNull(ProgID), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@ProcID",DbType.String, clsCommon.GetValueDBNull(ProcID), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@BatNbr",DbType.String, clsCommon.GetValueDBNull(BatNbr), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@RcptNbr",DbType.String, clsCommon.GetValueDBNull(RcptNbr), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@BranchID",DbType.String, clsCommon.GetValueDBNull(BranchID), ParameterDirection.Input,30 ))
			pc.Add(New ParamStruct("@ImpExp",DbType.String, clsCommon.GetValueDBNull(ImpExp), ParameterDirection.Input,1 ))
			Return (DAL.ExecNonQuery(PP_IF_ExpPOR, CommandType.StoredProcedure, pc,"") > 0)
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Function GetAll(ByVal InternetAddress As System.String, ByVal UsrID As System.String, ByVal ProgID As System.String, ByVal ProcID As System.String, ByVal BatNbr As System.String, ByVal RcptNbr As System.String, ByVal BranchID As System.String, ByVal ImpExp As System.String) as DataTable 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			Dim ds As New DataSet
			pc.Add(New ParamStruct("@Action", DbType.String, "GetListData", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@InternetAddress", DbType.String, clsCommon.GetValueDBNull(InternetAddress), ParameterDirection.Input, 21 ))
			pc.Add(New ParamStruct("@UsrID", DbType.String, clsCommon.GetValueDBNull(UsrID), ParameterDirection.Input, 10 ))
			pc.Add(New ParamStruct("@ProgID", DbType.String, clsCommon.GetValueDBNull(ProgID), ParameterDirection.Input, 8 ))
			pc.Add(New ParamStruct("@ProcID", DbType.String, clsCommon.GetValueDBNull(ProcID), ParameterDirection.Input, 8 ))
			pc.Add(New ParamStruct("@BatNbr", DbType.String, clsCommon.GetValueDBNull(BatNbr), ParameterDirection.Input, 10 ))
			pc.Add(New ParamStruct("@RcptNbr", DbType.String, clsCommon.GetValueDBNull(RcptNbr), ParameterDirection.Input, 10 ))
			pc.Add(New ParamStruct("@BranchID",DbType.String, clsCommon.GetValueDBNull(BranchID), ParameterDirection.Input,30 ))
			pc.Add(New ParamStruct("@ImpExp", DbType.String, clsCommon.GetValueDBNull(ImpExp), ParameterDirection.Input, 1 ))
			ds = DAL.ExecDataSet(PP_IF_ExpPOR, CommandType.StoredProcedure, pc,"")
			Dim keys(7) As DataColumn
			Dim column As DataColumn
			column = ds.Tables(0).Columns("InternetAddress")
			Keys(0) = column
			column = ds.Tables(0).Columns("UsrID")
			Keys(1) = column
			column = ds.Tables(0).Columns("ProgID")
			Keys(2) = column
			column = ds.Tables(0).Columns("ProcID")
			Keys(3) = column
			column = ds.Tables(0).Columns("BatNbr")
			Keys(4) = column
			column = ds.Tables(0).Columns("RcptNbr")
			Keys(5) = column
			column = ds.Tables(0).Columns("BranchID")
			Keys(6) = column
			column = ds.Tables(0).Columns("ImpExp")
			Keys(7) = column
			ds.Tables(0).PrimaryKey = Keys
			Return ds.Tables(0)
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Sub Reset()
		mvarInternetAddress = String.Empty
		mvarUsrID = String.Empty
		mvarProgID = String.Empty
		mvarProcID = String.Empty
		mvarBatNbr = String.Empty
		mvarRcptNbr = String.Empty
		mvarBranchID = String.Empty
		mvarImpExp = String.Empty
	End Sub
	Public Function GetByKey(ByVal InternetAddress As System.String, ByVal UsrID As System.String, ByVal ProgID As System.String, ByVal ProcID As System.String, ByVal BatNbr As System.String, ByVal RcptNbr As System.String, ByVal BranchID As System.String, ByVal ImpExp As System.String) as Boolean 
		Dim DAL As DataAccess = m_Dal
		Dim ds As New DataSet 
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "GetData_ByKey", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@InternetAddress", DbType.String, clsCommon.GetValueDBNull(InternetAddress), ParameterDirection.InputOutput, 21 ))
			pc.Add(New ParamStruct("@UsrID", DbType.String, clsCommon.GetValueDBNull(UsrID), ParameterDirection.InputOutput, 10 ))
			pc.Add(New ParamStruct("@ProgID", DbType.String, clsCommon.GetValueDBNull(ProgID), ParameterDirection.InputOutput, 8 ))
			pc.Add(New ParamStruct("@ProcID", DbType.String, clsCommon.GetValueDBNull(ProcID), ParameterDirection.InputOutput, 8 ))
			pc.Add(New ParamStruct("@BatNbr", DbType.String, clsCommon.GetValueDBNull(BatNbr), ParameterDirection.InputOutput, 10 ))
			pc.Add(New ParamStruct("@RcptNbr", DbType.String, clsCommon.GetValueDBNull(RcptNbr), ParameterDirection.InputOutput, 10 ))
			pc.Add(New ParamStruct("@BranchID", DbType.String, clsCommon.GetValueDBNull(BranchID), ParameterDirection.InputOutput, 30 ))
			pc.Add(New ParamStruct("@ImpExp", DbType.String, clsCommon.GetValueDBNull(ImpExp), ParameterDirection.InputOutput, 1 ))
			ds = DAL.ExecDataSet(PP_IF_ExpPOR, CommandType.StoredProcedure, pc,"")
			me.Reset()
			If ds Is Nothing Then
				Return False
			End If
			If ds.Tables(0).Rows.Count > 0 Then
				FillData(ds.Tables(0).Rows(0))
				Return True
			End If
		Catch ex As Exception
			Throw ex 
		End Try
		Return False
	End Function
	Public Sub FillData(row as DataRow)
		mvarInternetAddress =  clsCommon.GetValue(row("InternetAddress"), mvarInternetAddress.GetType().FullName)
		mvarUsrID =  clsCommon.GetValue(row("UsrID"), mvarUsrID.GetType().FullName)
		mvarProgID =  clsCommon.GetValue(row("ProgID"), mvarProgID.GetType().FullName)
		mvarProcID =  clsCommon.GetValue(row("ProcID"), mvarProcID.GetType().FullName)
		mvarBatNbr =  clsCommon.GetValue(row("BatNbr"), mvarBatNbr.GetType().FullName)
		mvarRcptNbr =  clsCommon.GetValue(row("RcptNbr"), mvarRcptNbr.GetType().FullName)
		mvarBranchID =  clsCommon.GetValue(row("BranchID"), mvarBranchID.GetType().FullName)
		mvarImpExp =  clsCommon.GetValue(row("ImpExp"), mvarImpExp.GetType().FullName)
	End Sub
#End Region 

#Region "Private Methods"
#End Region 

End Class
