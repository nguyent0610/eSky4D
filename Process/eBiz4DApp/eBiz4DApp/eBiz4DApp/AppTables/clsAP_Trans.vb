'-- ------------------------------------------------------------
'-- Class name    :  clsAP_Trans
'-- Created date  :  10/2/2012
'-- Created by    :  
'-- Updated by    :  
'-- Generated by    :  Class Maker v1.0
'-- ------------------------------------------------------------

'-- Import Libraries --
Imports HQFramework.Common
Imports HQFramework.DAL
Public Class clsAP_Trans
#Region "Constants"
	Private Const PP_AP_Trans As String = "PP_AP_Trans"
#End Region 

#Region "Member Variables"
	Private mvarBranchID As System.String

	Private mvarBatNbr As System.String

	Private mvarRefNbr As System.String

	Private mvarLineRef As System.String

	Private mvarAddr As System.String

	Private mvarInvcNbr As System.String

	Private mvarInvcNote As System.String

	Private mvarInvtID As System.String

	Private mvarInvcDate As System.DateTime

	Private mvarJrnlType As System.String

	Private mvarLineType As System.String

	Private mvarPOLineRef As System.String

	Private mvarPONbr As System.String

	Private mvarQty As System.Double

	Private mvarTaxAmt00 As System.Double

	Private mvarTaxAmt01 As System.Double

	Private mvarTaxAmt02 As System.Double

	Private mvarTaxAmt03 As System.Double

	Private mvarTaxCat As System.String

	Private mvarTaxId00 As System.String

	Private mvarTaxId01 As System.String

	Private mvarTaxId02 As System.String

	Private mvarTaxId03 As System.String

	Private mvarTranAmt As System.Double

	Private mvarTranClass As System.String

	Private mvarTranDate As System.DateTime

	Private mvarTranDesc As System.String

	Private mvarTranType As System.String

	Private mvarTxblAmt00 As System.Double

	Private mvarTxblAmt01 As System.Double

	Private mvarTxblAmt02 As System.Double

	Private mvarTxblAmt03 As System.Double

	Private mvarTaxRegNbr As System.String

	Private mvarUnitPrice As System.Double

	Private mvarVendID As System.String

	Private mvarVendName As System.String

	Private mvarCrtd_DateTime As System.DateTime

	Private mvarCrtd_Prog As System.String

	Private mvarCrtd_User As System.String

	Private mvarLUpd_DateTime As System.DateTime

	Private mvarLUpd_Prog As System.String

	Private mvarLUpd_User As System.String

	Private mvartstamp As System.String

#End Region 

	Private m_Dal As DataAccess
#Region "Constructors"
	Public Sub New()
		m_Dal = New DataAccess
		Reset()
	End Sub
	Public Sub New(ByVal dal As DataAccess)
		m_Dal = dal
		Reset()
	End Sub
#End Region 

#Region "Public Properties"
	Public Property BranchID() As System.String
		Get
			Return mvarBranchID
		End Get
		Set(ByVal Value As System.String)
			mvarBranchID = Value
		End Set
	End Property

	Public Property BatNbr() As System.String
		Get
			Return mvarBatNbr
		End Get
		Set(ByVal Value As System.String)
			mvarBatNbr = Value
		End Set
	End Property

	Public Property RefNbr() As System.String
		Get
			Return mvarRefNbr
		End Get
		Set(ByVal Value As System.String)
			mvarRefNbr = Value
		End Set
	End Property

	Public Property LineRef() As System.String
		Get
			Return mvarLineRef
		End Get
		Set(ByVal Value As System.String)
			mvarLineRef = Value
		End Set
	End Property

	Public Property Addr() As System.String
		Get
			Return mvarAddr
		End Get
		Set(ByVal Value As System.String)
			mvarAddr = Value
		End Set
	End Property

	Public Property InvcNbr() As System.String
		Get
			Return mvarInvcNbr
		End Get
		Set(ByVal Value As System.String)
			mvarInvcNbr = Value
		End Set
	End Property

	Public Property InvcNote() As System.String
		Get
			Return mvarInvcNote
		End Get
		Set(ByVal Value As System.String)
			mvarInvcNote = Value
		End Set
	End Property

	Public Property InvtID() As System.String
		Get
			Return mvarInvtID
		End Get
		Set(ByVal Value As System.String)
			mvarInvtID = Value
		End Set
	End Property

	Public Property InvcDate() As System.DateTime
		Get
			Return mvarInvcDate
		End Get
		Set(ByVal Value As System.DateTime)
			mvarInvcDate = Value
		End Set
	End Property

	Public Property JrnlType() As System.String
		Get
			Return mvarJrnlType
		End Get
		Set(ByVal Value As System.String)
			mvarJrnlType = Value
		End Set
	End Property

	Public Property LineType() As System.String
		Get
			Return mvarLineType
		End Get
		Set(ByVal Value As System.String)
			mvarLineType = Value
		End Set
	End Property

	Public Property POLineRef() As System.String
		Get
			Return mvarPOLineRef
		End Get
		Set(ByVal Value As System.String)
			mvarPOLineRef = Value
		End Set
	End Property

	Public Property PONbr() As System.String
		Get
			Return mvarPONbr
		End Get
		Set(ByVal Value As System.String)
			mvarPONbr = Value
		End Set
	End Property

	Public Property Qty() As System.Double
		Get
			Return mvarQty
		End Get
		Set(ByVal Value As System.Double)
			mvarQty = Value
		End Set
	End Property

	Public Property TaxAmt00() As System.Double
		Get
			Return mvarTaxAmt00
		End Get
		Set(ByVal Value As System.Double)
			mvarTaxAmt00 = Value
		End Set
	End Property

	Public Property TaxAmt01() As System.Double
		Get
			Return mvarTaxAmt01
		End Get
		Set(ByVal Value As System.Double)
			mvarTaxAmt01 = Value
		End Set
	End Property

	Public Property TaxAmt02() As System.Double
		Get
			Return mvarTaxAmt02
		End Get
		Set(ByVal Value As System.Double)
			mvarTaxAmt02 = Value
		End Set
	End Property

	Public Property TaxAmt03() As System.Double
		Get
			Return mvarTaxAmt03
		End Get
		Set(ByVal Value As System.Double)
			mvarTaxAmt03 = Value
		End Set
	End Property

	Public Property TaxCat() As System.String
		Get
			Return mvarTaxCat
		End Get
		Set(ByVal Value As System.String)
			mvarTaxCat = Value
		End Set
	End Property

	Public Property TaxId00() As System.String
		Get
			Return mvarTaxId00
		End Get
		Set(ByVal Value As System.String)
			mvarTaxId00 = Value
		End Set
	End Property

	Public Property TaxId01() As System.String
		Get
			Return mvarTaxId01
		End Get
		Set(ByVal Value As System.String)
			mvarTaxId01 = Value
		End Set
	End Property

	Public Property TaxId02() As System.String
		Get
			Return mvarTaxId02
		End Get
		Set(ByVal Value As System.String)
			mvarTaxId02 = Value
		End Set
	End Property

	Public Property TaxId03() As System.String
		Get
			Return mvarTaxId03
		End Get
		Set(ByVal Value As System.String)
			mvarTaxId03 = Value
		End Set
	End Property

	Public Property TranAmt() As System.Double
		Get
			Return mvarTranAmt
		End Get
		Set(ByVal Value As System.Double)
			mvarTranAmt = Value
		End Set
	End Property

	Public Property TranClass() As System.String
		Get
			Return mvarTranClass
		End Get
		Set(ByVal Value As System.String)
			mvarTranClass = Value
		End Set
	End Property

	Public Property TranDate() As System.DateTime
		Get
			Return mvarTranDate
		End Get
		Set(ByVal Value As System.DateTime)
			mvarTranDate = Value
		End Set
	End Property

	Public Property TranDesc() As System.String
		Get
			Return mvarTranDesc
		End Get
		Set(ByVal Value As System.String)
			mvarTranDesc = Value
		End Set
	End Property

	Public Property TranType() As System.String
		Get
			Return mvarTranType
		End Get
		Set(ByVal Value As System.String)
			mvarTranType = Value
		End Set
	End Property

	Public Property TxblAmt00() As System.Double
		Get
			Return mvarTxblAmt00
		End Get
		Set(ByVal Value As System.Double)
			mvarTxblAmt00 = Value
		End Set
	End Property

	Public Property TxblAmt01() As System.Double
		Get
			Return mvarTxblAmt01
		End Get
		Set(ByVal Value As System.Double)
			mvarTxblAmt01 = Value
		End Set
	End Property

	Public Property TxblAmt02() As System.Double
		Get
			Return mvarTxblAmt02
		End Get
		Set(ByVal Value As System.Double)
			mvarTxblAmt02 = Value
		End Set
	End Property

	Public Property TxblAmt03() As System.Double
		Get
			Return mvarTxblAmt03
		End Get
		Set(ByVal Value As System.Double)
			mvarTxblAmt03 = Value
		End Set
	End Property

	Public Property TaxRegNbr() As System.String
		Get
			Return mvarTaxRegNbr
		End Get
		Set(ByVal Value As System.String)
			mvarTaxRegNbr = Value
		End Set
	End Property

	Public Property UnitPrice() As System.Double
		Get
			Return mvarUnitPrice
		End Get
		Set(ByVal Value As System.Double)
			mvarUnitPrice = Value
		End Set
	End Property

	Public Property VendID() As System.String
		Get
			Return mvarVendID
		End Get
		Set(ByVal Value As System.String)
			mvarVendID = Value
		End Set
	End Property

	Public Property VendName() As System.String
		Get
			Return mvarVendName
		End Get
		Set(ByVal Value As System.String)
			mvarVendName = Value
		End Set
	End Property

	Public Property Crtd_DateTime() As System.DateTime
		Get
			Return mvarCrtd_DateTime
		End Get
		Set(ByVal Value As System.DateTime)
			mvarCrtd_DateTime = Value
		End Set
	End Property

	Public Property Crtd_Prog() As System.String
		Get
			Return mvarCrtd_Prog
		End Get
		Set(ByVal Value As System.String)
			mvarCrtd_Prog = Value
		End Set
	End Property

	Public Property Crtd_User() As System.String
		Get
			Return mvarCrtd_User
		End Get
		Set(ByVal Value As System.String)
			mvarCrtd_User = Value
		End Set
	End Property

	Public Property LUpd_DateTime() As System.DateTime
		Get
			Return mvarLUpd_DateTime
		End Get
		Set(ByVal Value As System.DateTime)
			mvarLUpd_DateTime = Value
		End Set
	End Property

	Public Property LUpd_Prog() As System.String
		Get
			Return mvarLUpd_Prog
		End Get
		Set(ByVal Value As System.String)
			mvarLUpd_Prog = Value
		End Set
	End Property

	Public Property LUpd_User() As System.String
		Get
			Return mvarLUpd_User
		End Get
		Set(ByVal Value As System.String)
			mvarLUpd_User = Value
		End Set
	End Property

	Public Property tstamp() As System.String
		Get
			Return mvartstamp
		End Get
		Set(ByVal Value As System.String)
			mvartstamp = Value
		End Set
	End Property

#End Region 

#Region "Public Methods"
	Public Function Add() as Boolean 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "AddNew", ParameterDirection.Input,50 ))
            pc.Add(New ParamStruct("@BranchID", DbType.String, clsCommon.GetValueDBNull(Me.mvarBranchID), ParameterDirection.Input, 30))
			pc.Add(New ParamStruct("@BatNbr", DbType.String,clsCommon.GetValueDBNull(Me.mvarBatNbr), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@RefNbr", DbType.String,clsCommon.GetValueDBNull(Me.mvarRefNbr), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@LineRef", DbType.String,clsCommon.GetValueDBNull(Me.mvarLineRef), ParameterDirection.Input,5 ))
			pc.Add(New ParamStruct("@Addr", DbType.String,clsCommon.GetValueDBNull(Me.mvarAddr), ParameterDirection.Input,200 ))
			pc.Add(New ParamStruct("@InvcNbr", DbType.String,clsCommon.GetValueDBNull(Me.mvarInvcNbr), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@InvcNote", DbType.String,clsCommon.GetValueDBNull(Me.mvarInvcNote), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@InvtID", DbType.String,clsCommon.GetValueDBNull(Me.mvarInvtID), ParameterDirection.Input,30 ))
			pc.Add(New ParamStruct("@InvcDate", DbType.DateTime,clsCommon.GetValueDBNull(Me.mvarInvcDate), ParameterDirection.Input,16 ))
			pc.Add(New ParamStruct("@JrnlType", DbType.String,clsCommon.GetValueDBNull(Me.mvarJrnlType), ParameterDirection.Input,3 ))
			pc.Add(New ParamStruct("@LineType", DbType.String,clsCommon.GetValueDBNull(Me.mvarLineType), ParameterDirection.Input,1 ))
			pc.Add(New ParamStruct("@POLineRef", DbType.String,clsCommon.GetValueDBNull(Me.mvarPOLineRef), ParameterDirection.Input,5 ))
			pc.Add(New ParamStruct("@PONbr", DbType.String,clsCommon.GetValueDBNull(Me.mvarPONbr), ParameterDirection.Input,100 ))
			pc.Add(New ParamStruct("@Qty", DbType.Decimal,clsCommon.GetValueDBNull(Me.mvarQty), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@TaxAmt00", DbType.Decimal,clsCommon.GetValueDBNull(Me.mvarTaxAmt00), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@TaxAmt01", DbType.Decimal,clsCommon.GetValueDBNull(Me.mvarTaxAmt01), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@TaxAmt02", DbType.Decimal,clsCommon.GetValueDBNull(Me.mvarTaxAmt02), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@TaxAmt03", DbType.Decimal,clsCommon.GetValueDBNull(Me.mvarTaxAmt03), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@TaxCat", DbType.String,clsCommon.GetValueDBNull(Me.mvarTaxCat), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@TaxId00", DbType.String,clsCommon.GetValueDBNull(Me.mvarTaxId00), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@TaxId01", DbType.String,clsCommon.GetValueDBNull(Me.mvarTaxId01), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@TaxId02", DbType.String,clsCommon.GetValueDBNull(Me.mvarTaxId02), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@TaxId03", DbType.String,clsCommon.GetValueDBNull(Me.mvarTaxId03), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@TranAmt", DbType.Decimal,clsCommon.GetValueDBNull(Me.mvarTranAmt), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@TranClass", DbType.String,clsCommon.GetValueDBNull(Me.mvarTranClass), ParameterDirection.Input,1 ))
			pc.Add(New ParamStruct("@TranDate", DbType.DateTime,clsCommon.GetValueDBNull(Me.mvarTranDate.Date), ParameterDirection.Input,16 ))
			pc.Add(New ParamStruct("@TranDesc", DbType.String,clsCommon.GetValueDBNull(Me.mvarTranDesc), ParameterDirection.Input,100 ))
			pc.Add(New ParamStruct("@TranType", DbType.String,clsCommon.GetValueDBNull(Me.mvarTranType), ParameterDirection.Input,2 ))
			pc.Add(New ParamStruct("@TxblAmt00", DbType.Decimal,clsCommon.GetValueDBNull(Me.mvarTxblAmt00), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@TxblAmt01", DbType.Decimal,clsCommon.GetValueDBNull(Me.mvarTxblAmt01), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@TxblAmt02", DbType.Decimal,clsCommon.GetValueDBNull(Me.mvarTxblAmt02), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@TxblAmt03", DbType.Decimal,clsCommon.GetValueDBNull(Me.mvarTxblAmt03), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@TaxRegNbr", DbType.String,clsCommon.GetValueDBNull(Me.mvarTaxRegNbr), ParameterDirection.Input,20 ))
			pc.Add(New ParamStruct("@UnitPrice", DbType.Decimal,clsCommon.GetValueDBNull(Me.mvarUnitPrice), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@VendID", DbType.String,clsCommon.GetValueDBNull(Me.mvarVendID), ParameterDirection.Input,15 ))
			pc.Add(New ParamStruct("@VendName", DbType.String,clsCommon.GetValueDBNull(Me.mvarVendName), ParameterDirection.Input,200 ))
			pc.Add(New ParamStruct("@Crtd_DateTime", DbType.DateTime,clsCommon.GetValueDBNull(Me.mvarCrtd_DateTime), ParameterDirection.Input,16 ))
			pc.Add(New ParamStruct("@Crtd_Prog", DbType.String,clsCommon.GetValueDBNull(Me.mvarCrtd_Prog), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@Crtd_User", DbType.String,clsCommon.GetValueDBNull(Me.mvarCrtd_User), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@LUpd_DateTime", DbType.DateTime,clsCommon.GetValueDBNull(Me.mvarLUpd_DateTime), ParameterDirection.Input,16 ))
			pc.Add(New ParamStruct("@LUpd_Prog", DbType.String,clsCommon.GetValueDBNull(Me.mvarLUpd_Prog), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@LUpd_User", DbType.String,clsCommon.GetValueDBNull(Me.mvarLUpd_User), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@tstamp", DbType.String,clsCommon.GetValueDBNull(Me.mvartstamp), ParameterDirection.Input,18 ))
			DAL.ExecPreparedSQL(PP_AP_Trans, CommandType.StoredProcedure, pc,"")
		Me.mvarBranchID = clsCommon.GetValue(pc.Item("@BranchID").Value, mvarBranchID.GetType().FullName)
		Return (Me.mvarBranchID <> String.Empty )
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Function Update() as Boolean 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "Update", ParameterDirection.Input,50 ))
            pc.Add(New ParamStruct("@BranchID", DbType.String, clsCommon.GetValueDBNull(Me.mvarBranchID), ParameterDirection.Input, 30))
			 pc.Add(New ParamStruct("@BatNbr",DbType.String, clsCommon.GetValueDBNull(me.mvarBatNbr), ParameterDirection.Input,10 ))
			 pc.Add(New ParamStruct("@RefNbr",DbType.String, clsCommon.GetValueDBNull(me.mvarRefNbr), ParameterDirection.Input,10 ))
			 pc.Add(New ParamStruct("@LineRef",DbType.String, clsCommon.GetValueDBNull(me.mvarLineRef), ParameterDirection.Input,5 ))
			 pc.Add(New ParamStruct("@Addr",DbType.String, clsCommon.GetValueDBNull(me.mvarAddr), ParameterDirection.Input,200 ))
			 pc.Add(New ParamStruct("@InvcNbr",DbType.String, clsCommon.GetValueDBNull(me.mvarInvcNbr), ParameterDirection.Input,10 ))
			 pc.Add(New ParamStruct("@InvcNote",DbType.String, clsCommon.GetValueDBNull(me.mvarInvcNote), ParameterDirection.Input,10 ))
			 pc.Add(New ParamStruct("@InvtID",DbType.String, clsCommon.GetValueDBNull(me.mvarInvtID), ParameterDirection.Input,30 ))
			 pc.Add(New ParamStruct("@InvcDate",DbType.DateTime, clsCommon.GetValueDBNull(me.mvarInvcDate), ParameterDirection.Input,16 ))
			 pc.Add(New ParamStruct("@JrnlType",DbType.String, clsCommon.GetValueDBNull(me.mvarJrnlType), ParameterDirection.Input,3 ))
			 pc.Add(New ParamStruct("@LineType",DbType.String, clsCommon.GetValueDBNull(me.mvarLineType), ParameterDirection.Input,1 ))
			 pc.Add(New ParamStruct("@POLineRef",DbType.String, clsCommon.GetValueDBNull(me.mvarPOLineRef), ParameterDirection.Input,5 ))
			 pc.Add(New ParamStruct("@PONbr",DbType.String, clsCommon.GetValueDBNull(me.mvarPONbr), ParameterDirection.Input,100 ))
			 pc.Add(New ParamStruct("@Qty",DbType.Decimal, clsCommon.GetValueDBNull(me.mvarQty), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@TaxAmt00",DbType.Decimal, clsCommon.GetValueDBNull(me.mvarTaxAmt00), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@TaxAmt01",DbType.Decimal, clsCommon.GetValueDBNull(me.mvarTaxAmt01), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@TaxAmt02",DbType.Decimal, clsCommon.GetValueDBNull(me.mvarTaxAmt02), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@TaxAmt03",DbType.Decimal, clsCommon.GetValueDBNull(me.mvarTaxAmt03), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@TaxCat",DbType.String, clsCommon.GetValueDBNull(me.mvarTaxCat), ParameterDirection.Input,10 ))
			 pc.Add(New ParamStruct("@TaxId00",DbType.String, clsCommon.GetValueDBNull(me.mvarTaxId00), ParameterDirection.Input,10 ))
			 pc.Add(New ParamStruct("@TaxId01",DbType.String, clsCommon.GetValueDBNull(me.mvarTaxId01), ParameterDirection.Input,10 ))
			 pc.Add(New ParamStruct("@TaxId02",DbType.String, clsCommon.GetValueDBNull(me.mvarTaxId02), ParameterDirection.Input,10 ))
			 pc.Add(New ParamStruct("@TaxId03",DbType.String, clsCommon.GetValueDBNull(me.mvarTaxId03), ParameterDirection.Input,10 ))
			 pc.Add(New ParamStruct("@TranAmt",DbType.Decimal, clsCommon.GetValueDBNull(me.mvarTranAmt), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@TranClass",DbType.String, clsCommon.GetValueDBNull(me.mvarTranClass), ParameterDirection.Input,1 ))
			 pc.Add(New ParamStruct("@TranDate",DbType.DateTime, clsCommon.GetValueDBNull(me.mvarTranDate.Date), ParameterDirection.Input,16 ))
			 pc.Add(New ParamStruct("@TranDesc",DbType.String, clsCommon.GetValueDBNull(me.mvarTranDesc), ParameterDirection.Input,100 ))
			 pc.Add(New ParamStruct("@TranType",DbType.String, clsCommon.GetValueDBNull(me.mvarTranType), ParameterDirection.Input,2 ))
			 pc.Add(New ParamStruct("@TxblAmt00",DbType.Decimal, clsCommon.GetValueDBNull(me.mvarTxblAmt00), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@TxblAmt01",DbType.Decimal, clsCommon.GetValueDBNull(me.mvarTxblAmt01), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@TxblAmt02",DbType.Decimal, clsCommon.GetValueDBNull(me.mvarTxblAmt02), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@TxblAmt03",DbType.Decimal, clsCommon.GetValueDBNull(me.mvarTxblAmt03), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@TaxRegNbr",DbType.String, clsCommon.GetValueDBNull(me.mvarTaxRegNbr), ParameterDirection.Input,20 ))
			 pc.Add(New ParamStruct("@UnitPrice",DbType.Decimal, clsCommon.GetValueDBNull(me.mvarUnitPrice), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@VendID",DbType.String, clsCommon.GetValueDBNull(me.mvarVendID), ParameterDirection.Input,15 ))
			 pc.Add(New ParamStruct("@VendName",DbType.String, clsCommon.GetValueDBNull(me.mvarVendName), ParameterDirection.Input,200 ))
			 pc.Add(New ParamStruct("@Crtd_DateTime",DbType.DateTime, clsCommon.GetValueDBNull(me.mvarCrtd_DateTime), ParameterDirection.Input,16 ))
			 pc.Add(New ParamStruct("@Crtd_Prog",DbType.String, clsCommon.GetValueDBNull(me.mvarCrtd_Prog), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@Crtd_User",DbType.String, clsCommon.GetValueDBNull(me.mvarCrtd_User), ParameterDirection.Input,10 ))
			 pc.Add(New ParamStruct("@LUpd_DateTime",DbType.DateTime, clsCommon.GetValueDBNull(me.mvarLUpd_DateTime), ParameterDirection.Input,16 ))
			 pc.Add(New ParamStruct("@LUpd_Prog",DbType.String, clsCommon.GetValueDBNull(me.mvarLUpd_Prog), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@LUpd_User",DbType.String, clsCommon.GetValueDBNull(me.mvarLUpd_User), ParameterDirection.Input,10 ))
			 pc.Add(New ParamStruct("@tstamp",DbType.String, clsCommon.GetValueDBNull(me.mvartstamp), ParameterDirection.Input,18 ))
			Return (DAL.ExecNonQuery(PP_AP_Trans, CommandType.StoredProcedure, pc,"") > 0)
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Function Delete(ByVal BranchID As System.String, ByVal BatNbr As System.String, ByVal RefNbr As System.String, ByVal LineRef As System.String) as Boolean 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "Delete", ParameterDirection.Input,50 ))
            pc.Add(New ParamStruct("@BranchID", DbType.String, clsCommon.GetValueDBNull(BranchID), ParameterDirection.Input, 30))
			pc.Add(New ParamStruct("@BatNbr",DbType.String, clsCommon.GetValueDBNull(BatNbr), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@RefNbr",DbType.String, clsCommon.GetValueDBNull(RefNbr), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@LineRef",DbType.String, clsCommon.GetValueDBNull(LineRef), ParameterDirection.Input,5 ))
			Return (DAL.ExecNonQuery(PP_AP_Trans, CommandType.StoredProcedure, pc,"") > 0)
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Function GetAll(ByVal BranchID As System.String, ByVal BatNbr As System.String, ByVal RefNbr As System.String, ByVal LineRef As System.String) as DataTable 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			Dim ds As New DataSet
			pc.Add(New ParamStruct("@Action", DbType.String, "GetListData", ParameterDirection.Input,50 ))
            pc.Add(New ParamStruct("@BranchID", DbType.String, clsCommon.GetValueDBNull(BranchID), ParameterDirection.Input, 30))
			pc.Add(New ParamStruct("@BatNbr", DbType.String, clsCommon.GetValueDBNull(BatNbr), ParameterDirection.Input, 10 ))
			pc.Add(New ParamStruct("@RefNbr", DbType.String, clsCommon.GetValueDBNull(RefNbr), ParameterDirection.Input, 10 ))
			pc.Add(New ParamStruct("@LineRef", DbType.String, clsCommon.GetValueDBNull(LineRef), ParameterDirection.Input, 5 ))
			ds = DAL.ExecDataSet(PP_AP_Trans, CommandType.StoredProcedure, pc,"")
			Dim keys(3) As DataColumn
			Dim column As DataColumn
			column = ds.Tables(0).Columns("BranchID")
			Keys(0) = column
			column = ds.Tables(0).Columns("BatNbr")
			Keys(1) = column
			column = ds.Tables(0).Columns("RefNbr")
			Keys(2) = column
			column = ds.Tables(0).Columns("LineRef")
			Keys(3) = column
			ds.Tables(0).PrimaryKey = Keys
			Return ds.Tables(0)
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Sub Reset()
		mvarBranchID = String.Empty
		mvarBatNbr = String.Empty
		mvarRefNbr = String.Empty
		mvarLineRef = String.Empty
		mvarAddr = String.Empty
		mvarInvcNbr = String.Empty
		mvarInvcNote = String.Empty
		mvarInvtID = String.Empty
		mvarInvcDate = Today
		mvarJrnlType = String.Empty
		mvarLineType = String.Empty
		mvarPOLineRef = String.Empty
		mvarPONbr = String.Empty
		mvarQty = 0
		mvarTaxAmt00 = 0
		mvarTaxAmt01 = 0
		mvarTaxAmt02 = 0
		mvarTaxAmt03 = 0
		mvarTaxCat = String.Empty
		mvarTaxId00 = String.Empty
		mvarTaxId01 = String.Empty
		mvarTaxId02 = String.Empty
		mvarTaxId03 = String.Empty
		mvarTranAmt = 0
		mvarTranClass = String.Empty
		mvarTranDate = Today
		mvarTranDesc = String.Empty
		mvarTranType = String.Empty
		mvarTxblAmt00 = 0
		mvarTxblAmt01 = 0
		mvarTxblAmt02 = 0
		mvarTxblAmt03 = 0
		mvarTaxRegNbr = String.Empty
		mvarUnitPrice = 0
		mvarVendID = String.Empty
		mvarVendName = String.Empty
		mvarCrtd_DateTime = Today
		mvarCrtd_Prog = String.Empty
		mvarCrtd_User = String.Empty
		mvarLUpd_DateTime = Today
		mvarLUpd_Prog = String.Empty
		mvarLUpd_User = String.Empty
		mvartstamp = String.Empty
	End Sub
	Public Function GetByKey(ByVal BranchID As System.String, ByVal BatNbr As System.String, ByVal RefNbr As System.String, ByVal LineRef As System.String) as Boolean 
		Dim DAL As DataAccess = m_Dal
		Dim ds As New DataSet 
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "GetData_ByKey", ParameterDirection.Input,50 ))
            pc.Add(New ParamStruct("@BranchID", DbType.String, clsCommon.GetValueDBNull(BranchID), ParameterDirection.InputOutput, 30))
			pc.Add(New ParamStruct("@BatNbr", DbType.String, clsCommon.GetValueDBNull(BatNbr), ParameterDirection.InputOutput, 10 ))
			pc.Add(New ParamStruct("@RefNbr", DbType.String, clsCommon.GetValueDBNull(RefNbr), ParameterDirection.InputOutput, 10 ))
			pc.Add(New ParamStruct("@LineRef", DbType.String, clsCommon.GetValueDBNull(LineRef), ParameterDirection.InputOutput, 5 ))
			ds = DAL.ExecDataSet(PP_AP_Trans, CommandType.StoredProcedure, pc,"")
			me.Reset()
			If ds Is Nothing Then
				Return False
			End If
			If ds.Tables(0).Rows.Count > 0 Then
				FillData(ds.Tables(0).Rows(0))
				Return True
			End If
		Catch ex As Exception
			Throw ex 
		End Try
		Return False
	End Function
	Public Sub FillData(row as DataRow)
		mvarBranchID =  clsCommon.GetValue(row("BranchID"), mvarBranchID.GetType().FullName)
		mvarBatNbr =  clsCommon.GetValue(row("BatNbr"), mvarBatNbr.GetType().FullName)
		mvarRefNbr =  clsCommon.GetValue(row("RefNbr"), mvarRefNbr.GetType().FullName)
		mvarLineRef =  clsCommon.GetValue(row("LineRef"), mvarLineRef.GetType().FullName)
		mvarAddr =  clsCommon.GetValue(row("Addr"), mvarAddr.GetType().FullName)
		mvarInvcNbr =  clsCommon.GetValue(row("InvcNbr"), mvarInvcNbr.GetType().FullName)
		mvarInvcNote =  clsCommon.GetValue(row("InvcNote"), mvarInvcNote.GetType().FullName)
		mvarInvtID =  clsCommon.GetValue(row("InvtID"), mvarInvtID.GetType().FullName)
		mvarInvcDate =  clsCommon.GetValue(row("InvcDate"), mvarInvcDate.GetType().FullName)
		mvarJrnlType =  clsCommon.GetValue(row("JrnlType"), mvarJrnlType.GetType().FullName)
		mvarLineType =  clsCommon.GetValue(row("LineType"), mvarLineType.GetType().FullName)
		mvarPOLineRef =  clsCommon.GetValue(row("POLineRef"), mvarPOLineRef.GetType().FullName)
		mvarPONbr =  clsCommon.GetValue(row("PONbr"), mvarPONbr.GetType().FullName)
		mvarQty =  clsCommon.GetValue(row("Qty"), mvarQty.GetType().FullName)
		mvarTaxAmt00 =  clsCommon.GetValue(row("TaxAmt00"), mvarTaxAmt00.GetType().FullName)
		mvarTaxAmt01 =  clsCommon.GetValue(row("TaxAmt01"), mvarTaxAmt01.GetType().FullName)
		mvarTaxAmt02 =  clsCommon.GetValue(row("TaxAmt02"), mvarTaxAmt02.GetType().FullName)
		mvarTaxAmt03 =  clsCommon.GetValue(row("TaxAmt03"), mvarTaxAmt03.GetType().FullName)
		mvarTaxCat =  clsCommon.GetValue(row("TaxCat"), mvarTaxCat.GetType().FullName)
		mvarTaxId00 =  clsCommon.GetValue(row("TaxId00"), mvarTaxId00.GetType().FullName)
		mvarTaxId01 =  clsCommon.GetValue(row("TaxId01"), mvarTaxId01.GetType().FullName)
		mvarTaxId02 =  clsCommon.GetValue(row("TaxId02"), mvarTaxId02.GetType().FullName)
		mvarTaxId03 =  clsCommon.GetValue(row("TaxId03"), mvarTaxId03.GetType().FullName)
		mvarTranAmt =  clsCommon.GetValue(row("TranAmt"), mvarTranAmt.GetType().FullName)
		mvarTranClass =  clsCommon.GetValue(row("TranClass"), mvarTranClass.GetType().FullName)
		mvarTranDate =  clsCommon.GetValue(row("TranDate"), mvarTranDate.GetType().FullName)
		mvarTranDesc =  clsCommon.GetValue(row("TranDesc"), mvarTranDesc.GetType().FullName)
		mvarTranType =  clsCommon.GetValue(row("TranType"), mvarTranType.GetType().FullName)
		mvarTxblAmt00 =  clsCommon.GetValue(row("TxblAmt00"), mvarTxblAmt00.GetType().FullName)
		mvarTxblAmt01 =  clsCommon.GetValue(row("TxblAmt01"), mvarTxblAmt01.GetType().FullName)
		mvarTxblAmt02 =  clsCommon.GetValue(row("TxblAmt02"), mvarTxblAmt02.GetType().FullName)
		mvarTxblAmt03 =  clsCommon.GetValue(row("TxblAmt03"), mvarTxblAmt03.GetType().FullName)
		mvarTaxRegNbr =  clsCommon.GetValue(row("TaxRegNbr"), mvarTaxRegNbr.GetType().FullName)
		mvarUnitPrice =  clsCommon.GetValue(row("UnitPrice"), mvarUnitPrice.GetType().FullName)
		mvarVendID =  clsCommon.GetValue(row("VendID"), mvarVendID.GetType().FullName)
		mvarVendName =  clsCommon.GetValue(row("VendName"), mvarVendName.GetType().FullName)
		mvarCrtd_DateTime =  clsCommon.GetValue(row("Crtd_DateTime"), mvarCrtd_DateTime.GetType().FullName)
		mvarCrtd_Prog =  clsCommon.GetValue(row("Crtd_Prog"), mvarCrtd_Prog.GetType().FullName)
		mvarCrtd_User =  clsCommon.GetValue(row("Crtd_User"), mvarCrtd_User.GetType().FullName)
		mvarLUpd_DateTime =  clsCommon.GetValue(row("LUpd_DateTime"), mvarLUpd_DateTime.GetType().FullName)
		mvarLUpd_Prog =  clsCommon.GetValue(row("LUpd_Prog"), mvarLUpd_Prog.GetType().FullName)
		mvarLUpd_User =  clsCommon.GetValue(row("LUpd_User"), mvarLUpd_User.GetType().FullName)
		mvartstamp =  clsCommon.GetValue(row("tstamp"), mvartstamp.GetType().FullName)
	End Sub
#End Region 

#Region "Private Methods"
#End Region 

End Class
