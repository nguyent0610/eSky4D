'-- ------------------------------------------------------------
'-- Class name    :  clsPPC_WrkOM_CheckAndOrderDetail
'-- Created date  :  10/2/2012
'-- Created by    :  
'-- Updated by    :  
'-- Generated by    :  Class Maker v1.0
'-- ------------------------------------------------------------

'-- Import Libraries --
Imports HQFramework.Common
Imports HQFramework.DAL
Public Class clsPPC_WrkOM_CheckAndOrderDetail
#Region "Constants"
	Private Const PP_PPC_WrkOM_CheckAndOrderDetail As String = "PP_PPC_WrkOM_CheckAndOrderDetail"
#End Region 

#Region "Member Variables"
	Private mvarCheckOrderID As System.String

	Private mvarInvtID As System.String

	Private mvarInvtName As System.String

	Private mvarBookCaseQty As System.Double

	Private mvarBookEAQty As System.Double

	Private mvarOrderCaseQty As System.Double

	Private mvarOrderEAQty As System.Double

	Private mvarStatus As System.String

#End Region 

	Private m_Dal As DataAccess
#Region "Constructors"
	Public Sub New()
		m_Dal = New DataAccess
		Reset()
	End Sub
	Public Sub New(ByVal dal As DataAccess)
		m_Dal = dal
		Reset()
	End Sub
#End Region 

#Region "Public Properties"
	Public Property CheckOrderID() As System.String
		Get
			Return mvarCheckOrderID
		End Get
		Set(ByVal Value As System.String)
			mvarCheckOrderID = Value
		End Set
	End Property

	Public Property InvtID() As System.String
		Get
			Return mvarInvtID
		End Get
		Set(ByVal Value As System.String)
			mvarInvtID = Value
		End Set
	End Property

	Public Property InvtName() As System.String
		Get
			Return mvarInvtName
		End Get
		Set(ByVal Value As System.String)
			mvarInvtName = Value
		End Set
	End Property

	Public Property BookCaseQty() As System.Double
		Get
			Return mvarBookCaseQty
		End Get
		Set(ByVal Value As System.Double)
			mvarBookCaseQty = Value
		End Set
	End Property

	Public Property BookEAQty() As System.Double
		Get
			Return mvarBookEAQty
		End Get
		Set(ByVal Value As System.Double)
			mvarBookEAQty = Value
		End Set
	End Property

	Public Property OrderCaseQty() As System.Double
		Get
			Return mvarOrderCaseQty
		End Get
		Set(ByVal Value As System.Double)
			mvarOrderCaseQty = Value
		End Set
	End Property

	Public Property OrderEAQty() As System.Double
		Get
			Return mvarOrderEAQty
		End Get
		Set(ByVal Value As System.Double)
			mvarOrderEAQty = Value
		End Set
	End Property

	Public Property Status() As System.String
		Get
			Return mvarStatus
		End Get
		Set(ByVal Value As System.String)
			mvarStatus = Value
		End Set
	End Property

#End Region 

#Region "Public Methods"
	Public Function Add() as Boolean 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "AddNew", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@CheckOrderID", DbType.String,clsCommon.GetValueDBNull(Me.mvarCheckOrderID), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@InvtID", DbType.String,clsCommon.GetValueDBNull(Me.mvarInvtID), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@InvtName", DbType.String,clsCommon.GetValueDBNull(Me.mvarInvtName), ParameterDirection.Input,100 ))
			pc.Add(New ParamStruct("@BookCaseQty", DbType.Decimal,clsCommon.GetValueDBNull(Me.mvarBookCaseQty), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@BookEAQty", DbType.Decimal,clsCommon.GetValueDBNull(Me.mvarBookEAQty), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@OrderCaseQty", DbType.Decimal,clsCommon.GetValueDBNull(Me.mvarOrderCaseQty), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@OrderEAQty", DbType.Decimal,clsCommon.GetValueDBNull(Me.mvarOrderEAQty), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@Status", DbType.String,clsCommon.GetValueDBNull(Me.mvarStatus), ParameterDirection.Input,1 ))
			DAL.ExecPreparedSQL(PP_PPC_WrkOM_CheckAndOrderDetail, CommandType.StoredProcedure, pc,"")
		Me.mvarCheckOrderID = clsCommon.GetValue(pc.Item("@CheckOrderID").Value, mvarCheckOrderID.GetType().FullName)
		Return (Me.mvarCheckOrderID <> String.Empty )
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Function Update() as Boolean 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "Update", ParameterDirection.Input,50 ))
			 pc.Add(New ParamStruct("@CheckOrderID",DbType.String, clsCommon.GetValueDBNull(me.mvarCheckOrderID), ParameterDirection.Input,10 ))
			 pc.Add(New ParamStruct("@InvtID",DbType.String, clsCommon.GetValueDBNull(me.mvarInvtID), ParameterDirection.Input,10 ))
			 pc.Add(New ParamStruct("@InvtName",DbType.String, clsCommon.GetValueDBNull(me.mvarInvtName), ParameterDirection.Input,100 ))
			 pc.Add(New ParamStruct("@BookCaseQty",DbType.Decimal, clsCommon.GetValueDBNull(me.mvarBookCaseQty), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@BookEAQty",DbType.Decimal, clsCommon.GetValueDBNull(me.mvarBookEAQty), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@OrderCaseQty",DbType.Decimal, clsCommon.GetValueDBNull(me.mvarOrderCaseQty), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@OrderEAQty",DbType.Decimal, clsCommon.GetValueDBNull(me.mvarOrderEAQty), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@Status",DbType.String, clsCommon.GetValueDBNull(me.mvarStatus), ParameterDirection.Input,1 ))
			Return (DAL.ExecNonQuery(PP_PPC_WrkOM_CheckAndOrderDetail, CommandType.StoredProcedure, pc,"") > 0)
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Function Delete(ByVal CheckOrderID As System.String, ByVal InvtID As System.String) as Boolean 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "Delete", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@CheckOrderID",DbType.String, clsCommon.GetValueDBNull(CheckOrderID), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@InvtID",DbType.String, clsCommon.GetValueDBNull(InvtID), ParameterDirection.Input,10 ))
			Return (DAL.ExecNonQuery(PP_PPC_WrkOM_CheckAndOrderDetail, CommandType.StoredProcedure, pc,"") > 0)
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Function GetAll(ByVal CheckOrderID As System.String, ByVal InvtID As System.String) as DataTable 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			Dim ds As New DataSet
			pc.Add(New ParamStruct("@Action", DbType.String, "GetListData", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@CheckOrderID", DbType.String, clsCommon.GetValueDBNull(CheckOrderID), ParameterDirection.Input, 10 ))
			pc.Add(New ParamStruct("@InvtID", DbType.String, clsCommon.GetValueDBNull(InvtID), ParameterDirection.Input, 10 ))
			ds = DAL.ExecDataSet(PP_PPC_WrkOM_CheckAndOrderDetail, CommandType.StoredProcedure, pc,"")
			Dim keys(1) As DataColumn
			Dim column As DataColumn
			column = ds.Tables(0).Columns("CheckOrderID")
			Keys(0) = column
			column = ds.Tables(0).Columns("InvtID")
			Keys(1) = column
			ds.Tables(0).PrimaryKey = Keys
			Return ds.Tables(0)
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Sub Reset()
		mvarCheckOrderID = String.Empty
		mvarInvtID = String.Empty
		mvarInvtName = String.Empty
		mvarBookCaseQty = 0
		mvarBookEAQty = 0
		mvarOrderCaseQty = 0
		mvarOrderEAQty = 0
		mvarStatus = String.Empty
	End Sub
	Public Function GetByKey(ByVal CheckOrderID As System.String, ByVal InvtID As System.String) as Boolean 
		Dim DAL As DataAccess = m_Dal
		Dim ds As New DataSet 
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "GetData_ByKey", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@CheckOrderID", DbType.String, clsCommon.GetValueDBNull(CheckOrderID), ParameterDirection.InputOutput, 10 ))
			pc.Add(New ParamStruct("@InvtID", DbType.String, clsCommon.GetValueDBNull(InvtID), ParameterDirection.InputOutput, 10 ))
			ds = DAL.ExecDataSet(PP_PPC_WrkOM_CheckAndOrderDetail, CommandType.StoredProcedure, pc,"")
			me.Reset()
			If ds Is Nothing Then
				Return False
			End If
			If ds.Tables(0).Rows.Count > 0 Then
				FillData(ds.Tables(0).Rows(0))
				Return True
			End If
		Catch ex As Exception
			Throw ex 
		End Try
		Return False
	End Function
	Public Sub FillData(row as DataRow)
		mvarCheckOrderID =  clsCommon.GetValue(row("CheckOrderID"), mvarCheckOrderID.GetType().FullName)
		mvarInvtID =  clsCommon.GetValue(row("InvtID"), mvarInvtID.GetType().FullName)
		mvarInvtName =  clsCommon.GetValue(row("InvtName"), mvarInvtName.GetType().FullName)
		mvarBookCaseQty =  clsCommon.GetValue(row("BookCaseQty"), mvarBookCaseQty.GetType().FullName)
		mvarBookEAQty =  clsCommon.GetValue(row("BookEAQty"), mvarBookEAQty.GetType().FullName)
		mvarOrderCaseQty =  clsCommon.GetValue(row("OrderCaseQty"), mvarOrderCaseQty.GetType().FullName)
		mvarOrderEAQty =  clsCommon.GetValue(row("OrderEAQty"), mvarOrderEAQty.GetType().FullName)
		mvarStatus =  clsCommon.GetValue(row("Status"), mvarStatus.GetType().FullName)
	End Sub
#End Region 

#Region "Private Methods"
#End Region 

End Class
