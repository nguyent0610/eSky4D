'-- ------------------------------------------------------------
'-- Class name    :  clsDNR_Detail
'-- Created date  :  10/2/2012
'-- Created by    :  
'-- Updated by    :  
'-- Generated by    :  Class Maker v1.0
'-- ------------------------------------------------------------

'-- Import Libraries --
Imports HQFramework.Common
Imports HQFramework.DAL
Public Class clsDNR_Detail
#Region "Constants"
	Private Const PP_DNR_Detail As String = "PP_DNR_Detail"
#End Region 

#Region "Member Variables"
	Private mvarReportID As System.String

	Private mvarFieldName As System.String

	Private mvarFieldWidth As System.Int32

	Private mvarIsSum As System.Int16

	Private mvarIsVisible As System.Int16

	Private mvarFormatString As System.String

	Private mvarTextAlignment As System.Int32

#End Region 

	Private m_Dal As DataAccess
#Region "Constructors"
	Public Sub New()
		m_Dal = New DataAccess
		Reset()
	End Sub
	Public Sub New(ByVal dal As DataAccess)
		m_Dal = dal
		Reset()
	End Sub
#End Region 

#Region "Public Properties"
	Public Property ReportID() As System.String
		Get
			Return mvarReportID
		End Get
		Set(ByVal Value As System.String)
			mvarReportID = Value
		End Set
	End Property

	Public Property FieldName() As System.String
		Get
			Return mvarFieldName
		End Get
		Set(ByVal Value As System.String)
			mvarFieldName = Value
		End Set
	End Property

	Public Property FieldWidth() As System.Int32
		Get
			Return mvarFieldWidth
		End Get
		Set(ByVal Value As System.Int32)
			mvarFieldWidth = Value
		End Set
	End Property

	Public Property IsSum() As System.Int16
		Get
			Return mvarIsSum
		End Get
		Set(ByVal Value As System.Int16)
			mvarIsSum = Value
		End Set
	End Property

	Public Property IsVisible() As System.Int16
		Get
			Return mvarIsVisible
		End Get
		Set(ByVal Value As System.Int16)
			mvarIsVisible = Value
		End Set
	End Property

	Public Property FormatString() As System.String
		Get
			Return mvarFormatString
		End Get
		Set(ByVal Value As System.String)
			mvarFormatString = Value
		End Set
	End Property

	Public Property TextAlignment() As System.Int32
		Get
			Return mvarTextAlignment
		End Get
		Set(ByVal Value As System.Int32)
			mvarTextAlignment = Value
		End Set
	End Property

#End Region 

#Region "Public Methods"
	Public Function Add() as Boolean 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "AddNew", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@ReportID", DbType.String,clsCommon.GetValueDBNull(Me.mvarReportID), ParameterDirection.Input,30 ))
			pc.Add(New ParamStruct("@FieldName", DbType.String,clsCommon.GetValueDBNull(Me.mvarFieldName), ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@FieldWidth", DbType.int32,clsCommon.GetValueDBNull(Me.mvarFieldWidth), ParameterDirection.Input,4 ))
			pc.Add(New ParamStruct("@IsSum", DbType.int16,clsCommon.GetValueDBNull(Me.mvarIsSum), ParameterDirection.Input,2 ))
			pc.Add(New ParamStruct("@IsVisible", DbType.int16,clsCommon.GetValueDBNull(Me.mvarIsVisible), ParameterDirection.Input,2 ))
			pc.Add(New ParamStruct("@FormatString", DbType.String,clsCommon.GetValueDBNull(Me.mvarFormatString), ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@TextAlignment", DbType.int32,clsCommon.GetValueDBNull(Me.mvarTextAlignment), ParameterDirection.Input,4 ))
			DAL.ExecPreparedSQL(PP_DNR_Detail, CommandType.StoredProcedure, pc,"")
		Me.mvarReportID = clsCommon.GetValue(pc.Item("@ReportID").Value, mvarReportID.GetType().FullName)
		Return (Me.mvarReportID <> String.Empty )
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Function Update() as Boolean 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "Update", ParameterDirection.Input,50 ))
			 pc.Add(New ParamStruct("@ReportID",DbType.String, clsCommon.GetValueDBNull(me.mvarReportID), ParameterDirection.Input,30 ))
			 pc.Add(New ParamStruct("@FieldName",DbType.String, clsCommon.GetValueDBNull(me.mvarFieldName), ParameterDirection.Input,50 ))
			 pc.Add(New ParamStruct("@FieldWidth",DbType.int32, clsCommon.GetValueDBNull(me.mvarFieldWidth), ParameterDirection.Input,4 ))
			 pc.Add(New ParamStruct("@IsSum",DbType.int16, clsCommon.GetValueDBNull(me.mvarIsSum), ParameterDirection.Input,2 ))
			 pc.Add(New ParamStruct("@IsVisible",DbType.int16, clsCommon.GetValueDBNull(me.mvarIsVisible), ParameterDirection.Input,2 ))
			 pc.Add(New ParamStruct("@FormatString",DbType.String, clsCommon.GetValueDBNull(me.mvarFormatString), ParameterDirection.Input,50 ))
			 pc.Add(New ParamStruct("@TextAlignment",DbType.int32, clsCommon.GetValueDBNull(me.mvarTextAlignment), ParameterDirection.Input,4 ))
			Return (DAL.ExecNonQuery(PP_DNR_Detail, CommandType.StoredProcedure, pc,"") > 0)
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Function Delete(ByVal ReportID As System.String, ByVal FieldName As System.String) as Boolean 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "Delete", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@ReportID",DbType.String, clsCommon.GetValueDBNull(ReportID), ParameterDirection.Input,30 ))
			pc.Add(New ParamStruct("@FieldName",DbType.String, clsCommon.GetValueDBNull(FieldName), ParameterDirection.Input,50 ))
			Return (DAL.ExecNonQuery(PP_DNR_Detail, CommandType.StoredProcedure, pc,"") > 0)
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Function GetAll(ByVal ReportID As System.String, ByVal FieldName As System.String) as DataTable 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			Dim ds As New DataSet
			pc.Add(New ParamStruct("@Action", DbType.String, "GetListData", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@ReportID", DbType.String, clsCommon.GetValueDBNull(ReportID), ParameterDirection.Input, 30 ))
			pc.Add(New ParamStruct("@FieldName", DbType.String, clsCommon.GetValueDBNull(FieldName), ParameterDirection.Input, 50 ))
			ds = DAL.ExecDataSet(PP_DNR_Detail, CommandType.StoredProcedure, pc,"")
			Dim keys(1) As DataColumn
			Dim column As DataColumn
			column = ds.Tables(0).Columns("ReportID")
			Keys(0) = column
			column = ds.Tables(0).Columns("FieldName")
			Keys(1) = column
			ds.Tables(0).PrimaryKey = Keys
			Return ds.Tables(0)
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Sub Reset()
		mvarReportID = String.Empty
		mvarFieldName = String.Empty
		mvarFieldWidth = 0
		mvarIsSum = 0
		mvarIsVisible = 0
		mvarFormatString = String.Empty
		mvarTextAlignment = 0
	End Sub
	Public Function GetByKey(ByVal ReportID As System.String, ByVal FieldName As System.String) as Boolean 
		Dim DAL As DataAccess = m_Dal
		Dim ds As New DataSet 
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "GetData_ByKey", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@ReportID", DbType.String, clsCommon.GetValueDBNull(ReportID), ParameterDirection.InputOutput, 30 ))
			pc.Add(New ParamStruct("@FieldName", DbType.String, clsCommon.GetValueDBNull(FieldName), ParameterDirection.InputOutput, 50 ))
			ds = DAL.ExecDataSet(PP_DNR_Detail, CommandType.StoredProcedure, pc,"")
			me.Reset()
			If ds Is Nothing Then
				Return False
			End If
			If ds.Tables(0).Rows.Count > 0 Then
				FillData(ds.Tables(0).Rows(0))
				Return True
			End If
		Catch ex As Exception
			Throw ex 
		End Try
		Return False
	End Function
	Public Sub FillData(row as DataRow)
		mvarReportID =  clsCommon.GetValue(row("ReportID"), mvarReportID.GetType().FullName)
		mvarFieldName =  clsCommon.GetValue(row("FieldName"), mvarFieldName.GetType().FullName)
		mvarFieldWidth =  clsCommon.GetValue(row("FieldWidth"), mvarFieldWidth.GetType().FullName)
		mvarIsSum =  clsCommon.GetValue(row("IsSum"), mvarIsSum.GetType().FullName)
		mvarIsVisible =  clsCommon.GetValue(row("IsVisible"), mvarIsVisible.GetType().FullName)
		mvarFormatString =  clsCommon.GetValue(row("FormatString"), mvarFormatString.GetType().FullName)
		mvarTextAlignment =  clsCommon.GetValue(row("TextAlignment"), mvarTextAlignment.GetType().FullName)
	End Sub
#End Region 

#Region "Private Methods"
#End Region 

End Class
