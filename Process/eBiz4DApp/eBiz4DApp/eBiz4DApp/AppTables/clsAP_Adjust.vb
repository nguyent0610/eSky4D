'-- ------------------------------------------------------------
'-- Class name    :  clsAP_Adjust
'-- Created date  :  10/2/2012
'-- Created by    :  
'-- Updated by    :  
'-- Generated by    :  Class Maker v1.0
'-- ------------------------------------------------------------

'-- Import Libraries --
Imports HQFramework.Common
Imports HQFramework.DAL
Public Class clsAP_Adjust
#Region "Constants"
	Private Const PP_AP_Adjust As String = "PP_AP_Adjust"
#End Region 

#Region "Member Variables"
	Private mvarBranchID As System.String

	Private mvarBatNbr As System.String

	Private mvarAdjdRefNbr As System.String

	Private mvarAdjdBatNbr As System.String

	Private mvarAdjAmt As System.Double

	Private mvarAdjdDocType As System.String

	Private mvarAdjDiscAmt As System.Double

	Private mvarAdjgDocDate As System.DateTime

	Private mvarAdjgDocType As System.String

	Private mvarAdjgBatNbr As System.String

	Private mvarAdjgRefNbr As System.String

	Private mvarReversal As System.String

	Private mvarVendID As System.String

	Private mvarCrtd_DateTime As System.DateTime

	Private mvarCrtd_Prog As System.String

	Private mvarCrtd_User As System.String

	Private mvarLUpd_DateTime As System.DateTime

	Private mvarLUpd_Prog As System.String

	Private mvarLUpd_User As System.String

	Private mvartstamp As System.String

#End Region 

	Private m_Dal As DataAccess
#Region "Constructors"
	Public Sub New()
		m_Dal = New DataAccess
		Reset()
	End Sub
	Public Sub New(ByVal dal As DataAccess)
		m_Dal = dal
		Reset()
	End Sub
#End Region 

#Region "Public Properties"
	Public Property BranchID() As System.String
		Get
			Return mvarBranchID
		End Get
		Set(ByVal Value As System.String)
			mvarBranchID = Value
		End Set
	End Property

	Public Property BatNbr() As System.String
		Get
			Return mvarBatNbr
		End Get
		Set(ByVal Value As System.String)
			mvarBatNbr = Value
		End Set
	End Property

	Public Property AdjdRefNbr() As System.String
		Get
			Return mvarAdjdRefNbr
		End Get
		Set(ByVal Value As System.String)
			mvarAdjdRefNbr = Value
		End Set
	End Property

	Public Property AdjdBatNbr() As System.String
		Get
			Return mvarAdjdBatNbr
		End Get
		Set(ByVal Value As System.String)
			mvarAdjdBatNbr = Value
		End Set
	End Property

	Public Property AdjAmt() As System.Double
		Get
			Return mvarAdjAmt
		End Get
		Set(ByVal Value As System.Double)
			mvarAdjAmt = Value
		End Set
	End Property

	Public Property AdjdDocType() As System.String
		Get
			Return mvarAdjdDocType
		End Get
		Set(ByVal Value As System.String)
			mvarAdjdDocType = Value
		End Set
	End Property

	Public Property AdjDiscAmt() As System.Double
		Get
			Return mvarAdjDiscAmt
		End Get
		Set(ByVal Value As System.Double)
			mvarAdjDiscAmt = Value
		End Set
	End Property

	Public Property AdjgDocDate() As System.DateTime
		Get
			Return mvarAdjgDocDate
		End Get
		Set(ByVal Value As System.DateTime)
			mvarAdjgDocDate = Value
		End Set
	End Property

	Public Property AdjgDocType() As System.String
		Get
			Return mvarAdjgDocType
		End Get
		Set(ByVal Value As System.String)
			mvarAdjgDocType = Value
		End Set
	End Property

	Public Property AdjgBatNbr() As System.String
		Get
			Return mvarAdjgBatNbr
		End Get
		Set(ByVal Value As System.String)
			mvarAdjgBatNbr = Value
		End Set
	End Property

	Public Property AdjgRefNbr() As System.String
		Get
			Return mvarAdjgRefNbr
		End Get
		Set(ByVal Value As System.String)
			mvarAdjgRefNbr = Value
		End Set
	End Property

	Public Property Reversal() As System.String
		Get
			Return mvarReversal
		End Get
		Set(ByVal Value As System.String)
			mvarReversal = Value
		End Set
	End Property

	Public Property VendID() As System.String
		Get
			Return mvarVendID
		End Get
		Set(ByVal Value As System.String)
			mvarVendID = Value
		End Set
	End Property

	Public Property Crtd_DateTime() As System.DateTime
		Get
			Return mvarCrtd_DateTime
		End Get
		Set(ByVal Value As System.DateTime)
			mvarCrtd_DateTime = Value
		End Set
	End Property

	Public Property Crtd_Prog() As System.String
		Get
			Return mvarCrtd_Prog
		End Get
		Set(ByVal Value As System.String)
			mvarCrtd_Prog = Value
		End Set
	End Property

	Public Property Crtd_User() As System.String
		Get
			Return mvarCrtd_User
		End Get
		Set(ByVal Value As System.String)
			mvarCrtd_User = Value
		End Set
	End Property

	Public Property LUpd_DateTime() As System.DateTime
		Get
			Return mvarLUpd_DateTime
		End Get
		Set(ByVal Value As System.DateTime)
			mvarLUpd_DateTime = Value
		End Set
	End Property

	Public Property LUpd_Prog() As System.String
		Get
			Return mvarLUpd_Prog
		End Get
		Set(ByVal Value As System.String)
			mvarLUpd_Prog = Value
		End Set
	End Property

	Public Property LUpd_User() As System.String
		Get
			Return mvarLUpd_User
		End Get
		Set(ByVal Value As System.String)
			mvarLUpd_User = Value
		End Set
	End Property

	Public Property tstamp() As System.String
		Get
			Return mvartstamp
		End Get
		Set(ByVal Value As System.String)
			mvartstamp = Value
		End Set
	End Property

#End Region 

#Region "Public Methods"
	Public Function Add() as Boolean 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "AddNew", ParameterDirection.Input,50 ))
            pc.Add(New ParamStruct("@BranchID", DbType.String, clsCommon.GetValueDBNull(Me.mvarBranchID), ParameterDirection.Input, 30))
			pc.Add(New ParamStruct("@BatNbr", DbType.String,clsCommon.GetValueDBNull(Me.mvarBatNbr), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@AdjdRefNbr", DbType.String,clsCommon.GetValueDBNull(Me.mvarAdjdRefNbr), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@AdjdBatNbr", DbType.String,clsCommon.GetValueDBNull(Me.mvarAdjdBatNbr), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@AdjAmt", DbType.Decimal,clsCommon.GetValueDBNull(Me.mvarAdjAmt), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@AdjdDocType", DbType.String,clsCommon.GetValueDBNull(Me.mvarAdjdDocType), ParameterDirection.Input,2 ))
			pc.Add(New ParamStruct("@AdjDiscAmt", DbType.Decimal,clsCommon.GetValueDBNull(Me.mvarAdjDiscAmt), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@AdjgDocDate", DbType.DateTime,clsCommon.GetValueDBNull(Me.mvarAdjgDocDate.Date), ParameterDirection.Input,16 ))
			pc.Add(New ParamStruct("@AdjgDocType", DbType.String,clsCommon.GetValueDBNull(Me.mvarAdjgDocType), ParameterDirection.Input,2 ))
			pc.Add(New ParamStruct("@AdjgBatNbr", DbType.String,clsCommon.GetValueDBNull(Me.mvarAdjgBatNbr), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@AdjgRefNbr", DbType.String,clsCommon.GetValueDBNull(Me.mvarAdjgRefNbr), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@Reversal", DbType.String,clsCommon.GetValueDBNull(Me.mvarReversal), ParameterDirection.Input,2 ))
			pc.Add(New ParamStruct("@VendID", DbType.String,clsCommon.GetValueDBNull(Me.mvarVendID), ParameterDirection.Input,15 ))
			pc.Add(New ParamStruct("@Crtd_DateTime", DbType.DateTime,clsCommon.GetValueDBNull(Me.mvarCrtd_DateTime.Date), ParameterDirection.Input,16 ))
			pc.Add(New ParamStruct("@Crtd_Prog", DbType.String,clsCommon.GetValueDBNull(Me.mvarCrtd_Prog), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@Crtd_User", DbType.String,clsCommon.GetValueDBNull(Me.mvarCrtd_User), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@LUpd_DateTime", DbType.DateTime,clsCommon.GetValueDBNull(Me.mvarLUpd_DateTime.Date), ParameterDirection.Input,16 ))
			pc.Add(New ParamStruct("@LUpd_Prog", DbType.String,clsCommon.GetValueDBNull(Me.mvarLUpd_Prog), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@LUpd_User", DbType.String,clsCommon.GetValueDBNull(Me.mvarLUpd_User), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@tstamp", DbType.String,clsCommon.GetValueDBNull(Me.mvartstamp), ParameterDirection.Input,18 ))
			DAL.ExecPreparedSQL(PP_AP_Adjust, CommandType.StoredProcedure, pc,"")
		Me.mvarBranchID = clsCommon.GetValue(pc.Item("@BranchID").Value, mvarBranchID.GetType().FullName)
		Return (Me.mvarBranchID <> String.Empty )
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Function Update() as Boolean 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "Update", ParameterDirection.Input,50 ))
            pc.Add(New ParamStruct("@BranchID", DbType.String, clsCommon.GetValueDBNull(Me.mvarBranchID), ParameterDirection.Input, 30))
			 pc.Add(New ParamStruct("@BatNbr",DbType.String, clsCommon.GetValueDBNull(me.mvarBatNbr), ParameterDirection.Input,10 ))
			 pc.Add(New ParamStruct("@AdjdRefNbr",DbType.String, clsCommon.GetValueDBNull(me.mvarAdjdRefNbr), ParameterDirection.Input,10 ))
			 pc.Add(New ParamStruct("@AdjdBatNbr",DbType.String, clsCommon.GetValueDBNull(me.mvarAdjdBatNbr), ParameterDirection.Input,10 ))
			 pc.Add(New ParamStruct("@AdjAmt",DbType.Decimal, clsCommon.GetValueDBNull(me.mvarAdjAmt), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@AdjdDocType",DbType.String, clsCommon.GetValueDBNull(me.mvarAdjdDocType), ParameterDirection.Input,2 ))
			 pc.Add(New ParamStruct("@AdjDiscAmt",DbType.Decimal, clsCommon.GetValueDBNull(me.mvarAdjDiscAmt), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@AdjgDocDate",DbType.DateTime, clsCommon.GetValueDBNull(me.mvarAdjgDocDate.Date), ParameterDirection.Input,16 ))
			 pc.Add(New ParamStruct("@AdjgDocType",DbType.String, clsCommon.GetValueDBNull(me.mvarAdjgDocType), ParameterDirection.Input,2 ))
			 pc.Add(New ParamStruct("@AdjgBatNbr",DbType.String, clsCommon.GetValueDBNull(me.mvarAdjgBatNbr), ParameterDirection.Input,10 ))
			 pc.Add(New ParamStruct("@AdjgRefNbr",DbType.String, clsCommon.GetValueDBNull(me.mvarAdjgRefNbr), ParameterDirection.Input,10 ))
			 pc.Add(New ParamStruct("@Reversal",DbType.String, clsCommon.GetValueDBNull(me.mvarReversal), ParameterDirection.Input,2 ))
			 pc.Add(New ParamStruct("@VendID",DbType.String, clsCommon.GetValueDBNull(me.mvarVendID), ParameterDirection.Input,15 ))
			 pc.Add(New ParamStruct("@Crtd_DateTime",DbType.DateTime, clsCommon.GetValueDBNull(me.mvarCrtd_DateTime.Date), ParameterDirection.Input,16 ))
			 pc.Add(New ParamStruct("@Crtd_Prog",DbType.String, clsCommon.GetValueDBNull(me.mvarCrtd_Prog), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@Crtd_User",DbType.String, clsCommon.GetValueDBNull(me.mvarCrtd_User), ParameterDirection.Input,10 ))
			 pc.Add(New ParamStruct("@LUpd_DateTime",DbType.DateTime, clsCommon.GetValueDBNull(me.mvarLUpd_DateTime.Date), ParameterDirection.Input,16 ))
			 pc.Add(New ParamStruct("@LUpd_Prog",DbType.String, clsCommon.GetValueDBNull(me.mvarLUpd_Prog), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@LUpd_User",DbType.String, clsCommon.GetValueDBNull(me.mvarLUpd_User), ParameterDirection.Input,10 ))
			 pc.Add(New ParamStruct("@tstamp",DbType.String, clsCommon.GetValueDBNull(me.mvartstamp), ParameterDirection.Input,18 ))
			Return (DAL.ExecNonQuery(PP_AP_Adjust, CommandType.StoredProcedure, pc,"") > 0)
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Function Delete(ByVal BranchID As System.String, ByVal BatNbr As System.String, ByVal AdjdRefNbr As System.String, ByVal AdjgRefNbr As System.String) as Boolean 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "Delete", ParameterDirection.Input,50 ))
            pc.Add(New ParamStruct("@BranchID", DbType.String, clsCommon.GetValueDBNull(BranchID), ParameterDirection.Input, 30))
			pc.Add(New ParamStruct("@BatNbr",DbType.String, clsCommon.GetValueDBNull(BatNbr), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@AdjdRefNbr",DbType.String, clsCommon.GetValueDBNull(AdjdRefNbr), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@AdjgRefNbr",DbType.String, clsCommon.GetValueDBNull(AdjgRefNbr), ParameterDirection.Input,10 ))
			Return (DAL.ExecNonQuery(PP_AP_Adjust, CommandType.StoredProcedure, pc,"") > 0)
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Function GetAll(ByVal BranchID As System.String, ByVal BatNbr As System.String, ByVal AdjdRefNbr As System.String, ByVal AdjgRefNbr As System.String) as DataTable 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			Dim ds As New DataSet
			pc.Add(New ParamStruct("@Action", DbType.String, "GetListData", ParameterDirection.Input,50 ))
            pc.Add(New ParamStruct("@BranchID", DbType.String, clsCommon.GetValueDBNull(BranchID), ParameterDirection.Input, 30))
			pc.Add(New ParamStruct("@BatNbr", DbType.String, clsCommon.GetValueDBNull(BatNbr), ParameterDirection.Input, 10 ))
			pc.Add(New ParamStruct("@AdjdRefNbr", DbType.String, clsCommon.GetValueDBNull(AdjdRefNbr), ParameterDirection.Input, 10 ))
			pc.Add(New ParamStruct("@AdjgRefNbr", DbType.String, clsCommon.GetValueDBNull(AdjgRefNbr), ParameterDirection.Input, 10 ))
			ds = DAL.ExecDataSet(PP_AP_Adjust, CommandType.StoredProcedure, pc,"")
			Dim keys(3) As DataColumn
			Dim column As DataColumn
			column = ds.Tables(0).Columns("BranchID")
			Keys(0) = column
			column = ds.Tables(0).Columns("BatNbr")
			Keys(1) = column
			column = ds.Tables(0).Columns("AdjdRefNbr")
			Keys(2) = column
			column = ds.Tables(0).Columns("AdjgRefNbr")
			Keys(3) = column
			ds.Tables(0).PrimaryKey = Keys
			Return ds.Tables(0)
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Sub Reset()
		mvarBranchID = String.Empty
		mvarBatNbr = String.Empty
		mvarAdjdRefNbr = String.Empty
		mvarAdjdBatNbr = String.Empty
		mvarAdjAmt = 0
		mvarAdjdDocType = String.Empty
		mvarAdjDiscAmt = 0
		mvarAdjgDocDate = Today
		mvarAdjgDocType = String.Empty
		mvarAdjgBatNbr = String.Empty
		mvarAdjgRefNbr = String.Empty
		mvarReversal = String.Empty
		mvarVendID = String.Empty
		mvarCrtd_DateTime = Today
		mvarCrtd_Prog = String.Empty
		mvarCrtd_User = String.Empty
		mvarLUpd_DateTime = Today
		mvarLUpd_Prog = String.Empty
		mvarLUpd_User = String.Empty
		mvartstamp = String.Empty
	End Sub
	Public Function GetByKey(ByVal BranchID As System.String, ByVal BatNbr As System.String, ByVal AdjdRefNbr As System.String, ByVal AdjgRefNbr As System.String) as Boolean 
		Dim DAL As DataAccess = m_Dal
		Dim ds As New DataSet 
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "GetData_ByKey", ParameterDirection.Input,50 ))
            pc.Add(New ParamStruct("@BranchID", DbType.String, clsCommon.GetValueDBNull(BranchID), ParameterDirection.InputOutput, 30))
			pc.Add(New ParamStruct("@BatNbr", DbType.String, clsCommon.GetValueDBNull(BatNbr), ParameterDirection.InputOutput, 10 ))
			pc.Add(New ParamStruct("@AdjdRefNbr", DbType.String, clsCommon.GetValueDBNull(AdjdRefNbr), ParameterDirection.InputOutput, 10 ))
			pc.Add(New ParamStruct("@AdjgRefNbr", DbType.String, clsCommon.GetValueDBNull(AdjgRefNbr), ParameterDirection.InputOutput, 10 ))
			ds = DAL.ExecDataSet(PP_AP_Adjust, CommandType.StoredProcedure, pc,"")
			me.Reset()
			If ds Is Nothing Then
				Return False
			End If
			If ds.Tables(0).Rows.Count > 0 Then
				FillData(ds.Tables(0).Rows(0))
				Return True
			End If
		Catch ex As Exception
			Throw ex 
		End Try
		Return False
	End Function
	Public Sub FillData(row as DataRow)
		mvarBranchID =  clsCommon.GetValue(row("BranchID"), mvarBranchID.GetType().FullName)
		mvarBatNbr =  clsCommon.GetValue(row("BatNbr"), mvarBatNbr.GetType().FullName)
		mvarAdjdRefNbr =  clsCommon.GetValue(row("AdjdRefNbr"), mvarAdjdRefNbr.GetType().FullName)
		mvarAdjdBatNbr =  clsCommon.GetValue(row("AdjdBatNbr"), mvarAdjdBatNbr.GetType().FullName)
		mvarAdjAmt =  clsCommon.GetValue(row("AdjAmt"), mvarAdjAmt.GetType().FullName)
		mvarAdjdDocType =  clsCommon.GetValue(row("AdjdDocType"), mvarAdjdDocType.GetType().FullName)
		mvarAdjDiscAmt =  clsCommon.GetValue(row("AdjDiscAmt"), mvarAdjDiscAmt.GetType().FullName)
		mvarAdjgDocDate =  clsCommon.GetValue(row("AdjgDocDate"), mvarAdjgDocDate.GetType().FullName)
		mvarAdjgDocType =  clsCommon.GetValue(row("AdjgDocType"), mvarAdjgDocType.GetType().FullName)
		mvarAdjgBatNbr =  clsCommon.GetValue(row("AdjgBatNbr"), mvarAdjgBatNbr.GetType().FullName)
		mvarAdjgRefNbr =  clsCommon.GetValue(row("AdjgRefNbr"), mvarAdjgRefNbr.GetType().FullName)
		mvarReversal =  clsCommon.GetValue(row("Reversal"), mvarReversal.GetType().FullName)
		mvarVendID =  clsCommon.GetValue(row("VendID"), mvarVendID.GetType().FullName)
		mvarCrtd_DateTime =  clsCommon.GetValue(row("Crtd_DateTime"), mvarCrtd_DateTime.GetType().FullName)
		mvarCrtd_Prog =  clsCommon.GetValue(row("Crtd_Prog"), mvarCrtd_Prog.GetType().FullName)
		mvarCrtd_User =  clsCommon.GetValue(row("Crtd_User"), mvarCrtd_User.GetType().FullName)
		mvarLUpd_DateTime =  clsCommon.GetValue(row("LUpd_DateTime"), mvarLUpd_DateTime.GetType().FullName)
		mvarLUpd_Prog =  clsCommon.GetValue(row("LUpd_Prog"), mvarLUpd_Prog.GetType().FullName)
		mvarLUpd_User =  clsCommon.GetValue(row("LUpd_User"), mvarLUpd_User.GetType().FullName)
		mvartstamp =  clsCommon.GetValue(row("tstamp"), mvartstamp.GetType().FullName)
	End Sub
#End Region 

#Region "Private Methods"
#End Region 

End Class
