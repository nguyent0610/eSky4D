'-- ------------------------------------------------------------
'-- Class name    :  clsIF_ImpAR_ARDocData
'-- Created date  :  10/2/2012
'-- Created by    :  
'-- Updated by    :  
'-- Generated by    :  Class Maker v1.0
'-- ------------------------------------------------------------

'-- Import Libraries --
Imports HQFramework.Common
Imports HQFramework.DAL
Public Class clsIF_ImpAR_ARDocData
#Region "Constants"
	Private Const PP_IF_ImpAR_ARDocData As String = "PP_IF_ImpAR_ARDocData"
#End Region 

#Region "Member Variables"
	Private mvarInternetAddress As System.String

	Private mvarUsrID As System.String

	Private mvarProgID As System.String

	Private mvarProcID As System.String

	Private mvarRecordID As System.Int32

	Private mvarBranchID As System.String

	Private mvarBatNbr As System.String

	Private mvarRefNbr As System.String

	Private mvarCustId As System.String

	Private mvarSlsPerId As System.String

	Private mvarTaxId00 As System.String

	Private mvarTaxId01 As System.String

	Private mvarTaxId02 As System.String

	Private mvarTaxId03 As System.String

	Private mvarTerms As System.String

#End Region 

	Private m_Dal As DataAccess
#Region "Constructors"
	Public Sub New()
		m_Dal = New DataAccess
		Reset()
	End Sub
	Public Sub New(ByVal dal As DataAccess)
		m_Dal = dal
		Reset()
	End Sub
#End Region 

#Region "Public Properties"
	Public Property InternetAddress() As System.String
		Get
			Return mvarInternetAddress
		End Get
		Set(ByVal Value As System.String)
			mvarInternetAddress = Value
		End Set
	End Property

	Public Property UsrID() As System.String
		Get
			Return mvarUsrID
		End Get
		Set(ByVal Value As System.String)
			mvarUsrID = Value
		End Set
	End Property

	Public Property ProgID() As System.String
		Get
			Return mvarProgID
		End Get
		Set(ByVal Value As System.String)
			mvarProgID = Value
		End Set
	End Property

	Public Property ProcID() As System.String
		Get
			Return mvarProcID
		End Get
		Set(ByVal Value As System.String)
			mvarProcID = Value
		End Set
	End Property

	Public Property RecordID() As System.Int32
		Get
			Return mvarRecordID
		End Get
		Set(ByVal Value As System.Int32)
			mvarRecordID = Value
		End Set
	End Property

	Public Property BranchID() As System.String
		Get
			Return mvarBranchID
		End Get
		Set(ByVal Value As System.String)
			mvarBranchID = Value
		End Set
	End Property

	Public Property BatNbr() As System.String
		Get
			Return mvarBatNbr
		End Get
		Set(ByVal Value As System.String)
			mvarBatNbr = Value
		End Set
	End Property

	Public Property RefNbr() As System.String
		Get
			Return mvarRefNbr
		End Get
		Set(ByVal Value As System.String)
			mvarRefNbr = Value
		End Set
	End Property

	Public Property CustId() As System.String
		Get
			Return mvarCustId
		End Get
		Set(ByVal Value As System.String)
			mvarCustId = Value
		End Set
	End Property

	Public Property SlsPerId() As System.String
		Get
			Return mvarSlsPerId
		End Get
		Set(ByVal Value As System.String)
			mvarSlsPerId = Value
		End Set
	End Property

	Public Property TaxId00() As System.String
		Get
			Return mvarTaxId00
		End Get
		Set(ByVal Value As System.String)
			mvarTaxId00 = Value
		End Set
	End Property

	Public Property TaxId01() As System.String
		Get
			Return mvarTaxId01
		End Get
		Set(ByVal Value As System.String)
			mvarTaxId01 = Value
		End Set
	End Property

	Public Property TaxId02() As System.String
		Get
			Return mvarTaxId02
		End Get
		Set(ByVal Value As System.String)
			mvarTaxId02 = Value
		End Set
	End Property

	Public Property TaxId03() As System.String
		Get
			Return mvarTaxId03
		End Get
		Set(ByVal Value As System.String)
			mvarTaxId03 = Value
		End Set
	End Property

	Public Property Terms() As System.String
		Get
			Return mvarTerms
		End Get
		Set(ByVal Value As System.String)
			mvarTerms = Value
		End Set
	End Property

#End Region 

#Region "Public Methods"
	Public Function Add() as Boolean 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "AddNew", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@InternetAddress", DbType.String,clsCommon.GetValueDBNull(Me.mvarInternetAddress), ParameterDirection.Input,21 ))
			pc.Add(New ParamStruct("@UsrID", DbType.String,clsCommon.GetValueDBNull(Me.mvarUsrID), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@ProgID", DbType.String,clsCommon.GetValueDBNull(Me.mvarProgID), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@ProcID", DbType.String,clsCommon.GetValueDBNull(Me.mvarProcID), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@RecordID", DbType.int32,clsCommon.GetValueDBNull(Me.mvarRecordID), ParameterDirection.Input,4 ))
			pc.Add(New ParamStruct("@BranchID",DbType.String, clsCommon.GetValueDBNull(BranchID), ParameterDirection.Input,30 ))
			pc.Add(New ParamStruct("@BatNbr", DbType.String,clsCommon.GetValueDBNull(Me.mvarBatNbr), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@RefNbr", DbType.String,clsCommon.GetValueDBNull(Me.mvarRefNbr), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@CustId", DbType.String,clsCommon.GetValueDBNull(Me.mvarCustId), ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@SlsPerId", DbType.String,clsCommon.GetValueDBNull(Me.mvarSlsPerId), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@TaxId00", DbType.String,clsCommon.GetValueDBNull(Me.mvarTaxId00), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@TaxId01", DbType.String,clsCommon.GetValueDBNull(Me.mvarTaxId01), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@TaxId02", DbType.String,clsCommon.GetValueDBNull(Me.mvarTaxId02), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@TaxId03", DbType.String,clsCommon.GetValueDBNull(Me.mvarTaxId03), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@Terms", DbType.String,clsCommon.GetValueDBNull(Me.mvarTerms), ParameterDirection.Input,10 ))
			DAL.ExecPreparedSQL(PP_IF_ImpAR_ARDocData, CommandType.StoredProcedure, pc,"")
		Me.mvarInternetAddress = clsCommon.GetValue(pc.Item("@InternetAddress").Value, mvarInternetAddress.GetType().FullName)
		Return (Me.mvarInternetAddress <> String.Empty )
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Function Update() as Boolean 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "Update", ParameterDirection.Input,50 ))
			 pc.Add(New ParamStruct("@InternetAddress",DbType.String, clsCommon.GetValueDBNull(me.mvarInternetAddress), ParameterDirection.Input,21 ))
			 pc.Add(New ParamStruct("@UsrID",DbType.String, clsCommon.GetValueDBNull(me.mvarUsrID), ParameterDirection.Input,10 ))
			 pc.Add(New ParamStruct("@ProgID",DbType.String, clsCommon.GetValueDBNull(me.mvarProgID), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@ProcID",DbType.String, clsCommon.GetValueDBNull(me.mvarProcID), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@RecordID",DbType.int32, clsCommon.GetValueDBNull(me.mvarRecordID), ParameterDirection.Input,4 ))
			 pc.Add(New ParamStruct("@BranchID",DbType.String, clsCommon.GetValueDBNull(me.mvarBranchID), ParameterDirection.Input,30 ))
			 pc.Add(New ParamStruct("@BatNbr",DbType.String, clsCommon.GetValueDBNull(me.mvarBatNbr), ParameterDirection.Input,10 ))
			 pc.Add(New ParamStruct("@RefNbr",DbType.String, clsCommon.GetValueDBNull(me.mvarRefNbr), ParameterDirection.Input,10 ))
			 pc.Add(New ParamStruct("@CustId",DbType.String, clsCommon.GetValueDBNull(me.mvarCustId), ParameterDirection.Input,50 ))
			 pc.Add(New ParamStruct("@SlsPerId",DbType.String, clsCommon.GetValueDBNull(me.mvarSlsPerId), ParameterDirection.Input,10 ))
			 pc.Add(New ParamStruct("@TaxId00",DbType.String, clsCommon.GetValueDBNull(me.mvarTaxId00), ParameterDirection.Input,10 ))
			 pc.Add(New ParamStruct("@TaxId01",DbType.String, clsCommon.GetValueDBNull(me.mvarTaxId01), ParameterDirection.Input,10 ))
			 pc.Add(New ParamStruct("@TaxId02",DbType.String, clsCommon.GetValueDBNull(me.mvarTaxId02), ParameterDirection.Input,10 ))
			 pc.Add(New ParamStruct("@TaxId03",DbType.String, clsCommon.GetValueDBNull(me.mvarTaxId03), ParameterDirection.Input,10 ))
			 pc.Add(New ParamStruct("@Terms",DbType.String, clsCommon.GetValueDBNull(me.mvarTerms), ParameterDirection.Input,10 ))
			Return (DAL.ExecNonQuery(PP_IF_ImpAR_ARDocData, CommandType.StoredProcedure, pc,"") > 0)
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Function Delete(ByVal InternetAddress As System.String, ByVal UsrID As System.String, ByVal ProgID As System.String, ByVal ProcID As System.String, ByVal RecordID As System.Int32) as Boolean 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "Delete", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@InternetAddress",DbType.String, clsCommon.GetValueDBNull(InternetAddress), ParameterDirection.Input,21 ))
			pc.Add(New ParamStruct("@UsrID",DbType.String, clsCommon.GetValueDBNull(UsrID), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@ProgID",DbType.String, clsCommon.GetValueDBNull(ProgID), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@ProcID",DbType.String, clsCommon.GetValueDBNull(ProcID), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@RecordID",DbType.int32, clsCommon.GetValueDBNull(RecordID), ParameterDirection.Input,4 ))
			Return (DAL.ExecNonQuery(PP_IF_ImpAR_ARDocData, CommandType.StoredProcedure, pc,"") > 0)
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Function GetAll(ByVal InternetAddress As System.String, ByVal UsrID As System.String, ByVal ProgID As System.String, ByVal ProcID As System.String, ByVal RecordID As System.Int32) as DataTable 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			Dim ds As New DataSet
			pc.Add(New ParamStruct("@Action", DbType.String, "GetListData", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@InternetAddress", DbType.String, clsCommon.GetValueDBNull(InternetAddress), ParameterDirection.Input, 21 ))
			pc.Add(New ParamStruct("@UsrID", DbType.String, clsCommon.GetValueDBNull(UsrID), ParameterDirection.Input, 10 ))
			pc.Add(New ParamStruct("@ProgID", DbType.String, clsCommon.GetValueDBNull(ProgID), ParameterDirection.Input, 8 ))
			pc.Add(New ParamStruct("@ProcID", DbType.String, clsCommon.GetValueDBNull(ProcID), ParameterDirection.Input, 8 ))
			pc.Add(New ParamStruct("@RecordID", DbType.int32, clsCommon.GetValueDBNull(RecordID), ParameterDirection.Input, 4 ))
			ds = DAL.ExecDataSet(PP_IF_ImpAR_ARDocData, CommandType.StoredProcedure, pc,"")
			Dim keys(4) As DataColumn
			Dim column As DataColumn
			column = ds.Tables(0).Columns("InternetAddress")
			Keys(0) = column
			column = ds.Tables(0).Columns("UsrID")
			Keys(1) = column
			column = ds.Tables(0).Columns("ProgID")
			Keys(2) = column
			column = ds.Tables(0).Columns("ProcID")
			Keys(3) = column
			column = ds.Tables(0).Columns("RecordID")
			Keys(4) = column
			ds.Tables(0).PrimaryKey = Keys
			Return ds.Tables(0)
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Sub Reset()
		mvarInternetAddress = String.Empty
		mvarUsrID = String.Empty
		mvarProgID = String.Empty
		mvarProcID = String.Empty
		mvarRecordID = 0
		mvarBranchID = String.Empty
		mvarBatNbr = String.Empty
		mvarRefNbr = String.Empty
		mvarCustId = String.Empty
		mvarSlsPerId = String.Empty
		mvarTaxId00 = String.Empty
		mvarTaxId01 = String.Empty
		mvarTaxId02 = String.Empty
		mvarTaxId03 = String.Empty
		mvarTerms = String.Empty
	End Sub
	Public Function GetByKey(ByVal InternetAddress As System.String, ByVal UsrID As System.String, ByVal ProgID As System.String, ByVal ProcID As System.String, ByVal RecordID As System.Int32) as Boolean 
		Dim DAL As DataAccess = m_Dal
		Dim ds As New DataSet 
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "GetData_ByKey", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@InternetAddress", DbType.String, clsCommon.GetValueDBNull(InternetAddress), ParameterDirection.InputOutput, 21 ))
			pc.Add(New ParamStruct("@UsrID", DbType.String, clsCommon.GetValueDBNull(UsrID), ParameterDirection.InputOutput, 10 ))
			pc.Add(New ParamStruct("@ProgID", DbType.String, clsCommon.GetValueDBNull(ProgID), ParameterDirection.InputOutput, 8 ))
			pc.Add(New ParamStruct("@ProcID", DbType.String, clsCommon.GetValueDBNull(ProcID), ParameterDirection.InputOutput, 8 ))
			pc.Add(New ParamStruct("@RecordID", DbType.int32, clsCommon.GetValueDBNull(RecordID), ParameterDirection.InputOutput, 4 ))
			ds = DAL.ExecDataSet(PP_IF_ImpAR_ARDocData, CommandType.StoredProcedure, pc,"")
			me.Reset()
			If ds Is Nothing Then
				Return False
			End If
			If ds.Tables(0).Rows.Count > 0 Then
				FillData(ds.Tables(0).Rows(0))
				Return True
			End If
		Catch ex As Exception
			Throw ex 
		End Try
		Return False
	End Function
	Public Sub FillData(row as DataRow)
		mvarInternetAddress =  clsCommon.GetValue(row("InternetAddress"), mvarInternetAddress.GetType().FullName)
		mvarUsrID =  clsCommon.GetValue(row("UsrID"), mvarUsrID.GetType().FullName)
		mvarProgID =  clsCommon.GetValue(row("ProgID"), mvarProgID.GetType().FullName)
		mvarProcID =  clsCommon.GetValue(row("ProcID"), mvarProcID.GetType().FullName)
		mvarRecordID =  clsCommon.GetValue(row("RecordID"), mvarRecordID.GetType().FullName)
		mvarBranchID =  clsCommon.GetValue(row("BranchID"), mvarBranchID.GetType().FullName)
		mvarBatNbr =  clsCommon.GetValue(row("BatNbr"), mvarBatNbr.GetType().FullName)
		mvarRefNbr =  clsCommon.GetValue(row("RefNbr"), mvarRefNbr.GetType().FullName)
		mvarCustId =  clsCommon.GetValue(row("CustId"), mvarCustId.GetType().FullName)
		mvarSlsPerId =  clsCommon.GetValue(row("SlsPerId"), mvarSlsPerId.GetType().FullName)
		mvarTaxId00 =  clsCommon.GetValue(row("TaxId00"), mvarTaxId00.GetType().FullName)
		mvarTaxId01 =  clsCommon.GetValue(row("TaxId01"), mvarTaxId01.GetType().FullName)
		mvarTaxId02 =  clsCommon.GetValue(row("TaxId02"), mvarTaxId02.GetType().FullName)
		mvarTaxId03 =  clsCommon.GetValue(row("TaxId03"), mvarTaxId03.GetType().FullName)
		mvarTerms =  clsCommon.GetValue(row("Terms"), mvarTerms.GetType().FullName)
	End Sub
#End Region 

#Region "Private Methods"
#End Region 

End Class
