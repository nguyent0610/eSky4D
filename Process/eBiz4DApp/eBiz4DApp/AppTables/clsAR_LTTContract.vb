'-- ------------------------------------------------------------
'-- Class name    :  clsAR_LTTContract
'-- Created date  :  5/13/2015
'-- Created by    :  
'-- Updated by    :  
'-- Generated by    :  Class Maker v1.0
'-- ------------------------------------------------------------

'-- Import Libraries --
Imports HQFramework.Common
Imports HQFramework.DAL
Public Class clsAR_LTTContract
#Region "Constants"
	Private Const PP_AR_LTTContract As String = "PP_AR_LTTContract"
#End Region 

#Region "Member Variables"
	Private mvarLTTContractNbr As System.String

	Private mvarActive As System.Boolean

	Private mvarMonthNum As System.Int32

	Private mvarCustID As System.String

	Private mvarExtDate As System.DateTime

	Private mvarFromDate As System.DateTime

	Private mvarAmtCommit As System.Double

	Private mvarQtyCommit As System.Double

	Private mvarStatus As System.String

	Private mvarToDate As System.DateTime

	Private mvarTotAmt As System.Double

	Private mvarTotQty As System.Double

	Private mvarUnitCommit As System.String

	Private mvarLUpd_Datetime As System.DateTime

	Private mvarLUpd_Prog As System.String

	Private mvarLUpd_User As System.String

	Private mvarCrtd_Datetime As System.DateTime

	Private mvarCrtd_Prog As System.String

	Private mvarCrtd_User As System.String

	Private mvartstamp As System.String

	Private mvarActualQty As System.Double

	Private mvarActualAmt As System.Double

#End Region 

	Private m_Dal As DataAccess
#Region "Constructors"
	Public Sub New()
		m_Dal = New DataAccess
		Reset()
	End Sub
	Public Sub New(ByVal dal As DataAccess)
		m_Dal = dal
		Reset()
	End Sub
#End Region 

#Region "Public Properties"
	Public Property LTTContractNbr() As System.String
		Get
			Return mvarLTTContractNbr
		End Get
		Set(ByVal Value As System.String)
			mvarLTTContractNbr = Value
		End Set
	End Property

	Public Property Active() As System.Boolean
		Get
			Return mvarActive
		End Get
		Set(ByVal Value As System.Boolean)
			mvarActive = Value
		End Set
	End Property

	Public Property MonthNum() As System.Int32
		Get
			Return mvarMonthNum
		End Get
		Set(ByVal Value As System.Int32)
			mvarMonthNum = Value
		End Set
	End Property

	Public Property CustID() As System.String
		Get
			Return mvarCustID
		End Get
		Set(ByVal Value As System.String)
			mvarCustID = Value
		End Set
	End Property

	Public Property ExtDate() As System.DateTime
		Get
			Return mvarExtDate
		End Get
		Set(ByVal Value As System.DateTime)
			mvarExtDate = Value
		End Set
	End Property

	Public Property FromDate() As System.DateTime
		Get
			Return mvarFromDate
		End Get
		Set(ByVal Value As System.DateTime)
			mvarFromDate = Value
		End Set
	End Property

	Public Property AmtCommit() As System.Double
		Get
			Return mvarAmtCommit
		End Get
		Set(ByVal Value As System.Double)
			mvarAmtCommit = Value
		End Set
	End Property

	Public Property QtyCommit() As System.Double
		Get
			Return mvarQtyCommit
		End Get
		Set(ByVal Value As System.Double)
			mvarQtyCommit = Value
		End Set
	End Property

	Public Property Status() As System.String
		Get
			Return mvarStatus
		End Get
		Set(ByVal Value As System.String)
			mvarStatus = Value
		End Set
	End Property

	Public Property ToDate() As System.DateTime
		Get
			Return mvarToDate
		End Get
		Set(ByVal Value As System.DateTime)
			mvarToDate = Value
		End Set
	End Property

	Public Property TotAmt() As System.Double
		Get
			Return mvarTotAmt
		End Get
		Set(ByVal Value As System.Double)
			mvarTotAmt = Value
		End Set
	End Property

	Public Property TotQty() As System.Double
		Get
			Return mvarTotQty
		End Get
		Set(ByVal Value As System.Double)
			mvarTotQty = Value
		End Set
	End Property

	Public Property UnitCommit() As System.String
		Get
			Return mvarUnitCommit
		End Get
		Set(ByVal Value As System.String)
			mvarUnitCommit = Value
		End Set
	End Property

	Public Property LUpd_Datetime() As System.DateTime
		Get
			Return mvarLUpd_Datetime
		End Get
		Set(ByVal Value As System.DateTime)
			mvarLUpd_Datetime = Value
		End Set
	End Property

	Public Property LUpd_Prog() As System.String
		Get
			Return mvarLUpd_Prog
		End Get
		Set(ByVal Value As System.String)
			mvarLUpd_Prog = Value
		End Set
	End Property

	Public Property LUpd_User() As System.String
		Get
			Return mvarLUpd_User
		End Get
		Set(ByVal Value As System.String)
			mvarLUpd_User = Value
		End Set
	End Property

	Public Property Crtd_Datetime() As System.DateTime
		Get
			Return mvarCrtd_Datetime
		End Get
		Set(ByVal Value As System.DateTime)
			mvarCrtd_Datetime = Value
		End Set
	End Property

	Public Property Crtd_Prog() As System.String
		Get
			Return mvarCrtd_Prog
		End Get
		Set(ByVal Value As System.String)
			mvarCrtd_Prog = Value
		End Set
	End Property

	Public Property Crtd_User() As System.String
		Get
			Return mvarCrtd_User
		End Get
		Set(ByVal Value As System.String)
			mvarCrtd_User = Value
		End Set
	End Property

	Public Property tstamp() As System.String
		Get
			Return mvartstamp
		End Get
		Set(ByVal Value As System.String)
			mvartstamp = Value
		End Set
	End Property

	Public Property ActualQty() As System.Double
		Get
			Return mvarActualQty
		End Get
		Set(ByVal Value As System.Double)
			mvarActualQty = Value
		End Set
	End Property

	Public Property ActualAmt() As System.Double
		Get
			Return mvarActualAmt
		End Get
		Set(ByVal Value As System.Double)
			mvarActualAmt = Value
		End Set
	End Property

#End Region 

#Region "Public Methods"
	Public Function Add() as Boolean 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "AddNew", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@LTTContractNbr", DbType.String,clsCommon.GetValueDBNull(Me.mvarLTTContractNbr), ParameterDirection.Input,30 ))
			pc.Add(New ParamStruct("@Active", DbType.Boolean,clsCommon.GetValueDBNull(Me.mvarActive), ParameterDirection.Input,2 ))
			pc.Add(New ParamStruct("@MonthNum", DbType.int32,clsCommon.GetValueDBNull(Me.mvarMonthNum), ParameterDirection.Input,4 ))
			pc.Add(New ParamStruct("@CustID", DbType.String,clsCommon.GetValueDBNull(Me.mvarCustID), ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@ExtDate", DbType.DateTime,clsCommon.GetValueDBNull(Me.mvarExtDate.Date), ParameterDirection.Input,16 ))
			pc.Add(New ParamStruct("@FromDate", DbType.DateTime,clsCommon.GetValueDBNull(Me.mvarFromDate.Date), ParameterDirection.Input,16 ))
			pc.Add(New ParamStruct("@AmtCommit", DbType.Decimal,clsCommon.GetValueDBNull(Me.mvarAmtCommit), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@QtyCommit", DbType.Decimal,clsCommon.GetValueDBNull(Me.mvarQtyCommit), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@Status", DbType.String,clsCommon.GetValueDBNull(Me.mvarStatus), ParameterDirection.Input,100 ))
			pc.Add(New ParamStruct("@ToDate", DbType.DateTime,clsCommon.GetValueDBNull(Me.mvarToDate.Date), ParameterDirection.Input,16 ))
			pc.Add(New ParamStruct("@TotAmt", DbType.Decimal,clsCommon.GetValueDBNull(Me.mvarTotAmt), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@TotQty", DbType.Decimal,clsCommon.GetValueDBNull(Me.mvarTotQty), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@UnitCommit", DbType.String,clsCommon.GetValueDBNull(Me.mvarUnitCommit), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@LUpd_Datetime", DbType.DateTime,clsCommon.GetValueDBNull(Me.mvarLUpd_Datetime), ParameterDirection.Input,16 ))
			pc.Add(New ParamStruct("@LUpd_Prog", DbType.String,clsCommon.GetValueDBNull(Me.mvarLUpd_Prog), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@LUpd_User", DbType.String,clsCommon.GetValueDBNull(Me.mvarLUpd_User), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@Crtd_Datetime", DbType.DateTime,clsCommon.GetValueDBNull(Me.mvarCrtd_Datetime), ParameterDirection.Input,16 ))
			pc.Add(New ParamStruct("@Crtd_Prog", DbType.String,clsCommon.GetValueDBNull(Me.mvarCrtd_Prog), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@Crtd_User", DbType.String,clsCommon.GetValueDBNull(Me.mvarCrtd_User), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@tstamp", DbType.String,clsCommon.GetValueDBNull(Me.mvartstamp), ParameterDirection.Input,18 ))
			pc.Add(New ParamStruct("@ActualQty", DbType.Decimal,clsCommon.GetValueDBNull(Me.mvarActualQty), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@ActualAmt", DbType.Decimal,clsCommon.GetValueDBNull(Me.mvarActualAmt), ParameterDirection.Input,8 ))
			DAL.ExecPreparedSQL(PP_AR_LTTContract, CommandType.StoredProcedure, pc,"")
		Me.mvarLTTContractNbr = clsCommon.GetValue(pc.Item("@LTTContractNbr").Value, mvarLTTContractNbr.GetType().FullName)
		Return (Me.mvarLTTContractNbr <> String.Empty )
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Function Update() as Boolean 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "Update", ParameterDirection.Input,50 ))
			 pc.Add(New ParamStruct("@LTTContractNbr",DbType.String, clsCommon.GetValueDBNull(me.mvarLTTContractNbr), ParameterDirection.Input,30 ))
			 pc.Add(New ParamStruct("@Active",DbType.Boolean, clsCommon.GetValueDBNull(me.mvarActive), ParameterDirection.Input,2 ))
			 pc.Add(New ParamStruct("@MonthNum",DbType.int32, clsCommon.GetValueDBNull(me.mvarMonthNum), ParameterDirection.Input,4 ))
			 pc.Add(New ParamStruct("@CustID",DbType.String, clsCommon.GetValueDBNull(me.mvarCustID), ParameterDirection.Input,50 ))
			 pc.Add(New ParamStruct("@ExtDate",DbType.DateTime, clsCommon.GetValueDBNull(me.mvarExtDate.Date), ParameterDirection.Input,16 ))
			 pc.Add(New ParamStruct("@FromDate",DbType.DateTime, clsCommon.GetValueDBNull(me.mvarFromDate.Date), ParameterDirection.Input,16 ))
			 pc.Add(New ParamStruct("@AmtCommit",DbType.Decimal, clsCommon.GetValueDBNull(me.mvarAmtCommit), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@QtyCommit",DbType.Decimal, clsCommon.GetValueDBNull(me.mvarQtyCommit), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@Status",DbType.String, clsCommon.GetValueDBNull(me.mvarStatus), ParameterDirection.Input,100 ))
			 pc.Add(New ParamStruct("@ToDate",DbType.DateTime, clsCommon.GetValueDBNull(me.mvarToDate.Date), ParameterDirection.Input,16 ))
			 pc.Add(New ParamStruct("@TotAmt",DbType.Decimal, clsCommon.GetValueDBNull(me.mvarTotAmt), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@TotQty",DbType.Decimal, clsCommon.GetValueDBNull(me.mvarTotQty), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@UnitCommit",DbType.String, clsCommon.GetValueDBNull(me.mvarUnitCommit), ParameterDirection.Input,10 ))
			 pc.Add(New ParamStruct("@LUpd_Datetime",DbType.DateTime, clsCommon.GetValueDBNull(me.mvarLUpd_Datetime), ParameterDirection.Input,16 ))
			 pc.Add(New ParamStruct("@LUpd_Prog",DbType.String, clsCommon.GetValueDBNull(me.mvarLUpd_Prog), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@LUpd_User",DbType.String, clsCommon.GetValueDBNull(me.mvarLUpd_User), ParameterDirection.Input,10 ))
			 pc.Add(New ParamStruct("@Crtd_Datetime",DbType.DateTime, clsCommon.GetValueDBNull(me.mvarCrtd_Datetime), ParameterDirection.Input,16 ))
			 pc.Add(New ParamStruct("@Crtd_Prog",DbType.String, clsCommon.GetValueDBNull(me.mvarCrtd_Prog), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@Crtd_User",DbType.String, clsCommon.GetValueDBNull(me.mvarCrtd_User), ParameterDirection.Input,10 ))
			 pc.Add(New ParamStruct("@tstamp",DbType.String, clsCommon.GetValueDBNull(me.mvartstamp), ParameterDirection.Input,18 ))
			 pc.Add(New ParamStruct("@ActualQty",DbType.Decimal, clsCommon.GetValueDBNull(me.mvarActualQty), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@ActualAmt",DbType.Decimal, clsCommon.GetValueDBNull(me.mvarActualAmt), ParameterDirection.Input,8 ))
			Return (DAL.ExecNonQuery(PP_AR_LTTContract, CommandType.StoredProcedure, pc,"") > 0)
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Function Delete(ByVal LTTContractNbr As System.String) as Boolean 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "Delete", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@LTTContractNbr",DbType.String, clsCommon.GetValueDBNull(LTTContractNbr), ParameterDirection.Input,30 ))
			Return (DAL.ExecNonQuery(PP_AR_LTTContract, CommandType.StoredProcedure, pc,"") > 0)
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Function GetAll(ByVal LTTContractNbr As System.String) as DataTable 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			Dim ds As New DataSet
			pc.Add(New ParamStruct("@Action", DbType.String, "GetListData", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@LTTContractNbr", DbType.String, clsCommon.GetValueDBNull(LTTContractNbr), ParameterDirection.Input, 30 ))
			ds = DAL.ExecDataSet(PP_AR_LTTContract, CommandType.StoredProcedure, pc,"")
			Dim keys(0) As DataColumn
			Dim column As DataColumn
			column = ds.Tables(0).Columns("LTTContractNbr")
			Keys(0) = column
			ds.Tables(0).PrimaryKey = Keys
			Return ds.Tables(0)
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Sub Reset()
		mvarLTTContractNbr = String.Empty
		mvarActive = False
		mvarMonthNum = 0
		mvarCustID = String.Empty
		mvarExtDate = Today
		mvarFromDate = Today
		mvarAmtCommit = 0
		mvarQtyCommit = 0
		mvarStatus = String.Empty
		mvarToDate = Today
		mvarTotAmt = 0
		mvarTotQty = 0
		mvarUnitCommit = String.Empty
		mvarLUpd_Datetime = Today
		mvarLUpd_Prog = String.Empty
		mvarLUpd_User = String.Empty
		mvarCrtd_Datetime = Today
		mvarCrtd_Prog = String.Empty
		mvarCrtd_User = String.Empty
		mvartstamp = String.Empty
		mvarActualQty = 0
		mvarActualAmt = 0
	End Sub
	Public Function GetByKey(ByVal LTTContractNbr As System.String) as Boolean 
		Dim DAL As DataAccess = m_Dal
		Dim ds As New DataSet 
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "GetData_ByKey", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@LTTContractNbr", DbType.String, clsCommon.GetValueDBNull(LTTContractNbr), ParameterDirection.InputOutput, 30 ))
			ds = DAL.ExecDataSet(PP_AR_LTTContract, CommandType.StoredProcedure, pc,"")
			me.Reset()
			If ds Is Nothing Then
				Return False
			End If
			If ds.Tables(0).Rows.Count > 0 Then
				FillData(ds.Tables(0).Rows(0))
				Return True
			End If
		Catch ex As Exception
			Throw ex 
		End Try
		Return False
	End Function
	Public Sub FillData(row as DataRow)
		mvarLTTContractNbr =  clsCommon.GetValue(row("LTTContractNbr"), mvarLTTContractNbr.GetType().FullName)
		mvarActive =  clsCommon.GetValue(row("Active"), mvarActive.GetType().FullName)
		mvarMonthNum =  clsCommon.GetValue(row("MonthNum"), mvarMonthNum.GetType().FullName)
		mvarCustID =  clsCommon.GetValue(row("CustID"), mvarCustID.GetType().FullName)
		mvarExtDate =  clsCommon.GetValue(row("ExtDate"), mvarExtDate.GetType().FullName)
		mvarFromDate =  clsCommon.GetValue(row("FromDate"), mvarFromDate.GetType().FullName)
		mvarAmtCommit =  clsCommon.GetValue(row("AmtCommit"), mvarAmtCommit.GetType().FullName)
		mvarQtyCommit =  clsCommon.GetValue(row("QtyCommit"), mvarQtyCommit.GetType().FullName)
		mvarStatus =  clsCommon.GetValue(row("Status"), mvarStatus.GetType().FullName)
		mvarToDate =  clsCommon.GetValue(row("ToDate"), mvarToDate.GetType().FullName)
		mvarTotAmt =  clsCommon.GetValue(row("TotAmt"), mvarTotAmt.GetType().FullName)
		mvarTotQty =  clsCommon.GetValue(row("TotQty"), mvarTotQty.GetType().FullName)
		mvarUnitCommit =  clsCommon.GetValue(row("UnitCommit"), mvarUnitCommit.GetType().FullName)
		mvarLUpd_Datetime =  clsCommon.GetValue(row("LUpd_Datetime"), mvarLUpd_Datetime.GetType().FullName)
		mvarLUpd_Prog =  clsCommon.GetValue(row("LUpd_Prog"), mvarLUpd_Prog.GetType().FullName)
		mvarLUpd_User =  clsCommon.GetValue(row("LUpd_User"), mvarLUpd_User.GetType().FullName)
		mvarCrtd_Datetime =  clsCommon.GetValue(row("Crtd_Datetime"), mvarCrtd_Datetime.GetType().FullName)
		mvarCrtd_Prog =  clsCommon.GetValue(row("Crtd_Prog"), mvarCrtd_Prog.GetType().FullName)
		mvarCrtd_User =  clsCommon.GetValue(row("Crtd_User"), mvarCrtd_User.GetType().FullName)
		mvartstamp =  clsCommon.GetValue(row("tstamp"), mvartstamp.GetType().FullName)
		mvarActualQty =  clsCommon.GetValue(row("ActualQty"), mvarActualQty.GetType().FullName)
		mvarActualAmt =  clsCommon.GetValue(row("ActualAmt"), mvarActualAmt.GetType().FullName)
	End Sub
#End Region 

#Region "Private Methods"
#End Region 

End Class
