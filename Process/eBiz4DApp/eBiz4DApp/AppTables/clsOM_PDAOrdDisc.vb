'-- ------------------------------------------------------------
'-- Class name    :  clsOM_PDAOrdDisc
'-- Created date  :  5/13/2015
'-- Created by    :  
'-- Updated by    :  
'-- Generated by    :  Class Maker v1.0
'-- ------------------------------------------------------------

'-- Import Libraries --
Imports HQFramework.Common
Imports HQFramework.DAL
Public Class clsOM_PDAOrdDisc
#Region "Constants"
	Private Const PP_OM_PDAOrdDisc As String = "PP_OM_PDAOrdDisc"
#End Region 

#Region "Member Variables"
	Private mvarBranchID As System.String

	Private mvarDiscID As System.String

	Private mvarDiscSeq As System.String

	Private mvarOrderNbr As System.String

	Private mvarLineRef As System.String

	Private mvarBreakBy As System.String

	Private mvarBudgetID As System.String

	Private mvarDiscAmt As System.Double

	Private mvarDiscFor As System.String

	Private mvarDisctblAmt As System.Double

	Private mvarDisctblQty As System.Double

	Private mvarDiscType As System.String

	Private mvarDiscUOM As System.String

	Private mvarFreeItemBudgetID As System.String

	Private mvarFreeItemID As System.String

	Private mvarFreeItemQty As System.Double

	Private mvarOrigFreeItemQty As System.Double

	Private mvarSlsPerID As System.String

	Private mvarSOLineRef As System.String

	Private mvarUserOperationLog As System.String

	Private mvarCrtd_DateTime As System.DateTime

	Private mvarCrtd_Prog As System.String

	Private mvarCrtd_User As System.String

	Private mvarLUpd_DateTime As System.DateTime

	Private mvarLUpd_Prog As System.String

	Private mvarLUpd_User As System.String

	Private mvartstamp As System.String

	Private mvarDiscBreakLineRef As System.String

#End Region 

	Private m_Dal As DataAccess
#Region "Constructors"
	Public Sub New()
		m_Dal = New DataAccess
		Reset()
	End Sub
	Public Sub New(ByVal dal As DataAccess)
		m_Dal = dal
		Reset()
	End Sub
#End Region 

#Region "Public Properties"
	Public Property BranchID() As System.String
		Get
			Return mvarBranchID
		End Get
		Set(ByVal Value As System.String)
			mvarBranchID = Value
		End Set
	End Property

	Public Property DiscID() As System.String
		Get
			Return mvarDiscID
		End Get
		Set(ByVal Value As System.String)
			mvarDiscID = Value
		End Set
	End Property

	Public Property DiscSeq() As System.String
		Get
			Return mvarDiscSeq
		End Get
		Set(ByVal Value As System.String)
			mvarDiscSeq = Value
		End Set
	End Property

	Public Property OrderNbr() As System.String
		Get
			Return mvarOrderNbr
		End Get
		Set(ByVal Value As System.String)
			mvarOrderNbr = Value
		End Set
	End Property

	Public Property LineRef() As System.String
		Get
			Return mvarLineRef
		End Get
		Set(ByVal Value As System.String)
			mvarLineRef = Value
		End Set
	End Property

	Public Property BreakBy() As System.String
		Get
			Return mvarBreakBy
		End Get
		Set(ByVal Value As System.String)
			mvarBreakBy = Value
		End Set
	End Property

	Public Property BudgetID() As System.String
		Get
			Return mvarBudgetID
		End Get
		Set(ByVal Value As System.String)
			mvarBudgetID = Value
		End Set
	End Property

	Public Property DiscAmt() As System.Double
		Get
			Return mvarDiscAmt
		End Get
		Set(ByVal Value As System.Double)
			mvarDiscAmt = Value
		End Set
	End Property

	Public Property DiscFor() As System.String
		Get
			Return mvarDiscFor
		End Get
		Set(ByVal Value As System.String)
			mvarDiscFor = Value
		End Set
	End Property

	Public Property DisctblAmt() As System.Double
		Get
			Return mvarDisctblAmt
		End Get
		Set(ByVal Value As System.Double)
			mvarDisctblAmt = Value
		End Set
	End Property

	Public Property DisctblQty() As System.Double
		Get
			Return mvarDisctblQty
		End Get
		Set(ByVal Value As System.Double)
			mvarDisctblQty = Value
		End Set
	End Property

	Public Property DiscType() As System.String
		Get
			Return mvarDiscType
		End Get
		Set(ByVal Value As System.String)
			mvarDiscType = Value
		End Set
	End Property

	Public Property DiscUOM() As System.String
		Get
			Return mvarDiscUOM
		End Get
		Set(ByVal Value As System.String)
			mvarDiscUOM = Value
		End Set
	End Property

	Public Property FreeItemBudgetID() As System.String
		Get
			Return mvarFreeItemBudgetID
		End Get
		Set(ByVal Value As System.String)
			mvarFreeItemBudgetID = Value
		End Set
	End Property

	Public Property FreeItemID() As System.String
		Get
			Return mvarFreeItemID
		End Get
		Set(ByVal Value As System.String)
			mvarFreeItemID = Value
		End Set
	End Property

	Public Property FreeItemQty() As System.Double
		Get
			Return mvarFreeItemQty
		End Get
		Set(ByVal Value As System.Double)
			mvarFreeItemQty = Value
		End Set
	End Property

	Public Property OrigFreeItemQty() As System.Double
		Get
			Return mvarOrigFreeItemQty
		End Get
		Set(ByVal Value As System.Double)
			mvarOrigFreeItemQty = Value
		End Set
	End Property

	Public Property SlsPerID() As System.String
		Get
			Return mvarSlsPerID
		End Get
		Set(ByVal Value As System.String)
			mvarSlsPerID = Value
		End Set
	End Property

	Public Property SOLineRef() As System.String
		Get
			Return mvarSOLineRef
		End Get
		Set(ByVal Value As System.String)
			mvarSOLineRef = Value
		End Set
	End Property

	Public Property UserOperationLog() As System.String
		Get
			Return mvarUserOperationLog
		End Get
		Set(ByVal Value As System.String)
			mvarUserOperationLog = Value
		End Set
	End Property

	Public Property Crtd_DateTime() As System.DateTime
		Get
			Return mvarCrtd_DateTime
		End Get
		Set(ByVal Value As System.DateTime)
			mvarCrtd_DateTime = Value
		End Set
	End Property

	Public Property Crtd_Prog() As System.String
		Get
			Return mvarCrtd_Prog
		End Get
		Set(ByVal Value As System.String)
			mvarCrtd_Prog = Value
		End Set
	End Property

	Public Property Crtd_User() As System.String
		Get
			Return mvarCrtd_User
		End Get
		Set(ByVal Value As System.String)
			mvarCrtd_User = Value
		End Set
	End Property

	Public Property LUpd_DateTime() As System.DateTime
		Get
			Return mvarLUpd_DateTime
		End Get
		Set(ByVal Value As System.DateTime)
			mvarLUpd_DateTime = Value
		End Set
	End Property

	Public Property LUpd_Prog() As System.String
		Get
			Return mvarLUpd_Prog
		End Get
		Set(ByVal Value As System.String)
			mvarLUpd_Prog = Value
		End Set
	End Property

	Public Property LUpd_User() As System.String
		Get
			Return mvarLUpd_User
		End Get
		Set(ByVal Value As System.String)
			mvarLUpd_User = Value
		End Set
	End Property

	Public Property tstamp() As System.String
		Get
			Return mvartstamp
		End Get
		Set(ByVal Value As System.String)
			mvartstamp = Value
		End Set
	End Property

	Public Property DiscBreakLineRef() As System.String
		Get
			Return mvarDiscBreakLineRef
		End Get
		Set(ByVal Value As System.String)
			mvarDiscBreakLineRef = Value
		End Set
	End Property

#End Region 

#Region "Public Methods"
	Public Function Add() as Boolean 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "AddNew", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@BranchID", DbType.String,clsCommon.GetValueDBNull(Me.mvarBranchID), ParameterDirection.Input,30 ))
			pc.Add(New ParamStruct("@DiscID", DbType.String,clsCommon.GetValueDBNull(Me.mvarDiscID), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@DiscSeq", DbType.String,clsCommon.GetValueDBNull(Me.mvarDiscSeq), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@OrderNbr", DbType.String,clsCommon.GetValueDBNull(Me.mvarOrderNbr), ParameterDirection.Input,15 ))
			pc.Add(New ParamStruct("@LineRef", DbType.String,clsCommon.GetValueDBNull(Me.mvarLineRef), ParameterDirection.Input,5 ))
			pc.Add(New ParamStruct("@BreakBy", DbType.String,clsCommon.GetValueDBNull(Me.mvarBreakBy), ParameterDirection.Input,1 ))
			pc.Add(New ParamStruct("@BudgetID", DbType.String,clsCommon.GetValueDBNull(Me.mvarBudgetID), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@DiscAmt", DbType.Decimal,clsCommon.GetValueDBNull(Me.mvarDiscAmt), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@DiscFor", DbType.String,clsCommon.GetValueDBNull(Me.mvarDiscFor), ParameterDirection.Input,1 ))
			pc.Add(New ParamStruct("@DisctblAmt", DbType.Decimal,clsCommon.GetValueDBNull(Me.mvarDisctblAmt), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@DisctblQty", DbType.Decimal,clsCommon.GetValueDBNull(Me.mvarDisctblQty), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@DiscType", DbType.String,clsCommon.GetValueDBNull(Me.mvarDiscType), ParameterDirection.Input,1 ))
			pc.Add(New ParamStruct("@DiscUOM", DbType.String,clsCommon.GetValueDBNull(Me.mvarDiscUOM), ParameterDirection.Input,15 ))
			pc.Add(New ParamStruct("@FreeItemBudgetID", DbType.String,clsCommon.GetValueDBNull(Me.mvarFreeItemBudgetID), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@FreeItemID", DbType.String,clsCommon.GetValueDBNull(Me.mvarFreeItemID), ParameterDirection.Input,30 ))
			pc.Add(New ParamStruct("@FreeItemQty", DbType.Decimal,clsCommon.GetValueDBNull(Me.mvarFreeItemQty), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@OrigFreeItemQty", DbType.Decimal,clsCommon.GetValueDBNull(Me.mvarOrigFreeItemQty), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@SlsPerID", DbType.String,clsCommon.GetValueDBNull(Me.mvarSlsPerID), ParameterDirection.Input,30 ))
			pc.Add(New ParamStruct("@SOLineRef", DbType.String,clsCommon.GetValueDBNull(Me.mvarSOLineRef), ParameterDirection.Input,5 ))
			pc.Add(New ParamStruct("@UserOperationLog", DbType.String,clsCommon.GetValueDBNull(Me.mvarUserOperationLog), ParameterDirection.Input,100 ))
			pc.Add(New ParamStruct("@Crtd_DateTime", DbType.DateTime,clsCommon.GetValueDBNull(Me.mvarCrtd_DateTime), ParameterDirection.Input,16 ))
			pc.Add(New ParamStruct("@Crtd_Prog", DbType.String,clsCommon.GetValueDBNull(Me.mvarCrtd_Prog), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@Crtd_User", DbType.String,clsCommon.GetValueDBNull(Me.mvarCrtd_User), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@LUpd_DateTime", DbType.DateTime,clsCommon.GetValueDBNull(Me.mvarLUpd_DateTime), ParameterDirection.Input,16 ))
			pc.Add(New ParamStruct("@LUpd_Prog", DbType.String,clsCommon.GetValueDBNull(Me.mvarLUpd_Prog), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@LUpd_User", DbType.String,clsCommon.GetValueDBNull(Me.mvarLUpd_User), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@tstamp", DbType.String,clsCommon.GetValueDBNull(Me.mvartstamp), ParameterDirection.Input,18 ))
			pc.Add(New ParamStruct("@DiscBreakLineRef", DbType.String,clsCommon.GetValueDBNull(Me.mvarDiscBreakLineRef), ParameterDirection.Input,5 ))
			DAL.ExecPreparedSQL(PP_OM_PDAOrdDisc, CommandType.StoredProcedure, pc,"")
		Me.mvarBranchID = clsCommon.GetValue(pc.Item("@BranchID").Value, mvarBranchID.GetType().FullName)
		Return (Me.mvarBranchID <> String.Empty )
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Function Update() as Boolean 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "Update", ParameterDirection.Input,50 ))
			 pc.Add(New ParamStruct("@BranchID",DbType.String, clsCommon.GetValueDBNull(me.mvarBranchID), ParameterDirection.Input,30 ))
			 pc.Add(New ParamStruct("@DiscID",DbType.String, clsCommon.GetValueDBNull(me.mvarDiscID), ParameterDirection.Input,10 ))
			 pc.Add(New ParamStruct("@DiscSeq",DbType.String, clsCommon.GetValueDBNull(me.mvarDiscSeq), ParameterDirection.Input,10 ))
			 pc.Add(New ParamStruct("@OrderNbr",DbType.String, clsCommon.GetValueDBNull(me.mvarOrderNbr), ParameterDirection.Input,15 ))
			 pc.Add(New ParamStruct("@LineRef",DbType.String, clsCommon.GetValueDBNull(me.mvarLineRef), ParameterDirection.Input,5 ))
			 pc.Add(New ParamStruct("@BreakBy",DbType.String, clsCommon.GetValueDBNull(me.mvarBreakBy), ParameterDirection.Input,1 ))
			 pc.Add(New ParamStruct("@BudgetID",DbType.String, clsCommon.GetValueDBNull(me.mvarBudgetID), ParameterDirection.Input,10 ))
			 pc.Add(New ParamStruct("@DiscAmt",DbType.Decimal, clsCommon.GetValueDBNull(me.mvarDiscAmt), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@DiscFor",DbType.String, clsCommon.GetValueDBNull(me.mvarDiscFor), ParameterDirection.Input,1 ))
			 pc.Add(New ParamStruct("@DisctblAmt",DbType.Decimal, clsCommon.GetValueDBNull(me.mvarDisctblAmt), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@DisctblQty",DbType.Decimal, clsCommon.GetValueDBNull(me.mvarDisctblQty), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@DiscType",DbType.String, clsCommon.GetValueDBNull(me.mvarDiscType), ParameterDirection.Input,1 ))
			 pc.Add(New ParamStruct("@DiscUOM",DbType.String, clsCommon.GetValueDBNull(me.mvarDiscUOM), ParameterDirection.Input,15 ))
			 pc.Add(New ParamStruct("@FreeItemBudgetID",DbType.String, clsCommon.GetValueDBNull(me.mvarFreeItemBudgetID), ParameterDirection.Input,10 ))
			 pc.Add(New ParamStruct("@FreeItemID",DbType.String, clsCommon.GetValueDBNull(me.mvarFreeItemID), ParameterDirection.Input,30 ))
			 pc.Add(New ParamStruct("@FreeItemQty",DbType.Decimal, clsCommon.GetValueDBNull(me.mvarFreeItemQty), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@OrigFreeItemQty",DbType.Decimal, clsCommon.GetValueDBNull(me.mvarOrigFreeItemQty), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@SlsPerID",DbType.String, clsCommon.GetValueDBNull(me.mvarSlsPerID), ParameterDirection.Input,30 ))
			 pc.Add(New ParamStruct("@SOLineRef",DbType.String, clsCommon.GetValueDBNull(me.mvarSOLineRef), ParameterDirection.Input,5 ))
			 pc.Add(New ParamStruct("@UserOperationLog",DbType.String, clsCommon.GetValueDBNull(me.mvarUserOperationLog), ParameterDirection.Input,100 ))
			 pc.Add(New ParamStruct("@Crtd_DateTime",DbType.DateTime, clsCommon.GetValueDBNull(me.mvarCrtd_DateTime), ParameterDirection.Input,16 ))
			 pc.Add(New ParamStruct("@Crtd_Prog",DbType.String, clsCommon.GetValueDBNull(me.mvarCrtd_Prog), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@Crtd_User",DbType.String, clsCommon.GetValueDBNull(me.mvarCrtd_User), ParameterDirection.Input,10 ))
			 pc.Add(New ParamStruct("@LUpd_DateTime",DbType.DateTime, clsCommon.GetValueDBNull(me.mvarLUpd_DateTime), ParameterDirection.Input,16 ))
			 pc.Add(New ParamStruct("@LUpd_Prog",DbType.String, clsCommon.GetValueDBNull(me.mvarLUpd_Prog), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@LUpd_User",DbType.String, clsCommon.GetValueDBNull(me.mvarLUpd_User), ParameterDirection.Input,10 ))
			 pc.Add(New ParamStruct("@tstamp",DbType.String, clsCommon.GetValueDBNull(me.mvartstamp), ParameterDirection.Input,18 ))
			 pc.Add(New ParamStruct("@DiscBreakLineRef",DbType.String, clsCommon.GetValueDBNull(me.mvarDiscBreakLineRef), ParameterDirection.Input,5 ))
			Return (DAL.ExecNonQuery(PP_OM_PDAOrdDisc, CommandType.StoredProcedure, pc,"") > 0)
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Function Delete(ByVal BranchID As System.String, ByVal DiscID As System.String, ByVal DiscSeq As System.String, ByVal OrderNbr As System.String, ByVal LineRef As System.String) as Boolean 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "Delete", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@BranchID",DbType.String, clsCommon.GetValueDBNull(BranchID), ParameterDirection.Input,30 ))
			pc.Add(New ParamStruct("@DiscID",DbType.String, clsCommon.GetValueDBNull(DiscID), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@DiscSeq",DbType.String, clsCommon.GetValueDBNull(DiscSeq), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@OrderNbr",DbType.String, clsCommon.GetValueDBNull(OrderNbr), ParameterDirection.Input,15 ))
			pc.Add(New ParamStruct("@LineRef",DbType.String, clsCommon.GetValueDBNull(LineRef), ParameterDirection.Input,5 ))
			Return (DAL.ExecNonQuery(PP_OM_PDAOrdDisc, CommandType.StoredProcedure, pc,"") > 0)
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Function GetAll(ByVal BranchID As System.String, ByVal DiscID As System.String, ByVal DiscSeq As System.String, ByVal OrderNbr As System.String, ByVal LineRef As System.String) as DataTable 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			Dim ds As New DataSet
			pc.Add(New ParamStruct("@Action", DbType.String, "GetListData", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@BranchID", DbType.String, clsCommon.GetValueDBNull(BranchID), ParameterDirection.Input, 30 ))
			pc.Add(New ParamStruct("@DiscID", DbType.String, clsCommon.GetValueDBNull(DiscID), ParameterDirection.Input, 10 ))
			pc.Add(New ParamStruct("@DiscSeq", DbType.String, clsCommon.GetValueDBNull(DiscSeq), ParameterDirection.Input, 10 ))
			pc.Add(New ParamStruct("@OrderNbr", DbType.String, clsCommon.GetValueDBNull(OrderNbr), ParameterDirection.Input, 15 ))
			pc.Add(New ParamStruct("@LineRef", DbType.String, clsCommon.GetValueDBNull(LineRef), ParameterDirection.Input, 5 ))
			ds = DAL.ExecDataSet(PP_OM_PDAOrdDisc, CommandType.StoredProcedure, pc,"")
			Dim keys(4) As DataColumn
			Dim column As DataColumn
			column = ds.Tables(0).Columns("BranchID")
			Keys(0) = column
			column = ds.Tables(0).Columns("DiscID")
			Keys(1) = column
			column = ds.Tables(0).Columns("DiscSeq")
			Keys(2) = column
			column = ds.Tables(0).Columns("OrderNbr")
			Keys(3) = column
			column = ds.Tables(0).Columns("LineRef")
			Keys(4) = column
			ds.Tables(0).PrimaryKey = Keys
			Return ds.Tables(0)
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Sub Reset()
		mvarBranchID = String.Empty
		mvarDiscID = String.Empty
		mvarDiscSeq = String.Empty
		mvarOrderNbr = String.Empty
		mvarLineRef = String.Empty
		mvarBreakBy = String.Empty
		mvarBudgetID = String.Empty
		mvarDiscAmt = 0
		mvarDiscFor = String.Empty
		mvarDisctblAmt = 0
		mvarDisctblQty = 0
		mvarDiscType = String.Empty
		mvarDiscUOM = String.Empty
		mvarFreeItemBudgetID = String.Empty
		mvarFreeItemID = String.Empty
		mvarFreeItemQty = 0
		mvarOrigFreeItemQty = 0
		mvarSlsPerID = String.Empty
		mvarSOLineRef = String.Empty
		mvarUserOperationLog = String.Empty
		mvarCrtd_DateTime = Today
		mvarCrtd_Prog = String.Empty
		mvarCrtd_User = String.Empty
		mvarLUpd_DateTime = Today
		mvarLUpd_Prog = String.Empty
		mvarLUpd_User = String.Empty
		mvartstamp = String.Empty
		mvarDiscBreakLineRef = String.Empty
	End Sub
	Public Function GetByKey(ByVal BranchID As System.String, ByVal DiscID As System.String, ByVal DiscSeq As System.String, ByVal OrderNbr As System.String, ByVal LineRef As System.String) as Boolean 
		Dim DAL As DataAccess = m_Dal
		Dim ds As New DataSet 
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "GetData_ByKey", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@BranchID", DbType.String, clsCommon.GetValueDBNull(BranchID), ParameterDirection.InputOutput, 30 ))
			pc.Add(New ParamStruct("@DiscID", DbType.String, clsCommon.GetValueDBNull(DiscID), ParameterDirection.InputOutput, 10 ))
			pc.Add(New ParamStruct("@DiscSeq", DbType.String, clsCommon.GetValueDBNull(DiscSeq), ParameterDirection.InputOutput, 10 ))
			pc.Add(New ParamStruct("@OrderNbr", DbType.String, clsCommon.GetValueDBNull(OrderNbr), ParameterDirection.InputOutput, 15 ))
			pc.Add(New ParamStruct("@LineRef", DbType.String, clsCommon.GetValueDBNull(LineRef), ParameterDirection.InputOutput, 5 ))
			ds = DAL.ExecDataSet(PP_OM_PDAOrdDisc, CommandType.StoredProcedure, pc,"")
			me.Reset()
			If ds Is Nothing Then
				Return False
			End If
			If ds.Tables(0).Rows.Count > 0 Then
				FillData(ds.Tables(0).Rows(0))
				Return True
			End If
		Catch ex As Exception
			Throw ex 
		End Try
		Return False
	End Function
	Public Sub FillData(row as DataRow)
		mvarBranchID =  clsCommon.GetValue(row("BranchID"), mvarBranchID.GetType().FullName)
		mvarDiscID =  clsCommon.GetValue(row("DiscID"), mvarDiscID.GetType().FullName)
		mvarDiscSeq =  clsCommon.GetValue(row("DiscSeq"), mvarDiscSeq.GetType().FullName)
		mvarOrderNbr =  clsCommon.GetValue(row("OrderNbr"), mvarOrderNbr.GetType().FullName)
		mvarLineRef =  clsCommon.GetValue(row("LineRef"), mvarLineRef.GetType().FullName)
		mvarBreakBy =  clsCommon.GetValue(row("BreakBy"), mvarBreakBy.GetType().FullName)
		mvarBudgetID =  clsCommon.GetValue(row("BudgetID"), mvarBudgetID.GetType().FullName)
		mvarDiscAmt =  clsCommon.GetValue(row("DiscAmt"), mvarDiscAmt.GetType().FullName)
		mvarDiscFor =  clsCommon.GetValue(row("DiscFor"), mvarDiscFor.GetType().FullName)
		mvarDisctblAmt =  clsCommon.GetValue(row("DisctblAmt"), mvarDisctblAmt.GetType().FullName)
		mvarDisctblQty =  clsCommon.GetValue(row("DisctblQty"), mvarDisctblQty.GetType().FullName)
		mvarDiscType =  clsCommon.GetValue(row("DiscType"), mvarDiscType.GetType().FullName)
		mvarDiscUOM =  clsCommon.GetValue(row("DiscUOM"), mvarDiscUOM.GetType().FullName)
		mvarFreeItemBudgetID =  clsCommon.GetValue(row("FreeItemBudgetID"), mvarFreeItemBudgetID.GetType().FullName)
		mvarFreeItemID =  clsCommon.GetValue(row("FreeItemID"), mvarFreeItemID.GetType().FullName)
		mvarFreeItemQty =  clsCommon.GetValue(row("FreeItemQty"), mvarFreeItemQty.GetType().FullName)
		mvarOrigFreeItemQty =  clsCommon.GetValue(row("OrigFreeItemQty"), mvarOrigFreeItemQty.GetType().FullName)
		mvarSlsPerID =  clsCommon.GetValue(row("SlsPerID"), mvarSlsPerID.GetType().FullName)
		mvarSOLineRef =  clsCommon.GetValue(row("SOLineRef"), mvarSOLineRef.GetType().FullName)
		mvarUserOperationLog =  clsCommon.GetValue(row("UserOperationLog"), mvarUserOperationLog.GetType().FullName)
		mvarCrtd_DateTime =  clsCommon.GetValue(row("Crtd_DateTime"), mvarCrtd_DateTime.GetType().FullName)
		mvarCrtd_Prog =  clsCommon.GetValue(row("Crtd_Prog"), mvarCrtd_Prog.GetType().FullName)
		mvarCrtd_User =  clsCommon.GetValue(row("Crtd_User"), mvarCrtd_User.GetType().FullName)
		mvarLUpd_DateTime =  clsCommon.GetValue(row("LUpd_DateTime"), mvarLUpd_DateTime.GetType().FullName)
		mvarLUpd_Prog =  clsCommon.GetValue(row("LUpd_Prog"), mvarLUpd_Prog.GetType().FullName)
		mvarLUpd_User =  clsCommon.GetValue(row("LUpd_User"), mvarLUpd_User.GetType().FullName)
		mvartstamp =  clsCommon.GetValue(row("tstamp"), mvartstamp.GetType().FullName)
		mvarDiscBreakLineRef =  clsCommon.GetValue(row("DiscBreakLineRef"), mvarDiscBreakLineRef.GetType().FullName)
	End Sub
#End Region 

#Region "Private Methods"
#End Region 

End Class
