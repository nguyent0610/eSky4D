'-- ------------------------------------------------------------
'-- Class name    :  clsSI_ApprovalFlowStatus
'-- Created date  :  5/13/2015
'-- Created by    :  
'-- Updated by    :  
'-- Generated by    :  Class Maker v1.0
'-- ------------------------------------------------------------

'-- Import Libraries --
Imports HQFramework.Common
Imports HQFramework.DAL
Public Class clsSI_ApprovalFlowStatus
#Region "Constants"
	Private Const PP_SI_ApprovalFlowStatus As String = "PP_SI_ApprovalFlowStatus"
#End Region 

#Region "Member Variables"
	Private mvarAppFolID As System.String

	Private mvarRoleID As System.String

	Private mvarStatus As System.String

	Private mvarDescr As System.String

	Private mvarLangStatus As System.String

	Private mvarCrtd_Datetime As System.DateTime

	Private mvarCrtd_Prog As System.String

	Private mvarCrtd_User As System.String

	Private mvarLUpd_Datetime As System.DateTime

	Private mvarLUpd_Prog As System.String

	Private mvarLUpd_User As System.String

	Private mvartstamp As System.String

#End Region 

	Private m_Dal As DataAccess
#Region "Constructors"
	Public Sub New()
		m_Dal = New DataAccess
		Reset()
	End Sub
	Public Sub New(ByVal dal As DataAccess)
		m_Dal = dal
		Reset()
	End Sub
#End Region 

#Region "Public Properties"
	Public Property AppFolID() As System.String
		Get
			Return mvarAppFolID
		End Get
		Set(ByVal Value As System.String)
			mvarAppFolID = Value
		End Set
	End Property

	Public Property RoleID() As System.String
		Get
			Return mvarRoleID
		End Get
		Set(ByVal Value As System.String)
			mvarRoleID = Value
		End Set
	End Property

	Public Property Status() As System.String
		Get
			Return mvarStatus
		End Get
		Set(ByVal Value As System.String)
			mvarStatus = Value
		End Set
	End Property

	Public Property Descr() As System.String
		Get
			Return mvarDescr
		End Get
		Set(ByVal Value As System.String)
			mvarDescr = Value
		End Set
	End Property

	Public Property LangStatus() As System.String
		Get
			Return mvarLangStatus
		End Get
		Set(ByVal Value As System.String)
			mvarLangStatus = Value
		End Set
	End Property

	Public Property Crtd_Datetime() As System.DateTime
		Get
			Return mvarCrtd_Datetime
		End Get
		Set(ByVal Value As System.DateTime)
			mvarCrtd_Datetime = Value
		End Set
	End Property

	Public Property Crtd_Prog() As System.String
		Get
			Return mvarCrtd_Prog
		End Get
		Set(ByVal Value As System.String)
			mvarCrtd_Prog = Value
		End Set
	End Property

	Public Property Crtd_User() As System.String
		Get
			Return mvarCrtd_User
		End Get
		Set(ByVal Value As System.String)
			mvarCrtd_User = Value
		End Set
	End Property

	Public Property LUpd_Datetime() As System.DateTime
		Get
			Return mvarLUpd_Datetime
		End Get
		Set(ByVal Value As System.DateTime)
			mvarLUpd_Datetime = Value
		End Set
	End Property

	Public Property LUpd_Prog() As System.String
		Get
			Return mvarLUpd_Prog
		End Get
		Set(ByVal Value As System.String)
			mvarLUpd_Prog = Value
		End Set
	End Property

	Public Property LUpd_User() As System.String
		Get
			Return mvarLUpd_User
		End Get
		Set(ByVal Value As System.String)
			mvarLUpd_User = Value
		End Set
	End Property

	Public Property tstamp() As System.String
		Get
			Return mvartstamp
		End Get
		Set(ByVal Value As System.String)
			mvartstamp = Value
		End Set
	End Property

#End Region 

#Region "Public Methods"
	Public Function Add() as Boolean 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "AddNew", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@AppFolID", DbType.String,clsCommon.GetValueDBNull(Me.mvarAppFolID), ParameterDirection.Input,30 ))
			pc.Add(New ParamStruct("@RoleID", DbType.String,clsCommon.GetValueDBNull(Me.mvarRoleID), ParameterDirection.Input,30 ))
			pc.Add(New ParamStruct("@Status", DbType.String,clsCommon.GetValueDBNull(Me.mvarStatus), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@Descr", DbType.String,clsCommon.GetValueDBNull(Me.mvarDescr), ParameterDirection.Input,400 ))
			pc.Add(New ParamStruct("@LangStatus", DbType.String,clsCommon.GetValueDBNull(Me.mvarLangStatus), ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@Crtd_Datetime", DbType.DateTime,clsCommon.GetValueDBNull(Me.mvarCrtd_Datetime), ParameterDirection.Input,16 ))
			pc.Add(New ParamStruct("@Crtd_Prog", DbType.String,clsCommon.GetValueDBNull(Me.mvarCrtd_Prog), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@Crtd_User", DbType.String,clsCommon.GetValueDBNull(Me.mvarCrtd_User), ParameterDirection.Input,30 ))
			pc.Add(New ParamStruct("@LUpd_Datetime", DbType.DateTime,clsCommon.GetValueDBNull(Me.mvarLUpd_Datetime), ParameterDirection.Input,16 ))
			pc.Add(New ParamStruct("@LUpd_Prog", DbType.String,clsCommon.GetValueDBNull(Me.mvarLUpd_Prog), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@LUpd_User", DbType.String,clsCommon.GetValueDBNull(Me.mvarLUpd_User), ParameterDirection.Input,30 ))
			pc.Add(New ParamStruct("@tstamp", DbType.String,clsCommon.GetValueDBNull(Me.mvartstamp), ParameterDirection.Input,18 ))
			DAL.ExecPreparedSQL(PP_SI_ApprovalFlowStatus, CommandType.StoredProcedure, pc,"")
		Me.mvarAppFolID = clsCommon.GetValue(pc.Item("@AppFolID").Value, mvarAppFolID.GetType().FullName)
		Return (Me.mvarAppFolID <> String.Empty )
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Function Update() as Boolean 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "Update", ParameterDirection.Input,50 ))
			 pc.Add(New ParamStruct("@AppFolID",DbType.String, clsCommon.GetValueDBNull(me.mvarAppFolID), ParameterDirection.Input,30 ))
			 pc.Add(New ParamStruct("@RoleID",DbType.String, clsCommon.GetValueDBNull(me.mvarRoleID), ParameterDirection.Input,30 ))
			 pc.Add(New ParamStruct("@Status",DbType.String, clsCommon.GetValueDBNull(me.mvarStatus), ParameterDirection.Input,10 ))
			 pc.Add(New ParamStruct("@Descr",DbType.String, clsCommon.GetValueDBNull(me.mvarDescr), ParameterDirection.Input,400 ))
			 pc.Add(New ParamStruct("@LangStatus",DbType.String, clsCommon.GetValueDBNull(me.mvarLangStatus), ParameterDirection.Input,50 ))
			 pc.Add(New ParamStruct("@Crtd_Datetime",DbType.DateTime, clsCommon.GetValueDBNull(me.mvarCrtd_Datetime), ParameterDirection.Input,16 ))
			 pc.Add(New ParamStruct("@Crtd_Prog",DbType.String, clsCommon.GetValueDBNull(me.mvarCrtd_Prog), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@Crtd_User",DbType.String, clsCommon.GetValueDBNull(me.mvarCrtd_User), ParameterDirection.Input,30 ))
			 pc.Add(New ParamStruct("@LUpd_Datetime",DbType.DateTime, clsCommon.GetValueDBNull(me.mvarLUpd_Datetime), ParameterDirection.Input,16 ))
			 pc.Add(New ParamStruct("@LUpd_Prog",DbType.String, clsCommon.GetValueDBNull(me.mvarLUpd_Prog), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@LUpd_User",DbType.String, clsCommon.GetValueDBNull(me.mvarLUpd_User), ParameterDirection.Input,30 ))
			 pc.Add(New ParamStruct("@tstamp",DbType.String, clsCommon.GetValueDBNull(me.mvartstamp), ParameterDirection.Input,18 ))
			Return (DAL.ExecNonQuery(PP_SI_ApprovalFlowStatus, CommandType.StoredProcedure, pc,"") > 0)
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Function Delete(ByVal AppFolID As System.String, ByVal RoleID As System.String, ByVal Status As System.String) as Boolean 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "Delete", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@AppFolID",DbType.String, clsCommon.GetValueDBNull(AppFolID), ParameterDirection.Input,30 ))
			pc.Add(New ParamStruct("@RoleID",DbType.String, clsCommon.GetValueDBNull(RoleID), ParameterDirection.Input,30 ))
			pc.Add(New ParamStruct("@Status",DbType.String, clsCommon.GetValueDBNull(Status), ParameterDirection.Input,10 ))
			Return (DAL.ExecNonQuery(PP_SI_ApprovalFlowStatus, CommandType.StoredProcedure, pc,"") > 0)
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Function GetAll(ByVal AppFolID As System.String, ByVal RoleID As System.String, ByVal Status As System.String) as DataTable 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			Dim ds As New DataSet
			pc.Add(New ParamStruct("@Action", DbType.String, "GetListData", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@AppFolID", DbType.String, clsCommon.GetValueDBNull(AppFolID), ParameterDirection.Input, 30 ))
			pc.Add(New ParamStruct("@RoleID", DbType.String, clsCommon.GetValueDBNull(RoleID), ParameterDirection.Input, 30 ))
			pc.Add(New ParamStruct("@Status", DbType.String, clsCommon.GetValueDBNull(Status), ParameterDirection.Input, 10 ))
			ds = DAL.ExecDataSet(PP_SI_ApprovalFlowStatus, CommandType.StoredProcedure, pc,"")
			Dim keys(2) As DataColumn
			Dim column As DataColumn
			column = ds.Tables(0).Columns("AppFolID")
			Keys(0) = column
			column = ds.Tables(0).Columns("RoleID")
			Keys(1) = column
			column = ds.Tables(0).Columns("Status")
			Keys(2) = column
			ds.Tables(0).PrimaryKey = Keys
			Return ds.Tables(0)
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Sub Reset()
		mvarAppFolID = String.Empty
		mvarRoleID = String.Empty
		mvarStatus = String.Empty
		mvarDescr = String.Empty
		mvarLangStatus = String.Empty
		mvarCrtd_Datetime = Today
		mvarCrtd_Prog = String.Empty
		mvarCrtd_User = String.Empty
		mvarLUpd_Datetime = Today
		mvarLUpd_Prog = String.Empty
		mvarLUpd_User = String.Empty
		mvartstamp = String.Empty
	End Sub
	Public Function GetByKey(ByVal AppFolID As System.String, ByVal RoleID As System.String, ByVal Status As System.String) as Boolean 
		Dim DAL As DataAccess = m_Dal
		Dim ds As New DataSet 
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "GetData_ByKey", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@AppFolID", DbType.String, clsCommon.GetValueDBNull(AppFolID), ParameterDirection.InputOutput, 30 ))
			pc.Add(New ParamStruct("@RoleID", DbType.String, clsCommon.GetValueDBNull(RoleID), ParameterDirection.InputOutput, 30 ))
			pc.Add(New ParamStruct("@Status", DbType.String, clsCommon.GetValueDBNull(Status), ParameterDirection.InputOutput, 10 ))
			ds = DAL.ExecDataSet(PP_SI_ApprovalFlowStatus, CommandType.StoredProcedure, pc,"")
			me.Reset()
			If ds Is Nothing Then
				Return False
			End If
			If ds.Tables(0).Rows.Count > 0 Then
				FillData(ds.Tables(0).Rows(0))
				Return True
			End If
		Catch ex As Exception
			Throw ex 
		End Try
		Return False
	End Function
	Public Sub FillData(row as DataRow)
		mvarAppFolID =  clsCommon.GetValue(row("AppFolID"), mvarAppFolID.GetType().FullName)
		mvarRoleID =  clsCommon.GetValue(row("RoleID"), mvarRoleID.GetType().FullName)
		mvarStatus =  clsCommon.GetValue(row("Status"), mvarStatus.GetType().FullName)
		mvarDescr =  clsCommon.GetValue(row("Descr"), mvarDescr.GetType().FullName)
		mvarLangStatus =  clsCommon.GetValue(row("LangStatus"), mvarLangStatus.GetType().FullName)
		mvarCrtd_Datetime =  clsCommon.GetValue(row("Crtd_Datetime"), mvarCrtd_Datetime.GetType().FullName)
		mvarCrtd_Prog =  clsCommon.GetValue(row("Crtd_Prog"), mvarCrtd_Prog.GetType().FullName)
		mvarCrtd_User =  clsCommon.GetValue(row("Crtd_User"), mvarCrtd_User.GetType().FullName)
		mvarLUpd_Datetime =  clsCommon.GetValue(row("LUpd_Datetime"), mvarLUpd_Datetime.GetType().FullName)
		mvarLUpd_Prog =  clsCommon.GetValue(row("LUpd_Prog"), mvarLUpd_Prog.GetType().FullName)
		mvarLUpd_User =  clsCommon.GetValue(row("LUpd_User"), mvarLUpd_User.GetType().FullName)
		mvartstamp =  clsCommon.GetValue(row("tstamp"), mvartstamp.GetType().FullName)
	End Sub
#End Region 

#Region "Private Methods"
#End Region 

End Class
