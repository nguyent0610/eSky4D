'-- ------------------------------------------------------------
'-- Class name    :  clsIN_StockRecoveryDet
'-- Created date  :  5/13/2015
'-- Created by    :  
'-- Updated by    :  
'-- Generated by    :  Class Maker v1.0
'-- ------------------------------------------------------------

'-- Import Libraries --
Imports HQFramework.Common
Imports HQFramework.DAL
Public Class clsIN_StockRecoveryDet
#Region "Constants"
	Private Const PP_IN_StockRecoveryDet As String = "PP_IN_StockRecoveryDet"
#End Region 

#Region "Member Variables"
	Private mvarBranchID As System.String

	Private mvarStkRecNbr As System.String

	Private mvarExpDate As System.DateTime

	Private mvarInvtID As System.String

	Private mvarStkQty As System.Double

	Private mvarPrice As System.Double

	Private mvarApproveStkQty As System.Double

	Private mvarStatus As System.String

	Private mvarCrtd_Prog As System.String

	Private mvarCrtd_User As System.String

	Private mvarCrtd_DateTime As System.DateTime

	Private mvarLUpd_Prog As System.String

	Private mvarLUpd_User As System.String

	Private mvarLUpd_DateTime As System.DateTime

	Private mvartstamp As System.String

	Private mvarNewExpDate As System.DateTime

#End Region 

	Private m_Dal As DataAccess
#Region "Constructors"
	Public Sub New()
		m_Dal = New DataAccess
		Reset()
	End Sub
	Public Sub New(ByVal dal As DataAccess)
		m_Dal = dal
		Reset()
	End Sub
#End Region 

#Region "Public Properties"
	Public Property BranchID() As System.String
		Get
			Return mvarBranchID
		End Get
		Set(ByVal Value As System.String)
			mvarBranchID = Value
		End Set
	End Property

	Public Property StkRecNbr() As System.String
		Get
			Return mvarStkRecNbr
		End Get
		Set(ByVal Value As System.String)
			mvarStkRecNbr = Value
		End Set
	End Property

	Public Property ExpDate() As System.DateTime
		Get
			Return mvarExpDate
		End Get
		Set(ByVal Value As System.DateTime)
			mvarExpDate = Value
		End Set
	End Property

	Public Property InvtID() As System.String
		Get
			Return mvarInvtID
		End Get
		Set(ByVal Value As System.String)
			mvarInvtID = Value
		End Set
	End Property

	Public Property StkQty() As System.Double
		Get
			Return mvarStkQty
		End Get
		Set(ByVal Value As System.Double)
			mvarStkQty = Value
		End Set
	End Property

	Public Property Price() As System.Double
		Get
			Return mvarPrice
		End Get
		Set(ByVal Value As System.Double)
			mvarPrice = Value
		End Set
	End Property

	Public Property ApproveStkQty() As System.Double
		Get
			Return mvarApproveStkQty
		End Get
		Set(ByVal Value As System.Double)
			mvarApproveStkQty = Value
		End Set
	End Property

	Public Property Status() As System.String
		Get
			Return mvarStatus
		End Get
		Set(ByVal Value As System.String)
			mvarStatus = Value
		End Set
	End Property

	Public Property Crtd_Prog() As System.String
		Get
			Return mvarCrtd_Prog
		End Get
		Set(ByVal Value As System.String)
			mvarCrtd_Prog = Value
		End Set
	End Property

	Public Property Crtd_User() As System.String
		Get
			Return mvarCrtd_User
		End Get
		Set(ByVal Value As System.String)
			mvarCrtd_User = Value
		End Set
	End Property

	Public Property Crtd_DateTime() As System.DateTime
		Get
			Return mvarCrtd_DateTime
		End Get
		Set(ByVal Value As System.DateTime)
			mvarCrtd_DateTime = Value
		End Set
	End Property

	Public Property LUpd_Prog() As System.String
		Get
			Return mvarLUpd_Prog
		End Get
		Set(ByVal Value As System.String)
			mvarLUpd_Prog = Value
		End Set
	End Property

	Public Property LUpd_User() As System.String
		Get
			Return mvarLUpd_User
		End Get
		Set(ByVal Value As System.String)
			mvarLUpd_User = Value
		End Set
	End Property

	Public Property LUpd_DateTime() As System.DateTime
		Get
			Return mvarLUpd_DateTime
		End Get
		Set(ByVal Value As System.DateTime)
			mvarLUpd_DateTime = Value
		End Set
	End Property

	Public Property tstamp() As System.String
		Get
			Return mvartstamp
		End Get
		Set(ByVal Value As System.String)
			mvartstamp = Value
		End Set
	End Property

	Public Property NewExpDate() As System.DateTime
		Get
			Return mvarNewExpDate
		End Get
		Set(ByVal Value As System.DateTime)
			mvarNewExpDate = Value
		End Set
	End Property

#End Region 

#Region "Public Methods"
	Public Function Add() as Boolean 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "AddNew", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@BranchID", DbType.String,clsCommon.GetValueDBNull(Me.mvarBranchID), ParameterDirection.Input,30 ))
			pc.Add(New ParamStruct("@StkRecNbr", DbType.String,clsCommon.GetValueDBNull(Me.mvarStkRecNbr), ParameterDirection.Input,30 ))
			pc.Add(New ParamStruct("@ExpDate", DbType.DateTime,clsCommon.GetValueDBNull(Me.mvarExpDate), ParameterDirection.Input,16 ))
			pc.Add(New ParamStruct("@InvtID", DbType.String,clsCommon.GetValueDBNull(Me.mvarInvtID), ParameterDirection.Input,30 ))
			pc.Add(New ParamStruct("@StkQty", DbType.Decimal,clsCommon.GetValueDBNull(Me.mvarStkQty), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@Price", DbType.Decimal,clsCommon.GetValueDBNull(Me.mvarPrice), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@ApproveStkQty", DbType.Decimal,clsCommon.GetValueDBNull(Me.mvarApproveStkQty), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@Status", DbType.String,clsCommon.GetValueDBNull(Me.mvarStatus), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@Crtd_Prog", DbType.String,clsCommon.GetValueDBNull(Me.mvarCrtd_Prog), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@Crtd_User", DbType.String,clsCommon.GetValueDBNull(Me.mvarCrtd_User), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@Crtd_DateTime", DbType.DateTime,clsCommon.GetValueDBNull(Me.mvarCrtd_DateTime), ParameterDirection.Input,16 ))
			pc.Add(New ParamStruct("@LUpd_Prog", DbType.String,clsCommon.GetValueDBNull(Me.mvarLUpd_Prog), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@LUpd_User", DbType.String,clsCommon.GetValueDBNull(Me.mvarLUpd_User), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@LUpd_DateTime", DbType.DateTime,clsCommon.GetValueDBNull(Me.mvarLUpd_DateTime), ParameterDirection.Input,16 ))
			pc.Add(New ParamStruct("@tstamp", DbType.String,clsCommon.GetValueDBNull(Me.mvartstamp), ParameterDirection.Input,18 ))
			pc.Add(New ParamStruct("@NewExpDate", DbType.DateTime,clsCommon.GetValueDBNull(Me.mvarNewExpDate), ParameterDirection.Input,16 ))
			DAL.ExecPreparedSQL(PP_IN_StockRecoveryDet, CommandType.StoredProcedure, pc,"")
		Me.mvarBranchID = clsCommon.GetValue(pc.Item("@BranchID").Value, mvarBranchID.GetType().FullName)
		Return (Me.mvarBranchID <> String.Empty )
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Function Update() as Boolean 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "Update", ParameterDirection.Input,50 ))
			 pc.Add(New ParamStruct("@BranchID",DbType.String, clsCommon.GetValueDBNull(me.mvarBranchID), ParameterDirection.Input,30 ))
			 pc.Add(New ParamStruct("@StkRecNbr",DbType.String, clsCommon.GetValueDBNull(me.mvarStkRecNbr), ParameterDirection.Input,30 ))
			 pc.Add(New ParamStruct("@ExpDate",DbType.DateTime, clsCommon.GetValueDBNull(me.mvarExpDate), ParameterDirection.Input,16 ))
			 pc.Add(New ParamStruct("@InvtID",DbType.String, clsCommon.GetValueDBNull(me.mvarInvtID), ParameterDirection.Input,30 ))
			 pc.Add(New ParamStruct("@StkQty",DbType.Decimal, clsCommon.GetValueDBNull(me.mvarStkQty), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@Price",DbType.Decimal, clsCommon.GetValueDBNull(me.mvarPrice), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@ApproveStkQty",DbType.Decimal, clsCommon.GetValueDBNull(me.mvarApproveStkQty), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@Status",DbType.String, clsCommon.GetValueDBNull(me.mvarStatus), ParameterDirection.Input,10 ))
			 pc.Add(New ParamStruct("@Crtd_Prog",DbType.String, clsCommon.GetValueDBNull(me.mvarCrtd_Prog), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@Crtd_User",DbType.String, clsCommon.GetValueDBNull(me.mvarCrtd_User), ParameterDirection.Input,10 ))
			 pc.Add(New ParamStruct("@Crtd_DateTime",DbType.DateTime, clsCommon.GetValueDBNull(me.mvarCrtd_DateTime), ParameterDirection.Input,16 ))
			 pc.Add(New ParamStruct("@LUpd_Prog",DbType.String, clsCommon.GetValueDBNull(me.mvarLUpd_Prog), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@LUpd_User",DbType.String, clsCommon.GetValueDBNull(me.mvarLUpd_User), ParameterDirection.Input,10 ))
			 pc.Add(New ParamStruct("@LUpd_DateTime",DbType.DateTime, clsCommon.GetValueDBNull(me.mvarLUpd_DateTime), ParameterDirection.Input,16 ))
			 pc.Add(New ParamStruct("@tstamp",DbType.String, clsCommon.GetValueDBNull(me.mvartstamp), ParameterDirection.Input,18 ))
			 pc.Add(New ParamStruct("@NewExpDate",DbType.DateTime, clsCommon.GetValueDBNull(me.mvarNewExpDate), ParameterDirection.Input,16 ))
			Return (DAL.ExecNonQuery(PP_IN_StockRecoveryDet, CommandType.StoredProcedure, pc,"") > 0)
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Function Delete(ByVal BranchID As System.String, ByVal StkRecNbr As System.String, ByVal ExpDate As System.DateTime, ByVal InvtID As System.String) as Boolean 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "Delete", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@BranchID",DbType.String, clsCommon.GetValueDBNull(BranchID), ParameterDirection.Input,30 ))
			pc.Add(New ParamStruct("@StkRecNbr",DbType.String, clsCommon.GetValueDBNull(StkRecNbr), ParameterDirection.Input,30 ))
			pc.Add(New ParamStruct("@ExpDate",DbType.DateTime, clsCommon.GetValueDBNull(ExpDate), ParameterDirection.Input,16 ))
			pc.Add(New ParamStruct("@InvtID",DbType.String, clsCommon.GetValueDBNull(InvtID), ParameterDirection.Input,30 ))
			Return (DAL.ExecNonQuery(PP_IN_StockRecoveryDet, CommandType.StoredProcedure, pc,"") > 0)
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Function GetAll(ByVal BranchID As System.String, ByVal StkRecNbr As System.String, ByVal ExpDate As System.DateTime, ByVal InvtID As System.String) as DataTable 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			Dim ds As New DataSet
			pc.Add(New ParamStruct("@Action", DbType.String, "GetListData", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@BranchID", DbType.String, clsCommon.GetValueDBNull(BranchID), ParameterDirection.Input, 30 ))
			pc.Add(New ParamStruct("@StkRecNbr", DbType.String, clsCommon.GetValueDBNull(StkRecNbr), ParameterDirection.Input, 30 ))
			pc.Add(New ParamStruct("@ExpDate", DbType.DateTime, clsCommon.GetValueDBNull(ExpDate), ParameterDirection.Input, 16 ))
			pc.Add(New ParamStruct("@InvtID", DbType.String, clsCommon.GetValueDBNull(InvtID), ParameterDirection.Input, 30 ))
			ds = DAL.ExecDataSet(PP_IN_StockRecoveryDet, CommandType.StoredProcedure, pc,"")
			Dim keys(3) As DataColumn
			Dim column As DataColumn
			column = ds.Tables(0).Columns("BranchID")
			Keys(0) = column
			column = ds.Tables(0).Columns("StkRecNbr")
			Keys(1) = column
			column = ds.Tables(0).Columns("ExpDate")
			Keys(2) = column
			column = ds.Tables(0).Columns("InvtID")
			Keys(3) = column
			ds.Tables(0).PrimaryKey = Keys
			Return ds.Tables(0)
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Sub Reset()
		mvarBranchID = String.Empty
		mvarStkRecNbr = String.Empty
		mvarExpDate = Today
		mvarInvtID = String.Empty
		mvarStkQty = 0
		mvarPrice = 0
		mvarApproveStkQty = 0
		mvarStatus = String.Empty
		mvarCrtd_Prog = String.Empty
		mvarCrtd_User = String.Empty
		mvarCrtd_DateTime = Today
		mvarLUpd_Prog = String.Empty
		mvarLUpd_User = String.Empty
		mvarLUpd_DateTime = Today
		mvartstamp = String.Empty
		mvarNewExpDate = Today
	End Sub
	Public Function GetByKey(ByVal BranchID As System.String, ByVal StkRecNbr As System.String, ByVal ExpDate As System.DateTime, ByVal InvtID As System.String) as Boolean 
		Dim DAL As DataAccess = m_Dal
		Dim ds As New DataSet 
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "GetData_ByKey", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@BranchID", DbType.String, clsCommon.GetValueDBNull(BranchID), ParameterDirection.InputOutput, 30 ))
			pc.Add(New ParamStruct("@StkRecNbr", DbType.String, clsCommon.GetValueDBNull(StkRecNbr), ParameterDirection.InputOutput, 30 ))
			pc.Add(New ParamStruct("@ExpDate", DbType.DateTime, clsCommon.GetValueDBNull(ExpDate), ParameterDirection.InputOutput, 16 ))
			pc.Add(New ParamStruct("@InvtID", DbType.String, clsCommon.GetValueDBNull(InvtID), ParameterDirection.InputOutput, 30 ))
			ds = DAL.ExecDataSet(PP_IN_StockRecoveryDet, CommandType.StoredProcedure, pc,"")
			me.Reset()
			If ds Is Nothing Then
				Return False
			End If
			If ds.Tables(0).Rows.Count > 0 Then
				FillData(ds.Tables(0).Rows(0))
				Return True
			End If
		Catch ex As Exception
			Throw ex 
		End Try
		Return False
	End Function
	Public Sub FillData(row as DataRow)
		mvarBranchID =  clsCommon.GetValue(row("BranchID"), mvarBranchID.GetType().FullName)
		mvarStkRecNbr =  clsCommon.GetValue(row("StkRecNbr"), mvarStkRecNbr.GetType().FullName)
		mvarExpDate =  clsCommon.GetValue(row("ExpDate"), mvarExpDate.GetType().FullName)
		mvarInvtID =  clsCommon.GetValue(row("InvtID"), mvarInvtID.GetType().FullName)
		mvarStkQty =  clsCommon.GetValue(row("StkQty"), mvarStkQty.GetType().FullName)
		mvarPrice =  clsCommon.GetValue(row("Price"), mvarPrice.GetType().FullName)
		mvarApproveStkQty =  clsCommon.GetValue(row("ApproveStkQty"), mvarApproveStkQty.GetType().FullName)
		mvarStatus =  clsCommon.GetValue(row("Status"), mvarStatus.GetType().FullName)
		mvarCrtd_Prog =  clsCommon.GetValue(row("Crtd_Prog"), mvarCrtd_Prog.GetType().FullName)
		mvarCrtd_User =  clsCommon.GetValue(row("Crtd_User"), mvarCrtd_User.GetType().FullName)
		mvarCrtd_DateTime =  clsCommon.GetValue(row("Crtd_DateTime"), mvarCrtd_DateTime.GetType().FullName)
		mvarLUpd_Prog =  clsCommon.GetValue(row("LUpd_Prog"), mvarLUpd_Prog.GetType().FullName)
		mvarLUpd_User =  clsCommon.GetValue(row("LUpd_User"), mvarLUpd_User.GetType().FullName)
		mvarLUpd_DateTime =  clsCommon.GetValue(row("LUpd_DateTime"), mvarLUpd_DateTime.GetType().FullName)
		mvartstamp =  clsCommon.GetValue(row("tstamp"), mvartstamp.GetType().FullName)
		mvarNewExpDate =  clsCommon.GetValue(row("NewExpDate"), mvarNewExpDate.GetType().FullName)
	End Sub
#End Region 

#Region "Private Methods"
#End Region 

End Class
