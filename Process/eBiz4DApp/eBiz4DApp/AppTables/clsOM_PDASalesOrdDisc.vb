'-- ------------------------------------------------------------
'-- Class name    :  clsOM_PDASalesOrdDisc
'-- Created date  :  7/1/2015
'-- Created by    :  
'-- Updated by    :  
'-- Generated by    :  Class Maker v1.0
'-- ------------------------------------------------------------

'-- Import Libraries --
Imports HQFramework
Imports HQFramework.DAL
Imports HQFramework.Common

Public Class clsOM_PDASalesOrdDisc
#Region "Constants"
    Private Const PP_OM_PDASalesOrdDisc As String = "PP_OM_PDASalesOrdDisc"
#End Region

#Region "Member Variables"
    Private mvarOrderNbr As System.String

    Private mvarCode As System.String

    Private mvarType As System.String

    Private mvarInvtID As System.String

    Private mvarGiftName As System.String

    Private mvarQty As System.Double

    Private mvarAmt As System.Double

    Private mvarDiscType As System.String

    Private mvarBranchID As System.String

    Private mvarCrtd_Prog As System.String

    Private mvarCrtd_User As System.String

    Private mvarCrtd_DateTime As System.DateTime

    Private mvarLUpd_Prog As System.String

    Private mvarLUpd_User As System.String

    Private mvarLUpd_DateTime As System.DateTime

    Private mvartstamp As System.String

    Private mvarQtyHist As System.Double

#End Region

    Private m_Dal As DataAccess
#Region "Constructors"
    Public Sub New()
        m_Dal = New DataAccess
        Reset()
    End Sub
    Public Sub New(ByVal dal As DataAccess)
        m_Dal = dal
        Reset()
    End Sub
#End Region

#Region "Public Properties"
    Public Property OrderNbr() As System.String
        Get
            Return mvarOrderNbr
        End Get
        Set(ByVal Value As System.String)
            mvarOrderNbr = Value
        End Set
    End Property

    Public Property Code() As System.String
        Get
            Return mvarCode
        End Get
        Set(ByVal Value As System.String)
            mvarCode = Value
        End Set
    End Property

    Public Property Type() As System.String
        Get
            Return mvarType
        End Get
        Set(ByVal Value As System.String)
            mvarType = Value
        End Set
    End Property

    Public Property InvtID() As System.String
        Get
            Return mvarInvtID
        End Get
        Set(ByVal Value As System.String)
            mvarInvtID = Value
        End Set
    End Property

    Public Property GiftName() As System.String
        Get
            Return mvarGiftName
        End Get
        Set(ByVal Value As System.String)
            mvarGiftName = Value
        End Set
    End Property

    Public Property Qty() As System.Double
        Get
            Return mvarQty
        End Get
        Set(ByVal Value As System.Double)
            mvarQty = Value
        End Set
    End Property

    Public Property Amt() As System.Double
        Get
            Return mvarAmt
        End Get
        Set(ByVal Value As System.Double)
            mvarAmt = Value
        End Set
    End Property

    Public Property DiscType() As System.String
        Get
            Return mvarDiscType
        End Get
        Set(ByVal Value As System.String)
            mvarDiscType = Value
        End Set
    End Property

    Public Property BranchID() As System.String
        Get
            Return mvarBranchID
        End Get
        Set(ByVal Value As System.String)
            mvarBranchID = Value
        End Set
    End Property

    Public Property Crtd_Prog() As System.String
        Get
            Return mvarCrtd_Prog
        End Get
        Set(ByVal Value As System.String)
            mvarCrtd_Prog = Value
        End Set
    End Property

    Public Property Crtd_User() As System.String
        Get
            Return mvarCrtd_User
        End Get
        Set(ByVal Value As System.String)
            mvarCrtd_User = Value
        End Set
    End Property

    Public Property Crtd_DateTime() As System.DateTime
        Get
            Return mvarCrtd_DateTime
        End Get
        Set(ByVal Value As System.DateTime)
            mvarCrtd_DateTime = Value
        End Set
    End Property

    Public Property LUpd_Prog() As System.String
        Get
            Return mvarLUpd_Prog
        End Get
        Set(ByVal Value As System.String)
            mvarLUpd_Prog = Value
        End Set
    End Property

    Public Property LUpd_User() As System.String
        Get
            Return mvarLUpd_User
        End Get
        Set(ByVal Value As System.String)
            mvarLUpd_User = Value
        End Set
    End Property

    Public Property LUpd_DateTime() As System.DateTime
        Get
            Return mvarLUpd_DateTime
        End Get
        Set(ByVal Value As System.DateTime)
            mvarLUpd_DateTime = Value
        End Set
    End Property

    Public Property tstamp() As System.String
        Get
            Return mvartstamp
        End Get
        Set(ByVal Value As System.String)
            mvartstamp = Value
        End Set
    End Property

    Public Property QtyHist() As System.Double
        Get
            Return mvarQtyHist
        End Get
        Set(ByVal Value As System.Double)
            mvarQtyHist = Value
        End Set
    End Property

#End Region

#Region "Public Methods"
    Public Function Add() As Boolean
        Dim DAL As DataAccess = m_Dal
        Try
            Dim pc As New ParamCollection
            pc.Add(New ParamStruct("@Action", DbType.String, "AddNew", ParameterDirection.Input, 50))
            pc.Add(New ParamStruct("@OrderNbr", DbType.String, clsCommon.GetValueDBNull(Me.mvarOrderNbr), ParameterDirection.Input, 15))
            pc.Add(New ParamStruct("@Code", DbType.String, clsCommon.GetValueDBNull(Me.mvarCode), ParameterDirection.Input, 15))
            pc.Add(New ParamStruct("@Type", DbType.String, clsCommon.GetValueDBNull(Me.mvarType), ParameterDirection.Input, 15))
            pc.Add(New ParamStruct("@InvtID", DbType.String, clsCommon.GetValueDBNull(Me.mvarInvtID), ParameterDirection.Input, 30))
            pc.Add(New ParamStruct("@GiftName", DbType.String, clsCommon.GetValueDBNull(Me.mvarGiftName), ParameterDirection.Input, 100))
            pc.Add(New ParamStruct("@Qty", DbType.Decimal, clsCommon.GetValueDBNull(Me.mvarQty), ParameterDirection.Input, 8))
            pc.Add(New ParamStruct("@Amt", DbType.Decimal, clsCommon.GetValueDBNull(Me.mvarAmt), ParameterDirection.Input, 8))
            pc.Add(New ParamStruct("@DiscType", DbType.String, clsCommon.GetValueDBNull(Me.mvarDiscType), ParameterDirection.Input, 1))
            pc.Add(New ParamStruct("@BranchID", DbType.String, clsCommon.GetValueDBNull(Me.mvarBranchID), ParameterDirection.Input, 30))
            pc.Add(New ParamStruct("@Crtd_Prog", DbType.String, clsCommon.GetValueDBNull(Me.mvarCrtd_Prog), ParameterDirection.Input, 8))
            pc.Add(New ParamStruct("@Crtd_User", DbType.String, clsCommon.GetValueDBNull(Me.mvarCrtd_User), ParameterDirection.Input, 10))
            pc.Add(New ParamStruct("@Crtd_DateTime", DbType.DateTime, clsCommon.GetValueDBNull(Me.mvarCrtd_DateTime), ParameterDirection.Input, 16))
            pc.Add(New ParamStruct("@LUpd_Prog", DbType.String, clsCommon.GetValueDBNull(Me.mvarLUpd_Prog), ParameterDirection.Input, 8))
            pc.Add(New ParamStruct("@LUpd_User", DbType.String, clsCommon.GetValueDBNull(Me.mvarLUpd_User), ParameterDirection.Input, 10))
            pc.Add(New ParamStruct("@LUpd_DateTime", DbType.DateTime, clsCommon.GetValueDBNull(Me.mvarLUpd_DateTime), ParameterDirection.Input, 16))
            pc.Add(New ParamStruct("@tstamp", DbType.String, clsCommon.GetValueDBNull(Me.mvartstamp), ParameterDirection.Input, 18))
            pc.Add(New ParamStruct("@QtyHist", DbType.Decimal, clsCommon.GetValueDBNull(Me.mvarQtyHist), ParameterDirection.Input, 8))
            DAL.ExecPreparedSQL(PP_OM_PDASalesOrdDisc, CommandType.StoredProcedure, pc, "")
            Me.mvarOrderNbr = clsCommon.GetValue(pc.Item("@OrderNbr").Value, mvarOrderNbr.GetType().FullName)
            Return (Me.mvarOrderNbr <> String.Empty)
        Catch ex As Exception
            Throw ex
        End Try
    End Function
    Public Function Update() As Boolean
        Dim DAL As DataAccess = m_Dal
        Try
            Dim pc As New ParamCollection
            pc.Add(New ParamStruct("@Action", DbType.String, "Update", ParameterDirection.Input, 50))
            pc.Add(New ParamStruct("@OrderNbr", DbType.String, clsCommon.GetValueDBNull(Me.mvarOrderNbr), ParameterDirection.Input, 15))
            pc.Add(New ParamStruct("@Code", DbType.String, clsCommon.GetValueDBNull(Me.mvarCode), ParameterDirection.Input, 15))
            pc.Add(New ParamStruct("@Type", DbType.String, clsCommon.GetValueDBNull(Me.mvarType), ParameterDirection.Input, 15))
            pc.Add(New ParamStruct("@InvtID", DbType.String, clsCommon.GetValueDBNull(Me.mvarInvtID), ParameterDirection.Input, 30))
            pc.Add(New ParamStruct("@GiftName", DbType.String, clsCommon.GetValueDBNull(Me.mvarGiftName), ParameterDirection.Input, 100))
            pc.Add(New ParamStruct("@Qty", DbType.Decimal, clsCommon.GetValueDBNull(Me.mvarQty), ParameterDirection.Input, 8))
            pc.Add(New ParamStruct("@Amt", DbType.Decimal, clsCommon.GetValueDBNull(Me.mvarAmt), ParameterDirection.Input, 8))
            pc.Add(New ParamStruct("@DiscType", DbType.String, clsCommon.GetValueDBNull(Me.mvarDiscType), ParameterDirection.Input, 1))
            pc.Add(New ParamStruct("@BranchID", DbType.String, clsCommon.GetValueDBNull(Me.mvarBranchID), ParameterDirection.Input, 30))
            pc.Add(New ParamStruct("@Crtd_Prog", DbType.String, clsCommon.GetValueDBNull(Me.mvarCrtd_Prog), ParameterDirection.Input, 8))
            pc.Add(New ParamStruct("@Crtd_User", DbType.String, clsCommon.GetValueDBNull(Me.mvarCrtd_User), ParameterDirection.Input, 10))
            pc.Add(New ParamStruct("@Crtd_DateTime", DbType.DateTime, clsCommon.GetValueDBNull(Me.mvarCrtd_DateTime), ParameterDirection.Input, 16))
            pc.Add(New ParamStruct("@LUpd_Prog", DbType.String, clsCommon.GetValueDBNull(Me.mvarLUpd_Prog), ParameterDirection.Input, 8))
            pc.Add(New ParamStruct("@LUpd_User", DbType.String, clsCommon.GetValueDBNull(Me.mvarLUpd_User), ParameterDirection.Input, 10))
            pc.Add(New ParamStruct("@LUpd_DateTime", DbType.DateTime, clsCommon.GetValueDBNull(Me.mvarLUpd_DateTime), ParameterDirection.Input, 16))
            pc.Add(New ParamStruct("@tstamp", DbType.String, clsCommon.GetValueDBNull(Me.mvartstamp), ParameterDirection.Input, 18))
            pc.Add(New ParamStruct("@QtyHist", DbType.Decimal, clsCommon.GetValueDBNull(Me.mvarQtyHist), ParameterDirection.Input, 8))
            Return (DAL.ExecNonQuery(PP_OM_PDASalesOrdDisc, CommandType.StoredProcedure, pc, "") > 0)
        Catch ex As Exception
            Throw ex
        End Try
    End Function
    Public Function Delete(ByVal OrderNbr As System.String, ByVal Code As System.String, ByVal Type As System.String, ByVal InvtID As System.String, ByVal BranchID As System.String) As Boolean
        Dim DAL As DataAccess = m_Dal
        Try
            Dim pc As New ParamCollection
            pc.Add(New ParamStruct("@Action", DbType.String, "Delete", ParameterDirection.Input, 50))
            pc.Add(New ParamStruct("@OrderNbr", DbType.String, clsCommon.GetValueDBNull(OrderNbr), ParameterDirection.Input, 15))
            pc.Add(New ParamStruct("@Code", DbType.String, clsCommon.GetValueDBNull(Code), ParameterDirection.Input, 15))
            pc.Add(New ParamStruct("@Type", DbType.String, clsCommon.GetValueDBNull(Type), ParameterDirection.Input, 15))
            pc.Add(New ParamStruct("@InvtID", DbType.String, clsCommon.GetValueDBNull(InvtID), ParameterDirection.Input, 30))
            pc.Add(New ParamStruct("@BranchID", DbType.String, clsCommon.GetValueDBNull(BranchID), ParameterDirection.Input, 30))
            Return (DAL.ExecNonQuery(PP_OM_PDASalesOrdDisc, CommandType.StoredProcedure, pc, "") > 0)
        Catch ex As Exception
            Throw ex
        End Try
    End Function
    Public Function GetAll(ByVal OrderNbr As System.String, ByVal Code As System.String, ByVal Type As System.String, ByVal InvtID As System.String, ByVal BranchID As System.String) As DataTable
        Dim DAL As DataAccess = m_Dal
        Try
            Dim pc As New ParamCollection
            Dim ds As New DataSet
            pc.Add(New ParamStruct("@Action", DbType.String, "GetListData", ParameterDirection.Input, 50))
            pc.Add(New ParamStruct("@OrderNbr", DbType.String, clsCommon.GetValueDBNull(OrderNbr), ParameterDirection.Input, 15))
            pc.Add(New ParamStruct("@Code", DbType.String, clsCommon.GetValueDBNull(Code), ParameterDirection.Input, 15))
            pc.Add(New ParamStruct("@Type", DbType.String, clsCommon.GetValueDBNull(Type), ParameterDirection.Input, 15))
            pc.Add(New ParamStruct("@InvtID", DbType.String, clsCommon.GetValueDBNull(InvtID), ParameterDirection.Input, 30))
            pc.Add(New ParamStruct("@BranchID", DbType.String, clsCommon.GetValueDBNull(BranchID), ParameterDirection.Input, 30))
            ds = DAL.ExecDataSet(PP_OM_PDASalesOrdDisc, CommandType.StoredProcedure, pc, "")
            Dim keys(4) As DataColumn
            Dim column As DataColumn
            column = ds.Tables(0).Columns("OrderNbr")
            keys(0) = column
            column = ds.Tables(0).Columns("Code")
            keys(1) = column
            column = ds.Tables(0).Columns("Type")
            keys(2) = column
            column = ds.Tables(0).Columns("InvtID")
            keys(3) = column
            column = ds.Tables(0).Columns("BranchID")
            keys(4) = column
            ds.Tables(0).PrimaryKey = keys
            Return ds.Tables(0)
        Catch ex As Exception
            Throw ex
        End Try
    End Function
    Public Sub Reset()
        mvarOrderNbr = String.Empty
        mvarCode = String.Empty
        mvarType = String.Empty
        mvarInvtID = String.Empty
        mvarGiftName = String.Empty
        mvarQty = 0
        mvarAmt = 0
        mvarDiscType = String.Empty
        mvarBranchID = String.Empty
        mvarCrtd_Prog = String.Empty
        mvarCrtd_User = String.Empty
        mvarCrtd_DateTime = Today
        mvarLUpd_Prog = String.Empty
        mvarLUpd_User = String.Empty
        mvarLUpd_DateTime = Today
        mvartstamp = String.Empty
        mvarQtyHist = 0
    End Sub
    Public Function GetByKey(ByVal OrderNbr As System.String, ByVal Code As System.String, ByVal Type As System.String, ByVal InvtID As System.String, ByVal BranchID As System.String) As Boolean
        Dim DAL As DataAccess = m_Dal
        Dim ds As New DataSet
        Try
            Dim pc As New ParamCollection
            pc.Add(New ParamStruct("@Action", DbType.String, "GetData_ByKey", ParameterDirection.Input, 50))
            pc.Add(New ParamStruct("@OrderNbr", DbType.String, clsCommon.GetValueDBNull(OrderNbr), ParameterDirection.InputOutput, 15))
            pc.Add(New ParamStruct("@Code", DbType.String, clsCommon.GetValueDBNull(Code), ParameterDirection.InputOutput, 15))
            pc.Add(New ParamStruct("@Type", DbType.String, clsCommon.GetValueDBNull(Type), ParameterDirection.InputOutput, 15))
            pc.Add(New ParamStruct("@InvtID", DbType.String, clsCommon.GetValueDBNull(InvtID), ParameterDirection.InputOutput, 30))
            pc.Add(New ParamStruct("@BranchID", DbType.String, clsCommon.GetValueDBNull(BranchID), ParameterDirection.InputOutput, 30))
            ds = DAL.ExecDataSet(PP_OM_PDASalesOrdDisc, CommandType.StoredProcedure, pc, "")
            Me.Reset()
            If ds Is Nothing Then
                Return False
            End If
            If ds.Tables(0).Rows.Count > 0 Then
                FillData(ds.Tables(0).Rows(0))
                Return True
            End If
        Catch ex As Exception
            Throw ex
        End Try
        Return False
    End Function
    Public Sub FillData(row As DataRow)
        mvarOrderNbr = clsCommon.GetValue(row("OrderNbr"), mvarOrderNbr.GetType().FullName)
        mvarCode = clsCommon.GetValue(row("Code"), mvarCode.GetType().FullName)
        mvarType = clsCommon.GetValue(row("Type"), mvarType.GetType().FullName)
        mvarInvtID = clsCommon.GetValue(row("InvtID"), mvarInvtID.GetType().FullName)
        mvarGiftName = clsCommon.GetValue(row("GiftName"), mvarGiftName.GetType().FullName)
        mvarQty = clsCommon.GetValue(row("Qty"), mvarQty.GetType().FullName)
        mvarAmt = clsCommon.GetValue(row("Amt"), mvarAmt.GetType().FullName)
        mvarDiscType = clsCommon.GetValue(row("DiscType"), mvarDiscType.GetType().FullName)
        mvarBranchID = clsCommon.GetValue(row("BranchID"), mvarBranchID.GetType().FullName)
        mvarCrtd_Prog = clsCommon.GetValue(row("Crtd_Prog"), mvarCrtd_Prog.GetType().FullName)
        mvarCrtd_User = clsCommon.GetValue(row("Crtd_User"), mvarCrtd_User.GetType().FullName)
        mvarCrtd_DateTime = clsCommon.GetValue(row("Crtd_DateTime"), mvarCrtd_DateTime.GetType().FullName)
        mvarLUpd_Prog = clsCommon.GetValue(row("LUpd_Prog"), mvarLUpd_Prog.GetType().FullName)
        mvarLUpd_User = clsCommon.GetValue(row("LUpd_User"), mvarLUpd_User.GetType().FullName)
        mvarLUpd_DateTime = clsCommon.GetValue(row("LUpd_DateTime"), mvarLUpd_DateTime.GetType().FullName)
        mvartstamp = clsCommon.GetValue(row("tstamp"), mvartstamp.GetType().FullName)
        mvarQtyHist = clsCommon.GetValue(row("QtyHist"), mvarQtyHist.GetType().FullName)
    End Sub
#End Region

#Region "Private Methods"
#End Region

End Class
