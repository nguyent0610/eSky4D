'-- ------------------------------------------------------------
'-- Class name    :  clsOM_DiscClaimDetail
'-- Created date  :  5/13/2015
'-- Created by    :  
'-- Updated by    :  
'-- Generated by    :  Class Maker v1.0
'-- ------------------------------------------------------------

'-- Import Libraries --
Imports HQFramework.Common
Imports HQFramework.DAL
Public Class clsOM_DiscClaimDetail
#Region "Constants"
	Private Const PP_OM_DiscClaimDetail As String = "PP_OM_DiscClaimDetail"
#End Region 

#Region "Member Variables"
	Private mvarClaimID As System.String

	Private mvarOrderNbr As System.String

	Private mvarLineRef As System.String

	Private mvarDiscID As System.String

	Private mvarBranchID As System.String

	Private mvarInvtID As System.String

	Private mvarDescr As System.String

	Private mvarCrtd_DateTime As System.DateTime

	Private mvarCrtd_Prog As System.String

	Private mvarCrtd_User As System.String

	Private mvarLUpd_DateTime As System.DateTime

	Private mvarLUpd_Prog As System.String

	Private mvarLUpd_User As System.String

	Private mvartstamp As System.String

	Private mvarQty As System.Double

	Private mvarAmt As System.Double

	Private mvarQtyMod As System.Double

	Private mvarAmtMod As System.Double

	Private mvarQtyAcpt As System.Double

	Private mvarAmtAcpt As System.Double

#End Region 

	Private m_Dal As DataAccess
#Region "Constructors"
	Public Sub New()
		m_Dal = New DataAccess
		Reset()
	End Sub
	Public Sub New(ByVal dal As DataAccess)
		m_Dal = dal
		Reset()
	End Sub
#End Region 

#Region "Public Properties"
	Public Property ClaimID() As System.String
		Get
			Return mvarClaimID
		End Get
		Set(ByVal Value As System.String)
			mvarClaimID = Value
		End Set
	End Property

	Public Property OrderNbr() As System.String
		Get
			Return mvarOrderNbr
		End Get
		Set(ByVal Value As System.String)
			mvarOrderNbr = Value
		End Set
	End Property

	Public Property LineRef() As System.String
		Get
			Return mvarLineRef
		End Get
		Set(ByVal Value As System.String)
			mvarLineRef = Value
		End Set
	End Property

	Public Property DiscID() As System.String
		Get
			Return mvarDiscID
		End Get
		Set(ByVal Value As System.String)
			mvarDiscID = Value
		End Set
	End Property

	Public Property BranchID() As System.String
		Get
			Return mvarBranchID
		End Get
		Set(ByVal Value As System.String)
			mvarBranchID = Value
		End Set
	End Property

	Public Property InvtID() As System.String
		Get
			Return mvarInvtID
		End Get
		Set(ByVal Value As System.String)
			mvarInvtID = Value
		End Set
	End Property

	Public Property Descr() As System.String
		Get
			Return mvarDescr
		End Get
		Set(ByVal Value As System.String)
			mvarDescr = Value
		End Set
	End Property

	Public Property Crtd_DateTime() As System.DateTime
		Get
			Return mvarCrtd_DateTime
		End Get
		Set(ByVal Value As System.DateTime)
			mvarCrtd_DateTime = Value
		End Set
	End Property

	Public Property Crtd_Prog() As System.String
		Get
			Return mvarCrtd_Prog
		End Get
		Set(ByVal Value As System.String)
			mvarCrtd_Prog = Value
		End Set
	End Property

	Public Property Crtd_User() As System.String
		Get
			Return mvarCrtd_User
		End Get
		Set(ByVal Value As System.String)
			mvarCrtd_User = Value
		End Set
	End Property

	Public Property LUpd_DateTime() As System.DateTime
		Get
			Return mvarLUpd_DateTime
		End Get
		Set(ByVal Value As System.DateTime)
			mvarLUpd_DateTime = Value
		End Set
	End Property

	Public Property LUpd_Prog() As System.String
		Get
			Return mvarLUpd_Prog
		End Get
		Set(ByVal Value As System.String)
			mvarLUpd_Prog = Value
		End Set
	End Property

	Public Property LUpd_User() As System.String
		Get
			Return mvarLUpd_User
		End Get
		Set(ByVal Value As System.String)
			mvarLUpd_User = Value
		End Set
	End Property

	Public Property tstamp() As System.String
		Get
			Return mvartstamp
		End Get
		Set(ByVal Value As System.String)
			mvartstamp = Value
		End Set
	End Property

	Public Property Qty() As System.Double
		Get
			Return mvarQty
		End Get
		Set(ByVal Value As System.Double)
			mvarQty = Value
		End Set
	End Property

	Public Property Amt() As System.Double
		Get
			Return mvarAmt
		End Get
		Set(ByVal Value As System.Double)
			mvarAmt = Value
		End Set
	End Property

	Public Property QtyMod() As System.Double
		Get
			Return mvarQtyMod
		End Get
		Set(ByVal Value As System.Double)
			mvarQtyMod = Value
		End Set
	End Property

	Public Property AmtMod() As System.Double
		Get
			Return mvarAmtMod
		End Get
		Set(ByVal Value As System.Double)
			mvarAmtMod = Value
		End Set
	End Property

	Public Property QtyAcpt() As System.Double
		Get
			Return mvarQtyAcpt
		End Get
		Set(ByVal Value As System.Double)
			mvarQtyAcpt = Value
		End Set
	End Property

	Public Property AmtAcpt() As System.Double
		Get
			Return mvarAmtAcpt
		End Get
		Set(ByVal Value As System.Double)
			mvarAmtAcpt = Value
		End Set
	End Property

#End Region 

#Region "Public Methods"
	Public Function Add() as Boolean 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "AddNew", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@ClaimID", DbType.String,clsCommon.GetValueDBNull(Me.mvarClaimID), ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@OrderNbr", DbType.String,clsCommon.GetValueDBNull(Me.mvarOrderNbr), ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@LineRef", DbType.String,clsCommon.GetValueDBNull(Me.mvarLineRef), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@DiscID", DbType.String,clsCommon.GetValueDBNull(Me.mvarDiscID), ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@BranchID", DbType.String,clsCommon.GetValueDBNull(Me.mvarBranchID), ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@InvtID", DbType.String,clsCommon.GetValueDBNull(Me.mvarInvtID), ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@Descr", DbType.String,clsCommon.GetValueDBNull(Me.mvarDescr), ParameterDirection.Input,200 ))
			pc.Add(New ParamStruct("@Crtd_DateTime", DbType.DateTime,clsCommon.GetValueDBNull(Me.mvarCrtd_DateTime), ParameterDirection.Input,16 ))
			pc.Add(New ParamStruct("@Crtd_Prog", DbType.String,clsCommon.GetValueDBNull(Me.mvarCrtd_Prog), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@Crtd_User", DbType.String,clsCommon.GetValueDBNull(Me.mvarCrtd_User), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@LUpd_DateTime", DbType.DateTime,clsCommon.GetValueDBNull(Me.mvarLUpd_DateTime), ParameterDirection.Input,16 ))
			pc.Add(New ParamStruct("@LUpd_Prog", DbType.String,clsCommon.GetValueDBNull(Me.mvarLUpd_Prog), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@LUpd_User", DbType.String,clsCommon.GetValueDBNull(Me.mvarLUpd_User), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@tstamp", DbType.String,clsCommon.GetValueDBNull(Me.mvartstamp), ParameterDirection.Input,18 ))
			pc.Add(New ParamStruct("@Qty", DbType.Decimal,clsCommon.GetValueDBNull(Me.mvarQty), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@Amt", DbType.Decimal,clsCommon.GetValueDBNull(Me.mvarAmt), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@QtyMod", DbType.Decimal,clsCommon.GetValueDBNull(Me.mvarQtyMod), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@AmtMod", DbType.Decimal,clsCommon.GetValueDBNull(Me.mvarAmtMod), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@QtyAcpt", DbType.Decimal,clsCommon.GetValueDBNull(Me.mvarQtyAcpt), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@AmtAcpt", DbType.Decimal,clsCommon.GetValueDBNull(Me.mvarAmtAcpt), ParameterDirection.Input,8 ))
			DAL.ExecPreparedSQL(PP_OM_DiscClaimDetail, CommandType.StoredProcedure, pc,"")
		Me.mvarClaimID = clsCommon.GetValue(pc.Item("@ClaimID").Value, mvarClaimID.GetType().FullName)
		Return (Me.mvarClaimID <> String.Empty )
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Function Update() as Boolean 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "Update", ParameterDirection.Input,50 ))
			 pc.Add(New ParamStruct("@ClaimID",DbType.String, clsCommon.GetValueDBNull(me.mvarClaimID), ParameterDirection.Input,50 ))
			 pc.Add(New ParamStruct("@OrderNbr",DbType.String, clsCommon.GetValueDBNull(me.mvarOrderNbr), ParameterDirection.Input,50 ))
			 pc.Add(New ParamStruct("@LineRef",DbType.String, clsCommon.GetValueDBNull(me.mvarLineRef), ParameterDirection.Input,10 ))
			 pc.Add(New ParamStruct("@DiscID",DbType.String, clsCommon.GetValueDBNull(me.mvarDiscID), ParameterDirection.Input,50 ))
			 pc.Add(New ParamStruct("@BranchID",DbType.String, clsCommon.GetValueDBNull(me.mvarBranchID), ParameterDirection.Input,50 ))
			 pc.Add(New ParamStruct("@InvtID",DbType.String, clsCommon.GetValueDBNull(me.mvarInvtID), ParameterDirection.Input,50 ))
			 pc.Add(New ParamStruct("@Descr",DbType.String, clsCommon.GetValueDBNull(me.mvarDescr), ParameterDirection.Input,200 ))
			 pc.Add(New ParamStruct("@Crtd_DateTime",DbType.DateTime, clsCommon.GetValueDBNull(me.mvarCrtd_DateTime), ParameterDirection.Input,16 ))
			 pc.Add(New ParamStruct("@Crtd_Prog",DbType.String, clsCommon.GetValueDBNull(me.mvarCrtd_Prog), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@Crtd_User",DbType.String, clsCommon.GetValueDBNull(me.mvarCrtd_User), ParameterDirection.Input,10 ))
			 pc.Add(New ParamStruct("@LUpd_DateTime",DbType.DateTime, clsCommon.GetValueDBNull(me.mvarLUpd_DateTime), ParameterDirection.Input,16 ))
			 pc.Add(New ParamStruct("@LUpd_Prog",DbType.String, clsCommon.GetValueDBNull(me.mvarLUpd_Prog), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@LUpd_User",DbType.String, clsCommon.GetValueDBNull(me.mvarLUpd_User), ParameterDirection.Input,10 ))
			 pc.Add(New ParamStruct("@tstamp",DbType.String, clsCommon.GetValueDBNull(me.mvartstamp), ParameterDirection.Input,18 ))
			 pc.Add(New ParamStruct("@Qty",DbType.Decimal, clsCommon.GetValueDBNull(me.mvarQty), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@Amt",DbType.Decimal, clsCommon.GetValueDBNull(me.mvarAmt), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@QtyMod",DbType.Decimal, clsCommon.GetValueDBNull(me.mvarQtyMod), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@AmtMod",DbType.Decimal, clsCommon.GetValueDBNull(me.mvarAmtMod), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@QtyAcpt",DbType.Decimal, clsCommon.GetValueDBNull(me.mvarQtyAcpt), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@AmtAcpt",DbType.Decimal, clsCommon.GetValueDBNull(me.mvarAmtAcpt), ParameterDirection.Input,8 ))
			Return (DAL.ExecNonQuery(PP_OM_DiscClaimDetail, CommandType.StoredProcedure, pc,"") > 0)
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Function Delete(ByVal ClaimID As System.String, ByVal OrderNbr As System.String, ByVal LineRef As System.String) as Boolean 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "Delete", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@ClaimID",DbType.String, clsCommon.GetValueDBNull(ClaimID), ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@OrderNbr",DbType.String, clsCommon.GetValueDBNull(OrderNbr), ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@LineRef",DbType.String, clsCommon.GetValueDBNull(LineRef), ParameterDirection.Input,10 ))
			Return (DAL.ExecNonQuery(PP_OM_DiscClaimDetail, CommandType.StoredProcedure, pc,"") > 0)
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Function GetAll(ByVal ClaimID As System.String, ByVal OrderNbr As System.String, ByVal LineRef As System.String) as DataTable 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			Dim ds As New DataSet
			pc.Add(New ParamStruct("@Action", DbType.String, "GetListData", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@ClaimID", DbType.String, clsCommon.GetValueDBNull(ClaimID), ParameterDirection.Input, 50 ))
			pc.Add(New ParamStruct("@OrderNbr", DbType.String, clsCommon.GetValueDBNull(OrderNbr), ParameterDirection.Input, 50 ))
			pc.Add(New ParamStruct("@LineRef", DbType.String, clsCommon.GetValueDBNull(LineRef), ParameterDirection.Input, 10 ))
			ds = DAL.ExecDataSet(PP_OM_DiscClaimDetail, CommandType.StoredProcedure, pc,"")
			Dim keys(2) As DataColumn
			Dim column As DataColumn
			column = ds.Tables(0).Columns("ClaimID")
			Keys(0) = column
			column = ds.Tables(0).Columns("OrderNbr")
			Keys(1) = column
			column = ds.Tables(0).Columns("LineRef")
			Keys(2) = column
			ds.Tables(0).PrimaryKey = Keys
			Return ds.Tables(0)
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Sub Reset()
		mvarClaimID = String.Empty
		mvarOrderNbr = String.Empty
		mvarLineRef = String.Empty
		mvarDiscID = String.Empty
		mvarBranchID = String.Empty
		mvarInvtID = String.Empty
		mvarDescr = String.Empty
		mvarCrtd_DateTime = Today
		mvarCrtd_Prog = String.Empty
		mvarCrtd_User = String.Empty
		mvarLUpd_DateTime = Today
		mvarLUpd_Prog = String.Empty
		mvarLUpd_User = String.Empty
		mvartstamp = String.Empty
		mvarQty = 0
		mvarAmt = 0
		mvarQtyMod = 0
		mvarAmtMod = 0
		mvarQtyAcpt = 0
		mvarAmtAcpt = 0
	End Sub
	Public Function GetByKey(ByVal ClaimID As System.String, ByVal OrderNbr As System.String, ByVal LineRef As System.String) as Boolean 
		Dim DAL As DataAccess = m_Dal
		Dim ds As New DataSet 
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "GetData_ByKey", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@ClaimID", DbType.String, clsCommon.GetValueDBNull(ClaimID), ParameterDirection.InputOutput, 50 ))
			pc.Add(New ParamStruct("@OrderNbr", DbType.String, clsCommon.GetValueDBNull(OrderNbr), ParameterDirection.InputOutput, 50 ))
			pc.Add(New ParamStruct("@LineRef", DbType.String, clsCommon.GetValueDBNull(LineRef), ParameterDirection.InputOutput, 10 ))
			ds = DAL.ExecDataSet(PP_OM_DiscClaimDetail, CommandType.StoredProcedure, pc,"")
			me.Reset()
			If ds Is Nothing Then
				Return False
			End If
			If ds.Tables(0).Rows.Count > 0 Then
				FillData(ds.Tables(0).Rows(0))
				Return True
			End If
		Catch ex As Exception
			Throw ex 
		End Try
		Return False
	End Function
	Public Sub FillData(row as DataRow)
		mvarClaimID =  clsCommon.GetValue(row("ClaimID"), mvarClaimID.GetType().FullName)
		mvarOrderNbr =  clsCommon.GetValue(row("OrderNbr"), mvarOrderNbr.GetType().FullName)
		mvarLineRef =  clsCommon.GetValue(row("LineRef"), mvarLineRef.GetType().FullName)
		mvarDiscID =  clsCommon.GetValue(row("DiscID"), mvarDiscID.GetType().FullName)
		mvarBranchID =  clsCommon.GetValue(row("BranchID"), mvarBranchID.GetType().FullName)
		mvarInvtID =  clsCommon.GetValue(row("InvtID"), mvarInvtID.GetType().FullName)
		mvarDescr =  clsCommon.GetValue(row("Descr"), mvarDescr.GetType().FullName)
		mvarCrtd_DateTime =  clsCommon.GetValue(row("Crtd_DateTime"), mvarCrtd_DateTime.GetType().FullName)
		mvarCrtd_Prog =  clsCommon.GetValue(row("Crtd_Prog"), mvarCrtd_Prog.GetType().FullName)
		mvarCrtd_User =  clsCommon.GetValue(row("Crtd_User"), mvarCrtd_User.GetType().FullName)
		mvarLUpd_DateTime =  clsCommon.GetValue(row("LUpd_DateTime"), mvarLUpd_DateTime.GetType().FullName)
		mvarLUpd_Prog =  clsCommon.GetValue(row("LUpd_Prog"), mvarLUpd_Prog.GetType().FullName)
		mvarLUpd_User =  clsCommon.GetValue(row("LUpd_User"), mvarLUpd_User.GetType().FullName)
		mvartstamp =  clsCommon.GetValue(row("tstamp"), mvartstamp.GetType().FullName)
		mvarQty =  clsCommon.GetValue(row("Qty"), mvarQty.GetType().FullName)
		mvarAmt =  clsCommon.GetValue(row("Amt"), mvarAmt.GetType().FullName)
		mvarQtyMod =  clsCommon.GetValue(row("QtyMod"), mvarQtyMod.GetType().FullName)
		mvarAmtMod =  clsCommon.GetValue(row("AmtMod"), mvarAmtMod.GetType().FullName)
		mvarQtyAcpt =  clsCommon.GetValue(row("QtyAcpt"), mvarQtyAcpt.GetType().FullName)
		mvarAmtAcpt =  clsCommon.GetValue(row("AmtAcpt"), mvarAmtAcpt.GetType().FullName)
	End Sub
#End Region 

#Region "Private Methods"
#End Region 

End Class
