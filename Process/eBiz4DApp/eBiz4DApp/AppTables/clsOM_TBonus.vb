'-- ------------------------------------------------------------
'-- Class name    :  clsOM_TBonus
'-- Created date  :  5/13/2015
'-- Created by    :  
'-- Updated by    :  
'-- Generated by    :  Class Maker v1.0
'-- ------------------------------------------------------------

'-- Import Libraries --
Imports HQFramework.Common
Imports HQFramework.DAL
Public Class clsOM_TBonus
#Region "Constants"
	Private Const PP_OM_TBonus As String = "PP_OM_TBonus"
#End Region 

#Region "Member Variables"
	Private mvarBonusID As System.String

	Private mvarBonusName As System.String

	Private mvarZone As System.String

	Private mvarChannel As System.String

	Private mvarApplyFor As System.String

	Private mvarBonusFor As System.String

	Private mvarFromDate As System.DateTime

	Private mvarToDate As System.DateTime

	Private mvarCrtd_DateTime As System.DateTime

	Private mvarCrtd_Prog As System.String

	Private mvarCrtd_User As System.String

	Private mvarLUpd_DateTime As System.DateTime

	Private mvarLUpd_Prog As System.String

	Private mvarLUpd_User As System.String

	Private mvartstamp As System.String

	Private mvarRSApplyType As System.String

#End Region 

	Private m_Dal As DataAccess
#Region "Constructors"
	Public Sub New()
		m_Dal = New DataAccess
		Reset()
	End Sub
	Public Sub New(ByVal dal As DataAccess)
		m_Dal = dal
		Reset()
	End Sub
#End Region 

#Region "Public Properties"
	Public Property BonusID() As System.String
		Get
			Return mvarBonusID
		End Get
		Set(ByVal Value As System.String)
			mvarBonusID = Value
		End Set
	End Property

	Public Property BonusName() As System.String
		Get
			Return mvarBonusName
		End Get
		Set(ByVal Value As System.String)
			mvarBonusName = Value
		End Set
	End Property

	Public Property Zone() As System.String
		Get
			Return mvarZone
		End Get
		Set(ByVal Value As System.String)
			mvarZone = Value
		End Set
	End Property

	Public Property Channel() As System.String
		Get
			Return mvarChannel
		End Get
		Set(ByVal Value As System.String)
			mvarChannel = Value
		End Set
	End Property

	Public Property ApplyFor() As System.String
		Get
			Return mvarApplyFor
		End Get
		Set(ByVal Value As System.String)
			mvarApplyFor = Value
		End Set
	End Property

	Public Property BonusFor() As System.String
		Get
			Return mvarBonusFor
		End Get
		Set(ByVal Value As System.String)
			mvarBonusFor = Value
		End Set
	End Property

	Public Property FromDate() As System.DateTime
		Get
			Return mvarFromDate
		End Get
		Set(ByVal Value As System.DateTime)
			mvarFromDate = Value
		End Set
	End Property

	Public Property ToDate() As System.DateTime
		Get
			Return mvarToDate
		End Get
		Set(ByVal Value As System.DateTime)
			mvarToDate = Value
		End Set
	End Property

	Public Property Crtd_DateTime() As System.DateTime
		Get
			Return mvarCrtd_DateTime
		End Get
		Set(ByVal Value As System.DateTime)
			mvarCrtd_DateTime = Value
		End Set
	End Property

	Public Property Crtd_Prog() As System.String
		Get
			Return mvarCrtd_Prog
		End Get
		Set(ByVal Value As System.String)
			mvarCrtd_Prog = Value
		End Set
	End Property

	Public Property Crtd_User() As System.String
		Get
			Return mvarCrtd_User
		End Get
		Set(ByVal Value As System.String)
			mvarCrtd_User = Value
		End Set
	End Property

	Public Property LUpd_DateTime() As System.DateTime
		Get
			Return mvarLUpd_DateTime
		End Get
		Set(ByVal Value As System.DateTime)
			mvarLUpd_DateTime = Value
		End Set
	End Property

	Public Property LUpd_Prog() As System.String
		Get
			Return mvarLUpd_Prog
		End Get
		Set(ByVal Value As System.String)
			mvarLUpd_Prog = Value
		End Set
	End Property

	Public Property LUpd_User() As System.String
		Get
			Return mvarLUpd_User
		End Get
		Set(ByVal Value As System.String)
			mvarLUpd_User = Value
		End Set
	End Property

	Public Property tstamp() As System.String
		Get
			Return mvartstamp
		End Get
		Set(ByVal Value As System.String)
			mvartstamp = Value
		End Set
	End Property

	Public Property RSApplyType() As System.String
		Get
			Return mvarRSApplyType
		End Get
		Set(ByVal Value As System.String)
			mvarRSApplyType = Value
		End Set
	End Property

#End Region 

#Region "Public Methods"
	Public Function Add() as Boolean 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "AddNew", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@BonusID", DbType.String,clsCommon.GetValueDBNull(Me.mvarBonusID), ParameterDirection.Input,30 ))
			pc.Add(New ParamStruct("@BonusName", DbType.String,clsCommon.GetValueDBNull(Me.mvarBonusName), ParameterDirection.Input,150 ))
			pc.Add(New ParamStruct("@Zone", DbType.String,clsCommon.GetValueDBNull(Me.mvarZone), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@Channel", DbType.String,clsCommon.GetValueDBNull(Me.mvarChannel), ParameterDirection.Input,6 ))
			pc.Add(New ParamStruct("@ApplyFor", DbType.String,clsCommon.GetValueDBNull(Me.mvarApplyFor), ParameterDirection.Input,2 ))
			pc.Add(New ParamStruct("@BonusFor", DbType.String,clsCommon.GetValueDBNull(Me.mvarBonusFor), ParameterDirection.Input,2 ))
			pc.Add(New ParamStruct("@FromDate", DbType.DateTime,clsCommon.GetValueDBNull(Me.mvarFromDate), ParameterDirection.Input,16 ))
			pc.Add(New ParamStruct("@ToDate", DbType.DateTime,clsCommon.GetValueDBNull(Me.mvarToDate), ParameterDirection.Input,16 ))
			pc.Add(New ParamStruct("@Crtd_DateTime", DbType.DateTime,clsCommon.GetValueDBNull(Me.mvarCrtd_DateTime), ParameterDirection.Input,16 ))
			pc.Add(New ParamStruct("@Crtd_Prog", DbType.String,clsCommon.GetValueDBNull(Me.mvarCrtd_Prog), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@Crtd_User", DbType.String,clsCommon.GetValueDBNull(Me.mvarCrtd_User), ParameterDirection.Input,30 ))
			pc.Add(New ParamStruct("@LUpd_DateTime", DbType.DateTime,clsCommon.GetValueDBNull(Me.mvarLUpd_DateTime), ParameterDirection.Input,16 ))
			pc.Add(New ParamStruct("@LUpd_Prog", DbType.String,clsCommon.GetValueDBNull(Me.mvarLUpd_Prog), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@LUpd_User", DbType.String,clsCommon.GetValueDBNull(Me.mvarLUpd_User), ParameterDirection.Input,30 ))
			pc.Add(New ParamStruct("@tstamp", DbType.String,clsCommon.GetValueDBNull(Me.mvartstamp), ParameterDirection.Input,18 ))
			pc.Add(New ParamStruct("@RSApplyType", DbType.String,clsCommon.GetValueDBNull(Me.mvarRSApplyType), ParameterDirection.Input,2 ))
			DAL.ExecPreparedSQL(PP_OM_TBonus, CommandType.StoredProcedure, pc,"")
		Me.mvarBonusID = clsCommon.GetValue(pc.Item("@BonusID").Value, mvarBonusID.GetType().FullName)
		Return (Me.mvarBonusID <> String.Empty )
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Function Update() as Boolean 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "Update", ParameterDirection.Input,50 ))
			 pc.Add(New ParamStruct("@BonusID",DbType.String, clsCommon.GetValueDBNull(me.mvarBonusID), ParameterDirection.Input,30 ))
			 pc.Add(New ParamStruct("@BonusName",DbType.String, clsCommon.GetValueDBNull(me.mvarBonusName), ParameterDirection.Input,150 ))
			 pc.Add(New ParamStruct("@Zone",DbType.String, clsCommon.GetValueDBNull(me.mvarZone), ParameterDirection.Input,10 ))
			 pc.Add(New ParamStruct("@Channel",DbType.String, clsCommon.GetValueDBNull(me.mvarChannel), ParameterDirection.Input,6 ))
			 pc.Add(New ParamStruct("@ApplyFor",DbType.String, clsCommon.GetValueDBNull(me.mvarApplyFor), ParameterDirection.Input,2 ))
			 pc.Add(New ParamStruct("@BonusFor",DbType.String, clsCommon.GetValueDBNull(me.mvarBonusFor), ParameterDirection.Input,2 ))
			 pc.Add(New ParamStruct("@FromDate",DbType.DateTime, clsCommon.GetValueDBNull(me.mvarFromDate), ParameterDirection.Input,16 ))
			 pc.Add(New ParamStruct("@ToDate",DbType.DateTime, clsCommon.GetValueDBNull(me.mvarToDate), ParameterDirection.Input,16 ))
			 pc.Add(New ParamStruct("@Crtd_DateTime",DbType.DateTime, clsCommon.GetValueDBNull(me.mvarCrtd_DateTime), ParameterDirection.Input,16 ))
			 pc.Add(New ParamStruct("@Crtd_Prog",DbType.String, clsCommon.GetValueDBNull(me.mvarCrtd_Prog), ParameterDirection.Input,10 ))
			 pc.Add(New ParamStruct("@Crtd_User",DbType.String, clsCommon.GetValueDBNull(me.mvarCrtd_User), ParameterDirection.Input,30 ))
			 pc.Add(New ParamStruct("@LUpd_DateTime",DbType.DateTime, clsCommon.GetValueDBNull(me.mvarLUpd_DateTime), ParameterDirection.Input,16 ))
			 pc.Add(New ParamStruct("@LUpd_Prog",DbType.String, clsCommon.GetValueDBNull(me.mvarLUpd_Prog), ParameterDirection.Input,10 ))
			 pc.Add(New ParamStruct("@LUpd_User",DbType.String, clsCommon.GetValueDBNull(me.mvarLUpd_User), ParameterDirection.Input,30 ))
			 pc.Add(New ParamStruct("@tstamp",DbType.String, clsCommon.GetValueDBNull(me.mvartstamp), ParameterDirection.Input,18 ))
			 pc.Add(New ParamStruct("@RSApplyType",DbType.String, clsCommon.GetValueDBNull(me.mvarRSApplyType), ParameterDirection.Input,2 ))
			Return (DAL.ExecNonQuery(PP_OM_TBonus, CommandType.StoredProcedure, pc,"") > 0)
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Function Delete(ByVal BonusID As System.String) as Boolean 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "Delete", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@BonusID",DbType.String, clsCommon.GetValueDBNull(BonusID), ParameterDirection.Input,30 ))
			Return (DAL.ExecNonQuery(PP_OM_TBonus, CommandType.StoredProcedure, pc,"") > 0)
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Function GetAll(ByVal BonusID As System.String) as DataTable 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			Dim ds As New DataSet
			pc.Add(New ParamStruct("@Action", DbType.String, "GetListData", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@BonusID", DbType.String, clsCommon.GetValueDBNull(BonusID), ParameterDirection.Input, 30 ))
			ds = DAL.ExecDataSet(PP_OM_TBonus, CommandType.StoredProcedure, pc,"")
			Dim keys(0) As DataColumn
			Dim column As DataColumn
			column = ds.Tables(0).Columns("BonusID")
			Keys(0) = column
			ds.Tables(0).PrimaryKey = Keys
			Return ds.Tables(0)
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Sub Reset()
		mvarBonusID = String.Empty
		mvarBonusName = String.Empty
		mvarZone = String.Empty
		mvarChannel = String.Empty
		mvarApplyFor = String.Empty
		mvarBonusFor = String.Empty
		mvarFromDate = Today
		mvarToDate = Today
		mvarCrtd_DateTime = Today
		mvarCrtd_Prog = String.Empty
		mvarCrtd_User = String.Empty
		mvarLUpd_DateTime = Today
		mvarLUpd_Prog = String.Empty
		mvarLUpd_User = String.Empty
		mvartstamp = String.Empty
		mvarRSApplyType = String.Empty
	End Sub
	Public Function GetByKey(ByVal BonusID As System.String) as Boolean 
		Dim DAL As DataAccess = m_Dal
		Dim ds As New DataSet 
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "GetData_ByKey", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@BonusID", DbType.String, clsCommon.GetValueDBNull(BonusID), ParameterDirection.InputOutput, 30 ))
			ds = DAL.ExecDataSet(PP_OM_TBonus, CommandType.StoredProcedure, pc,"")
			me.Reset()
			If ds Is Nothing Then
				Return False
			End If
			If ds.Tables(0).Rows.Count > 0 Then
				FillData(ds.Tables(0).Rows(0))
				Return True
			End If
		Catch ex As Exception
			Throw ex 
		End Try
		Return False
	End Function
	Public Sub FillData(row as DataRow)
		mvarBonusID =  clsCommon.GetValue(row("BonusID"), mvarBonusID.GetType().FullName)
		mvarBonusName =  clsCommon.GetValue(row("BonusName"), mvarBonusName.GetType().FullName)
		mvarZone =  clsCommon.GetValue(row("Zone"), mvarZone.GetType().FullName)
		mvarChannel =  clsCommon.GetValue(row("Channel"), mvarChannel.GetType().FullName)
		mvarApplyFor =  clsCommon.GetValue(row("ApplyFor"), mvarApplyFor.GetType().FullName)
		mvarBonusFor =  clsCommon.GetValue(row("BonusFor"), mvarBonusFor.GetType().FullName)
		mvarFromDate =  clsCommon.GetValue(row("FromDate"), mvarFromDate.GetType().FullName)
		mvarToDate =  clsCommon.GetValue(row("ToDate"), mvarToDate.GetType().FullName)
		mvarCrtd_DateTime =  clsCommon.GetValue(row("Crtd_DateTime"), mvarCrtd_DateTime.GetType().FullName)
		mvarCrtd_Prog =  clsCommon.GetValue(row("Crtd_Prog"), mvarCrtd_Prog.GetType().FullName)
		mvarCrtd_User =  clsCommon.GetValue(row("Crtd_User"), mvarCrtd_User.GetType().FullName)
		mvarLUpd_DateTime =  clsCommon.GetValue(row("LUpd_DateTime"), mvarLUpd_DateTime.GetType().FullName)
		mvarLUpd_Prog =  clsCommon.GetValue(row("LUpd_Prog"), mvarLUpd_Prog.GetType().FullName)
		mvarLUpd_User =  clsCommon.GetValue(row("LUpd_User"), mvarLUpd_User.GetType().FullName)
		mvartstamp =  clsCommon.GetValue(row("tstamp"), mvartstamp.GetType().FullName)
		mvarRSApplyType =  clsCommon.GetValue(row("RSApplyType"), mvarRSApplyType.GetType().FullName)
	End Sub
#End Region 

#Region "Private Methods"
#End Region 

End Class
