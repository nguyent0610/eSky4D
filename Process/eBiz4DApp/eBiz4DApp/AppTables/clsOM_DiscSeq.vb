'-- ------------------------------------------------------------
'-- Class name    :  clsOM_DiscSeq
'-- Created date  :  5/13/2015
'-- Created by    :  
'-- Updated by    :  
'-- Generated by    :  Class Maker v1.0
'-- ------------------------------------------------------------

'-- Import Libraries --
Imports HQFramework.Common
Imports HQFramework.DAL
Public Class clsOM_DiscSeq
#Region "Constants"
	Private Const PP_OM_DiscSeq As String = "PP_OM_DiscSeq"
#End Region 

#Region "Member Variables"
	Private mvarDiscID As System.String

	Private mvarDiscSeq As System.String

	Private mvarActive As System.Int16

	Private mvarBreakBy As System.String

	Private mvarBudgetID As System.String

	Private mvarDescr As System.String

	Private mvarDiscClass As System.String

	Private mvarDiscFor As System.String

	Private mvarEndDate As System.DateTime

	Private mvarPromo As System.Int16

	Private mvarStartDate As System.DateTime

	Private mvarCrtd_DateTime As System.DateTime

	Private mvarCrtd_Prog As System.String

	Private mvarCrtd_User As System.String

	Private mvarLUpd_DateTime As System.DateTime

	Private mvarLUpd_Prog As System.String

	Private mvarLUpd_User As System.String

	Private mvartstamp As System.String

	Private mvarProAplForItem As System.String

	Private mvarAutoFreeItem As System.Boolean

	Private mvarAllowEditDisc As System.Boolean

	Private mvarStatus As System.String

	Private mvarPOStartDate As System.DateTime

	Private mvarPOEndDate As System.DateTime

	Private mvarPOUse As System.Boolean

	Private mvarCrtd_Role As System.String

#End Region 

	Private m_Dal As DataAccess
#Region "Constructors"
	Public Sub New()
		m_Dal = New DataAccess
		Reset()
	End Sub
	Public Sub New(ByVal dal As DataAccess)
		m_Dal = dal
		Reset()
	End Sub
#End Region 

#Region "Public Properties"
	Public Property DiscID() As System.String
		Get
			Return mvarDiscID
		End Get
		Set(ByVal Value As System.String)
			mvarDiscID = Value
		End Set
	End Property

	Public Property DiscSeq() As System.String
		Get
			Return mvarDiscSeq
		End Get
		Set(ByVal Value As System.String)
			mvarDiscSeq = Value
		End Set
	End Property

	Public Property Active() As System.Int16
		Get
			Return mvarActive
		End Get
		Set(ByVal Value As System.Int16)
			mvarActive = Value
		End Set
	End Property

	Public Property BreakBy() As System.String
		Get
			Return mvarBreakBy
		End Get
		Set(ByVal Value As System.String)
			mvarBreakBy = Value
		End Set
	End Property

	Public Property BudgetID() As System.String
		Get
			Return mvarBudgetID
		End Get
		Set(ByVal Value As System.String)
			mvarBudgetID = Value
		End Set
	End Property

	Public Property Descr() As System.String
		Get
			Return mvarDescr
		End Get
		Set(ByVal Value As System.String)
			mvarDescr = Value
		End Set
	End Property

	Public Property DiscClass() As System.String
		Get
			Return mvarDiscClass
		End Get
		Set(ByVal Value As System.String)
			mvarDiscClass = Value
		End Set
	End Property

	Public Property DiscFor() As System.String
		Get
			Return mvarDiscFor
		End Get
		Set(ByVal Value As System.String)
			mvarDiscFor = Value
		End Set
	End Property

	Public Property EndDate() As System.DateTime
		Get
			Return mvarEndDate
		End Get
		Set(ByVal Value As System.DateTime)
			mvarEndDate = Value
		End Set
	End Property

	Public Property Promo() As System.Int16
		Get
			Return mvarPromo
		End Get
		Set(ByVal Value As System.Int16)
			mvarPromo = Value
		End Set
	End Property

	Public Property StartDate() As System.DateTime
		Get
			Return mvarStartDate
		End Get
		Set(ByVal Value As System.DateTime)
			mvarStartDate = Value
		End Set
	End Property

	Public Property Crtd_DateTime() As System.DateTime
		Get
			Return mvarCrtd_DateTime
		End Get
		Set(ByVal Value As System.DateTime)
			mvarCrtd_DateTime = Value
		End Set
	End Property

	Public Property Crtd_Prog() As System.String
		Get
			Return mvarCrtd_Prog
		End Get
		Set(ByVal Value As System.String)
			mvarCrtd_Prog = Value
		End Set
	End Property

	Public Property Crtd_User() As System.String
		Get
			Return mvarCrtd_User
		End Get
		Set(ByVal Value As System.String)
			mvarCrtd_User = Value
		End Set
	End Property

	Public Property LUpd_DateTime() As System.DateTime
		Get
			Return mvarLUpd_DateTime
		End Get
		Set(ByVal Value As System.DateTime)
			mvarLUpd_DateTime = Value
		End Set
	End Property

	Public Property LUpd_Prog() As System.String
		Get
			Return mvarLUpd_Prog
		End Get
		Set(ByVal Value As System.String)
			mvarLUpd_Prog = Value
		End Set
	End Property

	Public Property LUpd_User() As System.String
		Get
			Return mvarLUpd_User
		End Get
		Set(ByVal Value As System.String)
			mvarLUpd_User = Value
		End Set
	End Property

	Public Property tstamp() As System.String
		Get
			Return mvartstamp
		End Get
		Set(ByVal Value As System.String)
			mvartstamp = Value
		End Set
	End Property

	Public Property ProAplForItem() As System.String
		Get
			Return mvarProAplForItem
		End Get
		Set(ByVal Value As System.String)
			mvarProAplForItem = Value
		End Set
	End Property

	Public Property AutoFreeItem() As System.Boolean
		Get
			Return mvarAutoFreeItem
		End Get
		Set(ByVal Value As System.Boolean)
			mvarAutoFreeItem = Value
		End Set
	End Property

	Public Property AllowEditDisc() As System.Boolean
		Get
			Return mvarAllowEditDisc
		End Get
		Set(ByVal Value As System.Boolean)
			mvarAllowEditDisc = Value
		End Set
	End Property

	Public Property Status() As System.String
		Get
			Return mvarStatus
		End Get
		Set(ByVal Value As System.String)
			mvarStatus = Value
		End Set
	End Property

	Public Property POStartDate() As System.DateTime
		Get
			Return mvarPOStartDate
		End Get
		Set(ByVal Value As System.DateTime)
			mvarPOStartDate = Value
		End Set
	End Property

	Public Property POEndDate() As System.DateTime
		Get
			Return mvarPOEndDate
		End Get
		Set(ByVal Value As System.DateTime)
			mvarPOEndDate = Value
		End Set
	End Property

	Public Property POUse() As System.Boolean
		Get
			Return mvarPOUse
		End Get
		Set(ByVal Value As System.Boolean)
			mvarPOUse = Value
		End Set
	End Property

	Public Property Crtd_Role() As System.String
		Get
			Return mvarCrtd_Role
		End Get
		Set(ByVal Value As System.String)
			mvarCrtd_Role = Value
		End Set
	End Property

#End Region 

#Region "Public Methods"
	Public Function Add() as Boolean 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "AddNew", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@DiscID", DbType.String,clsCommon.GetValueDBNull(Me.mvarDiscID), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@DiscSeq", DbType.String,clsCommon.GetValueDBNull(Me.mvarDiscSeq), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@Active", DbType.int16,clsCommon.GetValueDBNull(Me.mvarActive), ParameterDirection.Input,2 ))
			pc.Add(New ParamStruct("@BreakBy", DbType.String,clsCommon.GetValueDBNull(Me.mvarBreakBy), ParameterDirection.Input,1 ))
			pc.Add(New ParamStruct("@BudgetID", DbType.String,clsCommon.GetValueDBNull(Me.mvarBudgetID), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@Descr", DbType.String,clsCommon.GetValueDBNull(Me.mvarDescr), ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@DiscClass", DbType.String,clsCommon.GetValueDBNull(Me.mvarDiscClass), ParameterDirection.Input,2 ))
			pc.Add(New ParamStruct("@DiscFor", DbType.String,clsCommon.GetValueDBNull(Me.mvarDiscFor), ParameterDirection.Input,1 ))
			pc.Add(New ParamStruct("@EndDate", DbType.DateTime,clsCommon.GetValueDBNull(Me.mvarEndDate.Date), ParameterDirection.Input,16 ))
			pc.Add(New ParamStruct("@Promo", DbType.int16,clsCommon.GetValueDBNull(Me.mvarPromo), ParameterDirection.Input,2 ))
			pc.Add(New ParamStruct("@StartDate", DbType.DateTime,clsCommon.GetValueDBNull(Me.mvarStartDate.Date), ParameterDirection.Input,16 ))
			pc.Add(New ParamStruct("@Crtd_DateTime", DbType.DateTime,clsCommon.GetValueDBNull(Me.mvarCrtd_DateTime), ParameterDirection.Input,16 ))
			pc.Add(New ParamStruct("@Crtd_Prog", DbType.String,clsCommon.GetValueDBNull(Me.mvarCrtd_Prog), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@Crtd_User", DbType.String,clsCommon.GetValueDBNull(Me.mvarCrtd_User), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@LUpd_DateTime", DbType.DateTime,clsCommon.GetValueDBNull(Me.mvarLUpd_DateTime), ParameterDirection.Input,16 ))
			pc.Add(New ParamStruct("@LUpd_Prog", DbType.String,clsCommon.GetValueDBNull(Me.mvarLUpd_Prog), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@LUpd_User", DbType.String,clsCommon.GetValueDBNull(Me.mvarLUpd_User), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@tstamp", DbType.String,clsCommon.GetValueDBNull(Me.mvartstamp), ParameterDirection.Input,18 ))
			pc.Add(New ParamStruct("@ProAplForItem", DbType.String,clsCommon.GetValueDBNull(Me.mvarProAplForItem), ParameterDirection.Input,1 ))
			pc.Add(New ParamStruct("@AutoFreeItem", DbType.Boolean,clsCommon.GetValueDBNull(Me.mvarAutoFreeItem), ParameterDirection.Input,2 ))
			pc.Add(New ParamStruct("@AllowEditDisc", DbType.Boolean,clsCommon.GetValueDBNull(Me.mvarAllowEditDisc), ParameterDirection.Input,2 ))
			pc.Add(New ParamStruct("@Status", DbType.String,clsCommon.GetValueDBNull(Me.mvarStatus), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@POStartDate", DbType.DateTime,clsCommon.GetValueDBNull(Me.mvarPOStartDate.Date), ParameterDirection.Input,16 ))
			pc.Add(New ParamStruct("@POEndDate", DbType.DateTime,clsCommon.GetValueDBNull(Me.mvarPOEndDate.Date), ParameterDirection.Input,16 ))
			pc.Add(New ParamStruct("@POUse", DbType.Boolean,clsCommon.GetValueDBNull(Me.mvarPOUse), ParameterDirection.Input,2 ))
			pc.Add(New ParamStruct("@Crtd_Role", DbType.String,clsCommon.GetValueDBNull(Me.mvarCrtd_Role), ParameterDirection.Input,30 ))
			DAL.ExecPreparedSQL(PP_OM_DiscSeq, CommandType.StoredProcedure, pc,"")
		Me.mvarDiscID = clsCommon.GetValue(pc.Item("@DiscID").Value, mvarDiscID.GetType().FullName)
		Return (Me.mvarDiscID <> String.Empty )
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Function Update() as Boolean 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "Update", ParameterDirection.Input,50 ))
			 pc.Add(New ParamStruct("@DiscID",DbType.String, clsCommon.GetValueDBNull(me.mvarDiscID), ParameterDirection.Input,10 ))
			 pc.Add(New ParamStruct("@DiscSeq",DbType.String, clsCommon.GetValueDBNull(me.mvarDiscSeq), ParameterDirection.Input,10 ))
			 pc.Add(New ParamStruct("@Active",DbType.int16, clsCommon.GetValueDBNull(me.mvarActive), ParameterDirection.Input,2 ))
			 pc.Add(New ParamStruct("@BreakBy",DbType.String, clsCommon.GetValueDBNull(me.mvarBreakBy), ParameterDirection.Input,1 ))
			 pc.Add(New ParamStruct("@BudgetID",DbType.String, clsCommon.GetValueDBNull(me.mvarBudgetID), ParameterDirection.Input,10 ))
			 pc.Add(New ParamStruct("@Descr",DbType.String, clsCommon.GetValueDBNull(me.mvarDescr), ParameterDirection.Input,50 ))
			 pc.Add(New ParamStruct("@DiscClass",DbType.String, clsCommon.GetValueDBNull(me.mvarDiscClass), ParameterDirection.Input,2 ))
			 pc.Add(New ParamStruct("@DiscFor",DbType.String, clsCommon.GetValueDBNull(me.mvarDiscFor), ParameterDirection.Input,1 ))
			 pc.Add(New ParamStruct("@EndDate",DbType.DateTime, clsCommon.GetValueDBNull(me.mvarEndDate.Date), ParameterDirection.Input,16 ))
			 pc.Add(New ParamStruct("@Promo",DbType.int16, clsCommon.GetValueDBNull(me.mvarPromo), ParameterDirection.Input,2 ))
			 pc.Add(New ParamStruct("@StartDate",DbType.DateTime, clsCommon.GetValueDBNull(me.mvarStartDate.Date), ParameterDirection.Input,16 ))
			 pc.Add(New ParamStruct("@Crtd_DateTime",DbType.DateTime, clsCommon.GetValueDBNull(me.mvarCrtd_DateTime), ParameterDirection.Input,16 ))
			 pc.Add(New ParamStruct("@Crtd_Prog",DbType.String, clsCommon.GetValueDBNull(me.mvarCrtd_Prog), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@Crtd_User",DbType.String, clsCommon.GetValueDBNull(me.mvarCrtd_User), ParameterDirection.Input,10 ))
			 pc.Add(New ParamStruct("@LUpd_DateTime",DbType.DateTime, clsCommon.GetValueDBNull(me.mvarLUpd_DateTime), ParameterDirection.Input,16 ))
			 pc.Add(New ParamStruct("@LUpd_Prog",DbType.String, clsCommon.GetValueDBNull(me.mvarLUpd_Prog), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@LUpd_User",DbType.String, clsCommon.GetValueDBNull(me.mvarLUpd_User), ParameterDirection.Input,10 ))
			 pc.Add(New ParamStruct("@tstamp",DbType.String, clsCommon.GetValueDBNull(me.mvartstamp), ParameterDirection.Input,18 ))
			 pc.Add(New ParamStruct("@ProAplForItem",DbType.String, clsCommon.GetValueDBNull(me.mvarProAplForItem), ParameterDirection.Input,1 ))
			 pc.Add(New ParamStruct("@AutoFreeItem",DbType.Boolean, clsCommon.GetValueDBNull(me.mvarAutoFreeItem), ParameterDirection.Input,2 ))
			 pc.Add(New ParamStruct("@AllowEditDisc",DbType.Boolean, clsCommon.GetValueDBNull(me.mvarAllowEditDisc), ParameterDirection.Input,2 ))
			 pc.Add(New ParamStruct("@Status",DbType.String, clsCommon.GetValueDBNull(me.mvarStatus), ParameterDirection.Input,10 ))
			 pc.Add(New ParamStruct("@POStartDate",DbType.DateTime, clsCommon.GetValueDBNull(me.mvarPOStartDate.Date), ParameterDirection.Input,16 ))
			 pc.Add(New ParamStruct("@POEndDate",DbType.DateTime, clsCommon.GetValueDBNull(me.mvarPOEndDate.Date), ParameterDirection.Input,16 ))
			 pc.Add(New ParamStruct("@POUse",DbType.Boolean, clsCommon.GetValueDBNull(me.mvarPOUse), ParameterDirection.Input,2 ))
			 pc.Add(New ParamStruct("@Crtd_Role",DbType.String, clsCommon.GetValueDBNull(me.mvarCrtd_Role), ParameterDirection.Input,30 ))
			Return (DAL.ExecNonQuery(PP_OM_DiscSeq, CommandType.StoredProcedure, pc,"") > 0)
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Function Delete(ByVal DiscID As System.String, ByVal DiscSeq As System.String) as Boolean 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "Delete", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@DiscID",DbType.String, clsCommon.GetValueDBNull(DiscID), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@DiscSeq",DbType.String, clsCommon.GetValueDBNull(DiscSeq), ParameterDirection.Input,10 ))
			Return (DAL.ExecNonQuery(PP_OM_DiscSeq, CommandType.StoredProcedure, pc,"") > 0)
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Function GetAll(ByVal DiscID As System.String, ByVal DiscSeq As System.String) as DataTable 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			Dim ds As New DataSet
			pc.Add(New ParamStruct("@Action", DbType.String, "GetListData", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@DiscID", DbType.String, clsCommon.GetValueDBNull(DiscID), ParameterDirection.Input, 10 ))
			pc.Add(New ParamStruct("@DiscSeq", DbType.String, clsCommon.GetValueDBNull(DiscSeq), ParameterDirection.Input, 10 ))
			ds = DAL.ExecDataSet(PP_OM_DiscSeq, CommandType.StoredProcedure, pc,"")
			Dim keys(1) As DataColumn
			Dim column As DataColumn
			column = ds.Tables(0).Columns("DiscID")
			Keys(0) = column
			column = ds.Tables(0).Columns("DiscSeq")
			Keys(1) = column
			ds.Tables(0).PrimaryKey = Keys
			Return ds.Tables(0)
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Sub Reset()
		mvarDiscID = String.Empty
		mvarDiscSeq = String.Empty
		mvarActive = 0
		mvarBreakBy = String.Empty
		mvarBudgetID = String.Empty
		mvarDescr = String.Empty
		mvarDiscClass = String.Empty
		mvarDiscFor = String.Empty
		mvarEndDate = Today
		mvarPromo = 0
		mvarStartDate = Today
		mvarCrtd_DateTime = Today
		mvarCrtd_Prog = String.Empty
		mvarCrtd_User = String.Empty
		mvarLUpd_DateTime = Today
		mvarLUpd_Prog = String.Empty
		mvarLUpd_User = String.Empty
		mvartstamp = String.Empty
		mvarProAplForItem = String.Empty
		mvarAutoFreeItem = False
		mvarAllowEditDisc = False
		mvarStatus = String.Empty
		mvarPOStartDate = Today
		mvarPOEndDate = Today
		mvarPOUse = False
		mvarCrtd_Role = String.Empty
	End Sub
	Public Function GetByKey(ByVal DiscID As System.String, ByVal DiscSeq As System.String) as Boolean 
		Dim DAL As DataAccess = m_Dal
		Dim ds As New DataSet 
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "GetData_ByKey", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@DiscID", DbType.String, clsCommon.GetValueDBNull(DiscID), ParameterDirection.InputOutput, 10 ))
			pc.Add(New ParamStruct("@DiscSeq", DbType.String, clsCommon.GetValueDBNull(DiscSeq), ParameterDirection.InputOutput, 10 ))
			ds = DAL.ExecDataSet(PP_OM_DiscSeq, CommandType.StoredProcedure, pc,"")
			me.Reset()
			If ds Is Nothing Then
				Return False
			End If
			If ds.Tables(0).Rows.Count > 0 Then
				FillData(ds.Tables(0).Rows(0))
				Return True
			End If
		Catch ex As Exception
			Throw ex 
		End Try
		Return False
	End Function
	Public Sub FillData(row as DataRow)
		mvarDiscID =  clsCommon.GetValue(row("DiscID"), mvarDiscID.GetType().FullName)
		mvarDiscSeq =  clsCommon.GetValue(row("DiscSeq"), mvarDiscSeq.GetType().FullName)
		mvarActive =  clsCommon.GetValue(row("Active"), mvarActive.GetType().FullName)
		mvarBreakBy =  clsCommon.GetValue(row("BreakBy"), mvarBreakBy.GetType().FullName)
		mvarBudgetID =  clsCommon.GetValue(row("BudgetID"), mvarBudgetID.GetType().FullName)
		mvarDescr =  clsCommon.GetValue(row("Descr"), mvarDescr.GetType().FullName)
		mvarDiscClass =  clsCommon.GetValue(row("DiscClass"), mvarDiscClass.GetType().FullName)
		mvarDiscFor =  clsCommon.GetValue(row("DiscFor"), mvarDiscFor.GetType().FullName)
		mvarEndDate =  clsCommon.GetValue(row("EndDate"), mvarEndDate.GetType().FullName)
		mvarPromo =  clsCommon.GetValue(row("Promo"), mvarPromo.GetType().FullName)
		mvarStartDate =  clsCommon.GetValue(row("StartDate"), mvarStartDate.GetType().FullName)
		mvarCrtd_DateTime =  clsCommon.GetValue(row("Crtd_DateTime"), mvarCrtd_DateTime.GetType().FullName)
		mvarCrtd_Prog =  clsCommon.GetValue(row("Crtd_Prog"), mvarCrtd_Prog.GetType().FullName)
		mvarCrtd_User =  clsCommon.GetValue(row("Crtd_User"), mvarCrtd_User.GetType().FullName)
		mvarLUpd_DateTime =  clsCommon.GetValue(row("LUpd_DateTime"), mvarLUpd_DateTime.GetType().FullName)
		mvarLUpd_Prog =  clsCommon.GetValue(row("LUpd_Prog"), mvarLUpd_Prog.GetType().FullName)
		mvarLUpd_User =  clsCommon.GetValue(row("LUpd_User"), mvarLUpd_User.GetType().FullName)
		mvartstamp =  clsCommon.GetValue(row("tstamp"), mvartstamp.GetType().FullName)
		mvarProAplForItem =  clsCommon.GetValue(row("ProAplForItem"), mvarProAplForItem.GetType().FullName)
		mvarAutoFreeItem =  clsCommon.GetValue(row("AutoFreeItem"), mvarAutoFreeItem.GetType().FullName)
		mvarAllowEditDisc =  clsCommon.GetValue(row("AllowEditDisc"), mvarAllowEditDisc.GetType().FullName)
		mvarStatus =  clsCommon.GetValue(row("Status"), mvarStatus.GetType().FullName)
		mvarPOStartDate =  clsCommon.GetValue(row("POStartDate"), mvarPOStartDate.GetType().FullName)
		mvarPOEndDate =  clsCommon.GetValue(row("POEndDate"), mvarPOEndDate.GetType().FullName)
		mvarPOUse =  clsCommon.GetValue(row("POUse"), mvarPOUse.GetType().FullName)
		mvarCrtd_Role =  clsCommon.GetValue(row("Crtd_Role"), mvarCrtd_Role.GetType().FullName)
	End Sub
#End Region 

#Region "Private Methods"
#End Region 

End Class
