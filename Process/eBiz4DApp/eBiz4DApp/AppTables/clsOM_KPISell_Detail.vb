'-- ------------------------------------------------------------
'-- Class name    :  clsOM_KPISell_Detail
'-- Created date  :  5/13/2015
'-- Created by    :  
'-- Updated by    :  
'-- Generated by    :  Class Maker v1.0
'-- ------------------------------------------------------------

'-- Import Libraries --
Imports HQFramework.Common
Imports HQFramework.DAL
Public Class clsOM_KPISell_Detail
#Region "Constants"
	Private Const PP_OM_KPISell_Detail As String = "PP_OM_KPISell_Detail"
#End Region 

#Region "Member Variables"
	Private mvarKPI As System.String

	Private mvarZone As System.String

	Private mvarTerritory As System.String

	Private mvarBranchID As System.String

	Private mvarSlsperId As System.String

	Private mvarSellTarget As System.Double

	Private mvarCoverageTarget As System.Double

	Private mvarNewTarget As System.Double

	Private mvarCrtd_DateTime As System.DateTime

	Private mvarCrtd_Prog As System.String

	Private mvarCrtd_User As System.String

	Private mvarLUpd_DateTime As System.DateTime

	Private mvarLUpd_Prog As System.String

	Private mvarLUpd_User As System.String

	Private mvartstamp As System.String

	Private mvarSellThroughQuater As System.Double

	Private mvarSellThroughMonth As System.Double

	Private mvarVMSupport As System.Double

	Private mvarModelBonus As System.Double

	Private mvarInStock As System.Double

	Private mvarDisplay As System.Double

	Private mvarOOS As System.Double

	Private mvarDebtManage As System.Double

#End Region 

	Private m_Dal As DataAccess
#Region "Constructors"
	Public Sub New()
		m_Dal = New DataAccess
		Reset()
	End Sub
	Public Sub New(ByVal dal As DataAccess)
		m_Dal = dal
		Reset()
	End Sub
#End Region 

#Region "Public Properties"
	Public Property KPI() As System.String
		Get
			Return mvarKPI
		End Get
		Set(ByVal Value As System.String)
			mvarKPI = Value
		End Set
	End Property

	Public Property Zone() As System.String
		Get
			Return mvarZone
		End Get
		Set(ByVal Value As System.String)
			mvarZone = Value
		End Set
	End Property

	Public Property Territory() As System.String
		Get
			Return mvarTerritory
		End Get
		Set(ByVal Value As System.String)
			mvarTerritory = Value
		End Set
	End Property

	Public Property BranchID() As System.String
		Get
			Return mvarBranchID
		End Get
		Set(ByVal Value As System.String)
			mvarBranchID = Value
		End Set
	End Property

	Public Property SlsperId() As System.String
		Get
			Return mvarSlsperId
		End Get
		Set(ByVal Value As System.String)
			mvarSlsperId = Value
		End Set
	End Property

	Public Property SellTarget() As System.Double
		Get
			Return mvarSellTarget
		End Get
		Set(ByVal Value As System.Double)
			mvarSellTarget = Value
		End Set
	End Property

	Public Property CoverageTarget() As System.Double
		Get
			Return mvarCoverageTarget
		End Get
		Set(ByVal Value As System.Double)
			mvarCoverageTarget = Value
		End Set
	End Property

	Public Property NewTarget() As System.Double
		Get
			Return mvarNewTarget
		End Get
		Set(ByVal Value As System.Double)
			mvarNewTarget = Value
		End Set
	End Property

	Public Property Crtd_DateTime() As System.DateTime
		Get
			Return mvarCrtd_DateTime
		End Get
		Set(ByVal Value As System.DateTime)
			mvarCrtd_DateTime = Value
		End Set
	End Property

	Public Property Crtd_Prog() As System.String
		Get
			Return mvarCrtd_Prog
		End Get
		Set(ByVal Value As System.String)
			mvarCrtd_Prog = Value
		End Set
	End Property

	Public Property Crtd_User() As System.String
		Get
			Return mvarCrtd_User
		End Get
		Set(ByVal Value As System.String)
			mvarCrtd_User = Value
		End Set
	End Property

	Public Property LUpd_DateTime() As System.DateTime
		Get
			Return mvarLUpd_DateTime
		End Get
		Set(ByVal Value As System.DateTime)
			mvarLUpd_DateTime = Value
		End Set
	End Property

	Public Property LUpd_Prog() As System.String
		Get
			Return mvarLUpd_Prog
		End Get
		Set(ByVal Value As System.String)
			mvarLUpd_Prog = Value
		End Set
	End Property

	Public Property LUpd_User() As System.String
		Get
			Return mvarLUpd_User
		End Get
		Set(ByVal Value As System.String)
			mvarLUpd_User = Value
		End Set
	End Property

	Public Property tstamp() As System.String
		Get
			Return mvartstamp
		End Get
		Set(ByVal Value As System.String)
			mvartstamp = Value
		End Set
	End Property

	Public Property SellThroughQuater() As System.Double
		Get
			Return mvarSellThroughQuater
		End Get
		Set(ByVal Value As System.Double)
			mvarSellThroughQuater = Value
		End Set
	End Property

	Public Property SellThroughMonth() As System.Double
		Get
			Return mvarSellThroughMonth
		End Get
		Set(ByVal Value As System.Double)
			mvarSellThroughMonth = Value
		End Set
	End Property

	Public Property VMSupport() As System.Double
		Get
			Return mvarVMSupport
		End Get
		Set(ByVal Value As System.Double)
			mvarVMSupport = Value
		End Set
	End Property

	Public Property ModelBonus() As System.Double
		Get
			Return mvarModelBonus
		End Get
		Set(ByVal Value As System.Double)
			mvarModelBonus = Value
		End Set
	End Property

	Public Property InStock() As System.Double
		Get
			Return mvarInStock
		End Get
		Set(ByVal Value As System.Double)
			mvarInStock = Value
		End Set
	End Property

	Public Property Display() As System.Double
		Get
			Return mvarDisplay
		End Get
		Set(ByVal Value As System.Double)
			mvarDisplay = Value
		End Set
	End Property

	Public Property OOS() As System.Double
		Get
			Return mvarOOS
		End Get
		Set(ByVal Value As System.Double)
			mvarOOS = Value
		End Set
	End Property

	Public Property DebtManage() As System.Double
		Get
			Return mvarDebtManage
		End Get
		Set(ByVal Value As System.Double)
			mvarDebtManage = Value
		End Set
	End Property

#End Region 

#Region "Public Methods"
	Public Function Add() as Boolean 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "AddNew", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@KPI", DbType.String,clsCommon.GetValueDBNull(Me.mvarKPI), ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@Zone", DbType.String,clsCommon.GetValueDBNull(Me.mvarZone), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@Territory", DbType.String,clsCommon.GetValueDBNull(Me.mvarTerritory), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@BranchID", DbType.String,clsCommon.GetValueDBNull(Me.mvarBranchID), ParameterDirection.Input,30 ))
			pc.Add(New ParamStruct("@SlsperId", DbType.String,clsCommon.GetValueDBNull(Me.mvarSlsperId), ParameterDirection.Input,30 ))
			pc.Add(New ParamStruct("@SellTarget", DbType.Decimal,clsCommon.GetValueDBNull(Me.mvarSellTarget), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@CoverageTarget", DbType.Decimal,clsCommon.GetValueDBNull(Me.mvarCoverageTarget), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@NewTarget", DbType.Decimal,clsCommon.GetValueDBNull(Me.mvarNewTarget), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@Crtd_DateTime", DbType.DateTime,clsCommon.GetValueDBNull(Me.mvarCrtd_DateTime), ParameterDirection.Input,16 ))
			pc.Add(New ParamStruct("@Crtd_Prog", DbType.String,clsCommon.GetValueDBNull(Me.mvarCrtd_Prog), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@Crtd_User", DbType.String,clsCommon.GetValueDBNull(Me.mvarCrtd_User), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@LUpd_DateTime", DbType.DateTime,clsCommon.GetValueDBNull(Me.mvarLUpd_DateTime), ParameterDirection.Input,16 ))
			pc.Add(New ParamStruct("@LUpd_Prog", DbType.String,clsCommon.GetValueDBNull(Me.mvarLUpd_Prog), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@LUpd_User", DbType.String,clsCommon.GetValueDBNull(Me.mvarLUpd_User), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@tstamp", DbType.String,clsCommon.GetValueDBNull(Me.mvartstamp), ParameterDirection.Input,18 ))
			pc.Add(New ParamStruct("@SellThroughQuater", DbType.Decimal,clsCommon.GetValueDBNull(Me.mvarSellThroughQuater), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@SellThroughMonth", DbType.Decimal,clsCommon.GetValueDBNull(Me.mvarSellThroughMonth), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@VMSupport", DbType.Decimal,clsCommon.GetValueDBNull(Me.mvarVMSupport), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@ModelBonus", DbType.Decimal,clsCommon.GetValueDBNull(Me.mvarModelBonus), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@InStock", DbType.Decimal,clsCommon.GetValueDBNull(Me.mvarInStock), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@Display", DbType.Decimal,clsCommon.GetValueDBNull(Me.mvarDisplay), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@OOS", DbType.Decimal,clsCommon.GetValueDBNull(Me.mvarOOS), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@DebtManage", DbType.Decimal,clsCommon.GetValueDBNull(Me.mvarDebtManage), ParameterDirection.Input,8 ))
			DAL.ExecPreparedSQL(PP_OM_KPISell_Detail, CommandType.StoredProcedure, pc,"")
		Me.mvarKPI = clsCommon.GetValue(pc.Item("@KPI").Value, mvarKPI.GetType().FullName)
		Return (Me.mvarKPI <> String.Empty )
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Function Update() as Boolean 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "Update", ParameterDirection.Input,50 ))
			 pc.Add(New ParamStruct("@KPI",DbType.String, clsCommon.GetValueDBNull(me.mvarKPI), ParameterDirection.Input,50 ))
			 pc.Add(New ParamStruct("@Zone",DbType.String, clsCommon.GetValueDBNull(me.mvarZone), ParameterDirection.Input,10 ))
			 pc.Add(New ParamStruct("@Territory",DbType.String, clsCommon.GetValueDBNull(me.mvarTerritory), ParameterDirection.Input,10 ))
			 pc.Add(New ParamStruct("@BranchID",DbType.String, clsCommon.GetValueDBNull(me.mvarBranchID), ParameterDirection.Input,30 ))
			 pc.Add(New ParamStruct("@SlsperId",DbType.String, clsCommon.GetValueDBNull(me.mvarSlsperId), ParameterDirection.Input,30 ))
			 pc.Add(New ParamStruct("@SellTarget",DbType.Decimal, clsCommon.GetValueDBNull(me.mvarSellTarget), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@CoverageTarget",DbType.Decimal, clsCommon.GetValueDBNull(me.mvarCoverageTarget), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@NewTarget",DbType.Decimal, clsCommon.GetValueDBNull(me.mvarNewTarget), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@Crtd_DateTime",DbType.DateTime, clsCommon.GetValueDBNull(me.mvarCrtd_DateTime), ParameterDirection.Input,16 ))
			 pc.Add(New ParamStruct("@Crtd_Prog",DbType.String, clsCommon.GetValueDBNull(me.mvarCrtd_Prog), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@Crtd_User",DbType.String, clsCommon.GetValueDBNull(me.mvarCrtd_User), ParameterDirection.Input,10 ))
			 pc.Add(New ParamStruct("@LUpd_DateTime",DbType.DateTime, clsCommon.GetValueDBNull(me.mvarLUpd_DateTime), ParameterDirection.Input,16 ))
			 pc.Add(New ParamStruct("@LUpd_Prog",DbType.String, clsCommon.GetValueDBNull(me.mvarLUpd_Prog), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@LUpd_User",DbType.String, clsCommon.GetValueDBNull(me.mvarLUpd_User), ParameterDirection.Input,10 ))
			 pc.Add(New ParamStruct("@tstamp",DbType.String, clsCommon.GetValueDBNull(me.mvartstamp), ParameterDirection.Input,18 ))
			 pc.Add(New ParamStruct("@SellThroughQuater",DbType.Decimal, clsCommon.GetValueDBNull(me.mvarSellThroughQuater), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@SellThroughMonth",DbType.Decimal, clsCommon.GetValueDBNull(me.mvarSellThroughMonth), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@VMSupport",DbType.Decimal, clsCommon.GetValueDBNull(me.mvarVMSupport), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@ModelBonus",DbType.Decimal, clsCommon.GetValueDBNull(me.mvarModelBonus), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@InStock",DbType.Decimal, clsCommon.GetValueDBNull(me.mvarInStock), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@Display",DbType.Decimal, clsCommon.GetValueDBNull(me.mvarDisplay), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@OOS",DbType.Decimal, clsCommon.GetValueDBNull(me.mvarOOS), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@DebtManage",DbType.Decimal, clsCommon.GetValueDBNull(me.mvarDebtManage), ParameterDirection.Input,8 ))
			Return (DAL.ExecNonQuery(PP_OM_KPISell_Detail, CommandType.StoredProcedure, pc,"") > 0)
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Function Delete(ByVal KPI As System.String, ByVal Zone As System.String, ByVal Territory As System.String, ByVal BranchID As System.String, ByVal SlsperId As System.String) as Boolean 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "Delete", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@KPI",DbType.String, clsCommon.GetValueDBNull(KPI), ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@Zone",DbType.String, clsCommon.GetValueDBNull(Zone), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@Territory",DbType.String, clsCommon.GetValueDBNull(Territory), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@BranchID",DbType.String, clsCommon.GetValueDBNull(BranchID), ParameterDirection.Input,30 ))
			pc.Add(New ParamStruct("@SlsperId",DbType.String, clsCommon.GetValueDBNull(SlsperId), ParameterDirection.Input,30 ))
			Return (DAL.ExecNonQuery(PP_OM_KPISell_Detail, CommandType.StoredProcedure, pc,"") > 0)
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Function GetAll(ByVal KPI As System.String, ByVal Zone As System.String, ByVal Territory As System.String, ByVal BranchID As System.String, ByVal SlsperId As System.String) as DataTable 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			Dim ds As New DataSet
			pc.Add(New ParamStruct("@Action", DbType.String, "GetListData", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@KPI", DbType.String, clsCommon.GetValueDBNull(KPI), ParameterDirection.Input, 50 ))
			pc.Add(New ParamStruct("@Zone", DbType.String, clsCommon.GetValueDBNull(Zone), ParameterDirection.Input, 10 ))
			pc.Add(New ParamStruct("@Territory", DbType.String, clsCommon.GetValueDBNull(Territory), ParameterDirection.Input, 10 ))
			pc.Add(New ParamStruct("@BranchID", DbType.String, clsCommon.GetValueDBNull(BranchID), ParameterDirection.Input, 30 ))
			pc.Add(New ParamStruct("@SlsperId", DbType.String, clsCommon.GetValueDBNull(SlsperId), ParameterDirection.Input, 30 ))
			ds = DAL.ExecDataSet(PP_OM_KPISell_Detail, CommandType.StoredProcedure, pc,"")
			Dim keys(4) As DataColumn
			Dim column As DataColumn
			column = ds.Tables(0).Columns("KPI")
			Keys(0) = column
			column = ds.Tables(0).Columns("Zone")
			Keys(1) = column
			column = ds.Tables(0).Columns("Territory")
			Keys(2) = column
			column = ds.Tables(0).Columns("BranchID")
			Keys(3) = column
			column = ds.Tables(0).Columns("SlsperId")
			Keys(4) = column
			ds.Tables(0).PrimaryKey = Keys
			Return ds.Tables(0)
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Sub Reset()
		mvarKPI = String.Empty
		mvarZone = String.Empty
		mvarTerritory = String.Empty
		mvarBranchID = String.Empty
		mvarSlsperId = String.Empty
		mvarSellTarget = 0
		mvarCoverageTarget = 0
		mvarNewTarget = 0
		mvarCrtd_DateTime = Today
		mvarCrtd_Prog = String.Empty
		mvarCrtd_User = String.Empty
		mvarLUpd_DateTime = Today
		mvarLUpd_Prog = String.Empty
		mvarLUpd_User = String.Empty
		mvartstamp = String.Empty
		mvarSellThroughQuater = 0
		mvarSellThroughMonth = 0
		mvarVMSupport = 0
		mvarModelBonus = 0
		mvarInStock = 0
		mvarDisplay = 0
		mvarOOS = 0
		mvarDebtManage = 0
	End Sub
	Public Function GetByKey(ByVal KPI As System.String, ByVal Zone As System.String, ByVal Territory As System.String, ByVal BranchID As System.String, ByVal SlsperId As System.String) as Boolean 
		Dim DAL As DataAccess = m_Dal
		Dim ds As New DataSet 
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "GetData_ByKey", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@KPI", DbType.String, clsCommon.GetValueDBNull(KPI), ParameterDirection.InputOutput, 50 ))
			pc.Add(New ParamStruct("@Zone", DbType.String, clsCommon.GetValueDBNull(Zone), ParameterDirection.InputOutput, 10 ))
			pc.Add(New ParamStruct("@Territory", DbType.String, clsCommon.GetValueDBNull(Territory), ParameterDirection.InputOutput, 10 ))
			pc.Add(New ParamStruct("@BranchID", DbType.String, clsCommon.GetValueDBNull(BranchID), ParameterDirection.InputOutput, 30 ))
			pc.Add(New ParamStruct("@SlsperId", DbType.String, clsCommon.GetValueDBNull(SlsperId), ParameterDirection.InputOutput, 30 ))
			ds = DAL.ExecDataSet(PP_OM_KPISell_Detail, CommandType.StoredProcedure, pc,"")
			me.Reset()
			If ds Is Nothing Then
				Return False
			End If
			If ds.Tables(0).Rows.Count > 0 Then
				FillData(ds.Tables(0).Rows(0))
				Return True
			End If
		Catch ex As Exception
			Throw ex 
		End Try
		Return False
	End Function
	Public Sub FillData(row as DataRow)
		mvarKPI =  clsCommon.GetValue(row("KPI"), mvarKPI.GetType().FullName)
		mvarZone =  clsCommon.GetValue(row("Zone"), mvarZone.GetType().FullName)
		mvarTerritory =  clsCommon.GetValue(row("Territory"), mvarTerritory.GetType().FullName)
		mvarBranchID =  clsCommon.GetValue(row("BranchID"), mvarBranchID.GetType().FullName)
		mvarSlsperId =  clsCommon.GetValue(row("SlsperId"), mvarSlsperId.GetType().FullName)
		mvarSellTarget =  clsCommon.GetValue(row("SellTarget"), mvarSellTarget.GetType().FullName)
		mvarCoverageTarget =  clsCommon.GetValue(row("CoverageTarget"), mvarCoverageTarget.GetType().FullName)
		mvarNewTarget =  clsCommon.GetValue(row("NewTarget"), mvarNewTarget.GetType().FullName)
		mvarCrtd_DateTime =  clsCommon.GetValue(row("Crtd_DateTime"), mvarCrtd_DateTime.GetType().FullName)
		mvarCrtd_Prog =  clsCommon.GetValue(row("Crtd_Prog"), mvarCrtd_Prog.GetType().FullName)
		mvarCrtd_User =  clsCommon.GetValue(row("Crtd_User"), mvarCrtd_User.GetType().FullName)
		mvarLUpd_DateTime =  clsCommon.GetValue(row("LUpd_DateTime"), mvarLUpd_DateTime.GetType().FullName)
		mvarLUpd_Prog =  clsCommon.GetValue(row("LUpd_Prog"), mvarLUpd_Prog.GetType().FullName)
		mvarLUpd_User =  clsCommon.GetValue(row("LUpd_User"), mvarLUpd_User.GetType().FullName)
		mvartstamp =  clsCommon.GetValue(row("tstamp"), mvartstamp.GetType().FullName)
		mvarSellThroughQuater =  clsCommon.GetValue(row("SellThroughQuater"), mvarSellThroughQuater.GetType().FullName)
		mvarSellThroughMonth =  clsCommon.GetValue(row("SellThroughMonth"), mvarSellThroughMonth.GetType().FullName)
		mvarVMSupport =  clsCommon.GetValue(row("VMSupport"), mvarVMSupport.GetType().FullName)
		mvarModelBonus =  clsCommon.GetValue(row("ModelBonus"), mvarModelBonus.GetType().FullName)
		mvarInStock =  clsCommon.GetValue(row("InStock"), mvarInStock.GetType().FullName)
		mvarDisplay =  clsCommon.GetValue(row("Display"), mvarDisplay.GetType().FullName)
		mvarOOS =  clsCommon.GetValue(row("OOS"), mvarOOS.GetType().FullName)
		mvarDebtManage =  clsCommon.GetValue(row("DebtManage"), mvarDebtManage.GetType().FullName)
	End Sub
#End Region 

#Region "Private Methods"
#End Region 

End Class
