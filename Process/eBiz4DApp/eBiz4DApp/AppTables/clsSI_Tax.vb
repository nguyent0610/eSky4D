'-- ------------------------------------------------------------
'-- Class name    :  clsSI_Tax
'-- Created date  :  5/13/2015
'-- Created by    :  
'-- Updated by    :  
'-- Generated by    :  Class Maker v1.0
'-- ------------------------------------------------------------

'-- Import Libraries --
Imports HQFramework.Common
Imports HQFramework.DAL
Public Class clsSI_Tax
#Region "Constants"
	Private Const PP_SI_Tax As String = "PP_SI_Tax"
#End Region 

#Region "Member Variables"
	Private mvarTaxID As System.String

	Private mvarDescr As System.String

	Private mvarTaxRate As System.Double

	Private mvarTaxBasis As System.String

	Private mvarTaxCalcType As System.String

	Private mvarTaxCalcLvl As System.String

	Private mvarTxblMax As System.Double

	Private mvarTxblMin As System.Double

	Private mvarInclFrt As System.String

	Private mvarInclmisc As System.String

	Private mvarPrcTaxIncl As System.String

	Private mvarLvl2Exmpt As System.Int16

	Private mvarInclInDocTot As System.String

	Private mvarApplTermDisc As System.String

	Private mvarApplTermsDiscTax As System.Int16

	Private mvarAdjByTermsDisc As System.String

	Private mvarARTaxPtDate As System.String

	Private mvarAPTaxPtDate As System.String

	Private mvarOPTaxPtDate As System.String

	Private mvarPOTaxPtDate As System.String

	Private mvarCatFlg As System.String

	Private mvarCatExcept00 As System.String

	Private mvarCatExcept01 As System.String

	Private mvarCatExcept02 As System.String

	Private mvarCatExcept03 As System.String

	Private mvarCatExcept04 As System.String

	Private mvarCatExcept05 As System.String

	Private mvarCrtd_DateTime As System.DateTime

	Private mvarCrtd_Prog As System.String

	Private mvarCrtd_User As System.String

	Private mvarLUpd_DateTime As System.DateTime

	Private mvarLUpd_Prog As System.String

	Private mvarLUpd_User As System.String

	Private mvartstamp As System.String

#End Region 

	Private m_Dal As DataAccess
#Region "Constructors"
	Public Sub New()
		m_Dal = New DataAccess
		Reset()
	End Sub
	Public Sub New(ByVal dal As DataAccess)
		m_Dal = dal
		Reset()
	End Sub
#End Region 

#Region "Public Properties"
	Public Property TaxID() As System.String
		Get
			Return mvarTaxID
		End Get
		Set(ByVal Value As System.String)
			mvarTaxID = Value
		End Set
	End Property

	Public Property Descr() As System.String
		Get
			Return mvarDescr
		End Get
		Set(ByVal Value As System.String)
			mvarDescr = Value
		End Set
	End Property

	Public Property TaxRate() As System.Double
		Get
			Return mvarTaxRate
		End Get
		Set(ByVal Value As System.Double)
			mvarTaxRate = Value
		End Set
	End Property

	Public Property TaxBasis() As System.String
		Get
			Return mvarTaxBasis
		End Get
		Set(ByVal Value As System.String)
			mvarTaxBasis = Value
		End Set
	End Property

	Public Property TaxCalcType() As System.String
		Get
			Return mvarTaxCalcType
		End Get
		Set(ByVal Value As System.String)
			mvarTaxCalcType = Value
		End Set
	End Property

	Public Property TaxCalcLvl() As System.String
		Get
			Return mvarTaxCalcLvl
		End Get
		Set(ByVal Value As System.String)
			mvarTaxCalcLvl = Value
		End Set
	End Property

	Public Property TxblMax() As System.Double
		Get
			Return mvarTxblMax
		End Get
		Set(ByVal Value As System.Double)
			mvarTxblMax = Value
		End Set
	End Property

	Public Property TxblMin() As System.Double
		Get
			Return mvarTxblMin
		End Get
		Set(ByVal Value As System.Double)
			mvarTxblMin = Value
		End Set
	End Property

	Public Property InclFrt() As System.String
		Get
			Return mvarInclFrt
		End Get
		Set(ByVal Value As System.String)
			mvarInclFrt = Value
		End Set
	End Property

	Public Property Inclmisc() As System.String
		Get
			Return mvarInclmisc
		End Get
		Set(ByVal Value As System.String)
			mvarInclmisc = Value
		End Set
	End Property

	Public Property PrcTaxIncl() As System.String
		Get
			Return mvarPrcTaxIncl
		End Get
		Set(ByVal Value As System.String)
			mvarPrcTaxIncl = Value
		End Set
	End Property

	Public Property Lvl2Exmpt() As System.Int16
		Get
			Return mvarLvl2Exmpt
		End Get
		Set(ByVal Value As System.Int16)
			mvarLvl2Exmpt = Value
		End Set
	End Property

	Public Property InclInDocTot() As System.String
		Get
			Return mvarInclInDocTot
		End Get
		Set(ByVal Value As System.String)
			mvarInclInDocTot = Value
		End Set
	End Property

	Public Property ApplTermDisc() As System.String
		Get
			Return mvarApplTermDisc
		End Get
		Set(ByVal Value As System.String)
			mvarApplTermDisc = Value
		End Set
	End Property

	Public Property ApplTermsDiscTax() As System.Int16
		Get
			Return mvarApplTermsDiscTax
		End Get
		Set(ByVal Value As System.Int16)
			mvarApplTermsDiscTax = Value
		End Set
	End Property

	Public Property AdjByTermsDisc() As System.String
		Get
			Return mvarAdjByTermsDisc
		End Get
		Set(ByVal Value As System.String)
			mvarAdjByTermsDisc = Value
		End Set
	End Property

	Public Property ARTaxPtDate() As System.String
		Get
			Return mvarARTaxPtDate
		End Get
		Set(ByVal Value As System.String)
			mvarARTaxPtDate = Value
		End Set
	End Property

	Public Property APTaxPtDate() As System.String
		Get
			Return mvarAPTaxPtDate
		End Get
		Set(ByVal Value As System.String)
			mvarAPTaxPtDate = Value
		End Set
	End Property

	Public Property OPTaxPtDate() As System.String
		Get
			Return mvarOPTaxPtDate
		End Get
		Set(ByVal Value As System.String)
			mvarOPTaxPtDate = Value
		End Set
	End Property

	Public Property POTaxPtDate() As System.String
		Get
			Return mvarPOTaxPtDate
		End Get
		Set(ByVal Value As System.String)
			mvarPOTaxPtDate = Value
		End Set
	End Property

	Public Property CatFlg() As System.String
		Get
			Return mvarCatFlg
		End Get
		Set(ByVal Value As System.String)
			mvarCatFlg = Value
		End Set
	End Property

	Public Property CatExcept00() As System.String
		Get
			Return mvarCatExcept00
		End Get
		Set(ByVal Value As System.String)
			mvarCatExcept00 = Value
		End Set
	End Property

	Public Property CatExcept01() As System.String
		Get
			Return mvarCatExcept01
		End Get
		Set(ByVal Value As System.String)
			mvarCatExcept01 = Value
		End Set
	End Property

	Public Property CatExcept02() As System.String
		Get
			Return mvarCatExcept02
		End Get
		Set(ByVal Value As System.String)
			mvarCatExcept02 = Value
		End Set
	End Property

	Public Property CatExcept03() As System.String
		Get
			Return mvarCatExcept03
		End Get
		Set(ByVal Value As System.String)
			mvarCatExcept03 = Value
		End Set
	End Property

	Public Property CatExcept04() As System.String
		Get
			Return mvarCatExcept04
		End Get
		Set(ByVal Value As System.String)
			mvarCatExcept04 = Value
		End Set
	End Property

	Public Property CatExcept05() As System.String
		Get
			Return mvarCatExcept05
		End Get
		Set(ByVal Value As System.String)
			mvarCatExcept05 = Value
		End Set
	End Property

	Public Property Crtd_DateTime() As System.DateTime
		Get
			Return mvarCrtd_DateTime
		End Get
		Set(ByVal Value As System.DateTime)
			mvarCrtd_DateTime = Value
		End Set
	End Property

	Public Property Crtd_Prog() As System.String
		Get
			Return mvarCrtd_Prog
		End Get
		Set(ByVal Value As System.String)
			mvarCrtd_Prog = Value
		End Set
	End Property

	Public Property Crtd_User() As System.String
		Get
			Return mvarCrtd_User
		End Get
		Set(ByVal Value As System.String)
			mvarCrtd_User = Value
		End Set
	End Property

	Public Property LUpd_DateTime() As System.DateTime
		Get
			Return mvarLUpd_DateTime
		End Get
		Set(ByVal Value As System.DateTime)
			mvarLUpd_DateTime = Value
		End Set
	End Property

	Public Property LUpd_Prog() As System.String
		Get
			Return mvarLUpd_Prog
		End Get
		Set(ByVal Value As System.String)
			mvarLUpd_Prog = Value
		End Set
	End Property

	Public Property LUpd_User() As System.String
		Get
			Return mvarLUpd_User
		End Get
		Set(ByVal Value As System.String)
			mvarLUpd_User = Value
		End Set
	End Property

	Public Property tstamp() As System.String
		Get
			Return mvartstamp
		End Get
		Set(ByVal Value As System.String)
			mvartstamp = Value
		End Set
	End Property

#End Region 

#Region "Public Methods"
	Public Function Add() as Boolean 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "AddNew", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@TaxID", DbType.String,clsCommon.GetValueDBNull(Me.mvarTaxID), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@Descr", DbType.String,clsCommon.GetValueDBNull(Me.mvarDescr), ParameterDirection.Input,30 ))
			pc.Add(New ParamStruct("@TaxRate", DbType.Decimal,clsCommon.GetValueDBNull(Me.mvarTaxRate), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@TaxBasis", DbType.String,clsCommon.GetValueDBNull(Me.mvarTaxBasis), ParameterDirection.Input,1 ))
			pc.Add(New ParamStruct("@TaxCalcType", DbType.String,clsCommon.GetValueDBNull(Me.mvarTaxCalcType), ParameterDirection.Input,1 ))
			pc.Add(New ParamStruct("@TaxCalcLvl", DbType.String,clsCommon.GetValueDBNull(Me.mvarTaxCalcLvl), ParameterDirection.Input,1 ))
			pc.Add(New ParamStruct("@TxblMax", DbType.Decimal,clsCommon.GetValueDBNull(Me.mvarTxblMax), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@TxblMin", DbType.Decimal,clsCommon.GetValueDBNull(Me.mvarTxblMin), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@InclFrt", DbType.String,clsCommon.GetValueDBNull(Me.mvarInclFrt), ParameterDirection.Input,1 ))
			pc.Add(New ParamStruct("@Inclmisc", DbType.String,clsCommon.GetValueDBNull(Me.mvarInclmisc), ParameterDirection.Input,1 ))
			pc.Add(New ParamStruct("@PrcTaxIncl", DbType.String,clsCommon.GetValueDBNull(Me.mvarPrcTaxIncl), ParameterDirection.Input,1 ))
			pc.Add(New ParamStruct("@Lvl2Exmpt", DbType.int16,clsCommon.GetValueDBNull(Me.mvarLvl2Exmpt), ParameterDirection.Input,2 ))
			pc.Add(New ParamStruct("@InclInDocTot", DbType.String,clsCommon.GetValueDBNull(Me.mvarInclInDocTot), ParameterDirection.Input,1 ))
			pc.Add(New ParamStruct("@ApplTermDisc", DbType.String,clsCommon.GetValueDBNull(Me.mvarApplTermDisc), ParameterDirection.Input,1 ))
			pc.Add(New ParamStruct("@ApplTermsDiscTax", DbType.int16,clsCommon.GetValueDBNull(Me.mvarApplTermsDiscTax), ParameterDirection.Input,2 ))
			pc.Add(New ParamStruct("@AdjByTermsDisc", DbType.String,clsCommon.GetValueDBNull(Me.mvarAdjByTermsDisc), ParameterDirection.Input,1 ))
			pc.Add(New ParamStruct("@ARTaxPtDate", DbType.String,clsCommon.GetValueDBNull(Me.mvarARTaxPtDate), ParameterDirection.Input,1 ))
			pc.Add(New ParamStruct("@APTaxPtDate", DbType.String,clsCommon.GetValueDBNull(Me.mvarAPTaxPtDate), ParameterDirection.Input,1 ))
			pc.Add(New ParamStruct("@OPTaxPtDate", DbType.String,clsCommon.GetValueDBNull(Me.mvarOPTaxPtDate), ParameterDirection.Input,1 ))
			pc.Add(New ParamStruct("@POTaxPtDate", DbType.String,clsCommon.GetValueDBNull(Me.mvarPOTaxPtDate), ParameterDirection.Input,1 ))
			pc.Add(New ParamStruct("@CatFlg", DbType.String,clsCommon.GetValueDBNull(Me.mvarCatFlg), ParameterDirection.Input,1 ))
			pc.Add(New ParamStruct("@CatExcept00", DbType.String,clsCommon.GetValueDBNull(Me.mvarCatExcept00), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@CatExcept01", DbType.String,clsCommon.GetValueDBNull(Me.mvarCatExcept01), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@CatExcept02", DbType.String,clsCommon.GetValueDBNull(Me.mvarCatExcept02), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@CatExcept03", DbType.String,clsCommon.GetValueDBNull(Me.mvarCatExcept03), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@CatExcept04", DbType.String,clsCommon.GetValueDBNull(Me.mvarCatExcept04), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@CatExcept05", DbType.String,clsCommon.GetValueDBNull(Me.mvarCatExcept05), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@Crtd_DateTime", DbType.DateTime,clsCommon.GetValueDBNull(Me.mvarCrtd_DateTime), ParameterDirection.Input,16 ))
			pc.Add(New ParamStruct("@Crtd_Prog", DbType.String,clsCommon.GetValueDBNull(Me.mvarCrtd_Prog), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@Crtd_User", DbType.String,clsCommon.GetValueDBNull(Me.mvarCrtd_User), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@LUpd_DateTime", DbType.DateTime,clsCommon.GetValueDBNull(Me.mvarLUpd_DateTime), ParameterDirection.Input,16 ))
			pc.Add(New ParamStruct("@LUpd_Prog", DbType.String,clsCommon.GetValueDBNull(Me.mvarLUpd_Prog), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@LUpd_User", DbType.String,clsCommon.GetValueDBNull(Me.mvarLUpd_User), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@tstamp", DbType.String,clsCommon.GetValueDBNull(Me.mvartstamp), ParameterDirection.Input,18 ))
			DAL.ExecPreparedSQL(PP_SI_Tax, CommandType.StoredProcedure, pc,"")
		Me.mvarTaxID = clsCommon.GetValue(pc.Item("@TaxID").Value, mvarTaxID.GetType().FullName)
		Return (Me.mvarTaxID <> String.Empty )
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Function Update() as Boolean 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "Update", ParameterDirection.Input,50 ))
			 pc.Add(New ParamStruct("@TaxID",DbType.String, clsCommon.GetValueDBNull(me.mvarTaxID), ParameterDirection.Input,10 ))
			 pc.Add(New ParamStruct("@Descr",DbType.String, clsCommon.GetValueDBNull(me.mvarDescr), ParameterDirection.Input,30 ))
			 pc.Add(New ParamStruct("@TaxRate",DbType.Decimal, clsCommon.GetValueDBNull(me.mvarTaxRate), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@TaxBasis",DbType.String, clsCommon.GetValueDBNull(me.mvarTaxBasis), ParameterDirection.Input,1 ))
			 pc.Add(New ParamStruct("@TaxCalcType",DbType.String, clsCommon.GetValueDBNull(me.mvarTaxCalcType), ParameterDirection.Input,1 ))
			 pc.Add(New ParamStruct("@TaxCalcLvl",DbType.String, clsCommon.GetValueDBNull(me.mvarTaxCalcLvl), ParameterDirection.Input,1 ))
			 pc.Add(New ParamStruct("@TxblMax",DbType.Decimal, clsCommon.GetValueDBNull(me.mvarTxblMax), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@TxblMin",DbType.Decimal, clsCommon.GetValueDBNull(me.mvarTxblMin), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@InclFrt",DbType.String, clsCommon.GetValueDBNull(me.mvarInclFrt), ParameterDirection.Input,1 ))
			 pc.Add(New ParamStruct("@Inclmisc",DbType.String, clsCommon.GetValueDBNull(me.mvarInclmisc), ParameterDirection.Input,1 ))
			 pc.Add(New ParamStruct("@PrcTaxIncl",DbType.String, clsCommon.GetValueDBNull(me.mvarPrcTaxIncl), ParameterDirection.Input,1 ))
			 pc.Add(New ParamStruct("@Lvl2Exmpt",DbType.int16, clsCommon.GetValueDBNull(me.mvarLvl2Exmpt), ParameterDirection.Input,2 ))
			 pc.Add(New ParamStruct("@InclInDocTot",DbType.String, clsCommon.GetValueDBNull(me.mvarInclInDocTot), ParameterDirection.Input,1 ))
			 pc.Add(New ParamStruct("@ApplTermDisc",DbType.String, clsCommon.GetValueDBNull(me.mvarApplTermDisc), ParameterDirection.Input,1 ))
			 pc.Add(New ParamStruct("@ApplTermsDiscTax",DbType.int16, clsCommon.GetValueDBNull(me.mvarApplTermsDiscTax), ParameterDirection.Input,2 ))
			 pc.Add(New ParamStruct("@AdjByTermsDisc",DbType.String, clsCommon.GetValueDBNull(me.mvarAdjByTermsDisc), ParameterDirection.Input,1 ))
			 pc.Add(New ParamStruct("@ARTaxPtDate",DbType.String, clsCommon.GetValueDBNull(me.mvarARTaxPtDate), ParameterDirection.Input,1 ))
			 pc.Add(New ParamStruct("@APTaxPtDate",DbType.String, clsCommon.GetValueDBNull(me.mvarAPTaxPtDate), ParameterDirection.Input,1 ))
			 pc.Add(New ParamStruct("@OPTaxPtDate",DbType.String, clsCommon.GetValueDBNull(me.mvarOPTaxPtDate), ParameterDirection.Input,1 ))
			 pc.Add(New ParamStruct("@POTaxPtDate",DbType.String, clsCommon.GetValueDBNull(me.mvarPOTaxPtDate), ParameterDirection.Input,1 ))
			 pc.Add(New ParamStruct("@CatFlg",DbType.String, clsCommon.GetValueDBNull(me.mvarCatFlg), ParameterDirection.Input,1 ))
			 pc.Add(New ParamStruct("@CatExcept00",DbType.String, clsCommon.GetValueDBNull(me.mvarCatExcept00), ParameterDirection.Input,10 ))
			 pc.Add(New ParamStruct("@CatExcept01",DbType.String, clsCommon.GetValueDBNull(me.mvarCatExcept01), ParameterDirection.Input,10 ))
			 pc.Add(New ParamStruct("@CatExcept02",DbType.String, clsCommon.GetValueDBNull(me.mvarCatExcept02), ParameterDirection.Input,10 ))
			 pc.Add(New ParamStruct("@CatExcept03",DbType.String, clsCommon.GetValueDBNull(me.mvarCatExcept03), ParameterDirection.Input,10 ))
			 pc.Add(New ParamStruct("@CatExcept04",DbType.String, clsCommon.GetValueDBNull(me.mvarCatExcept04), ParameterDirection.Input,10 ))
			 pc.Add(New ParamStruct("@CatExcept05",DbType.String, clsCommon.GetValueDBNull(me.mvarCatExcept05), ParameterDirection.Input,10 ))
			 pc.Add(New ParamStruct("@Crtd_DateTime",DbType.DateTime, clsCommon.GetValueDBNull(me.mvarCrtd_DateTime), ParameterDirection.Input,16 ))
			 pc.Add(New ParamStruct("@Crtd_Prog",DbType.String, clsCommon.GetValueDBNull(me.mvarCrtd_Prog), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@Crtd_User",DbType.String, clsCommon.GetValueDBNull(me.mvarCrtd_User), ParameterDirection.Input,10 ))
			 pc.Add(New ParamStruct("@LUpd_DateTime",DbType.DateTime, clsCommon.GetValueDBNull(me.mvarLUpd_DateTime), ParameterDirection.Input,16 ))
			 pc.Add(New ParamStruct("@LUpd_Prog",DbType.String, clsCommon.GetValueDBNull(me.mvarLUpd_Prog), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@LUpd_User",DbType.String, clsCommon.GetValueDBNull(me.mvarLUpd_User), ParameterDirection.Input,10 ))
			 pc.Add(New ParamStruct("@tstamp",DbType.String, clsCommon.GetValueDBNull(me.mvartstamp), ParameterDirection.Input,18 ))
			Return (DAL.ExecNonQuery(PP_SI_Tax, CommandType.StoredProcedure, pc,"") > 0)
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Function Delete(ByVal TaxID As System.String) as Boolean 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "Delete", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@TaxID",DbType.String, clsCommon.GetValueDBNull(TaxID), ParameterDirection.Input,10 ))
			Return (DAL.ExecNonQuery(PP_SI_Tax, CommandType.StoredProcedure, pc,"") > 0)
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Function GetAll(ByVal TaxID As System.String) as DataTable 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			Dim ds As New DataSet
			pc.Add(New ParamStruct("@Action", DbType.String, "GetListData", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@TaxID", DbType.String, clsCommon.GetValueDBNull(TaxID), ParameterDirection.Input, 10 ))
			ds = DAL.ExecDataSet(PP_SI_Tax, CommandType.StoredProcedure, pc,"")
			Dim keys(0) As DataColumn
			Dim column As DataColumn
			column = ds.Tables(0).Columns("TaxID")
			Keys(0) = column
			ds.Tables(0).PrimaryKey = Keys
			Return ds.Tables(0)
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Sub Reset()
		mvarTaxID = String.Empty
		mvarDescr = String.Empty
		mvarTaxRate = 0
		mvarTaxBasis = String.Empty
		mvarTaxCalcType = String.Empty
		mvarTaxCalcLvl = String.Empty
		mvarTxblMax = 0
		mvarTxblMin = 0
		mvarInclFrt = String.Empty
		mvarInclmisc = String.Empty
		mvarPrcTaxIncl = String.Empty
		mvarLvl2Exmpt = 0
		mvarInclInDocTot = String.Empty
		mvarApplTermDisc = String.Empty
		mvarApplTermsDiscTax = 0
		mvarAdjByTermsDisc = String.Empty
		mvarARTaxPtDate = String.Empty
		mvarAPTaxPtDate = String.Empty
		mvarOPTaxPtDate = String.Empty
		mvarPOTaxPtDate = String.Empty
		mvarCatFlg = String.Empty
		mvarCatExcept00 = String.Empty
		mvarCatExcept01 = String.Empty
		mvarCatExcept02 = String.Empty
		mvarCatExcept03 = String.Empty
		mvarCatExcept04 = String.Empty
		mvarCatExcept05 = String.Empty
		mvarCrtd_DateTime = Today
		mvarCrtd_Prog = String.Empty
		mvarCrtd_User = String.Empty
		mvarLUpd_DateTime = Today
		mvarLUpd_Prog = String.Empty
		mvarLUpd_User = String.Empty
		mvartstamp = String.Empty
	End Sub
	Public Function GetByKey(ByVal TaxID As System.String) as Boolean 
		Dim DAL As DataAccess = m_Dal
		Dim ds As New DataSet 
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "GetData_ByKey", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@TaxID", DbType.String, clsCommon.GetValueDBNull(TaxID), ParameterDirection.InputOutput, 10 ))
			ds = DAL.ExecDataSet(PP_SI_Tax, CommandType.StoredProcedure, pc,"")
			me.Reset()
			If ds Is Nothing Then
				Return False
			End If
			If ds.Tables(0).Rows.Count > 0 Then
				FillData(ds.Tables(0).Rows(0))
				Return True
			End If
		Catch ex As Exception
			Throw ex 
		End Try
		Return False
	End Function
	Public Sub FillData(row as DataRow)
		mvarTaxID =  clsCommon.GetValue(row("TaxID"), mvarTaxID.GetType().FullName)
		mvarDescr =  clsCommon.GetValue(row("Descr"), mvarDescr.GetType().FullName)
		mvarTaxRate =  clsCommon.GetValue(row("TaxRate"), mvarTaxRate.GetType().FullName)
		mvarTaxBasis =  clsCommon.GetValue(row("TaxBasis"), mvarTaxBasis.GetType().FullName)
		mvarTaxCalcType =  clsCommon.GetValue(row("TaxCalcType"), mvarTaxCalcType.GetType().FullName)
		mvarTaxCalcLvl =  clsCommon.GetValue(row("TaxCalcLvl"), mvarTaxCalcLvl.GetType().FullName)
		mvarTxblMax =  clsCommon.GetValue(row("TxblMax"), mvarTxblMax.GetType().FullName)
		mvarTxblMin =  clsCommon.GetValue(row("TxblMin"), mvarTxblMin.GetType().FullName)
		mvarInclFrt =  clsCommon.GetValue(row("InclFrt"), mvarInclFrt.GetType().FullName)
		mvarInclmisc =  clsCommon.GetValue(row("Inclmisc"), mvarInclmisc.GetType().FullName)
		mvarPrcTaxIncl =  clsCommon.GetValue(row("PrcTaxIncl"), mvarPrcTaxIncl.GetType().FullName)
		mvarLvl2Exmpt =  clsCommon.GetValue(row("Lvl2Exmpt"), mvarLvl2Exmpt.GetType().FullName)
		mvarInclInDocTot =  clsCommon.GetValue(row("InclInDocTot"), mvarInclInDocTot.GetType().FullName)
		mvarApplTermDisc =  clsCommon.GetValue(row("ApplTermDisc"), mvarApplTermDisc.GetType().FullName)
		mvarApplTermsDiscTax =  clsCommon.GetValue(row("ApplTermsDiscTax"), mvarApplTermsDiscTax.GetType().FullName)
		mvarAdjByTermsDisc =  clsCommon.GetValue(row("AdjByTermsDisc"), mvarAdjByTermsDisc.GetType().FullName)
		mvarARTaxPtDate =  clsCommon.GetValue(row("ARTaxPtDate"), mvarARTaxPtDate.GetType().FullName)
		mvarAPTaxPtDate =  clsCommon.GetValue(row("APTaxPtDate"), mvarAPTaxPtDate.GetType().FullName)
		mvarOPTaxPtDate =  clsCommon.GetValue(row("OPTaxPtDate"), mvarOPTaxPtDate.GetType().FullName)
		mvarPOTaxPtDate =  clsCommon.GetValue(row("POTaxPtDate"), mvarPOTaxPtDate.GetType().FullName)
		mvarCatFlg =  clsCommon.GetValue(row("CatFlg"), mvarCatFlg.GetType().FullName)
		mvarCatExcept00 =  clsCommon.GetValue(row("CatExcept00"), mvarCatExcept00.GetType().FullName)
		mvarCatExcept01 =  clsCommon.GetValue(row("CatExcept01"), mvarCatExcept01.GetType().FullName)
		mvarCatExcept02 =  clsCommon.GetValue(row("CatExcept02"), mvarCatExcept02.GetType().FullName)
		mvarCatExcept03 =  clsCommon.GetValue(row("CatExcept03"), mvarCatExcept03.GetType().FullName)
		mvarCatExcept04 =  clsCommon.GetValue(row("CatExcept04"), mvarCatExcept04.GetType().FullName)
		mvarCatExcept05 =  clsCommon.GetValue(row("CatExcept05"), mvarCatExcept05.GetType().FullName)
		mvarCrtd_DateTime =  clsCommon.GetValue(row("Crtd_DateTime"), mvarCrtd_DateTime.GetType().FullName)
		mvarCrtd_Prog =  clsCommon.GetValue(row("Crtd_Prog"), mvarCrtd_Prog.GetType().FullName)
		mvarCrtd_User =  clsCommon.GetValue(row("Crtd_User"), mvarCrtd_User.GetType().FullName)
		mvarLUpd_DateTime =  clsCommon.GetValue(row("LUpd_DateTime"), mvarLUpd_DateTime.GetType().FullName)
		mvarLUpd_Prog =  clsCommon.GetValue(row("LUpd_Prog"), mvarLUpd_Prog.GetType().FullName)
		mvarLUpd_User =  clsCommon.GetValue(row("LUpd_User"), mvarLUpd_User.GetType().FullName)
		mvartstamp =  clsCommon.GetValue(row("tstamp"), mvartstamp.GetType().FullName)
	End Sub
#End Region 

#Region "Private Methods"
#End Region 

End Class
