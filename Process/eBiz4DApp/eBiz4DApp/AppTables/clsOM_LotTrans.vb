'-- ------------------------------------------------------------
'-- Class name    :  clsOM_LotTrans
'-- Created date  :  5/13/2015
'-- Created by    :  
'-- Updated by    :  
'-- Generated by    :  Class Maker v1.0
'-- ------------------------------------------------------------

'-- Import Libraries --
Imports HQFramework.Common
Imports HQFramework.DAL
Public Class clsOM_LotTrans
#Region "Constants"
	Private Const PP_OM_LotTrans As String = "PP_OM_LotTrans"
#End Region 

#Region "Member Variables"
	Private mvarBranchID As System.String

	Private mvarOrderNbr As System.String

	Private mvarLotSerNbr As System.String

	Private mvarOMLineRef As System.String

	Private mvarUnitDesc As System.String

	Private mvarExpDate As System.DateTime

	Private mvarInvtID As System.String

	Private mvarInvtMult As System.Int16

	Private mvarMfgrLotSerNbr As System.String

	Private mvarCnvFact As System.Double

	Private mvarUnitMultDiv As System.String

	Private mvarQty As System.Double

	Private mvarSiteID As System.String

	Private mvarTranDate As System.DateTime

	Private mvarINDocType As System.String

	Private mvarUnitCost As System.Double

	Private mvarUnitPrice As System.Double

	Private mvarWarrantyDate As System.DateTime

	Private mvarCrtd_Prog As System.String

	Private mvarCrtd_User As System.String

	Private mvarCrtd_DateTime As System.DateTime

	Private mvarLUpd_Prog As System.String

	Private mvarLUpd_User As System.String

	Private mvarLUpd_DateTime As System.DateTime

	Private mvartstamp As System.String

#End Region 

	Private m_Dal As DataAccess
#Region "Constructors"
	Public Sub New()
		m_Dal = New DataAccess
		Reset()
	End Sub
	Public Sub New(ByVal dal As DataAccess)
		m_Dal = dal
		Reset()
	End Sub
#End Region 

#Region "Public Properties"
	Public Property BranchID() As System.String
		Get
			Return mvarBranchID
		End Get
		Set(ByVal Value As System.String)
			mvarBranchID = Value
		End Set
	End Property

	Public Property OrderNbr() As System.String
		Get
			Return mvarOrderNbr
		End Get
		Set(ByVal Value As System.String)
			mvarOrderNbr = Value
		End Set
	End Property

	Public Property LotSerNbr() As System.String
		Get
			Return mvarLotSerNbr
		End Get
		Set(ByVal Value As System.String)
			mvarLotSerNbr = Value
		End Set
	End Property

	Public Property OMLineRef() As System.String
		Get
			Return mvarOMLineRef
		End Get
		Set(ByVal Value As System.String)
			mvarOMLineRef = Value
		End Set
	End Property

	Public Property UnitDesc() As System.String
		Get
			Return mvarUnitDesc
		End Get
		Set(ByVal Value As System.String)
			mvarUnitDesc = Value
		End Set
	End Property

	Public Property ExpDate() As System.DateTime
		Get
			Return mvarExpDate
		End Get
		Set(ByVal Value As System.DateTime)
			mvarExpDate = Value
		End Set
	End Property

	Public Property InvtID() As System.String
		Get
			Return mvarInvtID
		End Get
		Set(ByVal Value As System.String)
			mvarInvtID = Value
		End Set
	End Property

	Public Property InvtMult() As System.Int16
		Get
			Return mvarInvtMult
		End Get
		Set(ByVal Value As System.Int16)
			mvarInvtMult = Value
		End Set
	End Property

	Public Property MfgrLotSerNbr() As System.String
		Get
			Return mvarMfgrLotSerNbr
		End Get
		Set(ByVal Value As System.String)
			mvarMfgrLotSerNbr = Value
		End Set
	End Property

	Public Property CnvFact() As System.Double
		Get
			Return mvarCnvFact
		End Get
		Set(ByVal Value As System.Double)
			mvarCnvFact = Value
		End Set
	End Property

	Public Property UnitMultDiv() As System.String
		Get
			Return mvarUnitMultDiv
		End Get
		Set(ByVal Value As System.String)
			mvarUnitMultDiv = Value
		End Set
	End Property

	Public Property Qty() As System.Double
		Get
			Return mvarQty
		End Get
		Set(ByVal Value As System.Double)
			mvarQty = Value
		End Set
	End Property

	Public Property SiteID() As System.String
		Get
			Return mvarSiteID
		End Get
		Set(ByVal Value As System.String)
			mvarSiteID = Value
		End Set
	End Property

	Public Property TranDate() As System.DateTime
		Get
			Return mvarTranDate
		End Get
		Set(ByVal Value As System.DateTime)
			mvarTranDate = Value
		End Set
	End Property

	Public Property INDocType() As System.String
		Get
			Return mvarINDocType
		End Get
		Set(ByVal Value As System.String)
			mvarINDocType = Value
		End Set
	End Property

	Public Property UnitCost() As System.Double
		Get
			Return mvarUnitCost
		End Get
		Set(ByVal Value As System.Double)
			mvarUnitCost = Value
		End Set
	End Property

	Public Property UnitPrice() As System.Double
		Get
			Return mvarUnitPrice
		End Get
		Set(ByVal Value As System.Double)
			mvarUnitPrice = Value
		End Set
	End Property

	Public Property WarrantyDate() As System.DateTime
		Get
			Return mvarWarrantyDate
		End Get
		Set(ByVal Value As System.DateTime)
			mvarWarrantyDate = Value
		End Set
	End Property

	Public Property Crtd_Prog() As System.String
		Get
			Return mvarCrtd_Prog
		End Get
		Set(ByVal Value As System.String)
			mvarCrtd_Prog = Value
		End Set
	End Property

	Public Property Crtd_User() As System.String
		Get
			Return mvarCrtd_User
		End Get
		Set(ByVal Value As System.String)
			mvarCrtd_User = Value
		End Set
	End Property

	Public Property Crtd_DateTime() As System.DateTime
		Get
			Return mvarCrtd_DateTime
		End Get
		Set(ByVal Value As System.DateTime)
			mvarCrtd_DateTime = Value
		End Set
	End Property

	Public Property LUpd_Prog() As System.String
		Get
			Return mvarLUpd_Prog
		End Get
		Set(ByVal Value As System.String)
			mvarLUpd_Prog = Value
		End Set
	End Property

	Public Property LUpd_User() As System.String
		Get
			Return mvarLUpd_User
		End Get
		Set(ByVal Value As System.String)
			mvarLUpd_User = Value
		End Set
	End Property

	Public Property LUpd_DateTime() As System.DateTime
		Get
			Return mvarLUpd_DateTime
		End Get
		Set(ByVal Value As System.DateTime)
			mvarLUpd_DateTime = Value
		End Set
	End Property

	Public Property tstamp() As System.String
		Get
			Return mvartstamp
		End Get
		Set(ByVal Value As System.String)
			mvartstamp = Value
		End Set
	End Property

#End Region 

#Region "Public Methods"
	Public Function Add() as Boolean 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "AddNew", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@BranchID", DbType.String,clsCommon.GetValueDBNull(Me.mvarBranchID), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@OrderNbr", DbType.String,clsCommon.GetValueDBNull(Me.mvarOrderNbr), ParameterDirection.Input,15 ))
			pc.Add(New ParamStruct("@LotSerNbr", DbType.String,clsCommon.GetValueDBNull(Me.mvarLotSerNbr), ParameterDirection.Input,25 ))
			pc.Add(New ParamStruct("@OMLineRef", DbType.String,clsCommon.GetValueDBNull(Me.mvarOMLineRef), ParameterDirection.Input,5 ))
			pc.Add(New ParamStruct("@UnitDesc", DbType.String,clsCommon.GetValueDBNull(Me.mvarUnitDesc), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@ExpDate", DbType.DateTime,clsCommon.GetValueDBNull(Me.mvarExpDate.Date), ParameterDirection.Input,16 ))
			pc.Add(New ParamStruct("@InvtID", DbType.String,clsCommon.GetValueDBNull(Me.mvarInvtID), ParameterDirection.Input,30 ))
			pc.Add(New ParamStruct("@InvtMult", DbType.int16,clsCommon.GetValueDBNull(Me.mvarInvtMult), ParameterDirection.Input,2 ))
			pc.Add(New ParamStruct("@MfgrLotSerNbr", DbType.String,clsCommon.GetValueDBNull(Me.mvarMfgrLotSerNbr), ParameterDirection.Input,25 ))
			pc.Add(New ParamStruct("@CnvFact", DbType.Decimal,clsCommon.GetValueDBNull(Me.mvarCnvFact), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@UnitMultDiv", DbType.String,clsCommon.GetValueDBNull(Me.mvarUnitMultDiv), ParameterDirection.Input,1 ))
			pc.Add(New ParamStruct("@Qty", DbType.Decimal,clsCommon.GetValueDBNull(Me.mvarQty), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@SiteID", DbType.String,clsCommon.GetValueDBNull(Me.mvarSiteID), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@TranDate", DbType.DateTime,clsCommon.GetValueDBNull(Me.mvarTranDate.Date), ParameterDirection.Input,16 ))
			pc.Add(New ParamStruct("@INDocType", DbType.String,clsCommon.GetValueDBNull(Me.mvarINDocType), ParameterDirection.Input,2 ))
			pc.Add(New ParamStruct("@UnitCost", DbType.Decimal,clsCommon.GetValueDBNull(Me.mvarUnitCost), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@UnitPrice", DbType.Decimal,clsCommon.GetValueDBNull(Me.mvarUnitPrice), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@WarrantyDate", DbType.DateTime,clsCommon.GetValueDBNull(Me.mvarWarrantyDate.Date), ParameterDirection.Input,16 ))
			pc.Add(New ParamStruct("@Crtd_Prog", DbType.String,clsCommon.GetValueDBNull(Me.mvarCrtd_Prog), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@Crtd_User", DbType.String,clsCommon.GetValueDBNull(Me.mvarCrtd_User), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@Crtd_DateTime", DbType.DateTime,clsCommon.GetValueDBNull(Me.mvarCrtd_DateTime), ParameterDirection.Input,16 ))
			pc.Add(New ParamStruct("@LUpd_Prog", DbType.String,clsCommon.GetValueDBNull(Me.mvarLUpd_Prog), ParameterDirection.Input,8 ))
			pc.Add(New ParamStruct("@LUpd_User", DbType.String,clsCommon.GetValueDBNull(Me.mvarLUpd_User), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@LUpd_DateTime", DbType.DateTime,clsCommon.GetValueDBNull(Me.mvarLUpd_DateTime), ParameterDirection.Input,16 ))
			pc.Add(New ParamStruct("@tstamp", DbType.String,clsCommon.GetValueDBNull(Me.mvartstamp), ParameterDirection.Input,18 ))
			DAL.ExecPreparedSQL(PP_OM_LotTrans, CommandType.StoredProcedure, pc,"")
		Me.mvarBranchID = clsCommon.GetValue(pc.Item("@BranchID").Value, mvarBranchID.GetType().FullName)
		Return (Me.mvarBranchID <> String.Empty )
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Function Update() as Boolean 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "Update", ParameterDirection.Input,50 ))
			 pc.Add(New ParamStruct("@BranchID",DbType.String, clsCommon.GetValueDBNull(me.mvarBranchID), ParameterDirection.Input,10 ))
			 pc.Add(New ParamStruct("@OrderNbr",DbType.String, clsCommon.GetValueDBNull(me.mvarOrderNbr), ParameterDirection.Input,15 ))
			 pc.Add(New ParamStruct("@LotSerNbr",DbType.String, clsCommon.GetValueDBNull(me.mvarLotSerNbr), ParameterDirection.Input,25 ))
			 pc.Add(New ParamStruct("@OMLineRef",DbType.String, clsCommon.GetValueDBNull(me.mvarOMLineRef), ParameterDirection.Input,5 ))
			 pc.Add(New ParamStruct("@UnitDesc",DbType.String, clsCommon.GetValueDBNull(me.mvarUnitDesc), ParameterDirection.Input,10 ))
			 pc.Add(New ParamStruct("@ExpDate",DbType.DateTime, clsCommon.GetValueDBNull(me.mvarExpDate.Date), ParameterDirection.Input,16 ))
			 pc.Add(New ParamStruct("@InvtID",DbType.String, clsCommon.GetValueDBNull(me.mvarInvtID), ParameterDirection.Input,30 ))
			 pc.Add(New ParamStruct("@InvtMult",DbType.int16, clsCommon.GetValueDBNull(me.mvarInvtMult), ParameterDirection.Input,2 ))
			 pc.Add(New ParamStruct("@MfgrLotSerNbr",DbType.String, clsCommon.GetValueDBNull(me.mvarMfgrLotSerNbr), ParameterDirection.Input,25 ))
			 pc.Add(New ParamStruct("@CnvFact",DbType.Decimal, clsCommon.GetValueDBNull(me.mvarCnvFact), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@UnitMultDiv",DbType.String, clsCommon.GetValueDBNull(me.mvarUnitMultDiv), ParameterDirection.Input,1 ))
			 pc.Add(New ParamStruct("@Qty",DbType.Decimal, clsCommon.GetValueDBNull(me.mvarQty), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@SiteID",DbType.String, clsCommon.GetValueDBNull(me.mvarSiteID), ParameterDirection.Input,10 ))
			 pc.Add(New ParamStruct("@TranDate",DbType.DateTime, clsCommon.GetValueDBNull(me.mvarTranDate.Date), ParameterDirection.Input,16 ))
			 pc.Add(New ParamStruct("@INDocType",DbType.String, clsCommon.GetValueDBNull(me.mvarINDocType), ParameterDirection.Input,2 ))
			 pc.Add(New ParamStruct("@UnitCost",DbType.Decimal, clsCommon.GetValueDBNull(me.mvarUnitCost), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@UnitPrice",DbType.Decimal, clsCommon.GetValueDBNull(me.mvarUnitPrice), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@WarrantyDate",DbType.DateTime, clsCommon.GetValueDBNull(me.mvarWarrantyDate.Date), ParameterDirection.Input,16 ))
			 pc.Add(New ParamStruct("@Crtd_Prog",DbType.String, clsCommon.GetValueDBNull(me.mvarCrtd_Prog), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@Crtd_User",DbType.String, clsCommon.GetValueDBNull(me.mvarCrtd_User), ParameterDirection.Input,10 ))
			 pc.Add(New ParamStruct("@Crtd_DateTime",DbType.DateTime, clsCommon.GetValueDBNull(me.mvarCrtd_DateTime), ParameterDirection.Input,16 ))
			 pc.Add(New ParamStruct("@LUpd_Prog",DbType.String, clsCommon.GetValueDBNull(me.mvarLUpd_Prog), ParameterDirection.Input,8 ))
			 pc.Add(New ParamStruct("@LUpd_User",DbType.String, clsCommon.GetValueDBNull(me.mvarLUpd_User), ParameterDirection.Input,10 ))
			 pc.Add(New ParamStruct("@LUpd_DateTime",DbType.DateTime, clsCommon.GetValueDBNull(me.mvarLUpd_DateTime), ParameterDirection.Input,16 ))
			 pc.Add(New ParamStruct("@tstamp",DbType.String, clsCommon.GetValueDBNull(me.mvartstamp), ParameterDirection.Input,18 ))
			Return (DAL.ExecNonQuery(PP_OM_LotTrans, CommandType.StoredProcedure, pc,"") > 0)
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Function Delete(ByVal BranchID As System.String, ByVal OrderNbr As System.String, ByVal LotSerNbr As System.String, ByVal OMLineRef As System.String) as Boolean 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "Delete", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@BranchID",DbType.String, clsCommon.GetValueDBNull(BranchID), ParameterDirection.Input,10 ))
			pc.Add(New ParamStruct("@OrderNbr",DbType.String, clsCommon.GetValueDBNull(OrderNbr), ParameterDirection.Input,15 ))
			pc.Add(New ParamStruct("@LotSerNbr",DbType.String, clsCommon.GetValueDBNull(LotSerNbr), ParameterDirection.Input,25 ))
			pc.Add(New ParamStruct("@OMLineRef",DbType.String, clsCommon.GetValueDBNull(OMLineRef), ParameterDirection.Input,5 ))
			Return (DAL.ExecNonQuery(PP_OM_LotTrans, CommandType.StoredProcedure, pc,"") > 0)
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Function GetAll(ByVal BranchID As System.String, ByVal OrderNbr As System.String, ByVal LotSerNbr As System.String, ByVal OMLineRef As System.String) as DataTable 
		Dim DAL As DataAccess = m_Dal
		Try
			Dim pc As New ParamCollection
			Dim ds As New DataSet
			pc.Add(New ParamStruct("@Action", DbType.String, "GetListData", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@BranchID", DbType.String, clsCommon.GetValueDBNull(BranchID), ParameterDirection.Input, 10 ))
			pc.Add(New ParamStruct("@OrderNbr", DbType.String, clsCommon.GetValueDBNull(OrderNbr), ParameterDirection.Input, 15 ))
			pc.Add(New ParamStruct("@LotSerNbr", DbType.String, clsCommon.GetValueDBNull(LotSerNbr), ParameterDirection.Input, 25 ))
			pc.Add(New ParamStruct("@OMLineRef", DbType.String, clsCommon.GetValueDBNull(OMLineRef), ParameterDirection.Input, 5 ))
			ds = DAL.ExecDataSet(PP_OM_LotTrans, CommandType.StoredProcedure, pc,"")
			Dim keys(3) As DataColumn
			Dim column As DataColumn
			column = ds.Tables(0).Columns("BranchID")
			Keys(0) = column
			column = ds.Tables(0).Columns("OrderNbr")
			Keys(1) = column
			column = ds.Tables(0).Columns("LotSerNbr")
			Keys(2) = column
			column = ds.Tables(0).Columns("OMLineRef")
			Keys(3) = column
			ds.Tables(0).PrimaryKey = Keys
			Return ds.Tables(0)
		Catch ex As Exception
			Throw ex 
		End Try
	End Function
	Public Sub Reset()
		mvarBranchID = String.Empty
		mvarOrderNbr = String.Empty
		mvarLotSerNbr = String.Empty
		mvarOMLineRef = String.Empty
		mvarUnitDesc = String.Empty
		mvarExpDate = Today
		mvarInvtID = String.Empty
		mvarInvtMult = 0
		mvarMfgrLotSerNbr = String.Empty
		mvarCnvFact = 0
		mvarUnitMultDiv = String.Empty
		mvarQty = 0
		mvarSiteID = String.Empty
		mvarTranDate = Today
		mvarINDocType = String.Empty
		mvarUnitCost = 0
		mvarUnitPrice = 0
		mvarWarrantyDate = Today
		mvarCrtd_Prog = String.Empty
		mvarCrtd_User = String.Empty
		mvarCrtd_DateTime = Today
		mvarLUpd_Prog = String.Empty
		mvarLUpd_User = String.Empty
		mvarLUpd_DateTime = Today
		mvartstamp = String.Empty
	End Sub
	Public Function GetByKey(ByVal BranchID As System.String, ByVal OrderNbr As System.String, ByVal LotSerNbr As System.String, ByVal OMLineRef As System.String) as Boolean 
		Dim DAL As DataAccess = m_Dal
		Dim ds As New DataSet 
		Try
			Dim pc As New ParamCollection
			pc.Add(New ParamStruct("@Action", DbType.String, "GetData_ByKey", ParameterDirection.Input,50 ))
			pc.Add(New ParamStruct("@BranchID", DbType.String, clsCommon.GetValueDBNull(BranchID), ParameterDirection.InputOutput, 10 ))
			pc.Add(New ParamStruct("@OrderNbr", DbType.String, clsCommon.GetValueDBNull(OrderNbr), ParameterDirection.InputOutput, 15 ))
			pc.Add(New ParamStruct("@LotSerNbr", DbType.String, clsCommon.GetValueDBNull(LotSerNbr), ParameterDirection.InputOutput, 25 ))
			pc.Add(New ParamStruct("@OMLineRef", DbType.String, clsCommon.GetValueDBNull(OMLineRef), ParameterDirection.InputOutput, 5 ))
			ds = DAL.ExecDataSet(PP_OM_LotTrans, CommandType.StoredProcedure, pc,"")
			me.Reset()
			If ds Is Nothing Then
				Return False
			End If
			If ds.Tables(0).Rows.Count > 0 Then
				FillData(ds.Tables(0).Rows(0))
				Return True
			End If
		Catch ex As Exception
			Throw ex 
		End Try
		Return False
	End Function
	Public Sub FillData(row as DataRow)
		mvarBranchID =  clsCommon.GetValue(row("BranchID"), mvarBranchID.GetType().FullName)
		mvarOrderNbr =  clsCommon.GetValue(row("OrderNbr"), mvarOrderNbr.GetType().FullName)
		mvarLotSerNbr =  clsCommon.GetValue(row("LotSerNbr"), mvarLotSerNbr.GetType().FullName)
		mvarOMLineRef =  clsCommon.GetValue(row("OMLineRef"), mvarOMLineRef.GetType().FullName)
		mvarUnitDesc =  clsCommon.GetValue(row("UnitDesc"), mvarUnitDesc.GetType().FullName)
		mvarExpDate =  clsCommon.GetValue(row("ExpDate"), mvarExpDate.GetType().FullName)
		mvarInvtID =  clsCommon.GetValue(row("InvtID"), mvarInvtID.GetType().FullName)
		mvarInvtMult =  clsCommon.GetValue(row("InvtMult"), mvarInvtMult.GetType().FullName)
		mvarMfgrLotSerNbr =  clsCommon.GetValue(row("MfgrLotSerNbr"), mvarMfgrLotSerNbr.GetType().FullName)
		mvarCnvFact =  clsCommon.GetValue(row("CnvFact"), mvarCnvFact.GetType().FullName)
		mvarUnitMultDiv =  clsCommon.GetValue(row("UnitMultDiv"), mvarUnitMultDiv.GetType().FullName)
		mvarQty =  clsCommon.GetValue(row("Qty"), mvarQty.GetType().FullName)
		mvarSiteID =  clsCommon.GetValue(row("SiteID"), mvarSiteID.GetType().FullName)
		mvarTranDate =  clsCommon.GetValue(row("TranDate"), mvarTranDate.GetType().FullName)
		mvarINDocType =  clsCommon.GetValue(row("INDocType"), mvarINDocType.GetType().FullName)
		mvarUnitCost =  clsCommon.GetValue(row("UnitCost"), mvarUnitCost.GetType().FullName)
		mvarUnitPrice =  clsCommon.GetValue(row("UnitPrice"), mvarUnitPrice.GetType().FullName)
		mvarWarrantyDate =  clsCommon.GetValue(row("WarrantyDate"), mvarWarrantyDate.GetType().FullName)
		mvarCrtd_Prog =  clsCommon.GetValue(row("Crtd_Prog"), mvarCrtd_Prog.GetType().FullName)
		mvarCrtd_User =  clsCommon.GetValue(row("Crtd_User"), mvarCrtd_User.GetType().FullName)
		mvarCrtd_DateTime =  clsCommon.GetValue(row("Crtd_DateTime"), mvarCrtd_DateTime.GetType().FullName)
		mvarLUpd_Prog =  clsCommon.GetValue(row("LUpd_Prog"), mvarLUpd_Prog.GetType().FullName)
		mvarLUpd_User =  clsCommon.GetValue(row("LUpd_User"), mvarLUpd_User.GetType().FullName)
		mvarLUpd_DateTime =  clsCommon.GetValue(row("LUpd_DateTime"), mvarLUpd_DateTime.GetType().FullName)
		mvartstamp =  clsCommon.GetValue(row("tstamp"), mvartstamp.GetType().FullName)
	End Sub
#End Region 

#Region "Private Methods"
#End Region 

End Class
