'-- ------------------------------------------------------------
'-- Class name    :  clsServerApplication_StaticDLFileList
'-- Created date  :  12/11/2012
'-- Created by    :  
'-- Updated by    :  
'-- Generated by    :  Class Maker v1.0
'-- ------------------------------------------------------------

'-- Import Libraries --
Imports HQFramework
Imports HQFramework.DAL
Imports HQFramework.Common

Public Class clsServerApplication_StaticDLFileList
#Region "Constants"
    Private Const PP_ServerApplication_StaticDLFileList As String = "PP_ServerApplication_StaticDLFileList"
#End Region

#Region "Member Variables"
    Private mvarGroupIDRegEx As System.String

    Private mvarUserIdRegEx As System.String

    Private mvarFileName As System.String

    Private mvarVersion As System.String

    Private mvarClientPath As System.String

    Private mvarCmdPostAction As System.String

    Private mvarDBPostAction As System.String

#End Region

    Private m_Dal As DataAccess
#Region "Constructors"
    Public Sub New()
        m_Dal = New DataAccess
        Reset()
    End Sub
    Public Sub New(ByVal dal As DataAccess)
        m_Dal = dal
        Reset()
    End Sub
#End Region

#Region "Public Properties"
    Public Property GroupIDRegEx() As System.String
        Get
            Return mvarGroupIDRegEx
        End Get
        Set(ByVal Value As System.String)
            mvarGroupIDRegEx = Value
        End Set
    End Property

    Public Property UserIdRegEx() As System.String
        Get
            Return mvarUserIdRegEx
        End Get
        Set(ByVal Value As System.String)
            mvarUserIdRegEx = Value
        End Set
    End Property

    Public Property FileName() As System.String
        Get
            Return mvarFileName
        End Get
        Set(ByVal Value As System.String)
            mvarFileName = Value
        End Set
    End Property

    Public Property Version() As System.String
        Get
            Return mvarVersion
        End Get
        Set(ByVal Value As System.String)
            mvarVersion = Value
        End Set
    End Property

    Public Property ClientPath() As System.String
        Get
            Return mvarClientPath
        End Get
        Set(ByVal Value As System.String)
            mvarClientPath = Value
        End Set
    End Property

    Public Property CmdPostAction() As System.String
        Get
            Return mvarCmdPostAction
        End Get
        Set(ByVal Value As System.String)
            mvarCmdPostAction = Value
        End Set
    End Property

    Public Property DBPostAction() As System.String
        Get
            Return mvarDBPostAction
        End Get
        Set(ByVal Value As System.String)
            mvarDBPostAction = Value
        End Set
    End Property

#End Region

#Region "Public Methods"
    Public Function Add() As Boolean
        Dim DAL As DataAccess = m_Dal
        Try
            Dim pc As New ParamCollection
            pc.Add(New ParamStruct("@Action", DbType.String, "AddNew", ParameterDirection.Input, 50))
            pc.Add(New ParamStruct("@GroupIDRegEx", DbType.String, clsCommon.GetValueDBNull(Me.mvarGroupIDRegEx), ParameterDirection.Input, 100))
            pc.Add(New ParamStruct("@UserIdRegEx", DbType.String, clsCommon.GetValueDBNull(Me.mvarUserIdRegEx), ParameterDirection.Input, 100))
            pc.Add(New ParamStruct("@FileName", DbType.String, clsCommon.GetValueDBNull(Me.mvarFileName), ParameterDirection.Input, 200))
            pc.Add(New ParamStruct("@Version", DbType.String, clsCommon.GetValueDBNull(Me.mvarVersion), ParameterDirection.Input, 20))
            pc.Add(New ParamStruct("@ClientPath", DbType.String, clsCommon.GetValueDBNull(Me.mvarClientPath), ParameterDirection.Input, 50))
            pc.Add(New ParamStruct("@CmdPostAction", DbType.String, clsCommon.GetValueDBNull(Me.mvarCmdPostAction), ParameterDirection.Input, 400))
            pc.Add(New ParamStruct("@DBPostAction", DbType.String, clsCommon.GetValueDBNull(Me.mvarDBPostAction), ParameterDirection.Input, 400))
            DAL.ExecPreparedSQL(PP_ServerApplication_StaticDLFileList, CommandType.StoredProcedure, pc, "")
            Me.mvarGroupIDRegEx = clsCommon.GetValue(pc.Item("@GroupIDRegEx").Value, mvarGroupIDRegEx.GetType().FullName)
            Return (Me.mvarGroupIDRegEx <> String.Empty)
        Catch ex As Exception
            Throw ex
        End Try
    End Function
    Public Function Update() As Boolean
        Dim DAL As DataAccess = m_Dal
        Try
            Dim pc As New ParamCollection
            pc.Add(New ParamStruct("@Action", DbType.String, "Update", ParameterDirection.Input, 50))
            pc.Add(New ParamStruct("@GroupIDRegEx", DbType.String, clsCommon.GetValueDBNull(Me.mvarGroupIDRegEx), ParameterDirection.Input, 100))
            pc.Add(New ParamStruct("@UserIdRegEx", DbType.String, clsCommon.GetValueDBNull(Me.mvarUserIdRegEx), ParameterDirection.Input, 100))
            pc.Add(New ParamStruct("@FileName", DbType.String, clsCommon.GetValueDBNull(Me.mvarFileName), ParameterDirection.Input, 200))
            pc.Add(New ParamStruct("@Version", DbType.String, clsCommon.GetValueDBNull(Me.mvarVersion), ParameterDirection.Input, 20))
            pc.Add(New ParamStruct("@ClientPath", DbType.String, clsCommon.GetValueDBNull(Me.mvarClientPath), ParameterDirection.Input, 50))
            pc.Add(New ParamStruct("@CmdPostAction", DbType.String, clsCommon.GetValueDBNull(Me.mvarCmdPostAction), ParameterDirection.Input, 400))
            pc.Add(New ParamStruct("@DBPostAction", DbType.String, clsCommon.GetValueDBNull(Me.mvarDBPostAction), ParameterDirection.Input, 400))
            Return (DAL.ExecNonQuery(PP_ServerApplication_StaticDLFileList, CommandType.StoredProcedure, pc, "") > 0)
        Catch ex As Exception
            Throw ex
        End Try
    End Function
    Public Function Delete(ByVal GroupIDRegEx As System.String, ByVal UserIdRegEx As System.String, ByVal FileName As System.String, ByVal Version As System.String) As Boolean
        Dim DAL As DataAccess = m_Dal
        Try
            Dim pc As New ParamCollection
            pc.Add(New ParamStruct("@Action", DbType.String, "Delete", ParameterDirection.Input, 50))
            pc.Add(New ParamStruct("@GroupIDRegEx", DbType.String, clsCommon.GetValueDBNull(GroupIDRegEx), ParameterDirection.Input, 100))
            pc.Add(New ParamStruct("@UserIdRegEx", DbType.String, clsCommon.GetValueDBNull(UserIdRegEx), ParameterDirection.Input, 100))
            pc.Add(New ParamStruct("@FileName", DbType.String, clsCommon.GetValueDBNull(FileName), ParameterDirection.Input, 200))
            pc.Add(New ParamStruct("@Version", DbType.String, clsCommon.GetValueDBNull(Version), ParameterDirection.Input, 20))
            Return (DAL.ExecNonQuery(PP_ServerApplication_StaticDLFileList, CommandType.StoredProcedure, pc, "") > 0)
        Catch ex As Exception
            Throw ex
        End Try
    End Function
    Public Function GetAll(ByVal GroupIDRegEx As System.String, ByVal UserIdRegEx As System.String, ByVal FileName As System.String, ByVal Version As System.String) As DataTable
        Dim DAL As DataAccess = m_Dal
        Try
            Dim pc As New ParamCollection
            Dim ds As New DataSet
            pc.Add(New ParamStruct("@Action", DbType.String, "GetListData", ParameterDirection.Input, 50))
            pc.Add(New ParamStruct("@GroupIDRegEx", DbType.String, clsCommon.GetValueDBNull(GroupIDRegEx), ParameterDirection.Input, 100))
            pc.Add(New ParamStruct("@UserIdRegEx", DbType.String, clsCommon.GetValueDBNull(UserIdRegEx), ParameterDirection.Input, 100))
            pc.Add(New ParamStruct("@FileName", DbType.String, clsCommon.GetValueDBNull(FileName), ParameterDirection.Input, 200))
            pc.Add(New ParamStruct("@Version", DbType.String, clsCommon.GetValueDBNull(Version), ParameterDirection.Input, 20))
            ds = DAL.ExecDataSet(PP_ServerApplication_StaticDLFileList, CommandType.StoredProcedure, pc, "")
            Dim keys(3) As DataColumn
            Dim column As DataColumn
            column = ds.Tables(0).Columns("GroupIDRegEx")
            keys(0) = column
            column = ds.Tables(0).Columns("UserIdRegEx")
            keys(1) = column
            column = ds.Tables(0).Columns("FileName")
            keys(2) = column
            column = ds.Tables(0).Columns("Version")
            keys(3) = column
            ds.Tables(0).PrimaryKey = keys
            Return ds.Tables(0)
        Catch ex As Exception
            Throw ex
        End Try
    End Function
    Public Sub Reset()
        mvarGroupIDRegEx = String.Empty
        mvarUserIdRegEx = String.Empty
        mvarFileName = String.Empty
        mvarVersion = String.Empty
        mvarClientPath = String.Empty
        mvarCmdPostAction = String.Empty
        mvarDBPostAction = String.Empty
    End Sub
    Public Function GetByKey(ByVal GroupIDRegEx As System.String, ByVal UserIdRegEx As System.String, ByVal FileName As System.String, ByVal Version As System.String) As Boolean
        Dim DAL As DataAccess = m_Dal
        Dim ds As New DataSet
        Try
            Dim pc As New ParamCollection
            pc.Add(New ParamStruct("@Action", DbType.String, "GetData_ByKey", ParameterDirection.Input, 50))
            pc.Add(New ParamStruct("@GroupIDRegEx", DbType.String, clsCommon.GetValueDBNull(GroupIDRegEx), ParameterDirection.InputOutput, 100))
            pc.Add(New ParamStruct("@UserIdRegEx", DbType.String, clsCommon.GetValueDBNull(UserIdRegEx), ParameterDirection.InputOutput, 100))
            pc.Add(New ParamStruct("@FileName", DbType.String, clsCommon.GetValueDBNull(FileName), ParameterDirection.InputOutput, 200))
            pc.Add(New ParamStruct("@Version", DbType.String, clsCommon.GetValueDBNull(Version), ParameterDirection.InputOutput, 20))
            ds = DAL.ExecDataSet(PP_ServerApplication_StaticDLFileList, CommandType.StoredProcedure, pc, "")
            Me.Reset()
            If ds Is Nothing Then
                Return False
            End If
            If ds.Tables(0).Rows.Count > 0 Then
                FillData(ds.Tables(0).Rows(0))
                Return True
            End If
        Catch ex As Exception
            Throw ex
        End Try
        Return False
    End Function
    Public Sub FillData(row As DataRow)
        mvarGroupIDRegEx = clsCommon.GetValue(row("GroupIDRegEx"), mvarGroupIDRegEx.GetType().FullName)
        mvarUserIdRegEx = clsCommon.GetValue(row("UserIdRegEx"), mvarUserIdRegEx.GetType().FullName)
        mvarFileName = clsCommon.GetValue(row("FileName"), mvarFileName.GetType().FullName)
        mvarVersion = clsCommon.GetValue(row("Version"), mvarVersion.GetType().FullName)
        mvarClientPath = clsCommon.GetValue(row("ClientPath"), mvarClientPath.GetType().FullName)
        mvarCmdPostAction = clsCommon.GetValue(row("CmdPostAction"), mvarCmdPostAction.GetType().FullName)
        mvarDBPostAction = clsCommon.GetValue(row("DBPostAction"), mvarDBPostAction.GetType().FullName)
    End Sub
#End Region

#Region "Private Methods"
#End Region

End Class
