'-- ------------------------------------------------------------
'-- Class name    :  clsSYS_AccessDetRights
'-- Created date  :  12/11/2012
'-- Created by    :  
'-- Updated by    :  
'-- Generated by    :  Class Maker v1.0
'-- ------------------------------------------------------------

'-- Import Libraries --
Imports HQFramework
Imports HQFramework.DAL
Imports HQFramework.Common

Public Class clsSYS_AccessDetRights
#Region "Constants"
    Private Const PP_SYS_AccessDetRights As String = "PP_SYS_AccessDetRights"
#End Region

#Region "Member Variables"
    Private mvarScreenNumber As System.String

    Private mvarCpnyID As System.String

    Private mvarUserID As System.String

    Private mvarRecType As System.String

    Private mvarInitRights As System.Boolean

    Private mvarInsertRights As System.Boolean

    Private mvarUpdateRights As System.Boolean

    Private mvarDeleteRights As System.Boolean

    Private mvarViewRights As System.Boolean

    Private mvarDatabaseName As System.String

    Private mvarCrtd_DateTime As System.DateTime

    Private mvarCrtd_Prog As System.String

    Private mvarCrtd_User As System.String

    Private mvarLUpd_DateTime As System.DateTime

    Private mvarLUpd_Prog As System.String

    Private mvarLUpd_User As System.String

    Private mvartstamp As System.String

    Private mvarReleaseRights As System.Boolean

#End Region

    Private m_Dal As DataAccess
#Region "Constructors"
    Public Sub New()
        m_Dal = New DataAccess
        Reset()
    End Sub
    Public Sub New(ByVal dal As DataAccess)
        m_Dal = dal
        Reset()
    End Sub
#End Region

#Region "Public Properties"
    Public Property ScreenNumber() As System.String
        Get
            Return mvarScreenNumber
        End Get
        Set(ByVal Value As System.String)
            mvarScreenNumber = Value
        End Set
    End Property

    Public Property CpnyID() As System.String
        Get
            Return mvarCpnyID
        End Get
        Set(ByVal Value As System.String)
            mvarCpnyID = Value
        End Set
    End Property

    Public Property UserID() As System.String
        Get
            Return mvarUserID
        End Get
        Set(ByVal Value As System.String)
            mvarUserID = Value
        End Set
    End Property

    Public Property RecType() As System.String
        Get
            Return mvarRecType
        End Get
        Set(ByVal Value As System.String)
            mvarRecType = Value
        End Set
    End Property

    Public Property InitRights() As System.Boolean
        Get
            Return mvarInitRights
        End Get
        Set(ByVal Value As System.Boolean)
            mvarInitRights = Value
        End Set
    End Property

    Public Property InsertRights() As System.Boolean
        Get
            Return mvarInsertRights
        End Get
        Set(ByVal Value As System.Boolean)
            mvarInsertRights = Value
        End Set
    End Property

    Public Property UpdateRights() As System.Boolean
        Get
            Return mvarUpdateRights
        End Get
        Set(ByVal Value As System.Boolean)
            mvarUpdateRights = Value
        End Set
    End Property

    Public Property DeleteRights() As System.Boolean
        Get
            Return mvarDeleteRights
        End Get
        Set(ByVal Value As System.Boolean)
            mvarDeleteRights = Value
        End Set
    End Property

    Public Property ViewRights() As System.Boolean
        Get
            Return mvarViewRights
        End Get
        Set(ByVal Value As System.Boolean)
            mvarViewRights = Value
        End Set
    End Property

    Public Property DatabaseName() As System.String
        Get
            Return mvarDatabaseName
        End Get
        Set(ByVal Value As System.String)
            mvarDatabaseName = Value
        End Set
    End Property

    Public Property Crtd_DateTime() As System.DateTime
        Get
            Return mvarCrtd_DateTime
        End Get
        Set(ByVal Value As System.DateTime)
            mvarCrtd_DateTime = Value
        End Set
    End Property

    Public Property Crtd_Prog() As System.String
        Get
            Return mvarCrtd_Prog
        End Get
        Set(ByVal Value As System.String)
            mvarCrtd_Prog = Value
        End Set
    End Property

    Public Property Crtd_User() As System.String
        Get
            Return mvarCrtd_User
        End Get
        Set(ByVal Value As System.String)
            mvarCrtd_User = Value
        End Set
    End Property

    Public Property LUpd_DateTime() As System.DateTime
        Get
            Return mvarLUpd_DateTime
        End Get
        Set(ByVal Value As System.DateTime)
            mvarLUpd_DateTime = Value
        End Set
    End Property

    Public Property LUpd_Prog() As System.String
        Get
            Return mvarLUpd_Prog
        End Get
        Set(ByVal Value As System.String)
            mvarLUpd_Prog = Value
        End Set
    End Property

    Public Property LUpd_User() As System.String
        Get
            Return mvarLUpd_User
        End Get
        Set(ByVal Value As System.String)
            mvarLUpd_User = Value
        End Set
    End Property

    Public Property tstamp() As System.String
        Get
            Return mvartstamp
        End Get
        Set(ByVal Value As System.String)
            mvartstamp = Value
        End Set
    End Property

    Public Property ReleaseRights() As System.Boolean
        Get
            Return mvarReleaseRights
        End Get
        Set(ByVal Value As System.Boolean)
            mvarReleaseRights = Value
        End Set
    End Property

#End Region

#Region "Public Methods"
    Public Function Add() As Boolean
        Dim DAL As DataAccess = m_Dal
        Try
            Dim pc As New ParamCollection
            pc.Add(New ParamStruct("@Action", DbType.String, "AddNew", ParameterDirection.Input, 50))
            pc.Add(New ParamStruct("@ScreenNumber", DbType.String, clsCommon.GetValueDBNull(Me.mvarScreenNumber), ParameterDirection.Input, 7))
            pc.Add(New ParamStruct("@CpnyID", DbType.String, clsCommon.GetValueDBNull(Me.mvarCpnyID), ParameterDirection.Input, 10))
            pc.Add(New ParamStruct("@UserID", DbType.String, clsCommon.GetValueDBNull(Me.mvarUserID), ParameterDirection.Input, 10))
            pc.Add(New ParamStruct("@RecType", DbType.String, clsCommon.GetValueDBNull(Me.mvarRecType), ParameterDirection.Input, 1))
            pc.Add(New ParamStruct("@InitRights", DbType.Boolean, clsCommon.GetValueDBNull(Me.mvarInitRights), ParameterDirection.Input, 2))
            pc.Add(New ParamStruct("@InsertRights", DbType.Boolean, clsCommon.GetValueDBNull(Me.mvarInsertRights), ParameterDirection.Input, 2))
            pc.Add(New ParamStruct("@UpdateRights", DbType.Boolean, clsCommon.GetValueDBNull(Me.mvarUpdateRights), ParameterDirection.Input, 2))
            pc.Add(New ParamStruct("@DeleteRights", DbType.Boolean, clsCommon.GetValueDBNull(Me.mvarDeleteRights), ParameterDirection.Input, 2))
            pc.Add(New ParamStruct("@ViewRights", DbType.Boolean, clsCommon.GetValueDBNull(Me.mvarViewRights), ParameterDirection.Input, 2))
            pc.Add(New ParamStruct("@DatabaseName", DbType.String, clsCommon.GetValueDBNull(Me.mvarDatabaseName), ParameterDirection.Input, 20))
            pc.Add(New ParamStruct("@Crtd_DateTime", DbType.DateTime, clsCommon.GetValueDBNull(Me.mvarCrtd_DateTime), ParameterDirection.Input, 16))
            pc.Add(New ParamStruct("@Crtd_Prog", DbType.String, clsCommon.GetValueDBNull(Me.mvarCrtd_Prog), ParameterDirection.Input, 8))
            pc.Add(New ParamStruct("@Crtd_User", DbType.String, clsCommon.GetValueDBNull(Me.mvarCrtd_User), ParameterDirection.Input, 10))
            pc.Add(New ParamStruct("@LUpd_DateTime", DbType.DateTime, clsCommon.GetValueDBNull(Me.mvarLUpd_DateTime), ParameterDirection.Input, 16))
            pc.Add(New ParamStruct("@LUpd_Prog", DbType.String, clsCommon.GetValueDBNull(Me.mvarLUpd_Prog), ParameterDirection.Input, 8))
            pc.Add(New ParamStruct("@LUpd_User", DbType.String, clsCommon.GetValueDBNull(Me.mvarLUpd_User), ParameterDirection.Input, 10))
            pc.Add(New ParamStruct("@tstamp", DbType.String, clsCommon.GetValueDBNull(Me.mvartstamp), ParameterDirection.Input, 18))
            pc.Add(New ParamStruct("@ReleaseRights", DbType.Boolean, clsCommon.GetValueDBNull(Me.mvarReleaseRights), ParameterDirection.Input, 2))
            DAL.ExecPreparedSQL(PP_SYS_AccessDetRights, CommandType.StoredProcedure, pc, "")
            Me.mvarScreenNumber = clsCommon.GetValue(pc.Item("@ScreenNumber").Value, mvarScreenNumber.GetType().FullName)
            Return (Me.mvarScreenNumber <> String.Empty)
        Catch ex As Exception
            Throw ex
        End Try
    End Function
    Public Function Update() As Boolean
        Dim DAL As DataAccess = m_Dal
        Try
            Dim pc As New ParamCollection
            pc.Add(New ParamStruct("@Action", DbType.String, "Update", ParameterDirection.Input, 50))
            pc.Add(New ParamStruct("@ScreenNumber", DbType.String, clsCommon.GetValueDBNull(Me.mvarScreenNumber), ParameterDirection.Input, 7))
            pc.Add(New ParamStruct("@CpnyID", DbType.String, clsCommon.GetValueDBNull(Me.mvarCpnyID), ParameterDirection.Input, 10))
            pc.Add(New ParamStruct("@UserID", DbType.String, clsCommon.GetValueDBNull(Me.mvarUserID), ParameterDirection.Input, 10))
            pc.Add(New ParamStruct("@RecType", DbType.String, clsCommon.GetValueDBNull(Me.mvarRecType), ParameterDirection.Input, 1))
            pc.Add(New ParamStruct("@InitRights", DbType.Boolean, clsCommon.GetValueDBNull(Me.mvarInitRights), ParameterDirection.Input, 2))
            pc.Add(New ParamStruct("@InsertRights", DbType.Boolean, clsCommon.GetValueDBNull(Me.mvarInsertRights), ParameterDirection.Input, 2))
            pc.Add(New ParamStruct("@UpdateRights", DbType.Boolean, clsCommon.GetValueDBNull(Me.mvarUpdateRights), ParameterDirection.Input, 2))
            pc.Add(New ParamStruct("@DeleteRights", DbType.Boolean, clsCommon.GetValueDBNull(Me.mvarDeleteRights), ParameterDirection.Input, 2))
            pc.Add(New ParamStruct("@ViewRights", DbType.Boolean, clsCommon.GetValueDBNull(Me.mvarViewRights), ParameterDirection.Input, 2))
            pc.Add(New ParamStruct("@DatabaseName", DbType.String, clsCommon.GetValueDBNull(Me.mvarDatabaseName), ParameterDirection.Input, 20))
            pc.Add(New ParamStruct("@Crtd_DateTime", DbType.DateTime, clsCommon.GetValueDBNull(Me.mvarCrtd_DateTime), ParameterDirection.Input, 16))
            pc.Add(New ParamStruct("@Crtd_Prog", DbType.String, clsCommon.GetValueDBNull(Me.mvarCrtd_Prog), ParameterDirection.Input, 8))
            pc.Add(New ParamStruct("@Crtd_User", DbType.String, clsCommon.GetValueDBNull(Me.mvarCrtd_User), ParameterDirection.Input, 10))
            pc.Add(New ParamStruct("@LUpd_DateTime", DbType.DateTime, clsCommon.GetValueDBNull(Me.mvarLUpd_DateTime), ParameterDirection.Input, 16))
            pc.Add(New ParamStruct("@LUpd_Prog", DbType.String, clsCommon.GetValueDBNull(Me.mvarLUpd_Prog), ParameterDirection.Input, 8))
            pc.Add(New ParamStruct("@LUpd_User", DbType.String, clsCommon.GetValueDBNull(Me.mvarLUpd_User), ParameterDirection.Input, 10))
            pc.Add(New ParamStruct("@tstamp", DbType.String, clsCommon.GetValueDBNull(Me.mvartstamp), ParameterDirection.Input, 18))
            pc.Add(New ParamStruct("@ReleaseRights", DbType.Boolean, clsCommon.GetValueDBNull(Me.mvarReleaseRights), ParameterDirection.Input, 2))
            Return (DAL.ExecNonQuery(PP_SYS_AccessDetRights, CommandType.StoredProcedure, pc, "") > 0)
        Catch ex As Exception
            Throw ex
        End Try
    End Function
    Public Function Delete(ByVal ScreenNumber As System.String, ByVal CpnyID As System.String, ByVal UserID As System.String, ByVal RecType As System.String) As Boolean
        Dim DAL As DataAccess = m_Dal
        Try
            Dim pc As New ParamCollection
            pc.Add(New ParamStruct("@Action", DbType.String, "Delete", ParameterDirection.Input, 50))
            pc.Add(New ParamStruct("@ScreenNumber", DbType.String, clsCommon.GetValueDBNull(ScreenNumber), ParameterDirection.Input, 7))
            pc.Add(New ParamStruct("@CpnyID", DbType.String, clsCommon.GetValueDBNull(CpnyID), ParameterDirection.Input, 10))
            pc.Add(New ParamStruct("@UserID", DbType.String, clsCommon.GetValueDBNull(UserID), ParameterDirection.Input, 10))
            pc.Add(New ParamStruct("@RecType", DbType.String, clsCommon.GetValueDBNull(RecType), ParameterDirection.Input, 1))
            Return (DAL.ExecNonQuery(PP_SYS_AccessDetRights, CommandType.StoredProcedure, pc, "") > 0)
        Catch ex As Exception
            Throw ex
        End Try
    End Function
    Public Function GetAll(ByVal ScreenNumber As System.String, ByVal CpnyID As System.String, ByVal UserID As System.String, ByVal RecType As System.String) As DataTable
        Dim DAL As DataAccess = m_Dal
        Try
            Dim pc As New ParamCollection
            Dim ds As New DataSet
            pc.Add(New ParamStruct("@Action", DbType.String, "GetListData", ParameterDirection.Input, 50))
            pc.Add(New ParamStruct("@ScreenNumber", DbType.String, clsCommon.GetValueDBNull(ScreenNumber), ParameterDirection.Input, 7))
            pc.Add(New ParamStruct("@CpnyID", DbType.String, clsCommon.GetValueDBNull(CpnyID), ParameterDirection.Input, 10))
            pc.Add(New ParamStruct("@UserID", DbType.String, clsCommon.GetValueDBNull(UserID), ParameterDirection.Input, 10))
            pc.Add(New ParamStruct("@RecType", DbType.String, clsCommon.GetValueDBNull(RecType), ParameterDirection.Input, 1))
            ds = DAL.ExecDataSet(PP_SYS_AccessDetRights, CommandType.StoredProcedure, pc, "")
            Dim keys(3) As DataColumn
            Dim column As DataColumn
            column = ds.Tables(0).Columns("ScreenNumber")
            keys(0) = column
            column = ds.Tables(0).Columns("CpnyID")
            keys(1) = column
            column = ds.Tables(0).Columns("UserID")
            keys(2) = column
            column = ds.Tables(0).Columns("RecType")
            keys(3) = column
            ds.Tables(0).PrimaryKey = keys
            Return ds.Tables(0)
        Catch ex As Exception
            Throw ex
        End Try
    End Function
    Public Sub Reset()
        mvarScreenNumber = String.Empty
        mvarCpnyID = String.Empty
        mvarUserID = String.Empty
        mvarRecType = String.Empty
        mvarInitRights = False
        mvarInsertRights = False
        mvarUpdateRights = False
        mvarDeleteRights = False
        mvarViewRights = False
        mvarDatabaseName = String.Empty
        mvarCrtd_DateTime = Today
        mvarCrtd_Prog = String.Empty
        mvarCrtd_User = String.Empty
        mvarLUpd_DateTime = Today
        mvarLUpd_Prog = String.Empty
        mvarLUpd_User = String.Empty
        mvartstamp = String.Empty
        mvarReleaseRights = False
    End Sub
    Public Function GetByKey(ByVal ScreenNumber As System.String, ByVal CpnyID As System.String, ByVal UserID As System.String, ByVal RecType As System.String) As Boolean
        Dim DAL As DataAccess = m_Dal
        Dim ds As New DataSet
        Try
            Dim pc As New ParamCollection
            pc.Add(New ParamStruct("@Action", DbType.String, "GetData_ByKey", ParameterDirection.Input, 50))
            pc.Add(New ParamStruct("@ScreenNumber", DbType.String, clsCommon.GetValueDBNull(ScreenNumber), ParameterDirection.InputOutput, 7))
            pc.Add(New ParamStruct("@CpnyID", DbType.String, clsCommon.GetValueDBNull(CpnyID), ParameterDirection.InputOutput, 10))
            pc.Add(New ParamStruct("@UserID", DbType.String, clsCommon.GetValueDBNull(UserID), ParameterDirection.InputOutput, 10))
            pc.Add(New ParamStruct("@RecType", DbType.String, clsCommon.GetValueDBNull(RecType), ParameterDirection.InputOutput, 1))
            ds = DAL.ExecDataSet(PP_SYS_AccessDetRights, CommandType.StoredProcedure, pc, "")
            Me.Reset()
            If ds Is Nothing Then
                Return False
            End If
            If ds.Tables(0).Rows.Count > 0 Then
                FillData(ds.Tables(0).Rows(0))
                Return True
            End If
        Catch ex As Exception
            Throw ex
        End Try
        Return False
    End Function
    Public Sub FillData(row As DataRow)
        mvarScreenNumber = clsCommon.GetValue(row("ScreenNumber"), mvarScreenNumber.GetType().FullName)
        mvarCpnyID = clsCommon.GetValue(row("CpnyID"), mvarCpnyID.GetType().FullName)
        mvarUserID = clsCommon.GetValue(row("UserID"), mvarUserID.GetType().FullName)
        mvarRecType = clsCommon.GetValue(row("RecType"), mvarRecType.GetType().FullName)
        mvarInitRights = clsCommon.GetValue(row("InitRights"), mvarInitRights.GetType().FullName)
        mvarInsertRights = clsCommon.GetValue(row("InsertRights"), mvarInsertRights.GetType().FullName)
        mvarUpdateRights = clsCommon.GetValue(row("UpdateRights"), mvarUpdateRights.GetType().FullName)
        mvarDeleteRights = clsCommon.GetValue(row("DeleteRights"), mvarDeleteRights.GetType().FullName)
        mvarViewRights = clsCommon.GetValue(row("ViewRights"), mvarViewRights.GetType().FullName)
        mvarDatabaseName = clsCommon.GetValue(row("DatabaseName"), mvarDatabaseName.GetType().FullName)
        mvarCrtd_DateTime = clsCommon.GetValue(row("Crtd_DateTime"), mvarCrtd_DateTime.GetType().FullName)
        mvarCrtd_Prog = clsCommon.GetValue(row("Crtd_Prog"), mvarCrtd_Prog.GetType().FullName)
        mvarCrtd_User = clsCommon.GetValue(row("Crtd_User"), mvarCrtd_User.GetType().FullName)
        mvarLUpd_DateTime = clsCommon.GetValue(row("LUpd_DateTime"), mvarLUpd_DateTime.GetType().FullName)
        mvarLUpd_Prog = clsCommon.GetValue(row("LUpd_Prog"), mvarLUpd_Prog.GetType().FullName)
        mvarLUpd_User = clsCommon.GetValue(row("LUpd_User"), mvarLUpd_User.GetType().FullName)
        mvartstamp = clsCommon.GetValue(row("tstamp"), mvartstamp.GetType().FullName)
        mvarReleaseRights = clsCommon.GetValue(row("ReleaseRights"), mvarReleaseRights.GetType().FullName)
    End Sub
#End Region

#Region "Private Methods"
#End Region

End Class
