'-- ------------------------------------------------------------
'-- Class name    :  clsServerApplication
'-- Created date  :  12/11/2012
'-- Created by    :  
'-- Updated by    :  
'-- Generated by    :  Class Maker v1.0
'-- ------------------------------------------------------------

'-- Import Libraries --
Imports HQFramework
Imports HQFramework.DAL
Imports HQFramework.Common

Public Class clsServerApplication
#Region "Constants"
    Private Const PP_ServerApplication As String = "PP_ServerApplication"
#End Region

#Region "Member Variables"
    Private mvarTaskID As System.Int32

    Private mvarType As System.String

    Private mvarStatus As System.String

    Private mvarPerFinish As System.Int32

    Private mvarUserID As System.String

    Private mvarProgID As System.String

    Private mvarLogError As System.String

    Private mvarRunType As System.String

    Private mvarInternetAddress As System.String

    Private mvarComputerName As System.String

    Private mvarServer As System.String

    Private mvarDBName As System.String

    Private mvarLUpd_Datetime As System.DateTime

    Private mvarLUpd_Prog As System.String

    Private mvarLUpd_User As System.String

    Private mvarCrtd_Datetime As System.DateTime

    Private mvarCrtd_Prog As System.String

    Private mvarCrtd_User As System.String

    Private mvartstamp As System.String

    Private mvarDescr As System.String

    Private mvarPeriod As System.Int32

#End Region

    Private m_Dal As DataAccess
#Region "Constructors"
    Public Sub New()
        m_Dal = New DataAccess
        Reset()
    End Sub
    Public Sub New(ByVal dal As DataAccess)
        m_Dal = dal
        Reset()
    End Sub
#End Region

#Region "Public Properties"
    Public Property TaskID() As System.Int32
        Get
            Return mvarTaskID
        End Get
        Set(ByVal Value As System.Int32)
            mvarTaskID = Value
        End Set
    End Property

    Public Property Type() As System.String
        Get
            Return mvarType
        End Get
        Set(ByVal Value As System.String)
            mvarType = Value
        End Set
    End Property

    Public Property Status() As System.String
        Get
            Return mvarStatus
        End Get
        Set(ByVal Value As System.String)
            mvarStatus = Value
        End Set
    End Property

    Public Property PerFinish() As System.Int32
        Get
            Return mvarPerFinish
        End Get
        Set(ByVal Value As System.Int32)
            mvarPerFinish = Value
        End Set
    End Property

    Public Property UserID() As System.String
        Get
            Return mvarUserID
        End Get
        Set(ByVal Value As System.String)
            mvarUserID = Value
        End Set
    End Property

    Public Property ProgID() As System.String
        Get
            Return mvarProgID
        End Get
        Set(ByVal Value As System.String)
            mvarProgID = Value
        End Set
    End Property

    Public Property LogError() As System.String
        Get
            Return mvarLogError
        End Get
        Set(ByVal Value As System.String)
            mvarLogError = Value
        End Set
    End Property

    Public Property RunType() As System.String
        Get
            Return mvarRunType
        End Get
        Set(ByVal Value As System.String)
            mvarRunType = Value
        End Set
    End Property

    Public Property InternetAddress() As System.String
        Get
            Return mvarInternetAddress
        End Get
        Set(ByVal Value As System.String)
            mvarInternetAddress = Value
        End Set
    End Property

    Public Property ComputerName() As System.String
        Get
            Return mvarComputerName
        End Get
        Set(ByVal Value As System.String)
            mvarComputerName = Value
        End Set
    End Property

    Public Property Server() As System.String
        Get
            Return mvarServer
        End Get
        Set(ByVal Value As System.String)
            mvarServer = Value
        End Set
    End Property

    Public Property DBName() As System.String
        Get
            Return mvarDBName
        End Get
        Set(ByVal Value As System.String)
            mvarDBName = Value
        End Set
    End Property

    Public Property LUpd_Datetime() As System.DateTime
        Get
            Return mvarLUpd_Datetime
        End Get
        Set(ByVal Value As System.DateTime)
            mvarLUpd_Datetime = Value
        End Set
    End Property

    Public Property LUpd_Prog() As System.String
        Get
            Return mvarLUpd_Prog
        End Get
        Set(ByVal Value As System.String)
            mvarLUpd_Prog = Value
        End Set
    End Property

    Public Property LUpd_User() As System.String
        Get
            Return mvarLUpd_User
        End Get
        Set(ByVal Value As System.String)
            mvarLUpd_User = Value
        End Set
    End Property

    Public Property Crtd_Datetime() As System.DateTime
        Get
            Return mvarCrtd_Datetime
        End Get
        Set(ByVal Value As System.DateTime)
            mvarCrtd_Datetime = Value
        End Set
    End Property

    Public Property Crtd_Prog() As System.String
        Get
            Return mvarCrtd_Prog
        End Get
        Set(ByVal Value As System.String)
            mvarCrtd_Prog = Value
        End Set
    End Property

    Public Property Crtd_User() As System.String
        Get
            Return mvarCrtd_User
        End Get
        Set(ByVal Value As System.String)
            mvarCrtd_User = Value
        End Set
    End Property

    Public Property tstamp() As System.String
        Get
            Return mvartstamp
        End Get
        Set(ByVal Value As System.String)
            mvartstamp = Value
        End Set
    End Property

    Public Property Descr() As System.String
        Get
            Return mvarDescr
        End Get
        Set(ByVal Value As System.String)
            mvarDescr = Value
        End Set
    End Property

    Public Property Period() As System.Int32
        Get
            Return mvarPeriod
        End Get
        Set(ByVal Value As System.Int32)
            mvarPeriod = Value
        End Set
    End Property

#End Region

#Region "Public Methods"
    Public Function Add() As Boolean
        Dim DAL As DataAccess = m_Dal
        Try
            Dim pc As New ParamCollection
            pc.Add(New ParamStruct("@Action", DbType.String, "AddNew", ParameterDirection.Input, 50))
            pc.Add(New ParamStruct("@TaskID", DbType.Int32, clsCommon.GetValueDBNull(Me.mvarTaskID), ParameterDirection.Input, 4))
            pc.Add(New ParamStruct("@Type", DbType.String, clsCommon.GetValueDBNull(Me.mvarType), ParameterDirection.Input, 20))
            pc.Add(New ParamStruct("@Status", DbType.String, clsCommon.GetValueDBNull(Me.mvarStatus), ParameterDirection.Input, 1))
            pc.Add(New ParamStruct("@PerFinish", DbType.Int32, clsCommon.GetValueDBNull(Me.mvarPerFinish), ParameterDirection.Input, 4))
            pc.Add(New ParamStruct("@UserID", DbType.String, clsCommon.GetValueDBNull(Me.mvarUserID), ParameterDirection.Input, 15))
            pc.Add(New ParamStruct("@ProgID", DbType.String, clsCommon.GetValueDBNull(Me.mvarProgID), ParameterDirection.Input, 15))
            pc.Add(New ParamStruct("@LogError", DbType.String, clsCommon.GetValueDBNull(Me.mvarLogError), ParameterDirection.Input, Nothing))
            pc.Add(New ParamStruct("@RunType", DbType.String, clsCommon.GetValueDBNull(Me.mvarRunType), ParameterDirection.Input, 10))
            pc.Add(New ParamStruct("@InternetAddress", DbType.String, clsCommon.GetValueDBNull(Me.mvarInternetAddress), ParameterDirection.Input, 100))
            pc.Add(New ParamStruct("@ComputerName", DbType.String, clsCommon.GetValueDBNull(Me.mvarComputerName), ParameterDirection.Input, 100))
            pc.Add(New ParamStruct("@Server", DbType.String, clsCommon.GetValueDBNull(Me.mvarServer), ParameterDirection.Input, 100))
            pc.Add(New ParamStruct("@DBName", DbType.String, clsCommon.GetValueDBNull(Me.mvarDBName), ParameterDirection.Input, 100))
            pc.Add(New ParamStruct("@LUpd_Datetime", DbType.DateTime, clsCommon.GetValueDBNull(Me.mvarLUpd_Datetime), ParameterDirection.Input, 16))
            pc.Add(New ParamStruct("@LUpd_Prog", DbType.String, clsCommon.GetValueDBNull(Me.mvarLUpd_Prog), ParameterDirection.Input, 15))
            pc.Add(New ParamStruct("@LUpd_User", DbType.String, clsCommon.GetValueDBNull(Me.mvarLUpd_User), ParameterDirection.Input, 15))
            pc.Add(New ParamStruct("@Crtd_Datetime", DbType.DateTime, clsCommon.GetValueDBNull(Me.mvarCrtd_Datetime), ParameterDirection.Input, 16))
            pc.Add(New ParamStruct("@Crtd_Prog", DbType.String, clsCommon.GetValueDBNull(Me.mvarCrtd_Prog), ParameterDirection.Input, 15))
            pc.Add(New ParamStruct("@Crtd_User", DbType.String, clsCommon.GetValueDBNull(Me.mvarCrtd_User), ParameterDirection.Input, 15))
            pc.Add(New ParamStruct("@tstamp", DbType.String, clsCommon.GetValueDBNull(Me.mvartstamp), ParameterDirection.Input, 18))
            pc.Add(New ParamStruct("@Descr", DbType.String, clsCommon.GetValueDBNull(Me.mvarDescr), ParameterDirection.Input, 500))
            pc.Add(New ParamStruct("@Period", DbType.Int32, clsCommon.GetValueDBNull(Me.mvarPeriod), ParameterDirection.Input, 4))
            DAL.ExecPreparedSQL(PP_ServerApplication, CommandType.StoredProcedure, pc, "")
            Me.mvarTaskID = clsCommon.GetValue(pc.Item("@TaskID").Value, mvarTaskID.GetType().FullName)
            Return True
        Catch ex As Exception
            Throw ex
        End Try
    End Function
    Public Function Update() As Boolean
        Dim DAL As DataAccess = m_Dal
        Try
            Dim pc As New ParamCollection
            pc.Add(New ParamStruct("@Action", DbType.String, "Update", ParameterDirection.Input, 50))
            pc.Add(New ParamStruct("@TaskID", DbType.Int32, clsCommon.GetValueDBNull(Me.mvarTaskID), ParameterDirection.Input, 4))
            pc.Add(New ParamStruct("@Type", DbType.String, clsCommon.GetValueDBNull(Me.mvarType), ParameterDirection.Input, 20))
            pc.Add(New ParamStruct("@Status", DbType.String, clsCommon.GetValueDBNull(Me.mvarStatus), ParameterDirection.Input, 1))
            pc.Add(New ParamStruct("@PerFinish", DbType.Int32, clsCommon.GetValueDBNull(Me.mvarPerFinish), ParameterDirection.Input, 4))
            pc.Add(New ParamStruct("@UserID", DbType.String, clsCommon.GetValueDBNull(Me.mvarUserID), ParameterDirection.Input, 15))
            pc.Add(New ParamStruct("@ProgID", DbType.String, clsCommon.GetValueDBNull(Me.mvarProgID), ParameterDirection.Input, 15))
            pc.Add(New ParamStruct("@LogError", DbType.String, clsCommon.GetValueDBNull(Me.mvarLogError), ParameterDirection.Input, Nothing))
            pc.Add(New ParamStruct("@RunType", DbType.String, clsCommon.GetValueDBNull(Me.mvarRunType), ParameterDirection.Input, 10))
            pc.Add(New ParamStruct("@InternetAddress", DbType.String, clsCommon.GetValueDBNull(Me.mvarInternetAddress), ParameterDirection.Input, 100))
            pc.Add(New ParamStruct("@ComputerName", DbType.String, clsCommon.GetValueDBNull(Me.mvarComputerName), ParameterDirection.Input, 100))
            pc.Add(New ParamStruct("@Server", DbType.String, clsCommon.GetValueDBNull(Me.mvarServer), ParameterDirection.Input, 100))
            pc.Add(New ParamStruct("@DBName", DbType.String, clsCommon.GetValueDBNull(Me.mvarDBName), ParameterDirection.Input, 100))
            pc.Add(New ParamStruct("@LUpd_Datetime", DbType.DateTime, clsCommon.GetValueDBNull(Me.mvarLUpd_Datetime), ParameterDirection.Input, 16))
            pc.Add(New ParamStruct("@LUpd_Prog", DbType.String, clsCommon.GetValueDBNull(Me.mvarLUpd_Prog), ParameterDirection.Input, 15))
            pc.Add(New ParamStruct("@LUpd_User", DbType.String, clsCommon.GetValueDBNull(Me.mvarLUpd_User), ParameterDirection.Input, 15))
            pc.Add(New ParamStruct("@Crtd_Datetime", DbType.DateTime, clsCommon.GetValueDBNull(Me.mvarCrtd_Datetime), ParameterDirection.Input, 16))
            pc.Add(New ParamStruct("@Crtd_Prog", DbType.String, clsCommon.GetValueDBNull(Me.mvarCrtd_Prog), ParameterDirection.Input, 15))
            pc.Add(New ParamStruct("@Crtd_User", DbType.String, clsCommon.GetValueDBNull(Me.mvarCrtd_User), ParameterDirection.Input, 15))
            pc.Add(New ParamStruct("@tstamp", DbType.String, clsCommon.GetValueDBNull(Me.mvartstamp), ParameterDirection.Input, 18))
            pc.Add(New ParamStruct("@Descr", DbType.String, clsCommon.GetValueDBNull(Me.mvarDescr), ParameterDirection.Input, 500))
            pc.Add(New ParamStruct("@Period", DbType.Int32, clsCommon.GetValueDBNull(Me.mvarPeriod), ParameterDirection.Input, 4))
            Return (DAL.ExecNonQuery(PP_ServerApplication, CommandType.StoredProcedure, pc, "") > 0)
        Catch ex As Exception
            Throw ex
        End Try
    End Function
    Public Function Delete(ByVal TaskID As System.Int32) As Boolean
        Dim DAL As DataAccess = m_Dal
        Try
            Dim pc As New ParamCollection
            pc.Add(New ParamStruct("@Action", DbType.String, "Delete", ParameterDirection.Input, 50))
            pc.Add(New ParamStruct("@TaskID", DbType.Int32, clsCommon.GetValueDBNull(TaskID), ParameterDirection.Input, 4))
            Return (DAL.ExecNonQuery(PP_ServerApplication, CommandType.StoredProcedure, pc, "") > 0)
        Catch ex As Exception
            Throw ex
        End Try
    End Function
    Public Function GetAll(ByVal TaskID As System.Int32) As DataTable
        Dim DAL As DataAccess = m_Dal
        Try
            Dim pc As New ParamCollection
            Dim ds As New DataSet
            pc.Add(New ParamStruct("@Action", DbType.String, "GetListData", ParameterDirection.Input, 50))
            pc.Add(New ParamStruct("@TaskID", DbType.Int32, clsCommon.GetValueDBNull(TaskID), ParameterDirection.Input, 4))
            ds = DAL.ExecDataSet(PP_ServerApplication, CommandType.StoredProcedure, pc, "")
            Dim keys(0) As DataColumn
            Dim column As DataColumn
            column = ds.Tables(0).Columns("TaskID")
            keys(0) = column
            ds.Tables(0).PrimaryKey = keys
            Return ds.Tables(0)
        Catch ex As Exception
            Throw ex
        End Try
    End Function
    Public Sub Reset()
        mvarTaskID = 0
        mvarType = String.Empty
        mvarStatus = String.Empty
        mvarPerFinish = 0
        mvarUserID = String.Empty
        mvarProgID = String.Empty
        mvarLogError = String.Empty
        mvarRunType = String.Empty
        mvarInternetAddress = String.Empty
        mvarComputerName = String.Empty
        mvarServer = String.Empty
        mvarDBName = String.Empty
        mvarLUpd_Datetime = Today
        mvarLUpd_Prog = String.Empty
        mvarLUpd_User = String.Empty
        mvarCrtd_Datetime = Today
        mvarCrtd_Prog = String.Empty
        mvarCrtd_User = String.Empty
        mvartstamp = String.Empty
        mvarDescr = String.Empty
        mvarPeriod = 0
    End Sub
    Public Function GetByKey(ByVal TaskID As System.Int32) As Boolean
        Dim DAL As DataAccess = m_Dal
        Dim ds As New DataSet
        Try
            Dim pc As New ParamCollection
            pc.Add(New ParamStruct("@Action", DbType.String, "GetData_ByKey", ParameterDirection.Input, 50))
            pc.Add(New ParamStruct("@TaskID", DbType.Int32, clsCommon.GetValueDBNull(TaskID), ParameterDirection.InputOutput, 4))
            ds = DAL.ExecDataSet(PP_ServerApplication, CommandType.StoredProcedure, pc, "")
            Me.Reset()
            If ds Is Nothing Then
                Return False
            End If
            If ds.Tables(0).Rows.Count > 0 Then
                FillData(ds.Tables(0).Rows(0))
                Return True
            End If
        Catch ex As Exception
            Throw ex
        End Try
        Return False
    End Function
    Public Sub FillData(row As DataRow)
        mvarTaskID = clsCommon.GetValue(row("TaskID"), mvarTaskID.GetType().FullName)
        mvarType = clsCommon.GetValue(row("Type"), mvarType.GetType().FullName)
        mvarStatus = clsCommon.GetValue(row("Status"), mvarStatus.GetType().FullName)
        mvarPerFinish = clsCommon.GetValue(row("PerFinish"), mvarPerFinish.GetType().FullName)
        mvarUserID = clsCommon.GetValue(row("UserID"), mvarUserID.GetType().FullName)
        mvarProgID = clsCommon.GetValue(row("ProgID"), mvarProgID.GetType().FullName)
        mvarLogError = clsCommon.GetValue(row("LogError"), mvarLogError.GetType().FullName)
        mvarRunType = clsCommon.GetValue(row("RunType"), mvarRunType.GetType().FullName)
        mvarInternetAddress = clsCommon.GetValue(row("InternetAddress"), mvarInternetAddress.GetType().FullName)
        mvarComputerName = clsCommon.GetValue(row("ComputerName"), mvarComputerName.GetType().FullName)
        mvarServer = clsCommon.GetValue(row("Server"), mvarServer.GetType().FullName)
        mvarDBName = clsCommon.GetValue(row("DBName"), mvarDBName.GetType().FullName)
        mvarLUpd_Datetime = clsCommon.GetValue(row("LUpd_Datetime"), mvarLUpd_Datetime.GetType().FullName)
        mvarLUpd_Prog = clsCommon.GetValue(row("LUpd_Prog"), mvarLUpd_Prog.GetType().FullName)
        mvarLUpd_User = clsCommon.GetValue(row("LUpd_User"), mvarLUpd_User.GetType().FullName)
        mvarCrtd_Datetime = clsCommon.GetValue(row("Crtd_Datetime"), mvarCrtd_Datetime.GetType().FullName)
        mvarCrtd_Prog = clsCommon.GetValue(row("Crtd_Prog"), mvarCrtd_Prog.GetType().FullName)
        mvarCrtd_User = clsCommon.GetValue(row("Crtd_User"), mvarCrtd_User.GetType().FullName)
        mvartstamp = clsCommon.GetValue(row("tstamp"), mvartstamp.GetType().FullName)
        mvarDescr = clsCommon.GetValue(row("Descr"), mvarDescr.GetType().FullName)
        mvarPeriod = clsCommon.GetValue(row("Period"), mvarPeriod.GetType().FullName)
    End Sub
#End Region

#Region "Private Methods"
#End Region

End Class
