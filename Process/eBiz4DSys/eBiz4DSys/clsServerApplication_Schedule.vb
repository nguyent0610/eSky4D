'-- ------------------------------------------------------------
'-- Class name    :  clsServerApplication_Schedule
'-- Created date  :  12/11/2012
'-- Created by    :  
'-- Updated by    :  
'-- Generated by    :  Class Maker v1.0
'-- ------------------------------------------------------------

'-- Import Libraries --
Imports HQFramework
Imports HQFramework.DAL
Imports HQFramework.Common

Public Class clsServerApplication_Schedule
#Region "Constants"
    Private Const PP_ServerApplication_Schedule As String = "PP_ServerApplication_Schedule"
#End Region

#Region "Member Variables"
    Private mvarWeekDay As System.String

    Private mvarTimeRun As System.String

#End Region

    Private m_Dal As DataAccess
#Region "Constructors"
    Public Sub New()
        m_Dal = New DataAccess
        Reset()
    End Sub
    Public Sub New(ByVal dal As DataAccess)
        m_Dal = dal
        Reset()
    End Sub
#End Region

#Region "Public Properties"
    Public Property WeekDay() As System.String
        Get
            Return mvarWeekDay
        End Get
        Set(ByVal Value As System.String)
            mvarWeekDay = Value
        End Set
    End Property

    Public Property TimeRun() As System.String
        Get
            Return mvarTimeRun
        End Get
        Set(ByVal Value As System.String)
            mvarTimeRun = Value
        End Set
    End Property

#End Region

#Region "Public Methods"
    Public Function Add() As Boolean
        Dim DAL As DataAccess = m_Dal
        Try
            Dim pc As New ParamCollection
            pc.Add(New ParamStruct("@Action", DbType.String, "AddNew", ParameterDirection.Input, 50))
            pc.Add(New ParamStruct("@WeekDay", DbType.String, clsCommon.GetValueDBNull(Me.mvarWeekDay), ParameterDirection.Input, 1))
            pc.Add(New ParamStruct("@TimeRun", DbType.String, clsCommon.GetValueDBNull(Me.mvarTimeRun), ParameterDirection.Input, 4))
            DAL.ExecPreparedSQL(PP_ServerApplication_Schedule, CommandType.StoredProcedure, pc, "")
            Me.mvarWeekDay = clsCommon.GetValue(pc.Item("@WeekDay").Value, mvarWeekDay.GetType().FullName)
            Return (Me.mvarWeekDay <> String.Empty)
        Catch ex As Exception
            Throw ex
        End Try
    End Function
    Public Function Update() As Boolean
        Dim DAL As DataAccess = m_Dal
        Try
            Dim pc As New ParamCollection
            pc.Add(New ParamStruct("@Action", DbType.String, "Update", ParameterDirection.Input, 50))
            pc.Add(New ParamStruct("@WeekDay", DbType.String, clsCommon.GetValueDBNull(Me.mvarWeekDay), ParameterDirection.Input, 1))
            pc.Add(New ParamStruct("@TimeRun", DbType.String, clsCommon.GetValueDBNull(Me.mvarTimeRun), ParameterDirection.Input, 4))
            Return (DAL.ExecNonQuery(PP_ServerApplication_Schedule, CommandType.StoredProcedure, pc, "") > 0)
        Catch ex As Exception
            Throw ex
        End Try
    End Function
    Public Function Delete(ByVal WeekDay As System.String, ByVal TimeRun As System.String) As Boolean
        Dim DAL As DataAccess = m_Dal
        Try
            Dim pc As New ParamCollection
            pc.Add(New ParamStruct("@Action", DbType.String, "Delete", ParameterDirection.Input, 50))
            pc.Add(New ParamStruct("@WeekDay", DbType.String, clsCommon.GetValueDBNull(WeekDay), ParameterDirection.Input, 1))
            pc.Add(New ParamStruct("@TimeRun", DbType.String, clsCommon.GetValueDBNull(TimeRun), ParameterDirection.Input, 4))
            Return (DAL.ExecNonQuery(PP_ServerApplication_Schedule, CommandType.StoredProcedure, pc, "") > 0)
        Catch ex As Exception
            Throw ex
        End Try
    End Function
    Public Function GetAll(ByVal WeekDay As System.String, ByVal TimeRun As System.String) As DataTable
        Dim DAL As DataAccess = m_Dal
        Try
            Dim pc As New ParamCollection
            Dim ds As New DataSet
            pc.Add(New ParamStruct("@Action", DbType.String, "GetListData", ParameterDirection.Input, 50))
            pc.Add(New ParamStruct("@WeekDay", DbType.String, clsCommon.GetValueDBNull(WeekDay), ParameterDirection.Input, 1))
            pc.Add(New ParamStruct("@TimeRun", DbType.String, clsCommon.GetValueDBNull(TimeRun), ParameterDirection.Input, 4))
            ds = DAL.ExecDataSet(PP_ServerApplication_Schedule, CommandType.StoredProcedure, pc, "")
            Dim keys(1) As DataColumn
            Dim column As DataColumn
            column = ds.Tables(0).Columns("WeekDay")
            keys(0) = column
            column = ds.Tables(0).Columns("TimeRun")
            keys(1) = column
            ds.Tables(0).PrimaryKey = keys
            Return ds.Tables(0)
        Catch ex As Exception
            Throw ex
        End Try
    End Function
    Public Sub Reset()
        mvarWeekDay = String.Empty
        mvarTimeRun = String.Empty
    End Sub
    Public Function GetByKey(ByVal WeekDay As System.String, ByVal TimeRun As System.String) As Boolean
        Dim DAL As DataAccess = m_Dal
        Dim ds As New DataSet
        Try
            Dim pc As New ParamCollection
            pc.Add(New ParamStruct("@Action", DbType.String, "GetData_ByKey", ParameterDirection.Input, 50))
            pc.Add(New ParamStruct("@WeekDay", DbType.String, clsCommon.GetValueDBNull(WeekDay), ParameterDirection.InputOutput, 1))
            pc.Add(New ParamStruct("@TimeRun", DbType.String, clsCommon.GetValueDBNull(TimeRun), ParameterDirection.InputOutput, 4))
            ds = DAL.ExecDataSet(PP_ServerApplication_Schedule, CommandType.StoredProcedure, pc, "")
            Me.Reset()
            If ds Is Nothing Then
                Return False
            End If
            If ds.Tables(0).Rows.Count > 0 Then
                FillData(ds.Tables(0).Rows(0))
                Return True
            End If
        Catch ex As Exception
            Throw ex
        End Try
        Return False
    End Function
    Public Sub FillData(row As DataRow)
        mvarWeekDay = clsCommon.GetValue(row("WeekDay"), mvarWeekDay.GetType().FullName)
        mvarTimeRun = clsCommon.GetValue(row("TimeRun"), mvarTimeRun.GetType().FullName)
    End Sub
#End Region

#Region "Private Methods"
#End Region

End Class
