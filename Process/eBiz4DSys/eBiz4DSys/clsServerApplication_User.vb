'-- ------------------------------------------------------------
'-- Class name    :  clsServerApplication_User
'-- Created date  :  12/11/2012
'-- Created by    :  
'-- Updated by    :  
'-- Generated by    :  Class Maker v1.0
'-- ------------------------------------------------------------

'-- Import Libraries --
Imports HQFramework
Imports HQFramework.DAL
Imports HQFramework.Common

Public Class clsServerApplication_User
#Region "Constants"
    Private Const PP_ServerApplication_User As String = "PP_ServerApplication_User"
#End Region

#Region "Member Variables"
    Private mvarUserId As System.String

    Private mvarGroupID As System.String

    Private mvarDescr As System.String

    Private mvarPassword As System.String

    Private mvarPwdExpiredDate As System.DateTime

#End Region

    Private m_Dal As DataAccess
#Region "Constructors"
    Public Sub New()
        m_Dal = New DataAccess
        Reset()
    End Sub
    Public Sub New(ByVal dal As DataAccess)
        m_Dal = dal
        Reset()
    End Sub
#End Region

#Region "Public Properties"
    Public Property UserId() As System.String
        Get
            Return mvarUserId
        End Get
        Set(ByVal Value As System.String)
            mvarUserId = Value
        End Set
    End Property

    Public Property GroupID() As System.String
        Get
            Return mvarGroupID
        End Get
        Set(ByVal Value As System.String)
            mvarGroupID = Value
        End Set
    End Property

    Public Property Descr() As System.String
        Get
            Return mvarDescr
        End Get
        Set(ByVal Value As System.String)
            mvarDescr = Value
        End Set
    End Property

    Public Property Password() As System.String
        Get
            Return mvarPassword
        End Get
        Set(ByVal Value As System.String)
            mvarPassword = Value
        End Set
    End Property

    Public Property PwdExpiredDate() As System.DateTime
        Get
            Return mvarPwdExpiredDate
        End Get
        Set(ByVal Value As System.DateTime)
            mvarPwdExpiredDate = Value
        End Set
    End Property

#End Region

#Region "Public Methods"
    Public Function Add() As Boolean
        Dim DAL As DataAccess = m_Dal
        Try
            Dim pc As New ParamCollection
            pc.Add(New ParamStruct("@Action", DbType.String, "AddNew", ParameterDirection.Input, 50))
            pc.Add(New ParamStruct("@UserId", DbType.String, clsCommon.GetValueDBNull(Me.mvarUserId), ParameterDirection.Input, 10))
            pc.Add(New ParamStruct("@GroupID", DbType.String, clsCommon.GetValueDBNull(Me.mvarGroupID), ParameterDirection.Input, 10))
            pc.Add(New ParamStruct("@Descr", DbType.String, clsCommon.GetValueDBNull(Me.mvarDescr), ParameterDirection.Input, 100))
            pc.Add(New ParamStruct("@Password", DbType.String, clsCommon.GetValueDBNull(Me.mvarPassword), ParameterDirection.Input, 50))
            pc.Add(New ParamStruct("@PwdExpiredDate", DbType.DateTime, clsCommon.GetValueDBNull(Me.mvarPwdExpiredDate.Date), ParameterDirection.Input, 16))
            DAL.ExecPreparedSQL(PP_ServerApplication_User, CommandType.StoredProcedure, pc, "")
            Me.mvarUserId = clsCommon.GetValue(pc.Item("@UserId").Value, mvarUserId.GetType().FullName)
            Return (Me.mvarUserId <> String.Empty)
        Catch ex As Exception
            Throw ex
        End Try
    End Function
    Public Function Update() As Boolean
        Dim DAL As DataAccess = m_Dal
        Try
            Dim pc As New ParamCollection
            pc.Add(New ParamStruct("@Action", DbType.String, "Update", ParameterDirection.Input, 50))
            pc.Add(New ParamStruct("@UserId", DbType.String, clsCommon.GetValueDBNull(Me.mvarUserId), ParameterDirection.Input, 10))
            pc.Add(New ParamStruct("@GroupID", DbType.String, clsCommon.GetValueDBNull(Me.mvarGroupID), ParameterDirection.Input, 10))
            pc.Add(New ParamStruct("@Descr", DbType.String, clsCommon.GetValueDBNull(Me.mvarDescr), ParameterDirection.Input, 100))
            pc.Add(New ParamStruct("@Password", DbType.String, clsCommon.GetValueDBNull(Me.mvarPassword), ParameterDirection.Input, 50))
            pc.Add(New ParamStruct("@PwdExpiredDate", DbType.DateTime, clsCommon.GetValueDBNull(Me.mvarPwdExpiredDate.Date), ParameterDirection.Input, 16))
            Return (DAL.ExecNonQuery(PP_ServerApplication_User, CommandType.StoredProcedure, pc, "") > 0)
        Catch ex As Exception
            Throw ex
        End Try
    End Function
    Public Function Delete(ByVal UserId As System.String) As Boolean
        Dim DAL As DataAccess = m_Dal
        Try
            Dim pc As New ParamCollection
            pc.Add(New ParamStruct("@Action", DbType.String, "Delete", ParameterDirection.Input, 50))
            pc.Add(New ParamStruct("@UserId", DbType.String, clsCommon.GetValueDBNull(UserId), ParameterDirection.Input, 10))
            Return (DAL.ExecNonQuery(PP_ServerApplication_User, CommandType.StoredProcedure, pc, "") > 0)
        Catch ex As Exception
            Throw ex
        End Try
    End Function
    Public Function GetAll(ByVal UserId As System.String) As DataTable
        Dim DAL As DataAccess = m_Dal
        Try
            Dim pc As New ParamCollection
            Dim ds As New DataSet
            pc.Add(New ParamStruct("@Action", DbType.String, "GetListData", ParameterDirection.Input, 50))
            pc.Add(New ParamStruct("@UserId", DbType.String, clsCommon.GetValueDBNull(UserId), ParameterDirection.Input, 10))
            ds = DAL.ExecDataSet(PP_ServerApplication_User, CommandType.StoredProcedure, pc, "")
            Dim keys(0) As DataColumn
            Dim column As DataColumn
            column = ds.Tables(0).Columns("UserId")
            keys(0) = column
            ds.Tables(0).PrimaryKey = keys
            Return ds.Tables(0)
        Catch ex As Exception
            Throw ex
        End Try
    End Function
    Public Sub Reset()
        mvarUserId = String.Empty
        mvarGroupID = String.Empty
        mvarDescr = String.Empty
        mvarPassword = String.Empty
        mvarPwdExpiredDate = Today
    End Sub
    Public Function GetByKey(ByVal UserId As System.String) As Boolean
        Dim DAL As DataAccess = m_Dal
        Dim ds As New DataSet
        Try
            Dim pc As New ParamCollection
            pc.Add(New ParamStruct("@Action", DbType.String, "GetData_ByKey", ParameterDirection.Input, 50))
            pc.Add(New ParamStruct("@UserId", DbType.String, clsCommon.GetValueDBNull(UserId), ParameterDirection.InputOutput, 10))
            ds = DAL.ExecDataSet(PP_ServerApplication_User, CommandType.StoredProcedure, pc, "")
            Me.Reset()
            If ds Is Nothing Then
                Return False
            End If
            If ds.Tables(0).Rows.Count > 0 Then
                FillData(ds.Tables(0).Rows(0))
                Return True
            End If
        Catch ex As Exception
            Throw ex
        End Try
        Return False
    End Function
    Public Sub FillData(row As DataRow)
        mvarUserId = clsCommon.GetValue(row("UserId"), mvarUserId.GetType().FullName)
        mvarGroupID = clsCommon.GetValue(row("GroupID"), mvarGroupID.GetType().FullName)
        mvarDescr = clsCommon.GetValue(row("Descr"), mvarDescr.GetType().FullName)
        mvarPassword = clsCommon.GetValue(row("Password"), mvarPassword.GetType().FullName)
        mvarPwdExpiredDate = clsCommon.GetValue(row("PwdExpiredDate"), mvarPwdExpiredDate.GetType().FullName)
    End Sub
#End Region

#Region "Private Methods"
#End Region

End Class
