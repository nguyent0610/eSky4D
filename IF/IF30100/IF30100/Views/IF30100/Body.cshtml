@using Ext.Net;
@using Ext.Net.MVC;
@using HQ.eSkyFramework;
@using HQ.eSkyFramework.HQControl;
@using IF30100;
@{
    Layout = null;
    var X = Html.X();
    var HQ = Html.HQ();
}

@(X.Viewport()
.Layout(LayoutType.Fit)
.Items(
    X.FormPanel()
    .ID("frmMain")
    .BodyPadding(0)
    .KeyMap(Util.SetupKeyMap())
    .TopBar(Util.SetupToolbar(new AbstractComponent[]{
            X.FileUploadField().Hidden(true)
            .ID("btnImport")
            .ButtonText("ImportTemplate")
            .ButtonOnly(true)
            .Icon(Icon.BookAdd)
            .Listeners(p=>{
                p.Change.Fn = "btnImport_Click";              
            }),
                    
            X.Button()
            .ID("btnExport")
            .Text(Util.GetLang("ExportTemplate"))
            .Icon(Icon.ArrowTurnRight)
            .Listeners(p=>{
                p.Click.Fn = "btnExport_Click";
            })}, "New,Save,Delete,Print", false, ""))
    .Layout(LayoutType.Anchor)
    .FieldDefaults(act => { act.LabelAlign = LabelAlign.Right; act.LabelWidth = 100; })
    .Items(
        ////Thiet ke giao dien o day
        X.Panel().ID("pnlHeader").Layout(LayoutType.VBox).Border(false).AutoScroll(true)
            .Listeners(lst =>
                {
                    lst.Render.Handler = "HQ.common.control_render(this,'header')";
                    lst.Resize.Handler = "App.grdDet.setAnchor(\"100% -\" + App.pnlHeader.getHeight());App.grdDet.view.refresh();";
                    lst.BoxReady.Handler = "firstLoad();";
                })//focus header        
            .Items(

                 X.Container().Layout(LayoutType.HBox).MarginSpec("3 0 0 0")
                    .Items(
                            HQ.Combo().ID("cboType").Name("cboType").HQLangCode("ReportType").HQProcedure("IF30100_pcReportType")
                            .HQColumnShow("ReportName").DisplayField("ReportName").ValueField("ReportView").AllowBlank(true)
                            .Width(400).HQHeightWidth(400, 300)
                            .HQDBSys(false).ForceSelection(true)
                            .HQParam(new StoreParameterCollection() 
                            { 
                                new StoreParameter() { Name = "@UserID", Value = "HQ.userName", Mode = ParameterMode.Raw },
                                new StoreParameter() { Name = "@BranchID", Value = "HQ.cpnyID", Mode = ParameterMode.Raw },
                                new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw }
                            })
                            .Listeners(lst =>
                            {
                                lst.Change.Fn = "cboType_Change";
                                lst.Select.Fn = "cboType_Select";
                            })
                            .LoadData()
                )

         )
        , X.GridPanel().ID("grdDet").Anchor("100% -25")
            .MarginSpec("3 0 0 0")
            .Border(true).BorderSpec("1 0 0 0")
            .RowLines(true)
            .ColumnLines(true)
            .Store(
                    X.Store().ID("stoDet").AutoLoad(false)
                    .PageSize(50)
                    .Model(Util.GenerateModel(typeof(IF30100_pgData_Result), "mdlIF30100_pgDataModel", "InvtID", true))
                    .Listeners(l =>
                    {
                        l.Load.Fn = "stoDet_Load";
                        l.BeforeLoad.Fn = "stoDet_BeforeLoad";
                    })
                    .ServerProxy(
                        X.AjaxProxy()
                        .Url(Url.Action("GetIF30100_pgData", "IF30100"))

                    )
                    .Parameters(ps =>
                                {
                                    ps.Add(new StoreParameter("view", "App.cboType.getValue()", ParameterMode.Raw));
                                })
                        )
            .ColumnModel(
                X.RowNumbererColumn()//.Renderer("renderRowNumber")
                , X.Column().Text(Util.GetLang("Column_Name")).DataIndex("Column_Name")
                , X.CheckColumn().ID("ColCheck").DataIndex("Checked").Editable(true).HideTitleEl(true)
                            .HeaderItems(
                                HQ.Checkbox().ID("ColCheck_Header").HQLangCode("IF30100Check")
                                    .Listeners(l =>
                                    {
                                        l.Change.Fn = "colCheck_Header_Change";
                                    })
                        )
                , X.Column().Width(150).Text(Util.GetLang("Operator")).DataIndex("Operator")
                    .Editor(HQ.Combo().ID("cboOperator").Name("cboOperator").HideLabel(true).LabelWidth(0).ForceSelection(true)
                                    .HQDBSys(false).HQProcedure("IF30100_pcOperator")
                                    .HQColumnShow("Code")
                                    .DisplayField("Code")
                                    .ValueField("Code")
                                    .HQHeightWidth(400, 300).Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                                    .Listeners(lst =>
                                        {                                           
                                            lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                                            lst.Expand.Handler = "HQ.combo.expandScrollToItem(this);";                                                                                                                                                              
                                        })                                    
                                    .LoadData()
                            )
                    
                , X.Column().Text(Util.GetLang("Value1")).DataIndex("Value1").Editor(X.TextField().MaxLength(int.MaxValue)).Flex(1)
                , X.Column().Text(Util.GetLang("Value2")).DataIndex("Value2").Editor(X.TextField().MaxLength(int.MaxValue)).Flex(1)
            )
            .SelectionModel(X.RowSelectionModel().ID("smlPlanDetail").Mode(SelectionMode.Single))
            .View(X.GridView().TrackOver(false))
            .Plugins(X.CellEditing().ClicksToEdit(1))
            .Listeners(ls =>
                    {
                        //ls.ValidateEdit.Fn = "grdDet_ValidateEdit";
                    })
            .Features(
                        X.GridFilters()
                            .Local(true)
                            .Filters(
                                X.StringFilter().DataIndex("Column_Name"),
                                X.BooleanFilter().DataIndex("Checked"),
                                X.StringFilter().DataIndex("Operator"),
                                X.StringFilter().DataIndex("Value1"),
                                X.StringFilter().DataIndex("Value2")

                            )
                    )
        )
    )
)

