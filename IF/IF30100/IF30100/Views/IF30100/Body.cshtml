@using Ext.Net;
@using Ext.Net.MVC;
@using HQ.eSkyFramework;
@using HQ.eSkyFramework.HQControl;
@using IF30100;
@{
    Layout = null;
    var X = Html.X();
    var HQ = Html.HQ();
}

@(
    X.Viewport()
    .Layout(LayoutType.Fit)
    .Items(
        X.Window()
        .ID("winTemplate")
        .Hidden(true)
        .Title("Template")
        .Modal(true)
        .Maximized(true)
        .Layout(LayoutType.Fit)
        .Items(
        
           X.FormPanel()
            .ID("frmTemplate")
            .Border(false)
            .KeyMap(Util.SetupKeyMap())
            .Layout(LayoutType.Border)
            .FieldDefaults(act => { act.LabelAlign = LabelAlign.Right; act.LabelWidth = 100; })
            .Items(
                X.Panel().BodyStyle("padding: 10px 10px 10px 10px").Region(Region.North).Layout(LayoutType.VBox)
                .Items(
                    HQ.TextBox().ID("txtReportNbr").HQLangCode("ReportNbr").Width(200)
                
                    , HQ.TextBox().ID("txtName").HQLangCode("Name").Width(400)
                
                    , X.FieldContainer().Layout(LayoutType.HBox)
                    .Items(
                        HQ.Combo().ID("cboTableView").Name("TableView").HQLangCode("TableView").HQProcedure("IF30100_pcTableView")
                        .DisplayField("TableView").ValueField("TableView").HQColumnShow("TableView").AllowBlank(true)
                        .Width(400).HQHeightWidth(400, 300)
                        .HQDBSys(true).ForceSelection(true)
                        .HQParam(new StoreParameterCollection() { 
                            new StoreParameter() { Name = "@UserID", Value = "HQ.userName", Mode = ParameterMode.Raw },
                            new StoreParameter() { Name = "@BranchID", Value = "HQ.cpnyID", Mode = ParameterMode.Raw },
                            new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw }
                        })
                        .Listeners(lst => {
                            //lst.Change.Fn = "cboTableView_Change";
                        })
                        .LoadData()
                    
                        , X.Button().ID("btnAdd").Text(Util.GetLang("Add"))
                        .Width(100).MarginSpec("0 0 0 10")
                        .Listeners(p=>p.Click.Fn = "btnAdd_Click")
                    
                        , X.Button().ID("btnLoadData").Text(Util.GetLang("LoadData"))
                        .Width(100).MarginSpec("0 0 0 10")
                        .Listeners(p=>p.Click.Fn = "btnAdd_Click")
                    
                    )
                )
                , X.TabPanel().Region(Region.Center)
                .Items(
                    X.Panel().ID("pnlField").Title("Fields")
                    , X.Panel().ID("pnlQuery").Title("Query")
                )
               
                
                
            )
        )
        
        , X.FormPanel()
        .ID("frmMain")
        .BodyPadding(0)
        .KeyMap(Util.SetupKeyMap())
        .TopBar(Util.SetupToolbar(new AbstractComponent[]{
                X.FileUploadField().Hidden(true)
                .ID("btnImport")
                .ButtonText("ImportTemplate")
                .ButtonOnly(true)
                .Icon(Icon.BookAdd)
                .Listeners(p=>{
                    p.Change.Fn = "btnImport_Click";              
                }),
                    
                X.Button()
                .ID("btnExport")
                .Text(Util.GetLang("ExportTemplate"))
                .Icon(Icon.ArrowTurnRight)
                .Listeners(p=>{
                    p.Click.Fn = "btnExport_Click";
                })}, "New,Save,Delete,Print", false, ""))
        .Layout(LayoutType.Border)
        .FieldDefaults(act => { act.LabelAlign = LabelAlign.Right; act.LabelWidth = 100; })
        .Items(
            ////Thiet ke giao dien o day
            X.Panel().ID("pnlHeader").Region(Region.North).Layout(LayoutType.VBox).Border(false).AutoScroll(true)
            .Listeners(lst => {
                lst.Render.Handler = "HQ.common.control_render(this,'header')";
                lst.BoxReady.Handler = "firstLoad();";
            })//focus header        
            .Items(
                X.Container().Layout(LayoutType.HBox).MarginSpec("5 0 5 0")
                .Items(
                    HQ.Combo().ID("cboType").Name("Type").HQLangCode("Type").HQProcedure("IF30100_pcType")
                    .HQColumnShow("Descr").DisplayField("Descr").ValueField("Code").AllowBlank(true)
                    .Width(250).HQHeightWidth(400, 300)
                    .HQDBSys(true).ForceSelection(true)
                    .HQParam(new StoreParameterCollection() { 
                        new StoreParameter() { Name = "@UserID", Value = "HQ.userName", Mode = ParameterMode.Raw },
                        new StoreParameter() { Name = "@BranchID", Value = "HQ.cpnyID", Mode = ParameterMode.Raw },
                        new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw }
                    })
                    .Listeners(lst => {
                        lst.Change.Fn = "cboType_Change";
                    })
                    .LoadData()
                            
                    , HQ.Combo().ID("cboReport").Name("Report").HQLangCode("Report").HQProcedure("IF30100_pcReport")
                    .HQColumnShow("ReportName").DisplayField("ReportName").ValueField("ReportNbr").AllowBlank(true)
                    .Width(400).HQHeightWidth(400, 300)
                    .HQDBSys(true).ForceSelection(true)
                    .HQParam(new StoreParameterCollection() { 
                        new StoreParameter() { Name = "@Type", Value = "App.cboType.getValue()", Mode = ParameterMode.Raw },
                        new StoreParameter() { Name = "@UserID", Value = "HQ.userName", Mode = ParameterMode.Raw },
                        new StoreParameter() { Name = "@BranchID", Value = "HQ.cpnyID", Mode = ParameterMode.Raw },
                        new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw }
                    })
                    .Listeners(lst => {
                        lst.Change.Fn = "cboReport_Change";
                    })
                    .LoadData()    
                    
                    , X.Button().ID("btnTemplate").Text(Util.GetLang("Template"))
                    .Width(120).MarginSpec("0 0 0 30").Hidden(true)
                    .Listeners(p=>p.Click.Fn = "btnTemplate_Click")
                )

            )
            
            , X.Panel().Border(false).Region(Region.Center).Layout(LayoutType.Fit).Items(
                X.Panel().ID("pnlFilter").Hidden(true).Layout(LayoutType.Border).Title(Util.GetLang("Parameter"))
                .Items(
                    X.Panel().ID("pnlFilterHeader").BodyStyle("padding:20px 10px 10px 50px;").Border(false).Region(Region.North).Layout(LayoutType.VBox)
                    , X.Panel().Border(false).Region(Region.Center).Layout(LayoutType.Fit)
                    .Items(X.TabPanel().ID("tabFilterGrid"))
                )
                
                , X.GridPanel().ID("grdDet")
                .MarginSpec("3 0 0 0")
                .Border(true).BorderSpec("1 0 0 0")
                .RowLines(true)
                .ColumnLines(true)
                .Store(
                    X.Store().ID("stoDet").AutoLoad(false)
                    .PageSize(50)
                    .Model(Util.GenerateModel(typeof(IF30100_pgData_Result), "mdlIF30100_pgDataModel", "InvtID", true))
                    .Listeners(l =>{
                        l.Load.Fn = "stoDet_Load";
                        l.BeforeLoad.Fn = "stoDet_BeforeLoad";
                    })
                    .ServerProxy( X.AjaxProxy().Url(Url.Action("GetIF30100_pgData", "IF30100")))
                    .Parameters(ps =>{
                            ps.Add(new StoreParameter("view", "getView()", ParameterMode.Raw));
                    })
                )
                .ColumnModel(
                    X.RowNumbererColumn()//.Renderer("renderRowNumber")
                    , X.Column().Text(Util.GetLang("Column_Name")).DataIndex("Column_Name")
                    , X.CheckColumn().ID("ColCheck").DataIndex("Checked").Editable(true).HideTitleEl(true)
                    .HeaderItems(
                        HQ.Checkbox().ID("ColCheck_Header").HQLangCode("IF30100Check")
                        .Listeners(l =>
                        {
                            l.Change.Fn = "colCheck_Header_Change";
                        })
                    )
                    , X.Column().Width(150).Text(Util.GetLang("Operator")).DataIndex("Operator")
                    .Editor(
                        HQ.Combo().ID("cboOperator").Name("cboOperator").HideLabel(true).LabelWidth(0).ForceSelection(true)
                        .HQDBSys(true).HQProcedure("IF30100_pcOperator")
                        .HQColumnShow("Code")
                        .DisplayField("Code")
                        .ValueField("Code")
                        .HQHeightWidth(400, 300).Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                        .Listeners(lst =>
                            {                                           
                                lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                                lst.Expand.Handler = "HQ.combo.expandScrollToItem(this);";                                                                                                                                                              
                            })                                    
                        .LoadData()
                    )
                    
                    , X.Column().Text(Util.GetLang("Value1")).DataIndex("Value1").Editor(X.TextField().MaxLength(int.MaxValue)).Flex(1)
                    , X.Column().Text(Util.GetLang("Value2")).DataIndex("Value2").Editor(X.TextField().MaxLength(int.MaxValue)).Flex(1)
                )
                .SelectionModel(X.RowSelectionModel().ID("smlPlanDetail").Mode(SelectionMode.Single))
                .View(X.GridView().TrackOver(false))
                .Plugins(X.CellEditing().ClicksToEdit(1))
                .Listeners(ls =>{
                            //ls.ValidateEdit.Fn = "grdDet_ValidateEdit";
                })
                .Features(
                    X.GridFilters()
                    .Local(true)
                    .Filters(
                        X.StringFilter().DataIndex("Column_Name"),
                        X.BooleanFilter().DataIndex("Checked"),
                        X.StringFilter().DataIndex("Operator"),
                        X.StringFilter().DataIndex("Value1"),
                        X.StringFilter().DataIndex("Value2")

                    )
                )
            )
        )
    )
)

