@using Ext.Net;
@using Ext.Net.MVC;
@using eBiz4DWebFrame;
@using eBiz4DWebFrame.HQControl;
@using AR21600;

@model System.Collections.IEnumerable
@{
    Layout = null;
    var X = Html.X();
    var HQ = Html.HQ();
    ViewBag.Title = "AR21600";
    var acc = Session["AR21600"] as AccessRight;
}
<!DOCTYPE html>
<html>
    <head>
        <meta name="viewport" content="width=device-width" />
<script src='@Url.Content("Scripts/common.js")' type="text/javascript"></script>
<script src='@Url.Content("Scripts/Screen/AR21600.js")' type="text/javascript"></script>
<style> @*Thuoc tinh hover tren grid *@
    .x-grid-row-over .x-grid-cell-inner {
        font-weight : bold;
    }
  
  
</style>
@*Script chung*@    
<script>
    var isUpdate = strToBool('@acc.Update.ToString().ToLower()');
    var isInsert = strToBool('@acc.Insert.ToString().ToLower()');
    var isDelete = strToBool('@acc.Delete.ToString().ToLower()');
    var strKeyGridGrid = '';
    var dSMAll = '';
    var areaAll = '';
    var stateAll = '';
    //check value
    var isAllValid = function (items) {
        @*if (items != undefined) {
            for (var i = 0; i < items.length; i++) {
                if (items[i]["AreaCode"] == undefined) continue;
                if (items[i]["AreaCode"].trim() == "") {
                    callMessage(15, '@Util.GetLang("AreaCode")', null);
                    return false;
                }
                if (items[i]["AreaName"].trim() == "") {
                    callMessage(15, '@Util.GetLang("AreaName")', null);
                return false;
            }

        }
        return true;
    } else {
        return true;
    }*@
    };
</script>   

  <title>@ViewBag.Title</title>
    </head>
    <body>   
@(Html.X().ResourceManager().Theme((Theme)Enum.Parse(typeof(Theme),Current.Theme.PassNull()==""?"Gray":Current.Theme.PassNull())))

        @(Html.X().Store().ID("storeGridDetailFromCust").AutoLoad(false)  
        .Model(Util.GenerateModel(typeof(AR21600_ListChooseDetailFromCust_Result), "ObjectModelFromCust", ""))
        .Proxy(
            X.AjaxProxy()
            .Url(Url.Action("GetDataGridDetailFromCust", "AR21600"))
            .ActionMethods(action =>
            {
                action.Read = HttpMethod.POST;
            })
            .Reader(X.JsonReader().Root("data").TotalProperty("totaldata"))
        )
        .Parameters(ps =>
        {
            ps.Add(new StoreParameter("Object1", "App.cboObject.getValue()", ParameterMode.Raw));
            ps.Add(new StoreParameter("Task", "App.cboTask.getValue()", ParameterMode.Raw));
            ps.Add(new StoreParameter("FromBranch", "App.cboFromBranch.getValue()", ParameterMode.Raw));
            ps.Add(new StoreParameter("ToBranch", "App.cboToBranch.getValue()", ParameterMode.Raw));
            ps.Add(new StoreParameter("FromStatus", "App.cboFromStatus.getValue()", ParameterMode.Raw));
            ps.Add(new StoreParameter("ToStatus", "App.cboToStatus.getValue()", ParameterMode.Raw));
            ps.Add(new StoreParameter("LangID", Current.LangID.ToString(), ParameterMode.Value));
    
    
        })      
        //.Listeners(p=>p.Load.Fn="checkPT" )
  )

@(Html.X().Store().ID("storeGridDetailFromSls").AutoLoad(false)  
        .Model(Util.GenerateModel(typeof(AR21600_ListChooseDetailFromSls_Result), "ObjectModelFromSls", ""))
        .Proxy(
            X.AjaxProxy()
            .Url(Url.Action("GetDataGridDetailFromSls", "AR21600"))
            .ActionMethods(action =>
            {
                action.Read = HttpMethod.POST;
            })
            .Reader(X.JsonReader().Root("data").TotalProperty("totaldata"))
        )
        .Parameters(ps =>
        {
            ps.Add(new StoreParameter("Object1", "App.cboObject.getValue()", ParameterMode.Raw));
            ps.Add(new StoreParameter("Task", "App.cboTask.getValue()", ParameterMode.Raw));
            ps.Add(new StoreParameter("FromBranch", "App.cboFromBranch.getValue()", ParameterMode.Raw));
            ps.Add(new StoreParameter("ToBranch", "App.cboToBranch.getValue()", ParameterMode.Raw));
            ps.Add(new StoreParameter("FromStatus", "App.cboFromStatus.getValue()", ParameterMode.Raw));
            ps.Add(new StoreParameter("ToStatus", "App.cboToStatus.getValue()", ParameterMode.Raw));
            ps.Add(new StoreParameter("LangID", Current.LangID.ToString(), ParameterMode.Value));
    
    
        })      
        //.Listeners(p=>p.Load.Fn="checkPT" )
  )

 @(Html.X().Store().ID("storeGridDetailToCust").AutoLoad(false)  
        .Model(Util.GenerateModel(typeof(AR21600_ListChooseDetailToCust_Result), "ObjectModelToCust", ""))
        .Proxy(
            X.AjaxProxy()
            .Url(Url.Action("GetDataGridDetailToCust", "AR21600"))
            .ActionMethods(action =>
            {
                action.Read = HttpMethod.POST;
            })
            .Reader(X.JsonReader().Root("data").TotalProperty("totaldata"))
        )
        .Parameters(ps =>
        {
            ps.Add(new StoreParameter("Object1", "App.cboObject.getValue()", ParameterMode.Raw));
            ps.Add(new StoreParameter("Task", "App.cboTask.getValue()", ParameterMode.Raw));
            ps.Add(new StoreParameter("FromBranch", "App.cboFromBranch.getValue()", ParameterMode.Raw));
            ps.Add(new StoreParameter("ToBranch", "App.cboToBranch.getValue()", ParameterMode.Raw));
            ps.Add(new StoreParameter("FromStatus", "App.cboFromStatus.getValue()", ParameterMode.Raw));
            ps.Add(new StoreParameter("ToStatus", "App.cboToStatus.getValue()", ParameterMode.Raw));
            ps.Add(new StoreParameter("LangID", Current.LangID.ToString(), ParameterMode.Value));
    
    
        })      
        //.Listeners(p=>p.Load.Fn="checkPT" )
  )


@(Html.X().Store().ID("storeGridDetailToSls").AutoLoad(false)  
        .Model(Util.GenerateModel(typeof(AR21600_ListChooseDetailToSls_Result), "ObjectModelToSls", ""))
        .Proxy(
            X.AjaxProxy()
            .Url(Url.Action("GetDataGridDetailToSls", "AR21600"))
            .ActionMethods(action =>
            {
                action.Read = HttpMethod.POST;
            })
            .Reader(X.JsonReader().Root("data").TotalProperty("totaldata"))
        )
        .Parameters(ps =>
        {
            ps.Add(new StoreParameter("Object1", "App.cboObject.getValue()", ParameterMode.Raw));
            ps.Add(new StoreParameter("Task", "App.cboTask.getValue()", ParameterMode.Raw));
            ps.Add(new StoreParameter("FromBranch", "App.cboFromBranch.getValue()", ParameterMode.Raw));
            ps.Add(new StoreParameter("ToBranch", "App.cboToBranch.getValue()", ParameterMode.Raw));
            ps.Add(new StoreParameter("FromStatus", "App.cboFromStatus.getValue()", ParameterMode.Raw));
            ps.Add(new StoreParameter("ToStatus", "App.cboToStatus.getValue()", ParameterMode.Raw));
            ps.Add(new StoreParameter("LangID", Current.LangID.ToString(), ParameterMode.Value));
    
    
        })      
        //.Listeners(p=>p.Load.Fn="checkPT" )
  )


     @{ Html.RenderAction("Body"); }
    </body>
</html>
 