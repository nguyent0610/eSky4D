@using Ext.Net;
@using Ext.Net.MVC;
@using HQ.eSkyFramework;
@using HQ.eSkyFramework.HQControl;
@using AR20400;
@{
    Layout = null;
    var X = Html.X();
    var HQ = Html.HQ();
}

@(X.Viewport()
.Layout(LayoutType.Fit)
.Items(
    X.FormPanel()
    .ID("frmMain")
    .TrackResetOnLoad(true)
    .KeyMap(Util.SetupKeyMap())
    .TopBar(Util.SetupToolbar("Print", true, ""))
    .Layout(LayoutType.Border)
    .FieldDefaults(act => { act.LabelAlign = LabelAlign.Right; act.LabelWidth = 150; })
    .Listeners(l =>
    {
        //l.BoxReady.Handler = "App.tabDetail.setActiveTab(App.pnlLTT);";
        l.BoxReady.Handler = "firstLoad()";
        l.FieldChange.Fn = "frmChange";
    })
    .Items(
        ////Thiet ke giao dien o day
        X.Panel().Region(Region.West).ID("pnlWest")
        .Layout(LayoutType.Border).Flex(1).Split(true).CollapseMode(CollapseMode.Mini)
        .Items(
            X.TreePanel().ID("treeCust")
            .Width(300).Region(Region.Center).Flex(1).AutoScroll(true)
            .Title(Util.GetLang("Tree"))
            .UseArrows(true)
            .Border(false)
            .Animate(true)
            .SelectionModel(X.TreeSelectionModel().ID("slmtreeCust").Mode(SelectionMode.Multi))
            .Listeners(lst =>
            {
                //lst.ItemClick.Fn = "nodeSelected_Change";
                lst.Select.Fn = "nodeSelected_Change";
                lst.BeforeItemExpand.Handler = "this.el.mask('Loading...', 'x-mask-loading'); Ext.suspendLayouts();";
                lst.AfterItemExpand.Handler = "Ext.resumeLayouts(true); this.el.unmask();";
            })
            .BottomBar(
                X.Toolbar()
                .Items(
                    X.ToolbarFill()
                    
                    , HQ.Button().ID("btnExpand")
                    .HQLangCode("Expand")
                    .Icon(Icon.BulletTogglePlus)
                    .Handler("btnExpand_click")

                    , X.ToolbarSpacer()
                    , X.ToolbarSeparator()
                    , X.ToolbarSpacer()

                    , HQ.Button().ID("btnCollapse")
                    .HQLangCode("Collapse")
                    .Icon(Icon.BulletToggleMinus)
                    .Handler("btnCollapse_click")

                    , X.ToolbarFill()
                )
            )
        ).Listeners(lss =>
        {
            lss.Render.Handler = "HQ.common.control_render(this,'header')";
        })
        
        , X.Panel().Region(Region.Center)
        .Layout(LayoutType.Border).Flex(4).Split(true)
        .Items(
            X.Panel().ID("pnlHeader")      ////////////////Header//////////////// 
            .Region(Region.North)
            .Layout(LayoutType.VBox)
            .AutoScroll(true)
            .Items(
                X.Container().Layout(LayoutType.HBox)
                    .Items(
                        HQ.Combo().ID("cboCustId").Name("cboCustId").HQLangCode("CUSTID").Tag("X")
                            .HQProcedure("AR20400_pcCustomer").HQColumnShow("CustId,CustName,Addr1,Addr2")
                            .DisplayField("CustId").ValueField("CustId").MaxLength(50).EnforceMaxLength(true)
                            .Width(300).HQHeightWidth(400, 300).MarginSpec("5 0 0 0").HQAutoLoad(false)
                            .ForceSelection(true).HQisPaging(true).PageSize(20)
                            .HQParam(new StoreParameterCollection() 
                            {
                                new StoreParameter() { Name = "@BranchID", Value = "App.cboCpnyID.getValue()", Mode = ParameterMode.Raw },
                                new StoreParameter() { Name = "@UserID", Value = "HQ.userName", Mode = ParameterMode.Raw }
                            })
                            .LoadData()
                            .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                            .Listeners(lst =>
                            {
                                lst.Change.Fn = "cboCustId_Change";
                                lst.Select.Fn = "cboCustId_Select";
                                lst.TriggerClick.Fn = "cboCustId_TriggerClick";
                                lst.Focus.Fn = "cboCustId_Focus";
                            })
                            
                        , HQ.Combo().ID("cboCpnyID").Name("cboCpnyID").HQLangCode("BRANCHID").Tag("X")
                            .HQProcedure("AR20400_pcCpnyID").HQColumnShow("CpnyID,CpnyName")
                            .DisplayField("CpnyID").ValueField("CpnyID")
                            .Width(300).HQHeightWidth(400, 300).MarginSpec("5 0 0 0")
                            .AllowBlank(false).ForceSelection(true)
                            .HQParam(new StoreParameterCollection() 
                            {
                                new StoreParameter() { Name = "@UserID", Value = "HQ.userName", Mode = ParameterMode.Raw }
                            })
                            .LoadData()
                            .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                            .Listeners(lst =>
                            {
                                lst.Change.Fn = "cboCpnyID_Change";
                                lst.Select.Fn = "cboCpnyID_Select";
                                lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                            })
                            
                        , HQ.Combo().ID("cboStatus").ReadOnly(true).Tag("X").DataIndex("Status")
                            .Name("cboStatus").HQLangCode("Status").HQProcedure("AR20400_pcStatus")
                            .HQColumnShow("Code,Descr").DisplayField("Descr").ValueField("Code").HQValue("H", false)
                            .Width(300).HQHeightWidth(400, 300).MarginSpec("5 0 0 0")
                            .ForceSelection(true)
                            .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                            .HQParam(new StoreParameterCollection() 
                            {
                                new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw }   
                            })
                            .LoadData()
                            .Listeners(lst =>
                            {
                                lst.Change.Handler = "App.cboHandle.store.reload();";
                                lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                            })


                    )//Header Row 1 

                , X.Container().Layout(LayoutType.HBox)
                    .Items(
                        HQ.Combo().ID("cboClassId").Name("cboClassId").HQLangCode("CLASSID").DataIndex("ClassId")
                            .HQProcedure("AR20400_pcCustClass_All").HQColumnShow("ClassID,Descr")
                            .DisplayField("Descr").ValueField("ClassID")
                            .Width(300).HQHeightWidth(400, 300).MarginSpec("5 0 5 0")
                            .AllowBlank(false)
                            .LoadData()
                            .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                            .Listeners(lst =>
                            {
                                lst.Change.Fn = "cboClassId_Change";
                                lst.Select.Fn = "cboClassId_Select";
                                lst.TriggerClick.Fn = "cboClassId_TriggerClick";
                                lst.Focus.Handler = "this.forceSelection = true;";  
                            })

                        , HQ.Combo().ID("cboCustType").Name("cboCustType").HQLangCode("CUSTTYPE").DataIndex("CustType")
                            .HQProcedure("AR20400_pcCustType").HQColumnShow("Code,Descr")
                            .DisplayField("Descr").ValueField("Code")
                            .Width(300).HQHeightWidth(400, 300).MarginSpec("5 0 5 0")
                            .AllowBlank(false)
                            .HQParam(new StoreParameterCollection() 
                            {
                                new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw }
                            })
                            .LoadData()
                            .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                            .Listeners(lst =>
                            {
                                lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                                lst.Focus.Handler = "this.forceSelection = true;";  
                            })

                        , HQ.Combo().ID("cboHandle")
                            .Name("cboHandle").HQLangCode("Handle").HQProcedure("AR20400_pcHandle").Tag("X")
                            .HQColumnShow("Code,Descr").DisplayField("Descr").ValueField("ToStatus")
                            .Width(300).HQHeightWidth(400, 300).MarginSpec("5 0 0 0")
                            .ForceSelection(true).HQAutoLoad(false)
                            .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                            .HQParam(new StoreParameterCollection()
                            {
                                new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw },
                                new StoreParameter() { Name = "@Status", Value = "App.cboStatus.getValue()", Mode = ParameterMode.Raw },
                                new StoreParameter() { Name = "@UserID", Value = "HQ.userName", Mode = ParameterMode.Raw }
                            })
                            .LoadData()
                            .Listeners(lst =>
                            {
                                lst.Change.Fn = "cboHandle_Change";
                                lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                            })

                    )//Header Row 2
            )
            .Listeners(lss =>
            {
                lss.Render.Handler = "HQ.common.control_render(this,'header')";
            })

            , X.TabPanel().ID("tabDetail")
            .Region(Region.Center)
            .Listeners(p=>p.TabChange.Fn="tabDetail_Change")
            .Items(

                X.Panel().ID("pnlInfo")         //////////////Tab thong tin khach hang//////////////
                .Title(Util.GetLang("CUSTOMERINFO"))
                .Layout(LayoutType.VBox).AutoScroll(true)
                .Items(
                    X.Container().Layout(LayoutType.VBox).MarginSpec("0 0 5 0")
                    .Items(
                        HQ.TextBox().ID("txtCustName").Name("txtCustName").HQLangCode("CUSTNAME").DataIndex("CustName")
                            .AllowBlank(false).EnforceMaxLength(true).MaxLength(200)
                            .Width(600).MarginSpec("5 0 0 0")
                            .Listeners(p=>p.Change.Handler ="App.lblName.setValue(this.getValue());")
                            
                        , HQ.TextBox().ID("txtInActive").Name("txtInActive").HQLangCode("InActiveAR20400").DataIndex("InActive")
                            .AllowBlank(true).EnforceMaxLength(true).MaxLength(100)
                            .Width(600).MarginSpec("5 0 0 0")
                    )

                    , X.Container().Layout(LayoutType.HBox).MarginSpec("0 0 5 0")
                    .Items(
                        X.FieldSet().Title(Util.GetLang("DKTG")).Layout(LayoutType.VBox).MarginSpec("0 10 0 20")
                            .Items(
                                HQ.Combo().ID("cboPriceClassID").Name("cboPriceClassID").HQLangCode("PRICECLASSID").DataIndex("PriceClassID")
                                    .HQProcedure("AR20400_pcPriceClass").HQColumnShow("PriceClassID,Descr")
                                    .DisplayField("PriceClassID").ValueField("PriceClassID")
                                    .Width(260).LabelWidth(140).HQHeightWidth(400, 300).MarginSpec("5 0 0 0")
                                    .LoadData()
                                    .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                                    .Listeners(lst =>
                                    {
                                        lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                                        lst.Focus.Handler = "this.forceSelection = true;";  
                                    })

                                , HQ.Combo().ID("cboTerms").Name("cboTerms").HQLangCode("TERM").DataIndex("Terms")
                                    .HQProcedure("AR20400_pcTerms_Cust").HQColumnShow("TermsID,Descr")
                                    .DisplayField("TermsID").ValueField("TermsID")
                                    .Width(260).LabelWidth(140).HQHeightWidth(400, 300).MarginSpec("5 0 0 0")
                                    .AllowBlank(false)
                                    .LoadData()
                                    .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                                    .Listeners(lst =>
                                    {
                                        lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                                        lst.Focus.Handler = "this.forceSelection = true;";  
                                    })

                                , HQ.NumberField().ID("txtTradeDisc").Name("txtTradeDisc").HQLangCode("TRADEDISC").DataIndex("TradeDisc")
                                    .Width(260).LabelWidth(140).MarginSpec("5 0 5 0")
                                    .DecimalPrecision(0).MinValue(0).MaxValue(2147483647)

                            )

                        , X.FieldSet().Title(Util.GetLang("CDHM")).Layout(LayoutType.VBox)
                            .Items(
                                HQ.Combo().ID("cboCrRule").Name("cboCrRule").HQLangCode("CRRULE").DataIndex("CrRule")
                                    .HQProcedure("AR20400_pcCrRule").HQColumnShow("Code,Descr")
                                    .DisplayField("Descr").ValueField("Code")
                                    .Width(320).LabelWidth(150).HQHeightWidth(400, 300).MarginSpec("5 0 0 0")
                                    .AllowBlank(false)
                                    .HQParam(new StoreParameterCollection() 
                                    {
                                        new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw }
                                    })
                                    .LoadData()
                                    .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                                    .Listeners(lst =>
                                    {
                                        lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                                        lst.Focus.Handler = "this.forceSelection = true;";  
                                    })

                                , HQ.NumberField().ID("txtCrLmt").Name("txtCrLmt").HQLangCode("LIMIT").DataIndex("CrLmt")
                                    .Width(320).LabelWidth(150).MarginSpec("5 0 0 0")
                                    .DecimalPrecision(0).MinValue(0)

                                , HQ.NumberField().ID("txtGracePer").Name("txtGracePer").HQLangCode("GRACEPERIOD").DataIndex("GracePer")
                                    .Width(320).LabelWidth(150).MarginSpec("5 0 5 0")
                                    .DecimalPrecision(0).MinValue(0).MaxValue(32767)

                            )
                    )

                    , X.Container().Layout(LayoutType.HBox).MarginSpec("0 0 5 0")
                    .Items(
                        X.FieldSet().Title(Util.GetLang("CUSTCLASSIFY")).Layout(LayoutType.VBox).MarginSpec("0 10 0 20")
                            .Items(
                                HQ.Combo().ID("cboTerritory").Name("cboTerritory").HQLangCode("TERRITORY").DataIndex("Territory")
                                    .HQProcedure("AR20400_pcTerritory").HQColumnShow("Territory,Descr")
                                    .DisplayField("Territory").ValueField("Territory").AllowBlank(false)
                                    .Width(260).LabelWidth(140).HQHeightWidth(400, 300).MarginSpec("5 0 0 0")
                                    .LoadData()
                                    .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                                    .Listeners(lst =>
                                    {
                                        lst.TriggerClick.Handler = "if (index == 0) { this.hasFocus; this.clearValue();}";
                                        lst.Change.Fn = "cboTerritory_Change_Select";
                                        lst.Select.Fn = "cboTerritory_Change_Select";
                                        lst.Focus.Handler = "this.forceSelection = true;";  
                                    })

                                , HQ.Combo().ID("cboArea").Name("cboArea").HQLangCode("AREA").DataIndex("Area")
                                    .HQProcedure("AR20400_pcArea").HQColumnShow("Area,Descr")
                                    .DisplayField("Area").ValueField("Area")
                                    .Width(260).LabelWidth(140).HQHeightWidth(400, 300).MarginSpec("5 0 0 0")
                                    .LoadData()
                                    .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                                    .Listeners(lst =>
                                    {
                                        lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                                        lst.Focus.Handler = "this.forceSelection = true;";  
                                    })

                                , HQ.Combo().ID("cboLocation").Name("cboLocation").HQLangCode("LOCATION").DataIndex("Location")
                                    .HQProcedure("AR20400_pcLocation").HQColumnShow("Location,Descr")
                                    .DisplayField("Location").ValueField("Location")
                                    .Width(260).LabelWidth(140).HQHeightWidth(400, 300).MarginSpec("5 0 0 0")
                                    .LoadData()
                                    .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                                    .Listeners(lst =>
                                    {
                                        lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                                        lst.Focus.Handler = "this.forceSelection = true;";  
                                    })

                                , HQ.Combo().ID("cboChannel").Name("cboChannel").HQLangCode("SALESCHNL").DataIndex("Channel")
                                    .HQProcedure("AR20400_pcSalesChannel").HQColumnShow("Code,Descr")
                                    .DisplayField("Code").ValueField("Code")
                                    .Width(260).LabelWidth(140).HQHeightWidth(400, 300).MarginSpec("5 0 0 0")
                                    .LoadData()
                                    .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                                    .Listeners(lst =>
                                    {
                                        lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                                        lst.Focus.Handler = "this.forceSelection = true;";  
                                    })

                                , HQ.Combo().ID("cboShopType").Name("cboShopType").HQLangCode("SHOPTYPE").DataIndex("ShopType")
                                    .HQProcedure("AR20400_pcShopType").HQColumnShow("Code,Descr")
                                    .DisplayField("Code").ValueField("Code")
                                    .Width(260).LabelWidth(140).HQHeightWidth(400, 300).MarginSpec("5 0 0 0")
                                    .LoadData()
                                    .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                                    .Listeners(lst =>
                                    {
                                        lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                                        lst.Focus.Handler = "this.forceSelection = true;";  
                                    })

                                , HQ.Combo().ID("cboSellingProd").Name("cboSellingProd").HQLangCode("SELLINGPROD").DataIndex("SellProduct")
                                    .HQProcedure("AR20400_pcSellingProducts").HQColumnShow("SellingProd,Descr")
                                    .DisplayField("SellingProd").ValueField("SellingProd")
                                    .Width(260).LabelWidth(140).HQHeightWidth(400, 300).MarginSpec("5 0 0 0")
                                    .LoadData()
                                    .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                                    .Listeners(lst =>
                                    {
                                        lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                                        lst.Focus.Handler = "this.forceSelection = true;";  
                                    })

                                , X.Container().Layout(LayoutType.HBox)
                                    .Items(
                                        HQ.Checkbox().ID("chkGiftExch").BoxLabel(Util.GetLang("GIFTEXCHANGE")).DataIndex("GiftExchange")
                                            .MarginSpec("5 0 0 0").Width(130)

                                        , HQ.Checkbox().ID("chkHasPG").BoxLabel(Util.GetLang("HASPG")).DataIndex("HasPG")
                                            .MarginSpec("5 0 0 0").Width(130)

                                    )
                            )

                        , X.FieldSet().Title(Util.GetLang("CDK")).Layout(LayoutType.VBox)
                            .Items(
                                HQ.Combo().ID("cboSlsperId").Name("cboSlsperId").HQLangCode("SALESPERSON").DataIndex("SlsperId")
                                    .HQProcedure("AR20400_pcSalesPerson").HQColumnShow("Slsperid,Name")
                                    .DisplayField("Slsperid").ValueField("Slsperid")
                                    .Width(320).LabelWidth(150).HQHeightWidth(400, 300).MarginSpec("5 0 0 0")
                                    .HQParam(new StoreParameterCollection() 
                                    {
                                        new StoreParameter() { Name = "@BranchID", Value = "App.cboCpnyID.getValue()", Mode = ParameterMode.Raw }
                                    })
                                    .LoadData()
                                    .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                                    .Listeners(lst =>
                                    {
                                        lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                                        lst.Focus.Handler = "this.forceSelection = true;";  
                                    })

                                , HQ.Combo().ID("cboDeliveryID").Name("cboDeliveryID").HQLangCode("DELIVERYMAN").DataIndex("DeliveryID")
                                    .HQProcedure("AR20400_pcDeliveryPerson").HQColumnShow("Slsperid,Name")
                                    .DisplayField("Slsperid").ValueField("Slsperid")
                                    .Width(320).LabelWidth(150).HQHeightWidth(400, 300).MarginSpec("5 0 0 0")
                                    .HQParam(new StoreParameterCollection() 
                                    {
                                        new StoreParameter() { Name = "@BranchID", Value = "App.cboCpnyID.getValue()", Mode = ParameterMode.Raw }
                                    })
                                    .LoadData()
                                    .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                                    .Listeners(lst =>
                                    {
                                        lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                                        lst.Focus.Handler = "this.forceSelection = true;";  
                                    })

                                , HQ.Combo().ID("cboSupID").Name("cboSupID").HQLangCode("SALESSUP").DataIndex("SupID")
                                    .HQProcedure("AR20400_pcSalesSup").HQColumnShow("Slsperid,Name")
                                    .DisplayField("Slsperid").ValueField("Slsperid")
                                    .Width(320).LabelWidth(150).HQHeightWidth(400, 300).MarginSpec("5 0 0 0")
                                    .HQParam(new StoreParameterCollection() 
                                    {
                                        new StoreParameter() { Name = "@BranchID", Value = "App.cboCpnyID.getValue()", Mode = ParameterMode.Raw }
                                    })
                                    .LoadData()
                                    .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                                    .Listeners(lst =>
                                    {
                                        lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                                        lst.Focus.Handler = "this.forceSelection = true;";  
                                    })

                                , HQ.Combo().ID("cboSiteId").Name("cboSiteId").HQLangCode("SITEID").DataIndex("SiteId")
                                    .HQProcedure("AR20400_pcSiteAll").HQColumnShow("SiteID,Name")
                                    .DisplayField("SiteID").ValueField("SiteID")
                                    .Width(320).LabelWidth(150).HQHeightWidth(400, 300).MarginSpec("5 0 0 0")
                                    .HQParam(new StoreParameterCollection() 
                                    {
                                        new StoreParameter() { Name = "@BranchID", Value = "App.cboCpnyID.getValue()", Mode = ParameterMode.Raw }
                                    })
                                    .LoadData()
                                    .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                                    .Listeners(lst =>
                                    {
                                        lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                                        lst.Focus.Handler = "this.forceSelection = true;";  
                                    })

                                , HQ.Combo().ID("cboDfltShipToId").Name("cboDfltShipToId").HQLangCode("SHIPTOID1").DataIndex("DfltShipToId")
                                    .HQProcedure("AR20400_pcShipToId").HQColumnShow("ShipToId,Descr,SOName")
                                    .DisplayField("ShipToId").ValueField("ShipToId")
                                    .Width(320).LabelWidth(150).HQHeightWidth(400, 300).MarginSpec("5 0 0 0")
                                    .HQParam(new StoreParameterCollection() 
                                    {
                                        new StoreParameter() { Name = "@CustId", Value = "App.cboCustId.getValue()", Mode = ParameterMode.Raw }
                                    })
                                    .LoadData()
                                    .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                                    .Listeners(lst =>
                                    {
                                        lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                                        lst.Focus.Handler = "this.forceSelection = true;";  
                                    })

                                , HQ.NumberField().ID("txtCustFillPriority").Name("txtCustFillPriority").HQLangCode("CUSTFILLPRIORITY").DataIndex("CustFillPriority")
                                    .Width(320).LabelWidth(150).MarginSpec("5 0 0 0")
                                    .DecimalPrecision(0).MinValue(0).MaxValue(32767)

                                , HQ.Combo().ID("cboLTTContract").Name("cboLTTContract").HQLangCode("LTTCONNBR").DataIndex("LTTContractNbr")
                                    .HQProcedure("AR20400_pcLTTContractActive").HQColumnShow("LTTConNbr,FromDate,ToDate")
                                    .DisplayField("LTTConNbr").ValueField("LTTConNbr")
                                    .Width(320).LabelWidth(150).HQHeightWidth(400, 300).MarginSpec("5 0 0 0")
                                    .HQParam(new StoreParameterCollection() 
                                    {
                                        new StoreParameter() { Name = "@CustId", Value = "App.cboCustId.getValue()", Mode = ParameterMode.Raw }
                                    })
                                    .LoadData()
                                    .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                                    .Listeners(lst =>
                                    {
                                        lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                                        lst.Focus.Handler = "this.forceSelection = true;";  
                                    })

                                , HQ.Combo().ID("cboDfltSalesRouteID").Name("cboDfltSalesRouteID").HQLangCode("SALESROUTE").DataIndex("DflSaleRouteID")
                                    .HQProcedure("AR20400_pcSalesRouteID").HQColumnShow("SalesRoute,Descr")
                                    .DisplayField("SalesRoute").ValueField("SalesRoute")
                                    .Width(320).LabelWidth(150).HQHeightWidth(400, 300).MarginSpec("5 0 0 0")
                                    .HQParam(new StoreParameterCollection() 
                                    {
                                        new StoreParameter() { Name = "@BranchID", Value = "App.cboCpnyID.getValue()", Mode = ParameterMode.Raw }
                                    })
                                    .LoadData()
                                    .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                                    .Listeners(lst =>
                                    {
                                        lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                                        lst.Focus.Handler = "this.forceSelection = true;";  
                                    })

                                , HQ.NumberField().ID("txtEmpNum").Name("txtEmpNum").HQLangCode("EMPNUM").DataIndex("EmpNum")
                                    .Width(320).LabelWidth(150).MarginSpec("5 0 0 0")
                                    .DecimalPrecision(0).MinValue(0).MaxValue(2147483647)

                                , HQ.DateField().ID("calExpiryDate").HQLangCode("CUSTEXPD").DataIndex("ExpiryDate")
                                    .AllowBlank(false)
                                    .Width(320).LabelWidth(150).MarginSpec("5 0 0 0")

                                , HQ.DateField().ID("calEstablishDate").HQLangCode("ESTABLISHDATE").DataIndex("EstablishDate")
                                    .AllowBlank(false)
                                    .Width(320).LabelWidth(150).MarginSpec("5 0 0 0")
                                    
                                , HQ.DateField().ID("calBirthday").HQLangCode("BIRTHDAY").DataIndex("Birthdate")
                                    .AllowBlank(false)
                                    .Width(320).LabelWidth(150).MarginSpec("5 0 5 0")
                            )
                    )
                )//Tab thong tin khach hang
                .Listeners(lss =>
                {
                    lss.Render.Handler = "HQ.common.control_render(this,'header')";
                })

                , X.Panel().ID("pnlAddr")         //////////////Tab dia chi//////////////
                .Title(Util.GetLang("ADDRESS"))
                .Layout(LayoutType.HBox).AutoScroll(true)
                .Items(
                    X.Container().Layout(LayoutType.VBox).MarginSpec("20 0 5 20")
                        .Items(
                            HQ.Label().HQLangCode("CUSTNAME").MarginSpec("5 0 0 0").StyleSpec("text-align:right;").Width(120)
                            , HQ.Label().HQLangCode("ATTN").MarginSpec("10 0 0 0").StyleSpec("text-align:right;").Width(120)
                            , HQ.Label().HQLangCode("SALUT").MarginSpec("11 0 0 0").StyleSpec("text-align:right;").Width(120)
                            , HQ.Label().HQLangCode("ADDR1").MarginSpec("11 0 0 0").StyleSpec("text-align:right;").Width(120)
                            , HQ.Label().HQLangCode("ADDR2").MarginSpec("11 0 0 0").StyleSpec("text-align:right;").Width(120)
                            , HQ.Label().HQLangCode("COUNTRY").MarginSpec("11 0 0 0").StyleSpec("text-align:right;").Width(120)
                            , HQ.Label().HQLangCode("STATE").MarginSpec("11 0 0 0").StyleSpec("text-align:right;").Width(120)
                            , HQ.Label().HQLangCode("CITY").MarginSpec("11 0 0 0").StyleSpec("text-align:right;").Width(120)
                            , HQ.Label().HQLangCode("DISTRICT").MarginSpec("11 0 0 0").StyleSpec("text-align:right;").Width(120)
                            , HQ.Label().HQLangCode("ZIP").MarginSpec("11 0 0 0").StyleSpec("text-align:right;").Width(120)
                            , HQ.Label().HQLangCode("PHONE").MarginSpec("11 0 0 0").StyleSpec("text-align:right;").Width(120)
                            , HQ.Label().HQLangCode("FAX").MarginSpec("11 0 0 0").StyleSpec("text-align:right;").Width(120)
                            , HQ.Label().HQLangCode("EMAILADDR").MarginSpec("11 0 0 0").StyleSpec("text-align:right;").Width(120)
                        )

                    , X.FieldSet().Title(Util.GetLang("MAINADDRESS")).Layout(LayoutType.VBox).MarginSpec("0 10 0 10")
                        .Items(
                            HQ.TextBox().ID("lblName").Name("lblName").HQLangCode("CUSTNAME")
                                .EnforceMaxLength(true).MaxLength(200).ReadOnly(true).Tag("X").AllowBlank(false).HideLabel(true)
                                .Width(200).MarginSpec("5 0 0 0")

                            , HQ.TextBox().ID("txtAttn").Name("txtAttn").DataIndex("Attn").HQLangCode("ATTN")
                                .EnforceMaxLength(true).MaxLength(200).AllowBlank(false).HideLabel(true)
                                .Width(200).MarginSpec("5 0 0 0")

                            , HQ.TextBox().ID("txtSalut").Name("txtSalut").DataIndex("Salut")
                                .EnforceMaxLength(true).MaxLength(50)
                                .Width(200).MarginSpec("5 0 0 0")

                            , HQ.TextBox().ID("txtAddr1").Name("txtAddr1").DataIndex("Addr1").HQLangCode("ADDR1")
                                .EnforceMaxLength(true).MaxLength(200).AllowBlank(false).HideLabel(true)
                                .Width(200).MarginSpec("5 0 0 0")

                            , HQ.TextBox().ID("txtAddr2").Name("txtAddr2").DataIndex("Addr2")
                                .EnforceMaxLength(true).MaxLength(200)
                                .Width(200).MarginSpec("5 0 0 0")

                            , HQ.Combo().ID("cboCountry").Name("cboCountry").DataIndex("Country").HQLangCode("COUNTRY").HideLabel(true)
                                .HQProcedure("AR20400_pcCountryID").HQColumnShow("CountryID,Descr")
                                .DisplayField("CountryID").ValueField("CountryID").AllowBlank(false)
                                .Width(200).HQHeightWidth(400, 300).MarginSpec("5 0 0 0")
                                .LoadData()
                                .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                                .Listeners(lst =>
                                {
                                    lst.Select.Fn = "filterComboSate";
                                    lst.Change.Fn = "filterComboSate";
                                    lst.Focus.Handler = "this.forceSelection = true;";
                                    lst.TriggerClick.Handler = "if (index == 0) { this.hasFocus = true; this.clearValue(); }";
                                    
                                })

                            , HQ.Combo().ID("cboState").Name("cboState").DataIndex("State").HQLangCode("STATE").HideLabel(true)
                                .HQProcedure("AR20400_pcStateByCountry").HQColumnShow("State,Descr")
                                .DisplayField("State").ValueField("State").AllowBlank(false)
                                .Width(200).HQHeightWidth(400, 300).MarginSpec("5 0 0 0")
                                .HQParam(new StoreParameterCollection() 
                                {
                                    new StoreParameter() { Name = "@Country", Value = "App.cboCountry.getValue()", Mode = ParameterMode.Raw }
                                })
                                .LoadData()
                                .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                                .Listeners(lst =>
                                {
                                    lst.Select.Fn = "filterComboCityDistrict";
                                    lst.Change.Fn = "filterComboCityDistrict";
                                    lst.Focus.Handler = "this.forceSelection = true;";
                                    lst.TriggerClick.Handler = "if (index == 0) { this.hasFocus = true; this.clearValue();}";
                                    //lst.Focus.Handler = "this.forceSelection = true;";  
                                })

                            , HQ.Combo().ID("cboCity").Name("cboCity").DataIndex("City")
                                .HQProcedure("AR20400_pcCityByCountryState").HQColumnShow("City,Name")
                                .DisplayField("City").ValueField("City")
                                .Width(200).HQHeightWidth(400, 300).MarginSpec("5 0 0 0")
                                .HQParam(new StoreParameterCollection() 
                                {
                                    new StoreParameter() { Name = "@Country", Value = "App.cboCountry.getValue()", Mode = ParameterMode.Raw },
                                    new StoreParameter() { Name = "@State", Value = "App.cboState.getValue()", Mode = ParameterMode.Raw }
                                })
                                .LoadData()
                                .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                                .Listeners(lst =>
                                {
                                    lst.Focus.Handler = "this.forceSelection = true;";
                                    lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                                    //lst.Focus.Handler = "this.forceSelection = true;";  
                                })

                            , HQ.Combo().ID("cboDistrict").Name("cboDistrict").DataIndex("District").HQLangCode("DISTRICT").HideLabel(true)
                                .HQProcedure("AR20400_pcDistrictByCountryState").HQColumnShow("District,Name")
                                .DisplayField("District").ValueField("District").AllowBlank(false)
                                .Width(200).HQHeightWidth(400, 300).MarginSpec("5 0 0 0")
                                .HQParam(new StoreParameterCollection() 
                                {
                                    new StoreParameter() { Name = "@Country", Value = "App.cboCountry.getValue()", Mode = ParameterMode.Raw },
                                    new StoreParameter() { Name = "@State", Value = "App.cboState.getValue()", Mode = ParameterMode.Raw }
                                })
                                .LoadData()
                                .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                                .Listeners(lst =>
                                {
                                    lst.Focus.Handler = "this.forceSelection = true;";
                                    lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                                    //lst.Focus.Handler = "this.forceSelection = true;";  
                                })

                            , HQ.TextBox().ID("txtZip").Name("txtZip").DataIndex("Zip")
                                .EnforceMaxLength(true).MaxLength(10)
                                .Width(200).MarginSpec("5 0 0 0")

                            , HQ.TextBox().ID("txtPhone").Name("txtPhone").DataIndex("Phone")
                                .EnforceMaxLength(true).MaxLength(30)
                                .Width(200).MarginSpec("5 0 0 0")

                            , HQ.TextBox().ID("txtFax").Name("txtFax").DataIndex("Fax")
                                .EnforceMaxLength(true).MaxLength(30)
                                .Width(200).MarginSpec("5 0 0 0")

                            , HQ.TextBox().ID("txtEMailAddr").Name("txtEMailAddr").DataIndex("EMailAddr")
                                .EnforceMaxLength(true).MaxLength(30)
                                .Width(200).MarginSpec("5 0 0 0")

                            , HQ.Button().ID("btnCopytoDiffDB").HQLangCode("COPYTOBILL")
                                .Width(200).MarginSpec("5 0 5 0")
                                .Listeners(lst =>
                                {
                                    lst.Click.Fn = "btnCopytoDiffDB_Click"; 
                                })

                        )

                    , X.FieldSet().Title(Util.GetLang("ADDRBILL")).Layout(LayoutType.VBox).MarginSpec("0 0 0 0")
                        .Items(
                            HQ.TextBox().ID("txtBillName").Name("txtBillName").DataIndex("BillName").HQLangCode("CUSTNAME")
                                .EnforceMaxLength(true).MaxLength(200).AllowBlank(false).HideLabel(true)
                                .Width(200).MarginSpec("5 0 0 0")

                            , HQ.TextBox().ID("txtBillAttn").Name("txtBillAttn").DataIndex("BillAttn").HQLangCode("ATTN")
                                .EnforceMaxLength(true).MaxLength(200).AllowBlank(false).HideLabel(true)
                                .Width(200).MarginSpec("5 0 0 0")

                            , HQ.TextBox().ID("txtBillSalut").Name("txtBillSalut").DataIndex("BillSalut")
                                .EnforceMaxLength(true).MaxLength(50)
                                .Width(200).MarginSpec("5 0 0 0")

                            , HQ.TextBox().ID("txtBillAddr1").Name("txtBillAddr1").DataIndex("BillAddr1").HQLangCode("ADDR1")
                                .EnforceMaxLength(true).MaxLength(200).AllowBlank(false).HideLabel(true)
                                .Width(200).MarginSpec("5 0 0 0")

                            , HQ.TextBox().ID("txtBillAddr2").Name("txtBillAddr2").DataIndex("BillAddr2")
                                .EnforceMaxLength(true).MaxLength(200)
                                .Width(200).MarginSpec("5 0 0 0")

                            , HQ.Combo().ID("cboBillCountry").Name("cboBillCountry").DataIndex("BillCountry")
                                .HQProcedure("AR20400_pcCountryID").HQColumnShow("CountryID,Descr")
                                .DisplayField("CountryID").ValueField("CountryID")
                                .Width(200).HQHeightWidth(400, 300).MarginSpec("5 0 0 0")
                                .LoadData()
                                .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                                .Listeners(lst =>
                                {
                                    lst.Select.Fn = "filterComboBillSate";
                                    lst.Change.Fn = "filterComboBillSate";
                                    lst.TriggerClick.Handler = "if (index == 0) { this.hasFocus = true; this.clearValue();}";
                                    lst.Focus.Handler = "this.forceSelection = true;";  
                                })

                            , HQ.Combo().ID("cboBillState").Name("cboBillState").DataIndex("BillState")
                                .HQProcedure("AR20400_pcStateByCountry").HQColumnShow("State,Descr")
                                .DisplayField("State").ValueField("State")
                                .Width(200).HQHeightWidth(400, 300).MarginSpec("5 0 0 0")
                                .HQParam(new StoreParameterCollection() 
                                {
                                    new StoreParameter() { Name = "@Country", Value = "App.cboBillCountry.getValue()", Mode = ParameterMode.Raw }
                                })
                                .LoadData()
                                .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                                .Listeners(lst =>
                                {
                                    lst.Select.Fn = "filterComboBillCity";
                                    lst.Change.Fn = "filterComboBillCity";
                                    lst.Focus.Handler = "this.forceSelection = true;";
                                    lst.TriggerClick.Handler = "if (index == 0) { this.hasFocus = true; this.clearValue();}";
                                    lst.Focus.Handler = "this.forceSelection = true;";  
                                })

                            , HQ.Combo().ID("cboBillCity").Name("cboBillCity").DataIndex("BillCity")
                                .HQProcedure("AR20400_pcCityByCountryState").HQColumnShow("City,Name")
                                .DisplayField("City").ValueField("City")
                                .Width(200).HQHeightWidth(400, 300).MarginSpec("5 0 0 0")
                                .HQParam(new StoreParameterCollection() 
                                {
                                    new StoreParameter() { Name = "@Country", Value = "App.cboBillCountry.getValue()", Mode = ParameterMode.Raw },
                                    new StoreParameter() { Name = "@State", Value = "App.cboBillState.getValue()", Mode = ParameterMode.Raw }
                                })
                                .LoadData()
                                .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                                .Listeners(lst =>
                                {
                                    lst.Focus.Handler = "this.forceSelection = true;";
                                    lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                                    lst.Focus.Handler = "this.forceSelection = true;";  
                                })

                            , HQ.TextBox().ID("txtBillZip").Name("txtBillZip").DataIndex("BillZip")
                                .EnforceMaxLength(true).MaxLength(10)
                                .Width(200).MarginSpec("32 0 0 0")

                            , HQ.TextBox().ID("txtBillPhone").Name("txtBillPhone").DataIndex("BillPhone")
                                .EnforceMaxLength(true).MaxLength(30)
                                .Width(200).MarginSpec("5 0 0 0")

                            , HQ.TextBox().ID("txtBillFax").Name("txtBillFax").DataIndex("BillFax")
                                .EnforceMaxLength(true).MaxLength(30)
                                .Width(200).MarginSpec("5 0 59 0")
                        )

                )//Tab dia chi
                .Listeners(lss =>
                {
                    lss.Render.Handler = "HQ.common.control_render(this,'header')";
                })

                , X.Panel().ID("pnlTax")         //////////////Tab Thue//////////////
                .Title(Util.GetLang("TAX"))
                .Layout(LayoutType.HBox).AutoScroll(true)
                .Items(
                    X.FieldSet().Title(Util.GetLang("TAX")).Layout(LayoutType.VBox).MarginSpec("0 0 0 20")
                        .Items(
                            HQ.Combo().ID("cboTaxDflt").Name("cboTaxDflt").HQLangCode("TAXDEFAULT").DataIndex("TaxDflt")
                                .HQProcedure("AR20400_pcTaxDf").HQColumnShow("Code,Descr")
                                .DisplayField("Descr").ValueField("Code").AllowBlank(false)
                                .Width(300).HQHeightWidth(400, 300).MarginSpec("5 0 0 0")
                                .HQParam(new StoreParameterCollection() 
                                {
                                    new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw }
                                })
                                .LoadData()
                                .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                                .Listeners(lst =>
                                {
                                    lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                                    lst.Focus.Handler = "this.forceSelection = true;";  
                                })

                            , HQ.TextBox().ID("txtTaxRegNbr").Name("txtTaxRegNbr").HQLangCode("TAXREGNBR").DataIndex("TaxRegNbr")
                                .EnforceMaxLength(true).MaxLength(15)
                                .Width(300).MarginSpec("5 0 0 0")

                            , HQ.TextBox().ID("txtTaxLocId").Name("txtTaxLocId").HQLangCode("TAXLOCID").DataIndex("TaxLocId")
                                .EnforceMaxLength(true).MaxLength(15)
                                .Width(300).MarginSpec("5 0 0 0")


                            , HQ.Combo().ID("cboTaxID00").Name("cboTaxID00").HQLangCode("TAXID01").DataIndex("TaxID00")
                                .HQProcedure("AR20400_pcTaxAll").HQColumnShow("TaxID,Descr")
                                .DisplayField("TaxID").ValueField("TaxID")
                                .Width(300).HQHeightWidth(400, 300).MarginSpec("5 0 0 0")
                                .AllowBlank(false)
                                .LoadData()
                                .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                                .Listeners(lst =>
                                {
                                    lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                                    lst.Focus.Handler = "this.forceSelection = true;";  
                                })

                            , HQ.Combo().ID("cboTaxID01").Name("cboTaxID01").HQLangCode("TAXID02").DataIndex("TaxID01")
                                .HQProcedure("AR20400_pcTaxAll").HQColumnShow("TaxID,Descr")
                                .DisplayField("TaxID").ValueField("TaxID")
                                .Width(300).HQHeightWidth(400, 300).MarginSpec("5 0 0 0")
                                .AllowBlank(false)
                                .LoadData()
                                .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                                .Listeners(lst =>
                                {
                                    lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                                    lst.Focus.Handler = "this.forceSelection = true;";  
                                })

                            , HQ.Combo().ID("cboTaxID02").Name("cboTaxID02").HQLangCode("TAXID03").DataIndex("TaxID02")
                                .HQProcedure("AR20400_pcTaxAll").HQColumnShow("TaxID,Descr")
                                .DisplayField("TaxID").ValueField("TaxID")
                                .Width(300).HQHeightWidth(400, 300).MarginSpec("5 0 0 0")
                                .AllowBlank(false)
                                .LoadData()
                                .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                                .Listeners(lst =>
                                {
                                    lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                                    lst.Focus.Handler = "this.forceSelection = true;";  
                                })

                            , HQ.Combo().ID("cboTaxID03").Name("cboTaxID03").HQLangCode("TAXID04").DataIndex("TaxID03")
                                .HQProcedure("AR20400_pcTaxAll").HQColumnShow("TaxID,Descr")
                                .DisplayField("TaxID").ValueField("TaxID")
                                .Width(300).HQHeightWidth(400, 300).MarginSpec("5 0 5 0")
                                .AllowBlank(false)
                                .LoadData()
                                .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                                .Listeners(lst =>
                                {
                                    lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                                    lst.Focus.Handler = "this.forceSelection = true;";  
                                })

                        )

                )//Tab Thue
                .Listeners(lss =>
                {
                    lss.Render.Handler = "HQ.common.control_render(this,'header')";
                })

                , X.Panel().ID("pnlLTT")  //////////////Tab Hop Dong Dau Tu//////////////
                .Title(Util.GetLang("LTTCONT"))
                .Layout(LayoutType.Border)
                .Items(
                    X.Container().Region(Region.North).Flex(1).Layout(LayoutType.Border)
                        .Items(
                            X.GridPanel()
                            .Scroll(ScrollMode.Both)
                            .View(X.GridView().TrackOver(false))
                            .ID("grdAR_LTTContract")
                            //.SelectionMemory(false)
                            .Region(Region.Center).Flex(1)
                            .Store(
                                X.Store()
                                .ID("stoAR_LTTContract").AutoLoad(false)
                                .PageSize(50)
                                .Model(Util.GenerateModel(typeof(AR20400_pgAR_LTTContract_Result), "mdlAR20400_pgAR_LTTContract", ""))
                                .Parameters(ps =>
                                {
                                    ps.Add(new StoreParameter("CustId", "App.cboCustId.getValue()", ParameterMode.Raw));
                                })
                                .ServerProxy(X.AjaxProxy().Url(Url.Action("GetAR_LTTContract")))
                                .Listeners(l =>
                                {
                                    l.Load.Fn = "stoAR_LTTContract_Load";
                                    l.Update.Fn = "frmChange";
                                })
                            )
                            .Listeners(lst => lst.Render.Handler = "HQ.common.control_render(this,'grdAR_LTTContract');")
                            .SortableColumns(false)
                            .ColumnModel(
                                X.RowNumbererColumn().Width(30).Listeners(x => x.AfterRender.Handler = "this.resizable = true;")
                                //Colum thiet ke o day

                                , X.Column().Text(Util.GetLang("LTTConNbr")).DataIndex("LTTContractNbr").Width(150)
                                    .Editor(X.TextField().AllowBlank(false).MaxLength(30).EnforceMaxLength(true))

                                , X.CheckColumn().Text(Util.GetLang("Active")).DataIndex("Active").Editable(true).Width(80)

                                , X.DateColumn().Text(Util.GetLang("FromDate")).DataIndex("FromDate").Width(100)
                                    .Editor(HQ.DateField())

                                , X.DateColumn().Text(Util.GetLang("ToDate")).DataIndex("ToDate").Width(100)
                                    .Editor(HQ.DateField())

                                , X.DateColumn().Text(Util.GetLang("ExtDate")).DataIndex("ExtDate").Width(100)
                                    .Editor(HQ.DateField())

                                , X.NumberColumn().Text(Util.GetLang("MonthNo")).DataIndex("MonthNum")
                                    .Width(120).Align(Alignment.Right).Format("0,000")
                                    .Editor(X.NumberField().DecimalPrecision(0).MinValue(0).MaxValue(2147483647))

                                , X.NumberColumn().Text(Util.GetLang("QtyCommit")).DataIndex("QtyCommit")
                                    .Width(120).Align(Alignment.Right).Format("0,000")
                                    .Editor(X.NumberField().DecimalPrecision(0).MinValue(0))

                                , X.NumberColumn().Text(Util.GetLang("AmtCommit")).DataIndex("AmtCommit")
                                    .Width(120).Align(Alignment.Right).Format("0,000")
                                    .Editor(X.NumberField().DecimalPrecision(0).MinValue(0))

                                , X.NumberColumn().Text(Util.GetLang("TotQty")).DataIndex("TotQty")
                                    .Width(120).Align(Alignment.Right).Format("0,000")
                                    .Editor(X.NumberField().DecimalPrecision(0).MinValue(0))

                                , X.NumberColumn().Text(Util.GetLang("TotAmt")).DataIndex("TotAmt")
                                    .Width(120).Align(Alignment.Right).Format("0,000")
                                    .Editor(X.NumberField().DecimalPrecision(0).MinValue(0))

                                , X.Column().Text(Util.GetLang("Status")).DataIndex("Status").Width(100)
                                    .Editor(X.TextField().MaxLength(100).EnforceMaxLength(true))

                                , X.Column().Text(Util.GetLang("UnitDesc")).DataIndex("UnitCommit").Width(100)
                                    .Editor(X.TextField().MaxLength(10).EnforceMaxLength(true))

                                , X.NumberColumn().Text(Util.GetLang("ActualQty")).DataIndex("ActualQty")
                                    .Width(120).Align(Alignment.Right).Format("0,000")
                                    .Editor(X.NumberField().DecimalPrecision(0).MinValue(0))

                                , X.NumberColumn().Text(Util.GetLang("ActualAmt")).DataIndex("ActualAmt")
                                    .Width(120).Align(Alignment.Right).Format("0,000")
                                    .Editor(X.NumberField().DecimalPrecision(0).MinValue(0))

                                , X.CommandColumn().Width(150)
                                .Commands(
                                    X.GridCommand()
                                    .Text(Util.GetLang("Reject"))
                                    .ToolTip(t => t.Text = Util.GetLang("Rejectrowchanges"))
                                    .CommandName("reject")
                                    .Icon(Icon.ArrowUndo)
                                )
                                .PrepareToolbar(t => t.Handler = "toolbar.items.get(0).setVisible(record.dirty);")
                                .Listeners(l => l.Command.Handler = "grdAR_LTTContract_Reject(record);")
                            )
                            .SelectionModel(X.RowSelectionModel().ID("slmAR_LTTContract").Mode(SelectionMode.Single))
                            .Listeners(lst =>
                            {
                                lst.BeforeSelect.Handler = "HQ.focus = 'grdAR_LTTContract'";
                                lst.Select.Fn = "slmAR_LTTContract_Select";
                            })
                            .BottomBar(
                                X.PagingToolbar()
                                .Items(
                                    X.Label("Page size:"),
                                    X.ToolbarSpacer(10),
                                    X.ComboBox()
                                    .Width(80)
                                    .Items("1", "2", "10", "20", "30", "50")
                                    .SelectedItems("50")
                                    .Listeners(l =>
                                        {
                                            l.Select.Fn = "HQ.grid.onPageSelect";
                                        })
                                )
                                .Plugins(X.ProgressBarPager())
                            )
                            .Plugins(
                                X.CellEditing()
                                .ClicksToEdit(1)
                                .Listeners(ls =>
                                {
                                    ls.BeforeEdit.Fn = "grdAR_LTTContract_BeforeEdit";
                                    ls.Edit.Fn = "grdAR_LTTContract_Edit";
                                    ls.ValidateEdit.Fn = "grdAR_LTTContract_ValidateEdit";
                                })
                            )

                            .Features(
                                X.GridFilters()
                                    .Local(true)
                                    .Filters(
                                        X.StringFilter().DataIndex("LTTContractNbr"),
                                        X.BooleanFilter().DataIndex("Active"),
                                        X.DateFilter().DataIndex("FromDate"),
                                        X.DateFilter().DataIndex("ToDate"),
                                        X.DateFilter().DataIndex("ExtDate"),
                                        X.NumericFilter().DataIndex("MonthNum"),
                                        X.NumericFilter().DataIndex("QtyCommit"),
                                        X.NumericFilter().DataIndex("AmtCommit"),
                                        X.NumericFilter().DataIndex("TotQty"),
                                        X.NumericFilter().DataIndex("TotAmt"),
                                        X.StringFilter().DataIndex("Status"),
                                        X.StringFilter().DataIndex("UnitCommit"),
                                        X.NumericFilter().DataIndex("ActualQty"),
                                        X.NumericFilter().DataIndex("ActualAmt")
                                    )
                            )
                        )

                    , X.Container().Region(Region.Center).Flex(1).Layout(LayoutType.Border)
                        .Items(
                            X.GridPanel()
                            .Scroll(ScrollMode.Both)
                            .View(X.GridView().TrackOver(false))
                            .ID("grdAR_LTTContractDetail")
                            //.SelectionMemory(false)
                            .Region(Region.Center).Flex(1)
                            .Store(
                                X.Store()
                                .ID("stoAR_LTTContractDetail").AutoLoad(false)
                                .PageSize(50)
                                .Model(Util.GenerateModel(typeof(AR20400_pgAR_LTTContractDetail_Result), "mdlAR20400_pgAR_LTTContractDetail", ""))
                                .Parameters(ps =>
                                {
                                    ps.Add(new StoreParameter("CustId", "App.cboCustId.getValue()", ParameterMode.Raw));
                                })
                                .ServerProxy(X.AjaxProxy().Url(Url.Action("GetAR_LTTContractDetail")))
                                .Listeners(l =>
                                {
                                    l.Load.Fn = "stoAR_LTTContractDetail_Load";
                                    l.Update.Fn = "frmChange";
                                })
                            )
                            .Listeners(lst => lst.Render.Handler = "HQ.common.control_render(this,'grdAR_LTTContractDetail');")
                            .SortableColumns(false)
                            .ColumnModel(
                                X.RowNumbererColumn().Width(30).Listeners(x => x.AfterRender.Handler = "this.resizable = true;")
                                //Colum thiet ke o day

                                , X.Column().Text(Util.GetLang("Type")).DataIndex("Type").Width(150)
                                    .Editor(

                                       HQ.Combo().ID("cboType").Name("cboType")
                                           .HQDBSys(false).HQProcedure("AR20400_pcLTTContractDetailType").HQHeightWidth(400, 300)
                                           .HQColumnShow("Code,Descr").DisplayField("Code").ValueField("Code")
                                           .ForceSelection(true)
                                           .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                                           .HQParam(new StoreParameterCollection()
		                                    {
			                                    new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw }
		                                    })
                                            .Listeners(lst =>
                                            {
                                                lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                                            })
                                            .LoadData()
                                    )

                                , X.Column().Text(Util.GetLang("Descr")).DataIndex("Descr").Width(200)
                                    .Editor(X.TextField().MaxLength(100).EnforceMaxLength(true))

                                , X.NumberColumn().Text(Util.GetLang("Amt")).DataIndex("Amt")
                                    .Width(120).Align(Alignment.Right).Format("0,000")
                                    .Editor(X.NumberField().DecimalPrecision(0).MinValue(0))

                                , X.Column().Text(Util.GetLang("Status")).DataIndex("Status").Width(100)
                                    .Editor(X.TextField().MaxLength(50).EnforceMaxLength(true))

                                , X.CommandColumn().Width(150)
                                .Commands(
                                    X.GridCommand()
                                    .Text(Util.GetLang("Reject"))
                                    .ToolTip(t => t.Text = Util.GetLang("Rejectrowchanges"))
                                    .CommandName("reject")
                                    .Icon(Icon.ArrowUndo)
                                )
                                .PrepareToolbar(t => t.Handler = "toolbar.items.get(0).setVisible(record.dirty);")
                                .Listeners(l => l.Command.Handler = "grdAR_LTTContractDetail_Reject(record);")
                            )
                            .SelectionModel(X.RowSelectionModel().ID("slmAR_LTTContractDetail").Mode(SelectionMode.Multi))
                            .Listeners(lst=>lst.BeforeSelect.Handler = "HQ.focus='grdAR_LTTContractDetail'")
                            .BottomBar(
                                X.PagingToolbar()
                                .Items(
                                    X.Label("Page size:"),
                                    X.ToolbarSpacer(10),
                                    X.ComboBox()
                                    .Width(80)
                                    .Items("1", "2", "10", "20", "30", "50")
                                    .SelectedItems("50")
                                    .Listeners(l =>
                                        {
                                            l.Select.Fn = "HQ.grid.onPageSelect";
                                        })
                                )
                                .Plugins(X.ProgressBarPager())
                            )
                            .Plugins(
                                X.CellEditing()
                                .ClicksToEdit(1)
                                .Listeners(ls =>
                                {
                                    ls.BeforeEdit.Fn = "grdAR_LTTContractDetail_BeforeEdit";
                                    ls.Edit.Fn = "grdAR_LTTContractDetail_Edit";
                                    ls.ValidateEdit.Fn = "grdAR_LTTContractDetail_ValidateEdit";
                                })
                            )

                            .Features(
                                X.GridFilters()
                                    .Local(true)
                                    .Filters(
                                        X.ListFilter().DataIndex("LTTContractNbr"),
                                        X.ListFilter().DataIndex("Type"),
                                        X.StringFilter().DataIndex("Descr"),
                                        X.NumericFilter().DataIndex("Amt"),
                                        X.StringFilter().DataIndex("Status")
                                    )
                            )
                        )

                )//Tab Hop Dong Dau Tu
                //.Listeners(lss =>
                //{
                //    lss.Render.Handler = "HQ.common.control_render(this,'grdAR_LTTContract')";
                //})

                , X.Panel().ID("pnlADV")     //////////////Tab Vat Dung Quang Cao Trung Bay //////////////
                .Title(Util.GetLang("BRDADVTOOL"))
                .Layout(LayoutType.Border)
                .CloseAction(CloseAction.Hide)
                .Items(
                    X.GridPanel()
                    .Scroll(ScrollMode.Both)
                    .View(X.GridView().TrackOver(false))
                    .ID("grdAR_CustAdvTool")
                    //.SelectionMemory(false)
                    .Region(Region.Center).Flex(1)
                    .Store(
                        X.Store()
                        .ID("stoAR_CustAdvTool").AutoLoad(false)
                        .PageSize(50)
                        .Model(Util.GenerateModel(typeof(AR20400_pgAR_CustAdvTool_Result), "mdlAR20400_pgAR_CustAdvTool", ""))
                        .Parameters(ps =>
                        {
                            ps.Add(new StoreParameter("CustId", "App.cboCustId.getValue()", ParameterMode.Raw));
                        })
                        .ServerProxy(X.AjaxProxy().Url(Url.Action("GetAR_CustAdvTool")))
                        .Listeners(l =>
                        {
                            l.Load.Fn = "stoAR_CustAdvTool_Load";
                            l.Update.Fn = "frmChange";
                        })
                    )
                    .Listeners(lst => lst.Render.Handler = "HQ.common.control_render(this,'grdAR_CustAdvTool');")
                    .SortableColumns(false)
                    .ColumnModel(
                        X.RowNumbererColumn().Width(30).Listeners(x => x.AfterRender.Handler = "this.resizable = true;")
                        //Colum thiet ke o day
                        , X.CheckColumn().Text(Util.GetLang("Active")).DataIndex("Active").Editable(true).Width(80)

                        , X.Column().Text(Util.GetLang("Type")).DataIndex("Type").Width(100)
                            .Editor(
                                HQ.Combo().ID("cboTypeADV").Name("cboTypeADV")
                                    .HQDBSys(false).HQProcedure("AR20400_pcCustAdvToolType").HQHeightWidth(400, 300)
                                    .HQColumnShow("Code,Descr").DisplayField("Code").ValueField("Code")
                                    .ForceSelection(true)
                                    .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                                    .HQParam(new StoreParameterCollection()
		                            {
			                            new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw }
		                            })
                                    .Listeners(lst =>
                                    {
                                        lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                                    })
                                    .LoadData()
                            )

                        , X.Column().Text(Util.GetLang("Descr")).DataIndex("Descr").Width(200)
                            .Editor(X.TextField().MaxLength(100).EnforceMaxLength(true))

                        , X.NumberColumn().Text(Util.GetLang("Qty")).DataIndex("Qty")
                            .Width(120).Align(Alignment.Right).Format("0,000")
                            .Editor(X.NumberField().DecimalPrecision(0).MinValue(0))

                        , X.NumberColumn().Text(Util.GetLang("Amt")).DataIndex("Amt")
                            .Width(120).Align(Alignment.Right).Format("0,000")
                            .Editor(X.NumberField().DecimalPrecision(0).MinValue(0))

                        , X.DateColumn().Text(Util.GetLang("FitupDate")).DataIndex("FitupDate").Width(100)
                            .Editor(HQ.DateField())

                        , X.Column().Text(Util.GetLang("Status")).DataIndex("Status").Width(100)
                            .Editor(X.TextField().MaxLength(50).EnforceMaxLength(true))

                        , X.CommandColumn().Width(150)
                        .Commands(
                            X.GridCommand()
                            .Text(Util.GetLang("Reject"))
                            .ToolTip(t => t.Text = Util.GetLang("Rejectrowchanges"))
                            .CommandName("reject")
                            .Icon(Icon.ArrowUndo)
                        )
                        .PrepareToolbar(t => t.Handler = "toolbar.items.get(0).setVisible(record.dirty);")
                        .Listeners(l => l.Command.Handler = "grdAR_CustAdvTool_Reject(record);")
                    )
                    .SelectionModel(X.RowSelectionModel().ID("slmAR_CustAdvTool").Mode(SelectionMode.Multi))
                    .BottomBar(
                        X.PagingToolbar()
                        .Items(
                            X.Label("Page size:"),
                            X.ToolbarSpacer(10),
                            X.ComboBox()
                            .Width(80)
                            .Items("1", "2", "10", "20", "30", "50")
                            .SelectedItems("50")
                            .Listeners(l =>
                                {
                                    l.Select.Fn = "HQ.grid.onPageSelect";
                                })
                        )
                        .Plugins(X.ProgressBarPager())
                    )
                    .Plugins(
                        X.CellEditing()
                        .ClicksToEdit(1)
                        .Listeners(ls =>
                        {
                            ls.BeforeEdit.Fn = "grdAR_CustAdvTool_BeforeEdit";
                            ls.Edit.Fn = "grdAR_CustAdvTool_Edit";
                            ls.ValidateEdit.Fn = "grdAR_CustAdvTool_ValidateEdit";
                        })
                    )

                    .Features(
                        X.GridFilters()
                            .Local(true)
                            .Filters(
                                X.BooleanFilter().DataIndex("Active"),
                                X.ListFilter().DataIndex("Type"),
                                X.StringFilter().DataIndex("Descr"),
                                X.NumericFilter().DataIndex("Qty"),
                                X.NumericFilter().DataIndex("Amt"),
                                X.DateFilter().DataIndex("FitupDate"),
                                X.StringFilter().DataIndex("Status")
                            )
                    )
                )//Tab Vat Dung Quang Cao Trung Bay
                .Listeners(lss =>
                {
                    lss.Render.Handler = "HQ.common.control_render(this,'grdAR_CustAdvTool')";
                })

                , X.Panel().ID("pnlAR_CustSellingProducts")     ////////////// San Pham Dang Ban //////////////
                .Title(Util.GetLang("SellingProd"))
                .Layout(LayoutType.Border)
                .CloseAction(CloseAction.Hide)
                .Items(
                    X.GridPanel()
                    .Scroll(ScrollMode.Both)
                    .View(X.GridView().TrackOver(false))
                    .ID("grdAR_CustSellingProducts")
                    //.SelectionMemory(false)
                    .Region(Region.Center).Flex(1)
                    .Store(
                        X.Store()
                        .ID("stoAR_CustSellingProducts").AutoLoad(false)
                        .PageSize(50)
                        .Model(Util.GenerateModel(typeof(AR20400_pgAR_CustSellingProducts_Result), "mdlAR20400_pgAR_CustSellingProducts", ""))
                        .Parameters(ps =>
                        {
                            ps.Add(new StoreParameter("CustId", "App.cboCustId.getValue()", ParameterMode.Raw));
                        })
                        .ServerProxy(X.AjaxProxy().Url(Url.Action("GetAR_CustSellingProducts")))
                        .Listeners(l =>
                        {
                            l.Load.Fn = "stoAR_CustSellingProducts_Load";
                            l.Update.Fn = "frmChange";
                        })
                    )
                    .Listeners(lst => lst.Render.Handler = "HQ.common.control_render(this,'grdAR_CustSellingProducts');")
                    .SortableColumns(false)
                    .ColumnModel(
                        X.RowNumbererColumn().Width(30).Listeners(x => x.AfterRender.Handler = "this.resizable = true;")
                        //Colum thiet ke o day
                        , X.Column().Text(Util.GetLang("SellingProd")).DataIndex("Code").Width(150)
                            .Editor(
                                HQ.Combo().ID("cboSellingProd1").Name("cboSellingProd1")
                                    .HQDBSys(false).HQProcedure("AR20400_pcSellingProducts").HQHeightWidth(400, 300)
                                    .HQColumnShow("SellingProd,Descr").DisplayField("SellingProd").ValueField("SellingProd")
                                    .ForceSelection(true)
                                    .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                                    .Listeners(lst =>
                                    {
                                        lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                                    })
                                    .LoadData()
                            )

                        , X.Column().Text(Util.GetLang("Descr")).DataIndex("Descr").Width(200)
                            .Editor(X.TextField().MaxLength(200).EnforceMaxLength(true))

                        , X.CommandColumn().Width(150)
                        .Commands(
                            X.GridCommand()
                            .Text(Util.GetLang("Reject"))
                            .ToolTip(t => t.Text = Util.GetLang("Rejectrowchanges"))
                            .CommandName("reject")
                            .Icon(Icon.ArrowUndo)
                        )
                        .PrepareToolbar(t => t.Handler = "toolbar.items.get(0).setVisible(record.dirty);")
                        .Listeners(l => l.Command.Handler = "grdAR_CustSellingProducts_Reject(record);")
                    )
                    .SelectionModel(X.RowSelectionModel().ID("slmAR_CustSellingProducts").Mode(SelectionMode.Multi))
                    .BottomBar(
                        X.PagingToolbar()
                        .Items(
                            X.Label("Page size:"),
                            X.ToolbarSpacer(10),
                            X.ComboBox()
                            .Width(80)
                            .Items("1", "2", "10", "20", "30", "50")
                            .SelectedItems("50")
                            .Listeners(l =>
                                {
                                    l.Select.Fn = "HQ.grid.onPageSelect";
                                })
                        )
                        .Plugins(X.ProgressBarPager())
                    )
                    .Plugins(
                        X.CellEditing()
                        .ClicksToEdit(1)
                        .Listeners(ls =>
                        {
                            ls.BeforeEdit.Fn = "grdAR_CustSellingProducts_BeforeEdit";
                            ls.Edit.Fn = "grdAR_CustSellingProducts_Edit";
                            ls.ValidateEdit.Fn = "grdAR_CustSellingProducts_ValidateEdit";
                        })
                    )

                    .Features(
                        X.GridFilters()
                            .Local(true)
                            .Filters(
                                X.StringFilter().DataIndex("DispMethod"),
                                X.StringFilter().DataIndex("Descr")
                            )
                    )
                )//Tab San Pham Dang Ban
                .Listeners(lss =>
                {
                    lss.Render.Handler = "HQ.common.control_render(this,'grdAR_CustSellingProducts')";
                })
                
                , X.Panel().ID("pnlDispMethod")     //////////////Tab Hinh Thuc Trung Bay //////////////
                .Title(Util.GetLang("DISPMETHOD"))
                .Layout(LayoutType.Border)
                .CloseAction(CloseAction.Hide)
                .Items(
                    X.GridPanel()
                    .Scroll(ScrollMode.Both)
                    .View(X.GridView().TrackOver(false))
                    .ID("grdAR_CustDisplayMethod")
                    //.SelectionMemory(false)
                    .Region(Region.Center).Flex(1)
                    .Store(
                        X.Store()
                        .ID("stoAR_CustDisplayMethod").AutoLoad(false)
                        .PageSize(50)
                        .Model(Util.GenerateModel(typeof(AR20400_pgAR_CustDisplayMethod_Result), "mdlAR20400_pgAR_CustDisplayMethod", ""))
                        .Parameters(ps =>
                        {
                            ps.Add(new StoreParameter("CustId", "App.cboCustId.getValue()", ParameterMode.Raw));
                        })
                        .ServerProxy(X.AjaxProxy().Url(Url.Action("GetAR_CustDisplayMethod")))
                        .Listeners(l =>
                        {
                            l.Load.Fn = "stoAR_CustDisplayMethod_Load";
                            l.Update.Fn = "frmChange";
                        })
                    )
                    .Listeners(lst => lst.Render.Handler = "HQ.common.control_render(this,'grdAR_CustDisplayMethod');")
                    .SortableColumns(false)
                    .ColumnModel(
                        X.RowNumbererColumn().Width(30).Listeners(x => x.AfterRender.Handler = "this.resizable = true;")
                        //Colum thiet ke o day
                        , X.Column().Text(Util.GetLang("DispMethod")).DataIndex("DispMethod").Width(150)
                            .Editor(
                                HQ.Combo().ID("cboCodeDisplay").Name("cboCodeDisplay")
                                    .HQDBSys(false).HQProcedure("AR20400_pcDisplayMethod").HQHeightWidth(400, 300)
                                    .HQColumnShow("DispMethod,Descr").DisplayField("DispMethod").ValueField("DispMethod")
                                    .ForceSelection(true)
                                    .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                                    .Listeners(lst =>
                                    {
                                        lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                                    })
                                    .LoadData()
                            )

                        , X.Column().Text(Util.GetLang("Descr")).DataIndex("Descr").Width(200)
                            .Editor(X.TextField().MaxLength(100).EnforceMaxLength(true))

                        , X.CommandColumn().Width(150)
                        .Commands(
                            X.GridCommand()
                            .Text(Util.GetLang("Reject"))
                            .ToolTip(t => t.Text = Util.GetLang("Rejectrowchanges"))
                            .CommandName("reject")
                            .Icon(Icon.ArrowUndo)
                        )
                        .PrepareToolbar(t => t.Handler = "toolbar.items.get(0).setVisible(record.dirty);")
                        .Listeners(l => l.Command.Handler = "grdAR_CustDisplayMethod_Reject(record);")
                    )
                    .SelectionModel(X.RowSelectionModel().ID("slmAR_CustDisplayMethod").Mode(SelectionMode.Multi))
                    .BottomBar(
                        X.PagingToolbar()
                        .Items(
                            X.Label("Page size:"),
                            X.ToolbarSpacer(10),
                            X.ComboBox()
                            .Width(80)
                            .Items("1", "2", "10", "20", "30", "50")
                            .SelectedItems("50")
                            .Listeners(l =>
                                {
                                    l.Select.Fn = "HQ.grid.onPageSelect";
                                })
                        )
                        .Plugins(X.ProgressBarPager())
                    )
                    .Plugins(
                        X.CellEditing()
                        .ClicksToEdit(1)
                        .Listeners(ls =>
                        {
                            ls.BeforeEdit.Fn = "grdAR_CustDisplayMethod_BeforeEdit";
                            ls.Edit.Fn = "grdAR_CustDisplayMethod_Edit";
                            ls.ValidateEdit.Fn = "grdAR_CustDisplayMethod_ValidateEdit";
                        })
                    )

                    .Features(
                        X.GridFilters()
                            .Local(true)
                            .Filters(
                                X.StringFilter().DataIndex("DispMethod"),
                                X.StringFilter().DataIndex("Descr")
                            )
                    )
                )//Tab Hinh Thuc Trung Bay
                .Listeners(lss =>
                {
                    lss.Render.Handler = "HQ.common.control_render(this,'grdAR_CustDisplayMethod')";
                })

            )//xtab
        )
    )// frmMain
)
)
