@using Ext.Net;
@using Ext.Net.MVC;
@using HQ.eSkyFramework;
@using HQ.eSkyFramework.HQControl;
@using AR20400;

@model System.Collections.IEnumerable
@{
    Layout = null;
    var X = Html.X();
    ViewBag.Title = "AR20400";
    var acc = Session["AR20400"] as AccessRight;
}
<!DOCTYPE html>
<html>
 <!--Không thay đổi phần head Đổi mã màn hình AR20400.js tùy theo màn hình đổi lại-->
<head>
    <meta name="viewport" content="width=device-width" />
    <script src='@Url.Content("Scripts/hq.language"+Current.LangID+".js?"+DateTime.Now.ToString("yyyyMMddss"))' type="text/javascript"></script>
    <script src='@Url.Content("Scripts/hq.common.js?"+DateTime.Now.ToString("yyyyMMddss"))' type="text/javascript"></script>
    <script src='@Url.Content("Scripts/screen/AR20400.js?"+DateTime.Now.ToString("yyyyMMddss"))' type="text/javascript"></script>
    <style>
        .x-grid-row-over .x-grid-cell-inner {
            font-weight : bold;
        }
        /* Dung cho combo customize*/
        .ComboXtemplate{
	        white-space:nowrap;
        }
    </style>
    <script>
        HQ.cpnyID = '@Current.CpnyID';
        HQ.langID = '@Current.LangID';
        HQ.userName = '@Current.UserName';
        HQ.isUpdate = HQ.util.toBool('@acc.Update.ToString()');
        HQ.isInsert = HQ.util.toBool('@acc.Insert.ToString()');
        HQ.isDelete = HQ.util.toBool('@acc.Delete.ToString()');
        HQ.bussinessDate = new Date('@DateTime.Now.Date');
        hideContract = '@ViewBag.Contract';
        hideAdvTool = '@ViewBag.AdvTool';
        hideSellingProduct = '@ViewBag.SellingProduct';
        hideDisplayMethod = '@ViewBag.DisplayMethod';
        readonlyShopType = '@ViewBag.ReadonlyShopType';
    </script>  
    <title>@ViewBag.Title</title>
</head>
<body>   
    @(X.ResourceManager().Theme((Theme)Enum.Parse(typeof(Theme),Current.Theme.PassNull()==""?"Gray":Current.Theme.PassNull())))
        @X.GridFilters()<!--Khi cache cho grid-->
        @X.ProgressBarPager()<!--Khi cache cho grid -->   

        @(X.Store().ID("stoAR_Customer").AutoLoad(false)
            .Model(Util.GenerateModel(typeof(AR20400_pdHeader_Result), "mdlAR20400_pdHeader", ""))       
            .Proxy(
                    X.AjaxProxy()                
                    .Url(Url.Action("GetAR_Customer", "AR20400"))                
                    .ActionMethods(action =>
                    {
                        action.Read = HttpMethod.POST;
                    })
                    .Reader(X.JsonReader().Root("data").TotalProperty("totaldata"))
                )
            .Parameters(ps =>
            {
                ps.Add(new StoreParameter("CpnyID", "App.cboCpnyID.getValue()", ParameterMode.Raw));
                ps.Add(new StoreParameter("CustId", "App.cboCustId.getValue()", ParameterMode.Raw));
            })      
            .Listeners(l =>
                {
                    l.BeforeLoad.Fn = "stoBeforeLoad";
                    l.Load.Fn = "stoLoad";                   
                }
            )
        )

        @(Html.HQ().Store().ID("stoCheckAutoCustID").AutoLoad(false)
            .HQProcedure("AR20400_ppCheckAutoCustID")
            .HQParam(new StoreParameterCollection() {
                new StoreParameter() { Name = "@CpnyID", Value ="App.cboCpnyID.getValue()", Mode = ParameterMode.Raw}
            })
            .Listeners(p=>{
                //p.BeforeLoad.Fn = "stoBeforeLoad";
                p.Load.Fn = "stoCheckAutoCustID_Load";
            })
            .LoadData()
        )

        @(Html.HQ().Store().ID("stoGetMaxHierarchyLevel").AutoLoad(false)
                .HQProcedure("AR20400_ppGetMaxHierarchyLevel")
                .HQParam(new StoreParameterCollection() {
                    new StoreParameter() { Name = "@Type", Value ="C", Mode = ParameterMode.Value}
                })
                .Listeners(p=>{
                    //p.BeforeLoad.Fn = "stoBeforeLoad";
                    p.Load.Fn = "stoGetMaxHierarchyLevel_Load";
                })
                .LoadData()
        )

        @(Html.HQ().Store().ID("stoCheckHiddenTree").AutoLoad(false)
            .HQProcedure("AR20400_ppCheckHiddenTree")
            .HQParam(new StoreParameterCollection() {
                new StoreParameter() { Name = "@CpnyID", Value ="App.cboCpnyID.getValue()", Mode = ParameterMode.Raw}
            })
            .Listeners(p=>{
                //p.BeforeLoad.Fn = "stoBeforeLoad";
                p.Load.Fn = "stoCheckHiddenTree_Load";
            })
            .LoadData()
        )
      @(Html.HQ().Store().ID("stoAR20400_ppGetTerritoryForUser").AutoLoad(true)
            .HQProcedure("AR20400_ppGetTerritoryForUser")
            .HQParam(new StoreParameterCollection() { 
                new StoreParameter("@UserID","HQ.userName", ParameterMode.Raw)
                ,new StoreParameter("@BranchID","HQ.cpnyID", ParameterMode.Raw)
            })
            .LoadData()
             .Listeners(l=>l.Load.Fn="stoAR20400_ppGetTerritoryForUser_load")
        )
        <!-- Gọi hàm Body trong AR20400Controller để dựng view Body.cshtml, mục đích tạo cache. -->  
        @{Html.RenderAction("Body", new {lang=Current.LangID});}
</body>
</html>
 