@using Ext.Net;
@using Ext.Net.MVC;
@using eBiz4DWebFrame;
@using eBiz4DWebFrame.HQControl;
@using AR10800;

@model System.Collections.IEnumerable
@{
    Layout = null;
    var X = Html.X();
    var HQ = Html.HQ();
    ViewBag.Title = "AR10800";
    var acc = Session["AR10800"] as AccessRight;
}
<!DOCTYPE html>
<html>
    <head>
        <meta name="viewport" content="width=device-width" />
<link href="~/Content/ComboXTemplate.css" rel="stylesheet" />
<script src="~/Scripts/common.js"></script>
<script src='@Url.Content("Scripts/Screen/AR10800.js")' type="text/javascript"></script>
<style type="text/css"> @*Thuoc tinh hover tren grid *@
    .x-grid-row-over .x-grid-cell-inner {
        font-weight : bold;
    }
</style>
<script>
    var isAllValid = function (items) {
        if (items != undefined) {
            return true;
                
        }else {
            return true;
        }
       
    
    
        

    };

</script>
<script>
    var isUpdate = strToBool('@acc.Update.ToString().ToLower()');
    var isInsert = strToBool('@acc.Insert.ToString().ToLower()');
    var isDelete = strToBool('@acc.Delete.ToString().ToLower()');
</script>
  <title>@ViewBag.Title</title>
    </head>
    <body>
@(Html.X().ResourceManager().Theme((Theme)Enum.Parse(typeof(Theme), Current.Theme.PassNull() == "" ? "Gray" : Current.Theme.PassNull())))


@(Html.X().Store().ID("storeFormTop").AutoLoad(false)
        .Model(Util.GenerateModel(typeof(AR_RedInvoiceDoc), "AR_RedInvoiceDocModel", ""))
        .Proxy(
            X.AjaxProxy()
            .Url(Url.Action("GetDataFormTop", "AR10800"))
            .ActionMethods(action =>
            {
                action.Read = HttpMethod.POST;
            })
            .Reader(X.JsonReader().Root("data").TotalProperty("totaldata"))
        )
        .Parameters(ps =>
        {
            ps.Add(new StoreParameter("BranchID", "App.txtBranchID.value", ParameterMode.Raw));
            ps.Add(new StoreParameter("InvcNbr", "App.cboInvcNbr.value", ParameterMode.Raw));
            
        })
        .Listeners(p => p.Load.Handler = "loadDataAutoHeaderTop()")
  )

@*@(Html.X().Store().ID("storeGrid").AutoLoad(false)
        .Model(Util.GenerateModel(typeof(AR_TransLoadRedInvoice_Result), "AR_TransLoadRedInvoice_ResultModel", ""))
        .Proxy(
            X.AjaxProxy()
            .Url(Url.Action("GetDataGrid", "AR10800"))
            .ActionMethods(action =>
            {
                action.Read = HttpMethod.POST;
            })
            .Reader(X.JsonReader().Root("data").TotalProperty("totaldata"))
        )
            .Parameters(ps =>
                            {
                                ps.Add(new StoreParameter("BranchID", "App.txtBranchID.getValue()", ParameterMode.Raw));
                                ps.Add(new StoreParameter("InvcNbr", "App.cboInvcNbr.getValue()", ParameterMode.Raw));
                                ps.Add(new StoreParameter("InvcNote", "App.cboInvcNbr.displayTplData[0].InvcNote", ParameterMode.Raw));
                            })
        //.Listeners(p=>p.Load.Handler="loadDataHeaderDetail()" )
  )*@

@(Html.X().Store().ID("storeGrid").AutoLoad(false)
        .Model(Util.GenerateModel(typeof(AR_GetDocForRedInvoice_Result), "AR_GetDocForRedInvoice_ResultModel", ""))
        //.Model(
        //    X.Model()
        //    .ID("GetGridResultModel")
        //    //.IDProperty("Grid1Tab2")
        //    .Fields(
            
        //        X.ModelField().Name("OrderNbr").Type(ModelFieldType.String)
        //        ,X.ModelField().Name("DocDate").Type(ModelFieldType.Date)
        //        ,X.ModelField().Name("InvtId").Type(ModelFieldType.String)
        //        ,X.ModelField().Name("TranDesc").Type(ModelFieldType.String)
        //        ,X.ModelField().Name("TxblAmt").Type(ModelFieldType.Float)
        //        ,X.ModelField().Name("TaxAmt").Type(ModelFieldType.Float)
        //        ,X.ModelField().Name("DiscAmt").Type(ModelFieldType.Float)
        //        ,X.ModelField().Name("SOFee").Type(ModelFieldType.Float)
        //        ,X.ModelField().Name("CustId").Type(ModelFieldType.String)
        //        ,X.ModelField().Name("SlsperId").Type(ModelFieldType.String)
        //        ,X.ModelField().Name("DeliveryID").Type(ModelFieldType.String)
        //        ,X.ModelField().Name("BatNbr").Type(ModelFieldType.String)
        //        ,X.ModelField().Name("RefNbr").Type(ModelFieldType.String)
        //        ,X.ModelField().Name("LineRef").Type(ModelFieldType.String)
        //    )
        //)
        .Proxy(
            X.AjaxProxy()
            .Url(Url.Action("GetDataGrid", "AR10800"))
            .ActionMethods(action =>
            {
                action.Read = HttpMethod.POST;
            })
            .Reader(X.JsonReader().Root("data").TotalProperty("totaldata"))
        )
            .Parameters(ps =>
                            {
                                ps.Add(new StoreParameter("BranchID", "App.txtBranchID.getValue()", ParameterMode.Raw));
                                ps.Add(new StoreParameter("TaxID", "App.cboTaxID.getValue()", ParameterMode.Raw));
                                ps.Add(new StoreParameter("InvcNbr", "App.cboInvcNbr.getValue()", ParameterMode.Raw));
                                ps.Add(new StoreParameter("tmpInvcNote", "App.txtTmpInvcNote.getValue()", ParameterMode.Raw));
                                ps.Add(new StoreParameter("StartDate", "App.txtFromDate.getValue()", ParameterMode.Raw));
                                ps.Add(new StoreParameter("EndDate", "App.txtToDate.getValue()", ParameterMode.Raw));
                                ps.Add(new StoreParameter("CustID", "App.cboFilterCustID.getValue()", ParameterMode.Raw));
                                ps.Add(new StoreParameter("SlsperID", "App.cboFilterSlsperID.getValue()", ParameterMode.Raw));
                                ps.Add(new StoreParameter("DeliveryID", "App.cboFilterDeliveryID.getValue()", ParameterMode.Raw));
                                ps.Add(new StoreParameter("IncludeFee", "App.chkSOFee.getValue()", ParameterMode.Raw));
                                ps.Add(new StoreParameter("TmpLoadGrid", "App.txtTmpLoadGrid.getValue()", ParameterMode.Raw));
                                ps.Add(new StoreParameter("InvcNote", "App.txtInvcNote.getValue()", ParameterMode.Raw));
                            })
        //.Listeners(p=>p.Load.Handler="loadDataHeaderDetail()" )
  )


@*@(Html.X().Store().ID("storeFormBot").AutoLoad(false)
        .Model(Util.GenerateModel(typeof(AR_Doc), "AR_DocClassModel", "BranchID,BatNbr,RefNbr"))
        .Proxy(
            X.AjaxProxy()
            .Url(Url.Action("GetDataFormBot", "AR10800"))
            .ActionMethods(action =>
            {
                action.Read = HttpMethod.POST;
            })
            .Reader(X.JsonReader().Root("data").TotalProperty("totaldata"))
        )
        .Parameters(ps =>
        {
            ps.Add(new StoreParameter("BranchID", "App.txtBranchID.value", ParameterMode.Raw));
            ps.Add(new StoreParameter("BatNbr", "App.cboBatNbr.value", ParameterMode.Raw));
            ps.Add(new StoreParameter("RefNbr", "App.cboRefNbr.value", ParameterMode.Raw));
        })
        .Listeners(p => p.Load.Handler = "loadDataAutoHeaderBot()")
  )*@



     @{ Html.RenderAction("Body"); }
    </body>
</html>


