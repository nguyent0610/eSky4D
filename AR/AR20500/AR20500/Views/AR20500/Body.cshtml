
@using Ext.Net;
@using Ext.Net.MVC;
@using HQ.eSkyFramework;
@using HQ.eSkyFramework.HQControl;
@using AR20500;
@{
    Layout = null;
    var X = Html.X();
    var HQ = Html.HQ();
}

@(
 X.Viewport()
.Layout(LayoutType.Fit)
.Items(
        X.FormPanel()
        .ID("frmMain")
        .BodyPadding(0)
        .KeyMap(Util.SetupKeyMap())
        .TopBar(Util.SetupToolbar("Print,Save,New,Delete", true, ""))
        .Layout(LayoutType.Border)
        .FieldDefaults(act => { act.LabelAlign = LabelAlign.Right; })
        .DefaultButton("btnLoad")
        .Listeners(lst =>
        {
            lst.BoxReady.Fn = "loadSourceCombo";
        })
        .Items(
           X.Panel().ID("pnlHeader")
            .Region(Region.North).Border(false)
            .Layout(LayoutType.VBox)
            .AutoScroll(true)
            .Items(
        //row1     
                X.Container().Layout(LayoutType.HBox).MarginSpec("3 0 0 0")
                    .Items(
                        HQ.Combo().ID("cboCpnyID")
                        .Name("cboCpnyID").HQLangCode("CpnyID").HQProcedure("AR20500_pcBranchAllByUser")
                        .HQColumnShow("BranchID,BranchName").DisplayField("BranchID").ValueField("BranchID")
                        .Width(250).HQHeightWidth(400, 300)
                        .ForceSelection(true).HQAutoLoad(false).AllowBlank(false)
                        .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                        .HQParam(new StoreParameterCollection() 
                        { 
                            new StoreParameter() { Name = "@UserID", Value = "HQ.userName", Mode = ParameterMode.Raw }    
                        })
                        .LoadData()
                        .Listeners(lst =>
                        {
                            lst.Change.Fn = "cboCpnyID_Change";
                            lst.Select.Fn = "cboCpnyID_Select";
                            lst.TriggerClick.Handler = "if (index == 0) {this.clearValue();}";

                        })
                        , HQ.DateField().ID("FromDate").HQLangCode("FromDate").Width(250)
                           

                        , HQ.Combo().ID("cboStatus")
                            .Name("cboStatus").HQLangCode("Status").HQProcedure("AR20500_pcStatus")
                            .HQColumnShow("Code,Descr").DisplayField("Descr").ValueField("Code")
                            .Width(250).HQHeightWidth(400, 300)
                            .ForceSelection(true).HQAutoLoad(false)
                            .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                            .HQParam(new StoreParameterCollection() 
                            {
                                new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw },
                                new StoreParameter() { Name = "@CpnyID", Value = "HQ.cpnyID", Mode = ParameterMode.Raw },
                                new StoreParameter() { Name = "@UserID", Value = "HQ.userName", Mode = ParameterMode.Raw }
                            })
                            .LoadData()
                            .Listeners(lst =>
                            {
                                lst.Change.Fn = "cboStatus_Change";
                                lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                            })

                        , HQ.Button().ID("btnLoad").HQLangCode("LoadData").Width(150).MarginSpec("0 0 0 5")
                            .Listeners(lst =>
                            {
                                lst.Click.Fn = "btnLoad_Click";
                            })


                    )

                    //row 2
                    , X.Container().Layout(LayoutType.HBox).MarginSpec("3 0 0 0")
                        .Items(
                            HQ.Combo().ID("cboSlsperId")
                                .Name("cboSlsperId").HQLangCode("SlsperId").HQProcedure("AR20500_pcSlsperIdByBranch")
                                .HQColumnShow("SlsperId,Name").DisplayField("SlsperId").ValueField("SlsperId")
                                .Width(250).HQHeightWidth(400, 300)
                                .ForceSelection(true).MultiSelect(true).HQAutoLoad(false)
                                .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                                .HQParam(new StoreParameterCollection() 
                                { 
                                    new StoreParameter() { Name = "@UserName", Value = "HQ.userName", Mode = ParameterMode.Raw },
                                    new StoreParameter() { Name = "@BranchID", Value = "App.cboCpnyID.getValue()", Mode = ParameterMode.Raw }      
                                })
                                .LoadData()
                                .Listeners(lst =>
                                {
                                    lst.TriggerClick.Handler = "if (index == 0) {this.clearValue();}";
                                    lst.Expand.Handler = "HQ.combo.expand(this,',');";
                                })
                            , HQ.DateField().ID("ToDate").HQLangCode("ToDate").Width(250)

                            , HQ.Combo().ID("cboHandle")
                                    .Name("cboHandle").HQLangCode("Handle").HQProcedure("AR20500_pcHandle")
                                    .HQColumnShow("Descr").DisplayField("Descr").ValueField("ToStatus")
                                    .Width(250).HQHeightWidth(400, 300)
                                    .ForceSelection(true).HQAutoLoad(false)
                                    .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                                    .HQParam(new StoreParameterCollection() 
                                    { 
                                        new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw },
                                        new StoreParameter() { Name = "@UserName", Value = "HQ.userName", Mode = ParameterMode.Raw },
                                        new StoreParameter() { Name = "@Status", Value = "App.cboStatus.getValue()", Mode = ParameterMode.Raw }  
                                    })
                                    .LoadData()
                                    .Listeners(lst =>
                                    {

                                        lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                                    })
                            , HQ.Button().ID("btnProcess").HQLangCode("Handle").Width(150).MarginSpec("0 0 0 5")
                                 .Listeners(p =>
                                {
                                    p.Click.Fn = "btnProcess_Click";
                                })

                        )
                       , X.Container().Layout(LayoutType.HBox).MarginSpec("5 0 0 0")
            )//pnl header
            , X.GridPanel().ID("grdCust")
        //.Hidden(true)
                    .Scroll(ScrollMode.Both)                   
                    .View(
                        X.GridView().TrackOver(false).EnableTextSelection(true)
                        .GetRowClass(grc => grc.Fn = "pnlGridMCL_viewGetRowClass")
                    )
                    .Region(Region.Center)
                    .SelectionMemory(false)
                    .Store(
                        X.Store()
                        .ID("stoCust")
                        .PageSize(50)
                        .Model(Util.GenerateModel(typeof(AR20500_pgDetail_Result), "mdlAR20500_pgDetail", "ID", true))
                        .ServerProxy(X.AjaxProxy().Url(Url.Action("GetCustList"))).AutoLoad(false)
                        .Parameters(ps =>
                        {
                            ps.Add(new StoreParameter("BranchID", "App.cboCpnyID.getValue()", ParameterMode.Raw));
                            ps.Add(new StoreParameter("slsperID", "App.cboSlsperId.getValue()", ParameterMode.Raw));
                            ps.Add(new StoreParameter("fromDate", "App.FromDate.getValue()", ParameterMode.Raw));
                            ps.Add(new StoreParameter("toDate", "App.ToDate.getValue()", ParameterMode.Raw));
                            ps.Add(new StoreParameter("status", "App.cboStatus.getValue()", ParameterMode.Raw));
                        })
                        .Listeners(l =>
                        {
                            l.BeforeLoad.Fn = "stoBeforeLoad";
                            l.Load.Fn = "stoLoad";
                            l.Update.Fn = "stoChanged";
                        })
                    )
                    .Listeners(p =>
                    {
                        //p.BoxReady.Handler = "firstLoad();";
                    })
                    .SortableColumns(false)
        //.ColumnModel(act => { act.Listeners.HeaderClick.Fn = "grdCust_HeaderClick"; })
                    .ColumnModel(
                        X.RowNumbererColumn().Width(40)

                        //Colum Check
                        , X.CheckColumn().ID("ColCheck").DataIndex("ColCheck").Width(30).Editable(true).HideTitleEl(true)
                            .HeaderItems(
                                HQ.Checkbox().ID("ColCheck_Header")
                                    .Listeners(l =>
                                    {
                                        l.Change.Fn = "ColCheck_Header_Change";
                                    })
                        )
                        , X.Column().Text(Util.GetLang("CustID")).DataIndex("CustID").Width(100)
                        , X.Column().Text(Util.GetLang("CustName")).DataIndex("OutletName").Width(120).Editor(X.TextField().MaxLength(200).EnforceMaxLength(true))
                        , X.Column().Text(Util.GetLang("AR205ContactName")).DataIndex("ContactName").Width(120)
                        , X.Column().Text(Util.GetLang("Phone")).DataIndex("Phone").Width(90).Editor(X.TextField().MaxLength(30).EnforceMaxLength(true))
                        , X.Column().Text(Util.GetLang("SlsperID")).DataIndex("SlsperID").Width(90)
                        , X.Column().Text(Util.GetLang("SlsName")).DataIndex("Name").Width(120)
                        , X.Column().Text(Util.GetLang("Addr")).DataIndex("Addr1").Width(250).Editor(X.TextField()) //.MaxLength(200).EnforceMaxLength(true)
                        , X.Column().Text(Util.GetLang("AR20500CreateDate")).DataIndex("AR20500CreateDate").Width(250)
                        , X.Column().Text(Util.GetLang("ERPCustID")).DataIndex("ERPCustID").Width(250).Editor(X.TextField().MaxLength(50).EnforceMaxLength(true)).Hidden(true)
                        , X.Column().Text(Util.GetLang("NewCustID")).DataIndex("NewCustID").Width(100)
                        , X.Column().Text(Util.GetLang("CustHT")).DataIndex("CustHT").Width(100).Editor(X.TextField().MaxLength(30).EnforceMaxLength(true)).Hidden(true)
                        , X.Column()
                            .Text(Util.GetLang("SalesRouteID")).DataIndex("SalesRouteID").Renderer("renderSalesRouteID")
                            .Editor(
                                HQ.Combo().ID("cboColSalesRouteID").HQProcedure("AR20500_pcSalesRouteID")
                                .HQColumnShow("Descr").DisplayField("Descr").ValueField("Code")
                                .ForceSelection(true).HQHeightWidth(400, 300)
                                .HQParam(new StoreParameterCollection() 
                                { 
                                    new StoreParameter() { Name = "@BranchID", Value = "App.cboCpnyID.getValue()", Mode = ParameterMode.Raw }
                                })
                                .LoadData()
                                .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                                .Listeners(lst =>
                                    {

                                        lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                                    })
                            )
                        , X.Column()
                            .Text(Util.GetLang("SlsFreq")).DataIndex("SlsFreq")
                            .Editor(
                                HQ.Combo().ID("cboColSlsFreq1").HQProcedure("AR20500_pcSlsFreq")
                                .HQColumnShow("Descr").DisplayField("Descr").ValueField("Code")
                                .ForceSelection(true).HQHeightWidth(400, 300)
                                .HQParam(new StoreParameterCollection() 
                                { 
                                    new StoreParameter() { Name = "@langid", Value = "HQ.langID", Mode = ParameterMode.Raw }
                                })
                                .LoadData()
                                .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                                .Listeners(lst =>
                                    {

                                        lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                                    })
                            )

                        , X.Column()
                            .Text(Util.GetLang("WeekofVisit")).DataIndex("WeekofVisit").Renderer("renderWeekofVisit")
                            .Width(150)
                            .Editor(
                                HQ.Combo().ID("cboColWeekofVisit").HQProcedure("AR20500_pcWeekofVisit")//.HQAutoLoad(false)
                                .HQColumnShow("Descr").DisplayField("Descr").ValueField("Code")
                                .ForceSelection(true)
                                .Width(300).HQHeightWidth(400, 300)
                                .HQParam(new StoreParameterCollection() 
                                { 
                                    new StoreParameter() { 
                                        Name = "@SlsFreq", 
                                        Value = "App.slmCust.selected.items[0] ? App.slmCust.selected.items[0].data.SlsFreq : Ext.String.empty", 
                                        Mode = ParameterMode.Raw 
                                    }
                                    , new StoreParameter() { Name = "@SlsFreqType", Value = "A", Mode = ParameterMode.Value }
                                    , new StoreParameter() { Name = "@langid", Value = "HQ.langID", Mode = ParameterMode.Raw }
                                })
                                .LoadData()
                                .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                                .Listeners(lst =>
                                    {

                                        lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                                    })
                            )

                        , X.CheckColumn().ID("ColCheckMon").DataIndex("Mon").Width(120).Editable(true).Text(Util.GetLang("Mon")).Align(Alignment.Center)
                        , X.CheckColumn().ID("ColCheckTue").DataIndex("Tue").Width(120).Editable(true).Text(Util.GetLang("Tue")).Align(Alignment.Center)
                        , X.CheckColumn().ID("ColCheckWed").DataIndex("Wed").Width(120).Editable(true).Text(Util.GetLang("Wed")).Align(Alignment.Center)
                        , X.CheckColumn().ID("ColCheckThu").DataIndex("Thu").Width(120).Editable(true).Text(Util.GetLang("Thu")).Align(Alignment.Center)
                        , X.CheckColumn().ID("ColCheckFri").DataIndex("Fri").Width(120).Editable(true).Text(Util.GetLang("Fri")).Align(Alignment.Center)
                        , X.CheckColumn().ID("ColCheckSat").DataIndex("Sat").Width(120).Editable(true).Text(Util.GetLang("Sat")).Align(Alignment.Center)
                        , X.CheckColumn().ID("ColCheckSun").DataIndex("Sun").Width(120).Editable(true).Text(Util.GetLang("Sun")).Align(Alignment.Center)

                        , X.CommandColumn().Width(150)
                        .Commands(
                            X.GridCommand()
                            .Text(Util.GetLang("Reject"))
                            .ToolTip(t => t.Text = Util.GetLang("Rejectrowchanges"))
                            .CommandName("reject")
                            .Icon(Icon.ArrowUndo)
                        )
                        .PrepareToolbar(t => t.Handler = "toolbar.items.get(0).setVisible(record.dirty);")
                            .Listeners(l => 
                            { 
                                l.Command.Handler = "grdCust_Reject(record);"; 
                            })
                    )
                    .SelectionModel(X.RowSelectionModel().ID("slmCust").Mode(SelectionMode.Multi).Listeners(l => l.SelectionChange.Fn = "slmCust_Select"))

                    .Plugins(
                        X.CellEditing()
                        .ClicksToEdit(1)
                        .Listeners(ls =>
                        {

                            ls.BeforeEdit.Fn = "grdCust_BeforeEdit";
                            ls.Edit.Fn = "grdCust_Edit";
                            //ls.ValidateEdit.Fn = "grdCust_ValidateEdit";

                        })
                    )

                    .Features(
                        X.GridFilters()
                            .Local(true)
                            .Filters(
                                X.BooleanFilter().DataIndex("ColCheck"),
                                X.StringFilter().DataIndex("CustID"),
                                X.StringFilter().DataIndex("OutletName"),
                                X.StringFilter().DataIndex("SlsperID"),
                                X.StringFilter().DataIndex("Name"),
                                X.StringFilter().DataIndex("Addr1"),
                                X.StringFilter().DataIndex("ERPCustID"),
                                X.StringFilter().DataIndex("NewCustID")
                            )
                    )// grid
                     ,X.Panel().Region(Region.South).Layout(LayoutType.HBox).Height(200).Items(
                            X.Panel().ID("map_canvas").Flex(1).Height(200).Listeners(x =>
                                {
                                    x.AfterRender.Handler = "Gmap.Process.initialize()";
                                    x.Resize.Handler = "google.maps.event.trigger(Gmap.Declare.map, 'resize');";
                                }) // Panel: map_canvas                            
                                , X.Image().ID("imgImages").Width(300).Height(200).MarginSpec("10 10 10 10")                 
                    )//end PanelMap Picture
            )
            
            
            ,X.Window().ID("winProcess")   
                .Icon(Icon.UserAdd).Layout(LayoutType.Fit)
                .Title(Util.GetLang("MCPDate"))
                .Hidden(true).Maximizable(false)
                .Height(130)
                .Width(300)
                .Modal(true)
                .Buttons(
                    X.Button().ID("btnOK").Text(Util.GetLang("Ok"))
                        .Listeners(p => p.Click.Fn = "btnOKMCP_Click")
                    , X.Button().ID("btnExit").Text(Util.GetLang("Exit"))
                        .Listeners(p => p.Click.Fn = "btnExit_Click")
                )
                .Items(
                     X.FormPanel().ID("frmProcess")
                        .Layout(LayoutType.VBox)
                        .TrackResetOnLoad(true)
                        .DefaultAnchor("100%")
                        .BodyPadding(5)
                        .BodyBorder(0)
                        .FieldDefaults(act => { act.LabelAlign = LabelAlign.Right; act.LabelWidth = 100; })
                        .Items(
                            HQ.DateField().HQLangCode("FromDate").ID("dteFromDate").Name("popFromDate").Listeners(lst=>lst.Change.Fn="dteFromDate_change")
                            ,HQ.DateField().HQLangCode("ToDate").ID("dteToDate").Name("popToDate").Value(new DateTime(DateTime.Now.Year,12,31)).Listeners(lst=>lst.Change.Fn="dteToDate_change")
                
                        )          
                )
        )//frm Main
)

