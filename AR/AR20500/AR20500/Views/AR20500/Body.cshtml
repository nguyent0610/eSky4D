
@using Ext.Net;
@using Ext.Net.MVC;
@using HQ.eSkyFramework;
@using HQ.eSkyFramework.HQControl;
@using AR20500;
@{
    Layout = null;
    var X = Html.X();
    var HQ = Html.HQ();
}
@(
 X.Viewport()
.Layout(LayoutType.Fit)
.Items(
        X.FormPanel()
        .ID("frmMain")
        .BodyPadding(0)
        .KeyMap(Util.SetupKeyMap())
        .TopBar(Util.SetupToolbar(new AbstractComponent[]{
             X.Button()
            .ID("btnExport")
            .Text(Util.GetLang("Export"))
            .Icon(Icon.ArrowTurnRight)
            .Listeners(p=>{
                p.Click.Fn = "btnExport_Click";
            })
        },"Print,Save,New,Delete", true, ""))
        .Layout(LayoutType.Border)
        .FieldDefaults(act => { act.LabelAlign = LabelAlign.Right; })
        .DefaultButton("btnLoad")
        .Listeners(lst =>
        {
            lst.BoxReady.Fn = "frmMain_BoxReady";
        })
        .Items(
           X.Panel().ID("pnlHeader")
            .Region(Region.North).Border(false)
            .Layout(LayoutType.VBox)
            .AutoScroll(true)
            .Items(
               //row1
               X.Container().Layout(LayoutType.HBox).MarginSpec("5 0 0 0")
                    .Items(
                        HQ.Combo().ID("cboTerritory").MultiSelect(true)
                        .Name("cboTerritory").HQLangCode("AR20500Territory").HQProcedure("AR20500_pcTerritory")
                        .HQColumnShow("Territory,Descr").DisplayField("Territory").ValueField("Territory")
                        .Width(250).HQHeightWidth(400, 300)
                        .ForceSelection(true).HQAutoLoad(false).AllowBlank(false)
                        .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                        .HQParam(new StoreParameterCollection()
                        {
                            new StoreParameter() { Name = "@UserName", Value = "HQ.userName", Mode = ParameterMode.Raw },
                            new StoreParameter() { Name = "@CpnyID", Value = "HQ.cpnyID", Mode = ParameterMode.Raw },
                            new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw }
                        })
                        .LoadData()
                        .Listeners(lst =>
                        {
                            lst.Change.Fn = "cboTerritory_Change";
                            lst.TriggerClick.Handler = "if (index == 0) {this.clearValue();}";
                        })

                       , HQ.DateField().ID("FromDate").HQLangCode("FromDate").Width(250)

                       , HQ.Combo().ID("cboStatus")
                            .Name("cboStatus").HQLangCode("Status").HQProcedure("AR20500_pcStatus")
                            .HQColumnShow("Code,Descr").DisplayField("Descr").ValueField("Code")
                            .Width(250).HQHeightWidth(400, 300)
                            .ForceSelection(true).HQAutoLoad(false)
                            .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                            .HQParam(new StoreParameterCollection()
                            {
                                new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw },
                                new StoreParameter() { Name = "@CpnyID", Value = "HQ.cpnyID", Mode = ParameterMode.Raw },
                                new StoreParameter() { Name = "@UserID", Value = "HQ.userName", Mode = ParameterMode.Raw }
                            })
                            .LoadData()
                            .Listeners(lst =>
                            {
                                lst.Change.Fn = "cboStatus_Change";
                                lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                            })

                        , HQ.Button().ID("btnLoad").HQLangCode("LoadData").Width(150).MarginSpec("0 0 0 5").Icon(Icon.ArrowRefresh)
                            .Listeners(lst =>
                            {
                                lst.Click.Fn = "btnLoad_Click";
                            })


                    )

                    //row 2
                    , X.Container().Layout(LayoutType.HBox).MarginSpec("5 0 0 0")
                        .Items(
                            HQ.Combo().ID("cboCpnyID")
                            .Name("cboCpnyID").HQLangCode("CpnyID").HQProcedure("AR20500_pcBranchAllByUser")
                            .HQColumnShow("BranchID,BranchName").DisplayField("BranchID").ValueField("BranchID")
                            .Width(250).HQHeightWidth(400, 300)
                            .ForceSelection(true).HQAutoLoad(false).AllowBlank(false)
                            .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                            .HQParam(new StoreParameterCollection()
                            {
                                new StoreParameter() { Name = "@UserID", Value = "HQ.userName", Mode = ParameterMode.Raw },
                                new StoreParameter() { Name = "@Territory", Value = "App.cboTerritory.getValue().join(',')", Mode = ParameterMode.Raw }
                            })
                            .LoadData()
                            .Listeners(lst =>
                            {
                                lst.Change.Fn = "cboCpnyID_Change";
                                lst.Select.Fn = "cboCpnyID_Select";
                                lst.TriggerClick.Handler = "if (index == 0) {this.clearValue();}";

                            }),
                            HQ.DateField().ID("ToDate").HQLangCode("ToDate").Width(250)

                            , HQ.Combo().ID("cboHandle")
                            .Name("cboHandle").HQLangCode("Handle").HQProcedure("AR20500_pcHandle")
                            .HQColumnShow("Descr").DisplayField("Descr").ValueField("ToStatus")
                            .Width(250).HQHeightWidth(400, 300)
                            .ForceSelection(true).HQAutoLoad(false)
                            .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                            .HQParam(new StoreParameterCollection()
                            {
                                    new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw },
                                    new StoreParameter() { Name = "@UserName", Value = "HQ.userName", Mode = ParameterMode.Raw },
                                    new StoreParameter() { Name = "@Status", Value = "App.cboStatus.getValue()", Mode = ParameterMode.Raw }
                            })
                            .LoadData()
                            .Listeners(lst =>
                            {
                                lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                                lst.BeforeSelect.Fn = "cboHandle_BeforeChange";
                                lst.Change.Fn = "cboHandle_Change";
                                //  lst.Select.Fn = "cboHandle_Select";
                            })

                            , HQ.Button().ID("btnProcess").HQLangCode("Handle").Width(150).MarginSpec("0 0 0 5")
                            .Icon(Icon.ShapeHandles)
                            .Listeners(p =>
                            {
                                p.Click.Fn = "btnProcess_Click";
                            })
                        )
                ,X.Container().Layout(LayoutType.HBox).MarginSpec("5 0 5 0")
                    .Items(
                        HQ.Combo().ID("cboSlsperId")
                        .Name("cboSlsperId").HQLangCode("SlsperId").HQProcedure("AR20500_pcSlsperIdByBranch")
                        .HQColumnShow("SlsperId,Name").DisplayField("SlsperId").ValueField("SlsperId")
                        .Width(250).HQHeightWidth(400, 300)
                        .ForceSelection(true).MultiSelect(true).HQAutoLoad(false)
                        .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                        .HQParam(new StoreParameterCollection()
                        {
                            new StoreParameter() { Name = "@UserName", Value = "HQ.userName", Mode = ParameterMode.Raw },
                            new StoreParameter() { Name = "@BranchID", Value = "App.cboCpnyID.getValue()", Mode = ParameterMode.Raw }
                        })
                        .LoadData()
                        .Listeners(lst =>
                        {
                            lst.TriggerClick.Handler = "if (index == 0) {this.clearValue();}";
                            lst.Expand.Handler = "HQ.combo.expand(this,',');";
                        })

                        , HQ.Combo().ID("cboUpdateType")
                        .Name("cboUpdateType").HQLangCode("AR2050UpdateType").HQProcedure("AR20500_pcUpdateType")
                        .HQColumnShow("Descr").DisplayField("Descr").ValueField("Code")
                        .Width(250).HQHeightWidth(400, 300)
                        .ForceSelection(true).HQAutoLoad(true)
                        .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                        .HQParam(new StoreParameterCollection()
                        {
                            new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw },
                            new StoreParameter() { Name = "@CpnyID", Value = "HQ.cpnyID", Mode = ParameterMode.Raw },
                            new StoreParameter() { Name = "@UserName", Value = "HQ.userName", Mode = ParameterMode.Raw }
                        })
                        .HQFirstDefault(true)
                        .LoadData()
                        .Listeners(lst =>
                        {
                            lst.Change.Fn = "cboUpdateType_Change";
                            lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                        })
                        , X.Button().ID("btnSave")
                            .MarginSpec("0 0 0 255")
                                .Width(150)
                                .Text(Util.GetLang("AR20500Save"))
                                .Icon(Icon.TabEdit)
                                .Listeners(p =>
                                {
                                    p.Click.Fn = "btnSave_Click";
                                })
                    )
            )//pnl header
            , X.GridPanel().ID("grdCust")
                    //.Hidden(true)
                    .Scroll(ScrollMode.Both)
                    .View(
                        X.GridView().TrackOver(false).EnableTextSelection(true)
                        .GetRowClass(grc => grc.Fn = "pnlGridMCL_viewGetRowClass")
                    )
                    .Region(Region.Center)
                    .SelectionMemory(false)
                    .Store(
                        X.Store()
                        .ID("stoCust")
                        .PageSize(50)
                        .Model(Util.GenerateModel(typeof(AR20500_pgDetail_Result), "mdlAR20500_pgDetail", "ID", true))
                        .ServerProxy(X.AjaxProxy().Url(Url.Action("GetCustList")).Timeout(int.MaxValue)).AutoLoad(false)
                        .Parameters(ps =>
                        {
                            ps.Add(new StoreParameter("BranchID", "App.cboCpnyID.getValue()", ParameterMode.Raw));
                            ps.Add(new StoreParameter("slsperID", "App.cboSlsperId.getValue()", ParameterMode.Raw));
                            ps.Add(new StoreParameter("territory", "App.cboTerritory.getValue()", ParameterMode.Raw));
                            ps.Add(new StoreParameter("updateType", "App.cboUpdateType.getValue()", ParameterMode.Raw));
                            ps.Add(new StoreParameter("fromDate", "App.FromDate.getValue()", ParameterMode.Raw));
                            ps.Add(new StoreParameter("toDate", "App.ToDate.getValue()", ParameterMode.Raw));
                            ps.Add(new StoreParameter("status", "App.cboStatus.getValue()", ParameterMode.Raw));
                        })
                        .Listeners(l =>
                        {
                            l.BeforeLoad.Fn = "stoBeforeLoad";
                            l.Load.Fn = "stoLoad";
                            l.Update.Fn = "stoChanged";
                        })
                    )
                    .Listeners(p =>
                    {
                        //p.BoxReady.Handler = "firstLoad();";
                    })
                    .SortableColumns(false)
                    //.ColumnModel(act => { act.Listeners.HeaderClick.Fn = "grdCust_HeaderClick"; })
                    .ColumnModel(
                        X.RowNumbererColumn().Width(40).Renderer("renderIndex")

                        //Colum Check
                        , X.CheckColumn().ID("ColCheck").DataIndex("ColCheck").Width(30).Editable(true).HideTitleEl(true).Align(Alignment.Center)
                            .HeaderItems(
                                HQ.Checkbox().ID("ColCheck_Header")
                                    .Listeners(l =>
                                    {
                                        l.ValidityChange.Fn = "ColCheck_Header_ValidityChange";
                                        l.Change.Fn = "ColCheck_Header_Change";
                                    })
                        )
                        //, X.Column().Text(Util.GetLang("AR2050UpdateType")).DataIndex("UpdateType").Width(100).Renderer("rendererUpdateType")
                        , X.Column().Text(Util.GetLang("CustID")).DataIndex("CustID").Width(100)
                        , X.Column().Text(Util.GetLang("CustName")).DataIndex("OutletName").Width(120).Editor(X.TextField().MaxLength(200).EnforceMaxLength(true))
                        
                        
                        
                        , X.Column().Text(Util.GetLang("AR205ContactName")).DataIndex("ContactName").Width(120).Editor(X.TextField().MaxLength(200).EnforceMaxLength(true))
                        , X.Column().Text(Util.GetLang("Phone")).DataIndex("Phone").Width(90).Editor(X.TextField().MaxLength(30).EnforceMaxLength(true))
                        , X.Column().Text(Util.GetLang("AR20500Mobile")).DataIndex("Mobile").Width(90).Editor(X.TextField().MaxLength(30).EnforceMaxLength(true)).ID("clmMobile").Hidden(true)
                        , X.Column().Text(Util.GetLang("TaxCode")).DataIndex("TaxCode").Width(100).Editor(X.TextField().MaxLength(15).EnforceMaxLength(true)).Hidden(true)
                        , X.Column().Text(Util.GetLang("SlsperID")).DataIndex("SlsperID").Width(90)
                        , X.Column().Text(Util.GetLang("SlsName")).DataIndex("Name").Width(120)
                        , X.Column().Text(Util.GetLang("ClassCust")).DataIndex("ClassCust").Renderer("renderClassCust").Width(120).ID("colClassCust")
                        .Editor(
                            HQ.Combo().ID("cboClassCust").HQProcedure("AR20500_pcClassCust")
                            .HQColumnShow("Code,Descr").DisplayField("Descr").ValueField("Code")
                            .ForceSelection(true).HQHeightWidth(400, 300).HQAutoLoad(true)
                            .HQParam(new StoreParameterCollection()
                            {
                                new StoreParameter() { Name = "@UserName", Value = "HQ.userName", Mode = ParameterMode.Raw },
                                new StoreParameter() { Name = "@CpnyID", Value = "HQ.cpnyID", Mode = ParameterMode.Raw },
                                new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw }
                            })
                            .LoadData()
                            .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                            .Listeners(lst =>
                            {
                                lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                            })
                        )
                        , X.Column().Text(Util.GetLang("Addr")).DataIndex("Address").Width(250) //.MaxLength(200).EnforceMaxLength(true)
                        , X.Column().Text(Util.GetLang("NumberHouse")).DataIndex("Addr1").Width(100).Editor(X.TextField())
                        , X.Column().Text(Util.GetLang("StreetNames")).DataIndex("Addr2").Width(100).Editor(X.TextField())

                        , X.Column().Text(Util.GetLang("AR20500Ward")).DataIndex("Ward").Width(120).Editor(X.TextField().MaxLength(50).EnforceMaxLength(true))
                        , X.Column().Text(Util.GetLang("AR20500Territory")).DataIndex("Territory").Width(120).Renderer("renderTerritory")
                        .Editor(
                        HQ.Combo().ID("cboColTerritory").HQProcedure("AR20500_pcTerritory")
                        .HQColumnShow("Territory,Descr").DisplayField("Descr").ValueField("Territory")
                        .ForceSelection(true).HQHeightWidth(400, 300)
                        .HQParam(new StoreParameterCollection()
                        {
                            new StoreParameter() { Name = "@UserName", Value = "HQ.userName", Mode = ParameterMode.Raw },
                            new StoreParameter() { Name = "@CpnyID", Value = "HQ.cpnyID", Mode = ParameterMode.Raw },
                            new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw }
                        })
                        .LoadData()
                            .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                            .Listeners(lst =>
                            {
                                lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                            })
                        )
                        , X.Column().Text(Util.GetLang("SubTerritory")).DataIndex("SubTerritory").Renderer("renderSubTerritory").Width(120)
                        .Editor(
                        HQ.Combo().ID("cboColSubTerritory").HQProcedure("AR20500_pcSI_SubTerritory")
                        .HQColumnShow("Code,Descr").DisplayField("Descr").ValueField("Code")
                        .ForceSelection(true).HQHeightWidth(400, 300)
                        .HQParam(new StoreParameterCollection()
                        {
                            new StoreParameter() { Name = "@UserName", Value = "HQ.userName", Mode = ParameterMode.Raw },
                            new StoreParameter() { Name = "@CpnyID", Value = "HQ.cpnyID", Mode = ParameterMode.Raw },
                            new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw }
                        })
                        .LoadData()
                        .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                        .Listeners(lst =>
                        {
                            //    lst.Expand.Fn = "cboColSubTerritory_Expand";
                            //    lst.Collapse.Fn = "cboColSubTerritory_Collapse";
                            lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                        })
                        )

                        , X.Column().Text(Util.GetLang("State")).DataIndex("State").Renderer("renderState").Width(120)
                        .Editor(
                        HQ.Combo().ID("cboColState").HQProcedure("AR20500_pcState")
                        .HQColumnShow("Code,Descr").DisplayField("Descr").ValueField("Code")
                        .ForceSelection(true).HQHeightWidth(400, 300)
                        .HQParam(new StoreParameterCollection()
                        {
                            new StoreParameter() { Name = "@UserName", Value = "HQ.userName", Mode = ParameterMode.Raw },
                            new StoreParameter() { Name = "@CpnyID", Value = "HQ.cpnyID", Mode = ParameterMode.Raw },
                            new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw }
                        })
                        .LoadData()
                        .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                        .Listeners(lst =>
                        {
                            //  lst.Expand.Fn = "cboColState_Expand";
                            //   lst.Collapse.Fn = "cboColState_Collapse";
                            lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                        })
                        )// TỈnh, số nhà, phường, quận, tên đường load lại data của KH
                        , X.Column().Text(Util.GetLang("District")).DataIndex("District").Renderer("renderDistrict").Width(120)
                        .Editor(
                            HQ.Combo().ID("cboColDistrict").HQProcedure("AR20500_pcDistrict")
                            .HQColumnShow("Code,Descr").DisplayField("Descr").ValueField("Code")
                            .ForceSelection(true).HQHeightWidth(400, 300)
                            .HQParam(new StoreParameterCollection()
                            {
                                new StoreParameter() { Name = "@UserName", Value = "HQ.userName", Mode = ParameterMode.Raw },
                                new StoreParameter() { Name = "@CpnyID", Value = "HQ.cpnyID", Mode = ParameterMode.Raw },
                                new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw }
                            })
                            .LoadData()
                            .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                            .Listeners(lst =>
                            {
                                // lst.Expand.Fn = "cboColDistrict_Expand";
                                // lst.Collapse.Fn = "cboColDistrict_Collapse";
                                lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                            })
                        )
                                    , X.Column().Text(Util.GetLang("Market")).DataIndex("Market").Width(120).Renderer("renderMarket")
                        .Editor(
                            HQ.Combo().ID("cboMarket").HQProcedure("AR20500_pcMarket")
                            .HQColumnShow("Market,Descr").DisplayField("Descr").ValueField("Market")
                            .ForceSelection(true).HQHeightWidth(400, 300)
                            .HQParam(new StoreParameterCollection()
                            {
                                new StoreParameter() { Name = "@UserName", Value = "HQ.userName", Mode = ParameterMode.Raw },
                                new StoreParameter() { Name = "@CpnyID", Value = "HQ.cpnyID", Mode = ParameterMode.Raw },
                                new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw }
                            })
                            .LoadData()
                            .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                            .Listeners(lst =>
                            {
                                lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                            })
                        )
                        , X.Column()
                        .Text(Util.GetLang("Channel")).DataIndex("Channel").Renderer("renderChannel").Width(120)
                        .Editor(
                                HQ.Combo().ID("cboColChannel").HQProcedure("AR20500_pcAR_Channel")
                            .HQColumnShow("Code,Descr").DisplayField("Descr").ValueField("Code")
                            .ForceSelection(true).HQHeightWidth(400, 300)
                            .HQParam(new StoreParameterCollection()
                            {
                                new StoreParameter() { Name = "@UserName", Value = "HQ.userName", Mode = ParameterMode.Raw },
                                new StoreParameter() { Name = "@CpnyID", Value = "HQ.cpnyID", Mode = ParameterMode.Raw },
                                new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw }
                            })
                            .LoadData()
                            .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                            .Listeners(lst =>
                            {
                                lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                            })
                        )

                        , X.Column()
                        .Text(Util.GetLang("AR20500ShopType")).DataIndex("ShopType").Renderer("renderShopType").Width(150)
                        .Editor(
                            HQ.Combo().ID("cboColShopType").HQProcedure("AR20500_pcAR_ShopType")
                            .HQColumnShow("Code,Descr").DisplayField("Descr").ValueField("Code")
                            .ForceSelection(true).HQHeightWidth(400, 300)
                            .HQParam(new StoreParameterCollection()
                        {
                            new StoreParameter() { Name = "@UserName", Value = "HQ.userName", Mode = ParameterMode.Raw },
                            new StoreParameter() { Name = "@CpnyID", Value = "HQ.cpnyID", Mode = ParameterMode.Raw },
                            new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw }
                        })
                        .LoadData()
                        .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                        .Listeners(lst =>
                        {

                            lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                        })
                        )

                        , X.Column()
                        .Text(Util.GetLang("AR20500Loc")).DataIndex("Location").Width(150).Renderer("renderLocation")
                        .Editor(
                            HQ.Combo().ID("cboColLocation").HQProcedure("AR20500_pcAR_Location")
                            .HQColumnShow("Code,Descr").DisplayField("Descr").ValueField("Code")
                            .ForceSelection(true).HQHeightWidth(400, 300)
                            .HQParam(new StoreParameterCollection()
                            {
                                new StoreParameter() { Name = "@UserName", Value = "HQ.userName", Mode = ParameterMode.Raw },
                                new StoreParameter() { Name = "@CpnyID", Value = "HQ.cpnyID", Mode = ParameterMode.Raw },
                                new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw }
                            })
                            .LoadData()
                            .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                            .Listeners(lst =>
                            {

                                lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                            })
                        )

                        , X.Column().Text(Util.GetLang("AR20500StandID")).DataIndex("StandID").Width(150).Renderer("renderStandID").Hidden(true)
                        .Editor(
                            HQ.Combo().ID("cboStandID").HQProcedure("AR20500_pcStandID")
                            .HQColumnShow("StandID,Descr").DisplayField("Descr").ValueField("StandID")
                            .ForceSelection(true).HQHeightWidth(400, 300).HQAutoLoad(true)
                            .HQParam(new StoreParameterCollection()
                            {
                                new StoreParameter() { Name = "@CpnyID", Value = "HQ.cpnyID", Mode = ParameterMode.Raw },
                                new StoreParameter() { Name = "@UserName", Value = "HQ.userName", Mode = ParameterMode.Raw },
                                new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw }
                            })
                            .LoadData()
                            .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                            .Listeners(lst =>
                            {

                                lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                            })
                        )

                        , X.Column().Text(Util.GetLang("AR20500BrandID")).DataIndex("BrandID").Width(150).Renderer("renderBrandID").Hidden(true)
                        .Editor(
                            HQ.Combo().ID("cboBrandID").HQProcedure("AR20500_pcBrandID")
                            .HQColumnShow("Code,Descr").DisplayField("Descr").ValueField("Code")
                            //.ForceSelection(true)
                            .HQHeightWidth(400, 300).HQAutoLoad(true).MultiSelect(true)
                            .HQParam(new StoreParameterCollection()
                            {
                                new StoreParameter() { Name = "@CpnyID", Value = "HQ.cpnyID", Mode = ParameterMode.Raw },
                                new StoreParameter() { Name = "@UserName", Value = "HQ.userName", Mode = ParameterMode.Raw },
                                new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw }
                            })
                            .LoadData()
                            .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                            .Listeners(lst =>
                            {
                                lst.Expand.Handler = "this.store.clearFilter(); HQ.combo.expand(this,',');";
                                lst.Focus.Fn = "cboBrandID_Focus";
                                lst.Blur.Handler = "this.forceSelection = false;";
                                lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                            })


                        )


                        , X.Column().Text(Util.GetLang("AR20500SizeID")).DataIndex("SizeID").Width(150).Renderer("renderSizeID").Hidden(true)
                        .Editor(
                            HQ.Combo().ID("cboSizeID").HQProcedure("AR20500_pcSizeID")
                            .HQColumnShow("Code,Descr").DisplayField("Descr").ValueField("Code")
                            .ForceSelection(true).HQHeightWidth(400, 300).HQAutoLoad(true)
                            .HQParam(new StoreParameterCollection()
                            {
                                new StoreParameter() { Name = "@CpnyID", Value = "HQ.cpnyID", Mode = ParameterMode.Raw },
                                new StoreParameter() { Name = "@UserName", Value = "HQ.userName", Mode = ParameterMode.Raw },
                                new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw }
                            })
                            .LoadData()
                            .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                            .Listeners(lst =>
                            {

                                lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                            })
                        )

                        , X.Column().Text(Util.GetLang("AR20500DisplayID")).DataIndex("DisplayID").Width(150).Renderer("renderDisplayID").Hidden(true)
                        .Editor(
                            HQ.Combo().ID("cboDisplayID").HQProcedure("AR20500_pcDisplayID")
                            .HQColumnShow("Code,Descr").DisplayField("Descr").ValueField("Code")
                            .ForceSelection(true).HQHeightWidth(400, 300).HQAutoLoad(true)
                            .HQParam(new StoreParameterCollection()
                            {
                                new StoreParameter() { Name = "@CpnyID", Value = "HQ.cpnyID", Mode = ParameterMode.Raw },
                                new StoreParameter() { Name = "@UserName", Value = "HQ.userName", Mode = ParameterMode.Raw },
                                new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw }
                            })
                            .LoadData()
                            .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                            .Listeners(lst =>
                            {

                                lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                            })
                        )
                             , X.Column().Text(Util.GetLang("AR20500OUnit")).DataIndex("OUnit").Width(200).Renderer("renderOUnit").ID("clmOUnit").Hidden(true)
                            .Editor(
                                HQ.Combo().ID("cboColOUnit").HQProcedure("AR20500_pcOunit")
                                .HQColumnShow("Code,Descr").DisplayField("Descr").ValueField("Code")
                                .MultiSelect(true)
                                .HQHeightWidth(400, 300)
                                .HQParam(new StoreParameterCollection()
                            {
                                new StoreParameter() { Name = "@BranchID", Value = "App.cboCpnyID.getValue()", Mode = ParameterMode.Raw },
                                new StoreParameter() { Name = "@SlsperID", Value = "_slsperID", Mode = ParameterMode.Raw },
                                new StoreParameter() { Name = "@UserName", Value = "HQ.userName", Mode = ParameterMode.Raw },
                                new StoreParameter() { Name = "@CpnyID", Value = "HQ.cpnyID", Mode = ParameterMode.Raw },
                                new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw },
                                
                            })
                                .LoadData()
                                .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                                .Listeners(lst =>
                                {
                                    lst.Expand.Handler = "this.store.clearFilter(); HQ.combo.expand(this,',');";
                                    lst.Focus.Fn = "cboColOUnit_Focus";
                                    lst.Blur.Handler = "this.forceSelection = false;";
                                    lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                                })
                            )


                        , X.NumberColumn().Text(Util.GetLang("AR20500Sales")).DataIndex("Sales").Format("0,000").Align(Alignment.Right).StyleSpec("text-align:left")
                        , X.DateColumn().Text(Util.GetLang("AR20500CreateDate")).DataIndex("AR20500CreateDate").Width(130).Format(Current.FormatDate + " HH:mm")
                        // , X.DateColumn().Text(Util.GetLang("AR20500CreateDate")).DataIndex("MinMCPDate").Width(110).Format(Current.FormatDate)
                        , X.Column().Text(Util.GetLang("ERPCustID")).DataIndex("ERPCustID").Width(130).Editor(X.TextField().MaxLength(50).EnforceMaxLength(true)).Hidden(true)
                        , X.Column().Text(Util.GetLang("NewCustID")).DataIndex("NewCustID").Width(100)
                        , X.Column().Text(Util.GetLang("CustHT")).DataIndex("CustHT").Width(100).Editor(X.TextField().MaxLength(30).EnforceMaxLength(true)).Hidden(true)
                            , X.Column().Text(Util.GetLang("TypeCabinetsDescr")).DataIndex("TypeCabinetsDescr").Width(120).Hidden(true)
                        , X.Column().Text(Util.GetLang("SalesRouteID")).DataIndex("SalesRouteID").Renderer("renderSalesRouteID")
                            .Editor(
                                HQ.Combo().ID("cboColSalesRouteID").HQProcedure("AR20500_pcSalesRouteID")
                                .HQColumnShow("Descr").DisplayField("Descr").ValueField("Code")
                                .ForceSelection(true).HQHeightWidth(400, 300)
                                .HQParam(new StoreParameterCollection()
                                {
                                    new StoreParameter() { Name = "@BranchID", Value = "App.cboCpnyID.getValue()", Mode = ParameterMode.Raw },
                                     new StoreParameter() { Name = "@SlsperID", Value = "_slsperID", Mode = ParameterMode.Raw },
                                    new StoreParameter() { Name = "@UserName", Value = "HQ.userName", Mode = ParameterMode.Raw },
                                    new StoreParameter() { Name = "@CpnyID", Value = "HQ.cpnyID", Mode = ParameterMode.Raw },
                                    new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw }
                                })
                                .LoadData()
                                .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                                .Listeners(lst =>
                                {

                                    lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                                })
                            )

                        , X.Column().Text(Util.GetLang("SlsFreq")).DataIndex("SlsFreq")//.Renderer("renderSlsFreq")
                            .Editor(
                                HQ.Combo().ID("cboColSlsFreq1").HQProcedure("AR20500_pcSlsFreq")
                                
                                .HQColumnShow("Code,Descr").DisplayField("Descr").ValueField("Code")
                                .ForceSelection(true).HQHeightWidth(400, 300)
                                .HQParam(new StoreParameterCollection()
                                {
                                    new StoreParameter() { Name = "@langid", Value = "HQ.langID", Mode = ParameterMode.Raw }
                                })
                                .LoadData()
                                .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                                .Listeners(lst =>
                                {

                                    lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                                })
                            )


                         , X.Column().Text(Util.GetLang("SubRouteID")).DataIndex("SubRouteID").Renderer("renderSubRouteID")
                            .Editor(
                                HQ.Combo().ID("cboColSubRoute").HQProcedure("AR20500_pcSubRoute")
                                .HQColumnShow("SubRouteID,WeekOfVisit,Descr").DisplayField("Descr").ValueField("SubRouteID")
                                .ForceSelection(false).HQHeightWidth(400, 500)
                                .HQParam(new StoreParameterCollection()
                                {
                                    new StoreParameter() { Name = "@UserName", Value = "HQ.userName", Mode = ParameterMode.Raw },
                                    new StoreParameter() { Name = "@CpnyID", Value = "HQ.cpnyID", Mode = ParameterMode.Raw },
                                    new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw },
                                    new StoreParameter() { Name = "@SlsFreq", Value = "_slsFreq", Mode = ParameterMode.Raw }
                                    
                                    //new StoreParameter() {
                                    //        Name = "@SlsFreq",
                                    //        Value = "App.slmCust.selected.items[0] ? App.slmCust.selected.items[0].data.SlsFreq : Ext.String.empty",
                                    //        Mode = ParameterMode.Raw
                                    //    }
                                })
                                .LoadData()
                                .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                                .Listeners(lst =>
                                {

                                    lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                                })
                            )
                        , X.Column().Text(Util.GetLang("WeekofVisit")).DataIndex("WeekofVisit").Renderer("renderWeekofVisit")
                            .Width(150)
                            .Editor(
                                HQ.Combo().ID("cboColWeekofVisit").HQProcedure("AR20500_pcWeekofVisit")//.HQAutoLoad(false)
                                .HQColumnShow("Descr").DisplayField("Descr").ValueField("Code")
                                .ForceSelection(true)
                                .Width(300).HQHeightWidth(400, 300)
                                .HQParam(new StoreParameterCollection()
                                {
                                    new StoreParameter() {
                                        Name = "@SlsFreq",
                                        Value = "App.slmCust.selected.items[0] ? App.slmCust.selected.items[0].data.SlsFreq : Ext.String.empty",
                                        Mode = ParameterMode.Raw
                                    }
                                    , new StoreParameter() { Name = "@SlsFreqType", Value = "A", Mode = ParameterMode.Value }
                                    , new StoreParameter() { Name = "@langid", Value = "HQ.langID", Mode = ParameterMode.Raw }
                                })
                                .LoadData()
                                .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                                .Listeners(lst =>
                                {

                                    lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                                })
                            )

                        , X.CheckColumn().ID("ColCheckMon").DataIndex("Mon").Width(50).Editable(true).Text(Util.GetLang("Mon")).Align(Alignment.Center)
                        , X.CheckColumn().ID("ColCheckTue").DataIndex("Tue").Width(50).Editable(true).Text(Util.GetLang("Tue")).Align(Alignment.Center)
                        , X.CheckColumn().ID("ColCheckWed").DataIndex("Wed").Width(50).Editable(true).Text(Util.GetLang("Wed")).Align(Alignment.Center)
                        , X.CheckColumn().ID("ColCheckThu").DataIndex("Thu").Width(50).Editable(true).Text(Util.GetLang("Thu")).Align(Alignment.Center)
                        , X.CheckColumn().ID("ColCheckFri").DataIndex("Fri").Width(50).Editable(true).Text(Util.GetLang("Fri")).Align(Alignment.Center)
                        , X.CheckColumn().ID("ColCheckSat").DataIndex("Sat").Width(50).Editable(true).Text(Util.GetLang("Sat")).Align(Alignment.Center)
                        , X.CheckColumn().ID("ColCheckSun").DataIndex("Sun").Width(70).Editable(true).Text(Util.GetLang("Sun")).Align(Alignment.Center)
                        , X.NumberColumn().Text(Util.GetLang("VisitsPerDay")).DataIndex("VisitsPerDay").Format("0,000").Align(Alignment.Right).StyleSpec("text-align:left").Hidden(true)
                        .Editor(X.NumberField().DecimalPrecision(0).MinValue(0)).Width(150)

                        , X.Column().Text(Util.GetLang("AR20500Reason")).DataIndex("Reason").Width(200).Renderer("renderReason")
                        .Editor(
                            HQ.Combo().ID("cboColReason").HQProcedure("AR20500_pcReason")
                            .HQColumnShow("Code,Descr").DisplayField("Descr").ValueField("Code")
                            .MultiSelect(true)
                            //.ForceSelection(true)
                            .HQHeightWidth(400, 300)
                            .HQParam(new StoreParameterCollection()
                            {
                                new StoreParameter() { Name = "@UserName", Value = "HQ.userName", Mode = ParameterMode.Raw },
                                new StoreParameter() { Name = "@CpnyID", Value = "HQ.cpnyID", Mode = ParameterMode.Raw },
                                new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw }
                            })
                            .LoadData()
                            .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                            .Listeners(lst =>
                            {
                                lst.Expand.Handler = "this.store.clearFilter(); HQ.combo.expand(this,',');";
                                lst.Focus.Fn = "cboColReason_Focus";
                                lst.Blur.Handler = "this.forceSelection = false;";
                                lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                            })
                        )
                        , X.CheckColumn().ID("chkEditInfor").DataIndex("EditInfo").Width(50).Editable(true).Text(Util.GetLang("AR20500EditInfo")).Align(Alignment.Center).Width(120)
                        , X.Column().Text(Util.GetLang("AR20500Delete"))//.Renderer("renderSummaryReportFloatColor")
                        .Columns(
                            X.CheckColumn().ID("chkUpdBussPic").DataIndex("EditBusinessPic").Width(50).Editable(true).Text(Util.GetLang("AR20500EditBussPic")).Align(Alignment.Center).Width(100)
                            , X.CheckColumn().ID("chkUpdProfilePic").DataIndex("EditProfilePic").Width(70).Editable(true).Text(Util.GetLang("AR20500EditProPic")).Align(Alignment.Center).Width(100)
                        )
                        //Them thoi gian

                        , X.DateColumn().Text(Util.GetLang("AR20500Date1")).DataIndex("Date1").Format(Current.FormatDate).Format(Current.FormatDate + " HH:mm").Width(150)
                        , X.DateColumn().Text(Util.GetLang("AR20500Date2")).DataIndex("Date2").Format(Current.FormatDate).Format(Current.FormatDate + " HH:mm").Width(150)
                        //end them thoi gian
                        , X.CommandColumn().Width(130)
                        .Commands(
                            X.GridCommand()
                            .Text(Util.GetLang("Reject"))
                            .ToolTip(t => t.Text = Util.GetLang("Rejectrowchanges"))
                            .CommandName("reject")
                            .Icon(Icon.ArrowUndo)
                        )
                        .PrepareToolbar(t => t.Handler = "toolbar.items.get(0).setVisible(record.dirty);")
                            .Listeners(l =>
                            {
                                l.Command.Handler = "grdCust_Reject(record);";
                            })
                    )
                    .SelectionModel(X.RowSelectionModel().ID("slmCust").Mode(SelectionMode.Multi).Listeners(l => l.SelectionChange.Fn = "slmCust_Select"))
                        .BottomBar(
                            X.PagingToolbar().HideRefresh(true)
                            .Items(
                                X.Label("Page size:"),
                                X.ToolbarSpacer(10),
                                X.ComboBox()
                                .Width(80)
                                .Items("1", "2", "10", "20", "30", "50")
                                .SelectedItems("50")
                                .Listeners(l =>
                                {
                                    l.Select.Fn = "HQ.grid.onPageSelect";
                                })
                            )
                            .Plugins(X.ProgressBarPager())
                        )
                    .Plugins(
                        X.CellEditing()
                        .ClicksToEdit(1)
                        .Listeners(ls =>
                        {

                            ls.BeforeEdit.Fn = "grdCust_BeforeEdit";
                            ls.Edit.Fn = "grdCust_Edit";
                            ls.ValidateEdit.Fn = "grdCust_ValidateEdit";

                        })
                    )

                    .Features(
                        X.GridFilters()
                            .Local(true)
                            .Filters(
                                X.BooleanFilter().DataIndex("ColCheck"),
                                X.BooleanFilter().DataIndex("UpdateType").YesText(Util.GetLang("AR20500UpdCust")).NoText(Util.GetLang("AR20500NewCust")), //.s.ValidateRecord(p => p.Fn = "stringFilter"),
                                X.StringFilter().DataIndex("Address"),
                                X.StringFilter().DataIndex("CustID"),
                                X.StringFilter().DataIndex("OutletName"),
                                X.StringFilter().DataIndex("ContactName"),
                                X.StringFilter().DataIndex("Phone"),
                                X.StringFilter().DataIndex("TaxCode"),
                                X.StringFilter().DataIndex("SlsperID"),
                                X.StringFilter().DataIndex("Name"),
                                X.StringFilter().DataIndex("Addr1"),
                                X.StringFilter().DataIndex("Addr2"),
                                X.StringFilter().DataIndex("SalesRouteID").ValidateRecord(p => p.Fn = "stringFilter"),
                                X.DateFilter().DataIndex("AR20500CreateDate"),
                                X.DateFilter().DataIndex("MinMCPDate"),
                                X.StringFilter().DataIndex("ERPCustID"),
                                X.StringFilter().DataIndex("NewCustID"),
                                X.StringFilter().DataIndex("SlsFreq").ValidateRecord(p => p.Fn = "stringFilter"),
                                X.StringFilter().DataIndex("Ward"),
                                X.NumericFilter().DataIndex("Sales"),
                                X.StringFilter().DataIndex("WeekofVisit").ValidateRecord(p => p.Fn = "stringFilter"),
                                X.StringFilter().DataIndex("Territory").ValidateRecord(p => p.Fn = "stringFilter"),
                                X.StringFilter().DataIndex("SubTerritory").ValidateRecord(p => p.Fn = "stringFilter"),
                                X.StringFilter().DataIndex("State").ValidateRecord(p => p.Fn = "stringFilter"),
                                X.StringFilter().DataIndex("Channel").ValidateRecord(p => p.Fn = "stringFilter"),
                                X.StringFilter().DataIndex("ShopType").ValidateRecord(p => p.Fn = "stringFilter"),
                                X.StringFilter().DataIndex("Location").ValidateRecord(p => p.Fn = "stringFilter"),
                                X.StringFilter().DataIndex("StandID").ValidateRecord(p => p.Fn = "stringFilter"),
                                X.StringFilter().DataIndex("SizeID").ValidateRecord(p => p.Fn = "stringFilter"),
                                X.StringFilter().DataIndex("DisplayID").ValidateRecord(p => p.Fn = "stringFilter"),
                                X.StringFilter().DataIndex("BrandID").ValidateRecord(p => p.Fn = "stringFilter"),
                                X.StringFilter().DataIndex("District").ValidateRecord(p => p.Fn = "stringFilter"),
                                X.StringFilter().DataIndex("Market").ValidateRecord(p=>p.Fn="stringFilter"),
                                X.StringFilter().DataIndex("SubRouteID").ValidateRecord(p => p.Fn = "stringFilter"),
                                X.NumericFilter().DataIndex("VisitsPerDay"),
                                X.StringFilter().DataIndex("TypeCabinetsDescr")
                            )
                    )// grid
                     ,X.Panel().Region(Region.South).Layout(LayoutType.HBox).Height(200)
                     .Items(
                            X.Panel().ID("map_canvas").Flex(1).Height(200).Listeners(x =>
                            {
                                x.AfterRender.Handler = "Gmap.Process.initialize()";
                                x.Resize.Handler = "google.maps.event.trigger(Gmap.Declare.map, 'resize');";
                            }) // Panel: map_canvas
                            , X.Image().ID("imgImages").Width(300).Height(200).MarginSpec("5 5 5 5")
                            , X.Image().ID("imgImages1").Width(300).Height(200).MarginSpec("5 5 5 0")
                    )//end PanelMap Picture
            )


            ,X.Window().ID("winProcess")
                .Icon(Icon.UserAdd).Layout(LayoutType.Fit)
                .Title(Util.GetLang("MCPDate"))
                .Hidden(true).Maximizable(false)
                .Height(130)
                .Width(300)
                .Modal(true)
                .Buttons(
                    X.Button().ID("btnOK").Text(Util.GetLang("Ok"))
                        .Listeners(p => p.Click.Fn = "btnOKMCP_Click")
                    , X.Button().ID("btnExit").Text(Util.GetLang("Exit"))
                        .Listeners(p => p.Click.Fn = "btnExit_Click")
                )
                .Items(
                     X.FormPanel().ID("frmProcess")
                        .Layout(LayoutType.VBox)
                        .TrackResetOnLoad(true)
                        .DefaultAnchor("100%")
                        .BodyPadding(5)
                        .BodyBorder(0)
                        .FieldDefaults(act => { act.LabelAlign = LabelAlign.Right; act.LabelWidth = 100; })
                        .Items(
                            HQ.DateField().HQLangCode("FromDate").ID("dteFromDate").Name("popFromDate").Listeners(lst=>lst.Change.Fn="dteFromDate_change")
                            ,HQ.DateField().HQLangCode("ToDate").ID("dteToDate").Name("popToDate").Value(new DateTime(DateTime.Now.Year,12,31)).Listeners(lst=>lst.Change.Fn="dteToDate_change")

                        )
                )
        )//frm Main
)

