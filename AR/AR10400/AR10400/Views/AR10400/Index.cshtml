@using Ext.Net;
@using Ext.Net.MVC;
@using HQ.eSkyFramework;
@using HQ.eSkyFramework.HQControl;
@using AR10400;

@model System.Collections.IEnumerable
@{
    Layout = null;
    var X = Html.X();
    //var HQ = Html.HQ();
    ViewBag.Title = "AR10400";
    var acc = Session["AR10400"] as AccessRight;
}
<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <script src='@Url.Content("Scripts/hq.language"+Current.LangID+".js?"+DateTime.Now.ToString("yyyyMMddss"))' type="text/javascript"></script>
    <script src='@Url.Content("Scripts/hq.common.js?"+DateTime.Now.ToString("yyyyMMddss"))' type="text/javascript"></script>
    <script src='@Url.Content("Scripts/screen/AR10400.js?" + DateTime.Now.ToString("yyyyMMddss"))' type="text/javascript"></script>
    <style>
        .x-grid-row-over .x-grid-cell-inner {
            font-weight: bold;
        }
    </style>
    <script>
        HQ.cpnyID = '@Current.CpnyID';
        HQ.langID = '@Current.LangID';
        HQ.userName = '@Current.UserName';
        HQ.bussinessDate = new Date('@DateTime.Now.Date');
        HQ.isUpdate = HQ.util.toBool('@acc.Update.ToString()');
        HQ.isInsert = HQ.util.toBool('@acc.Insert.ToString()');
        HQ.isDelete = HQ.util.toBool('@acc.Delete.ToString()');
    </script>
    <title>@ViewBag.Title</title>
</head>

<body>
@(Html.X().ResourceManager().Theme((Theme)Enum.Parse(typeof(Theme), Current.Theme.PassNull() == "" ? "Gray" : Current.Theme.PassNull())))


        @X.GridFilters()<!--Khi cache cho grid-->
        @X.ProgressBarPager()<!--Khi cache cho grid -->   

@(Html.X().Store().ID("storeFormTop").AutoLoad(false)
        .Model(Util.GenerateModel(typeof(Batch), "BatchClassModel", "BranchID,Module,BatNbr"))
        .Proxy(
            X.AjaxProxy()
            .Url(Url.Action("GetDataFormTop", "AR10400"))
            .ActionMethods(action =>
            {
                action.Read = HttpMethod.POST;
            })
            .Reader(X.JsonReader().Root("data").TotalProperty("totaldata"))
        )
        .Parameters(ps =>
        {
            ps.Add(new StoreParameter("BranchID", "App.txtBranchID.value", ParameterMode.Raw));
            ps.Add(new StoreParameter("BatNbr", "App.cboBatNbr.value", ParameterMode.Raw));
            
        })
        .Listeners(p => p.Load.Handler = "loadDataAutoHeaderTop()")
  )


@(Html.X().Store().ID("storeFormBot").AutoLoad(false)
        .Model(Util.GenerateModel(typeof(AR_Adjust), "AR_AdjustModel", ""))
        .Proxy(
            X.AjaxProxy()
            .Url(Url.Action("GetDataFormBot", "AR10400"))
            .ActionMethods(action =>
            {
                action.Read = HttpMethod.POST;
            })
            .Reader(X.JsonReader().Root("data").TotalProperty("totaldata"))
        )
        .Parameters(ps =>
        {
            ps.Add(new StoreParameter("BranchID", "App.txtBranchID.value", ParameterMode.Raw));
            ps.Add(new StoreParameter("BatNbr", "App.cboBatNbr.value", ParameterMode.Raw));
        })
        .Listeners(p => p.Load.Handler = "loadDataAutoHeaderBot()")
  )
@(Html.X().Store().ID("storeGrid1").AutoLoad(false)
        .Model(Util.GenerateModel(typeof(AR10400_pgLoadGridAdjg_Result), "AR10400_LoadGridAdjg_ResultModel", "InvcNbr,BatNbr,RefNbr,DocBal,CustID,Descr"))
        .Proxy(
            X.AjaxProxy()
            .Url(Url.Action("GetDataGrid1", "AR10400"))
            .ActionMethods(action =>
            {
                action.Read = HttpMethod.POST;
            })
            .Reader(X.JsonReader().Root("data").TotalProperty("totaldata"))
        )
            .Parameters(ps =>
                            {
                                ps.Add(new StoreParameter("BatNbr", "App.cboBatNbr.value", ParameterMode.Raw));
                                ps.Add(new StoreParameter("BranchID", "App.txtBranchID.value", ParameterMode.Raw));
                                ps.Add(new StoreParameter("CustID", "App.cboCustId.value", ParameterMode.Raw));
                                ps.Add(new StoreParameter("DocType", "App.cboDocType.value", ParameterMode.Raw));
                            })
        .Listeners(p => p.Load.Handler = "waitstoreGrid1Reload()")
  )

@(Html.X().Store().ID("storeGrid2").AutoLoad(false)
        .Model(Util.GenerateModel(typeof(AR10400_pgLoadGridAdjd_Result), "AR10400_LoadGridAdjd_ResultModel", "InvcNbr,BatNbr,RefNbr,DocBal,CustID,Descr"))
        .Proxy(
            X.AjaxProxy()
            .Url(Url.Action("GetDataGrid2", "AR10400"))
            .ActionMethods(action =>
            {
                action.Read = HttpMethod.POST;
            })
            .Reader(X.JsonReader().Root("data").TotalProperty("totaldata"))
        )
            .Parameters(ps =>
                            {
                                ps.Add(new StoreParameter("BatNbr", "App.cboBatNbr.value", ParameterMode.Raw));
                                ps.Add(new StoreParameter("BranchID", "App.txtBranchID.value", ParameterMode.Raw));
                                ps.Add(new StoreParameter("CustID", "App.cboCustId.value", ParameterMode.Raw));
                            })
        .Listeners(p => p.Load.Handler = "waitstoreGrid2Reload()")
  )
     @{Html.RenderAction("Body", new { lang=@Current.LangID});}
    </body>
</html>


