@using Ext.Net;
@using Ext.Net.MVC;
@using HQ.eSkyFramework;
@using HQ.eSkyFramework.HQControl;
@using AR30300;

@model System.Collections.IEnumerable
@{
    Layout = null;
    var X = Html.X();
    var HQ = Html.HQ();
    ViewBag.Title = "AR30300";
    var acc = Session["AR30300"] as AccessRight;
}
<!DOCTYPE html>
<html>
 <!--Không thay đổi phần head Đổi mã màn hình AR30300.js tùy theo màn hình đổi lại-->
<head>
    <meta name="viewport" content="width=device-width" />
    <script src='@Url.Content("Scripts/hq.language"+Current.LangID+".js?"+DateTime.Now.ToString("yyyyMMddss"))' type="text/javascript"></script>
    <script src='@Url.Content("Scripts/hq.common.js?"+DateTime.Now.ToString("yyyyMMddss"))' type="text/javascript"></script>
    <script src='@Url.Content("Scripts/screen/AR30300.js?"+DateTime.Now.ToString("yyyyMMddss"))' type="text/javascript"></script>
    <script src='@Url.Content("Scripts/jszip.js")' type="text/javascript"></script>
    <script src='@Url.Content("Scripts/FileSaver.js")' type="text/javascript"></script>
    <script src='@Url.Content("Scripts/jquery-1.7.1.js")' type="text/javascript"></script>
    <style>
        .x-grid-row-over .x-grid-cell-inner {
            font-weight : bold;
        }
        .images-view .span {
            display: inline-block;
            width: 128px;
            white-space: nowrap;
            width: 120px;
            overflow: hidden;
            text-overflow: ellipsis;
        }
        .images-view .thumb {
            padding: 3px;
            padding-bottom: 0;
        }
        .images-view .thumb-wrap {
            float: left;
            margin: 4px;
            margin-right: 0;
            padding: 5px;
        }
        .images-view .x-item-selected .thumb{
            background: transparent;
        }
        .images-view .x-item-selected {
            background: #eff5fb url('@Url.Content("~/Images/AR30300/AR30300_Selected.gif")') repeat-x right bottom;
            border: 1px solid #99bbe8;
            padding: 4px;
            z-index: -1
        }
        .images-view .img {
            width:128px;
            height:128px;
        }
        .images-view .checkbox {
            position: absolute;
            margin-top: -127px;
            color: red;
            z-index: 1;
        }
        #Default{
        height:300px !important;
        }
        #dtvAlbumDefault{
        height:300px !important;
        margin-left: -20px !important;
        padding-right: 90px;
        padding-bottom: 30px;
        }
        #Other{
        height: 200px !important;
        }
        #dtvAlbumOther{
        height: 200px !important;
        margin-left: -20px !important;
        padding-right: 90px;
        padding-bottom: 30px;
        }
        #txtCustID{
        text-align: right;
        }

    </style>
    <script>
        HQ.cpnyID = '@Current.CpnyID';
        HQ.langID = '@Current.LangID';
        HQ.userName = '@Current.UserName';
        HQ.isUpdate = HQ.util.toBool('@acc.Update.ToString()');
        HQ.isInsert = HQ.util.toBool('@acc.Insert.ToString()');
        HQ.isDelete = HQ.util.toBool('@acc.Delete.ToString()');
        HQ.bussinessDate = new Date('@DateTime.Now.Date');
    </script>  
    <title>@ViewBag.Title</title>
</head>
<body>   
    @(X.ResourceManager().Theme((Theme)Enum.Parse(typeof(Theme),Current.Theme.PassNull()==""?"Default":Current.Theme.PassNull())))

        
        @X.GridFilters()<!--Khi cache cho grid-->
        @X.ProgressBarPager()<!--Khi cache cho grid -->   
        <!-- Gọi hàm Body trong AR30300Controller để dựng view Body.cshtml, mục đích tạo cache. -->    
        @(HQ.Store().HQDBSys(false).HQProcedure("AR30300_pdAlbumList").ID("stoAlbumDefault").AutoLoad(false)
            .HQParam(new StoreParameterCollection()
		    {   
                new StoreParameter() { Name = "@CpnyID", Value = "HQ.cpnyID", Mode = ParameterMode.Raw },
                new StoreParameter() { Name = "@UserName", Value = "HQ.userName", Mode = ParameterMode.Raw },
                new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw },            
                new StoreParameter() { Name = "@Territory", Value = "App.cboTerritory.getValue()", Mode = ParameterMode.Raw },
                new StoreParameter() { Name = "@State", Value = "App.cboState.getValue()", Mode = ParameterMode.Raw },
                new StoreParameter() { Name = "@BranchID", Value = "App.cboBranchID.getValue()", Mode = ParameterMode.Raw },
                new StoreParameter() { Name = "@SlsperID", Value = "App.cboSlsperId.getValue()", Mode = ParameterMode.Raw },
                new StoreParameter() { Name = "@ClassID", Value = "App.cboContractType.getValue()", Mode = ParameterMode.Raw },               
                new StoreParameter() { Name = "@CustID", Value = "App.txtCustID.getValue()", Mode = ParameterMode.Raw },
                new StoreParameter() { Name = "@StartDate", Value = "App.dtpFromDate.getValue()", Mode = ParameterMode.Raw },
                new StoreParameter() { Name = "@EndDate", Value = "App.dtpToDate.getValue()", Mode = ParameterMode.Raw }
               
               
		    })
            .LoadData()
            .Listeners(p =>{p.Load.Handler = "HQ.common.showBusy(false);";
                            p.Load.Fn = "stoAlbumListDefault_Load";
                          }
                     )

        )
    @(HQ.Store().HQDBSys(false).HQProcedure("AR30300_pdAlbumList").ID("stoAlbumOther").AutoLoad(false)
            .HQParam(new StoreParameterCollection()
		    {
                new StoreParameter() { Name = "@CpnyID", Value = "HQ.cpnyID", Mode = ParameterMode.Raw },
                new StoreParameter() { Name = "@UserName", Value = "HQ.userName", Mode = ParameterMode.Raw },
                new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw },
                new StoreParameter() { Name = "@Territory", Value = "App.cboTerritory.getValue()", Mode = ParameterMode.Raw },
                new StoreParameter() { Name = "@State", Value = "App.cboState.getValue()", Mode = ParameterMode.Raw },
                new StoreParameter() { Name = "@BranchID", Value = "App.cboBranchID.getValue()", Mode = ParameterMode.Raw },
                new StoreParameter() { Name = "@SlsperID", Value = "App.cboSlsperId.getValue()", Mode = ParameterMode.Raw },
                new StoreParameter() { Name = "@ClassID", Value = "App.cboContractType.getValue()", Mode = ParameterMode.Raw },
                new StoreParameter() { Name = "@CustID", Value = "App.txtCustID.getValue()", Mode = ParameterMode.Raw },
                new StoreParameter() { Name = "@StartDate", Value = "App.dtpFromDate.getValue()", Mode = ParameterMode.Raw },
                new StoreParameter() { Name = "@EndDate", Value = "App.dtpToDate.getValue()", Mode = ParameterMode.Raw }

		    })
            .LoadData()
            .Listeners(p =>
            {
                p.Load.Handler = "HQ.common.showBusy(false);";
                p.Load.Fn = "stoAlbumListOther_Load";
            }
            )

    )
        
        @(X.Store().ID("stoImage").AutoLoad(false)
            .Model(Util.GenerateModel(typeof(AR30300_pdImages_Result), "mdlIN20500_pdHeader", ""))       
            .Proxy(
                    X.AjaxProxy()                
                    .Url(Url.Action("GetAR30300_pdImage", "AR30300"))                
                    .ActionMethods(action =>
                    {
                        action.Read = HttpMethod.POST;
                    })
                    .Reader(X.JsonReader().Root("data").TotalProperty("totaldata"))
                )
            .Parameters(ps =>
            {               
                ps.Add(new StoreParameter("Territory", "App.cboTerritory.getValue()", ParameterMode.Raw));
                ps.Add(new StoreParameter("State", "App.cboState.getValue()", ParameterMode.Raw));
                ps.Add(new StoreParameter("BranchID", "App.cboBranchID.getValue()", ParameterMode.Raw));
                ps.Add(new StoreParameter("ClassID", "App.cboContractType.getValue()", ParameterMode.Raw));
                ps.Add(new StoreParameter("SlsperID", "App.cboSlsperId.getValue()", ParameterMode.Raw));
                ps.Add(new StoreParameter("CustID", "App.treePanelCustomer.selModel.selected.items[0] == undefined ? '' : App.treePanelCustomer.selModel.selected.items[0].data.RecID", ParameterMode.Raw));
                 ps.Add(new StoreParameter("TypeAlbum", "typeAlbum", ParameterMode.Raw));
                ps.Add(new StoreParameter("StartDate", "App.dtpFromDate.getValue()", ParameterMode.Raw));
                ps.Add(new StoreParameter("EndDate", "App.dtpToDate.getValue()", ParameterMode.Raw));
            })      
            .Listeners(p=> p.Load.Handler = "HQ.common.showBusy(false);")
        )

        @{Html.RenderAction("Body", new { lang= @Current.LangID});}   
    
</body>
</html>
 