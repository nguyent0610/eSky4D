@using Ext.Net;
@using Ext.Net.MVC;
@using HQ.eSkyFramework;
@using HQ.eSkyFramework.HQControl;
@using AR10200;
@{
    Layout = null;
    var X = Html.X();
    var HQ = Html.HQ();
}

@(X.Viewport()
.Layout(LayoutType.Fit)
    .Items(
        X.FormPanel()
        .ID("frmMain")  
        .TrackResetOnLoad(true)
        .KeyMap(Util.SetupKeyMap())
        .TopBar(Util.SetupToolbar("Print", true, ""))
        .Layout(LayoutType.Border)
        .FieldDefaults(act => { act.LabelAlign = LabelAlign.Right; act.LabelWidth = 150; })
        .Listeners(l=>{
            l.BoxReady.Handler = "frmMain_boxReady()";
            l.FieldChange.Fn = "frmMain_fieldChange";
        })
        .Items(
            X.FormPanel().ID("pnlBatch")
            .Title(Util.GetLang("DOC"))
            .Layout(LayoutType.HBox).Region(Region.North)
            .LayoutConfig(new HBoxLayoutConfig { Align = HBoxAlign.Top }).Border(false)
            .Items(
        // First Column
                X.Container().Layout(LayoutType.VBox).MarginSpec("5 5 0 0")
                .Flex(1).MinWidth(200)
                .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Stretch })
                .Items(
                    HQ.Combo().ID("cboBatNbr").Tag("X")
                    .Name("cboBatNbr").HQLangCode("BATNBR").HQProcedure("AR10200_pcGetBatch")
                    .HQColumnShow("BatNbr,Descr,Status,TotAmt").DisplayField("BatNbr").ValueField("BatNbr")
                    .HQHeightWidth(400, 300).MaxLength(30).EnforceMaxLength(true).ForceSelection(true)
                    .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                    .HQParam(new StoreParameterCollection()
                    {
                        new StoreParameter() { Name = "@BranchID", Value = "HQ.cpnyID", Mode = ParameterMode.Raw }
                    })
                    .LoadData()
                    .Listeners(lst =>
                        {
                            lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                            lst.Change.Fn = "Event.Form.cboBatNbr_change";
                        })

                    , HQ.Checkbox().ID("chkAllowSort").Hidden(true)
                    .MarginSpec("0 0 0 155").HQLangCode("AllowSort")
                    .Handler("Event.Form.chkAllowSort_change")
                ) // First Column

                // Second Column
                , X.Container().Layout(LayoutType.VBox).MarginSpec("5 5 0 5")
                .Flex(1).MinWidth(200)
                .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Stretch })
                .Items(
                    HQ.TextBox().ID("txtBranchID")
                    .Name("txtBranchID").HQLangCode("BRANCHID").DataIndex("BranchID")
                    .MaxLength(200).EnforceMaxLength(true)
                    .AllowBlank(false).ReadOnly(true).Tag("X")

                    , HQ.NumberField().ID("txtCuryCrTot")
                    .Name("txtCuryCrTot").DecimalPrecision(0)
                    .HQLangCode("TOTAMT").ReadOnly(true).DataIndex("TotAmt").Tag("X")
                ) // Second Column

                // Third Column
                , X.Container().Layout(LayoutType.VBox).MarginSpec("5 5 0 0")
                .Flex(1).MinWidth(200)
                .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Stretch })
                .Items(
                    HQ.Combo().ID("cboStatus").Name("cboStatus").HQLangCode("STATUS").HQProcedure("AR10200_pcGetStatus")
                    .HQColumnShow("Code,Descr").DisplayField("Descr").ValueField("Code").DataIndex("Status")
                    .HQHeightWidth(400, 300).ReadOnly(true).Tag("X")//.HQAutoLoad(false)
                    .HQParam(new StoreParameterCollection()
                    {
                        new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw }
                    })
                    .LoadData()
                    .Listeners(lst =>
                    {
                        lst.Change.Fn = "Event.Form.cboStatus_Change";
                    })

                    
                    
                    , HQ.Combo().ID("cboHandle").Tag("X")
                    .Name("cboHandle").HQLangCode("HANDLE").HQProcedure("AR10200_pcGetHandle")
                    .HQColumnShow("Code,Descr").DisplayField("Descr").ValueField("Code")
                    .HQHeightWidth(400, 300).ForceSelection(true)//.AllowBlank(false)
                    .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                    .HQParam(new StoreParameterCollection()
                    {
                        new StoreParameter() { Name = "@Status", Value = "App.cboStatus.getValue()?App.cboStatus.getValue():'H'", Mode = ParameterMode.Raw },
                        new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw },
                        new StoreParameter() { Name = "@UserID", Value = "HQ.userName", Mode = ParameterMode.Raw }
                    })
                    .LoadData()
                    .Listeners(lst =>
                    {
                        lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                    })
                ) // Third Column

            )
            .Listeners(ls => {
                ls.Render.Handler = "HQ.common.control_render(this,'batNbr')";
            })// pnlBatch

            , X.Panel().ID("pnlFilterDoc")
            .Layout(LayoutType.HBox).Region(Region.North)
            .LayoutConfig(new HBoxLayoutConfig { Align = HBoxAlign.Top }).Border(false)
            .Items(

                X.Panel().ID("pnlFilter")
                .Title(Util.GetLang("LocRa"))
                .Layout(LayoutType.VBox)
                .Flex(1).MinWidth(200)
                .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Stretch })
                .Items(
                    HQ.Combo().ID("cboCustID").Tag("X")
                    .ForceSelection(true).HQProcedure("AR10200_pcCustomer")
                    .HQLangCode("CustID").HQHeightWidth(400, 300)
                    .HQColumnShow("CustId,CustName,Addr1,Addr2")
                    .ValueField("CustId").DisplayField("CustId")
                    .MarginSpec("5 5 0 0")
                    .HQParam(new StoreParameterCollection() 
                    { 
                        new StoreParameter() { Name = "@BranchID", Value = "HQ.cpnyID", Mode = ParameterMode.Raw}
                    })
                    .LoadData()
                    .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                    .Listeners(lst =>
                    {
                        lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                    })

                    , HQ.Combo().ID("cboSlsperID").Tag("X")
                    .HQLangCode("Slsperid").HQProcedure("AR10200_pcSalesPerson")
                    .ForceSelection(true).HQHeightWidth(400, 300)
                    .HQColumnShow("Slsperid,Name")
                    .ValueField("Slsperid").DisplayField("Slsperid")
                    .MarginSpec("5 5 0 0")
                    .HQParam(new StoreParameterCollection() 
                    { 
                        new StoreParameter() { Name = "@BranchID", Value = "HQ.cpnyID", Mode = ParameterMode.Raw }
                        ,new StoreParameter() { Name = "@UserName", Value = "HQ.useName", Mode = ParameterMode.Raw }
                        ,new StoreParameter() { Name = "@ScreenNbr", Value = "AR10200", Mode = ParameterMode.Value }
                    })
                    .LoadData()
                    .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                    .Listeners(lst =>
                    {
                        lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                    })

                    , HQ.Combo().ID("cboDeliveryID").Tag("X")
                    .HQLangCode("DeliveryID").HQProcedure("AR10200_pcDeliveryPerson")
                    .HQHeightWidth(400, 300).HQColumnShow("Slsperid,Name")
                    .ValueField("Slsperid").DisplayField("Slsperid")
                    .ForceSelection(true).MarginSpec("5 5 0 0")
                    .HQParam(new StoreParameterCollection() 
                    { 
                        new StoreParameter() { Name = "@BranchID", Value = "HQ.cpnyID", Mode = ParameterMode.Raw }
                        ,new StoreParameter() { Name = "@UserName", Value = "HQ.useName", Mode = ParameterMode.Raw }
                        ,new StoreParameter() { Name = "@ScreenNbr", Value = "AR10200", Mode = ParameterMode.Value }
                    })
                    .LoadData()
                    .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                    .Listeners(lst =>
                    {
                        lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                    })

                    , HQ.DateField().ID("dteFromDate").Tag("X")
                    .Name("dteFromDate").HQLangCode("FROMDATE")
                    .MarginSpec("5 5 0 0")//.Format("yyyy-MM-dd")
                    .Listeners(lst=>lst.Change.Fn = "dteFromDate_Change")
                    
                    , HQ.DateField().ID("dteToDate").Tag("X")
                    .Name("dteToDate").HQLangCode("TODATE")
                    .MarginSpec("5 5 0 0")//.Format("yyyy-MM-dd")

                    , HQ.Combo().ID("cboDateType").Tag("X")
                    .Name("cboDateType").HQLangCode("DATE").HQProcedure("AR10200_pcDateType")
                    .HQColumnShow("Code,Descr").DisplayField("Descr").ValueField("Code")
                    .HQHeightWidth(400, 300).MarginSpec("5 5 0 0")
                    .HQDBSys(false).ForceSelection(true).HQValue("0",false)
                    .HQParam(new StoreParameterCollection()
                    {
                        new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw }
                    })
                    .LoadData()
                    .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                    .Listeners(lst =>
                    {
                        lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                    })

                    , HQ.Button().ID("btnSearch").MarginSpec("5 5 5 155").Tag("X")
                    .HQLangCode("LOADDATA").Handler("Event.Form.btnSearch_click")
                ) // pnlFilter

                , X.FormPanel().ID("pnlDocument")
                .Title(Util.GetLang("Document"))
                .Layout(LayoutType.HBox)
                .Flex(2).MinWidth(200)
                .LayoutConfig(new HBoxLayoutConfig { Align = HBoxAlign.Stretch })
                .Items(
        // First Column
                    X.Container().Layout(LayoutType.VBox).MarginSpec("5 5 0 0")
                    .Flex(1).MinWidth(200)
                    .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Stretch })
                    .Items(
                        X.Container().Layout(LayoutType.HBox)
                        .LayoutConfig(new HBoxLayoutConfig { Align = HBoxAlign.Stretch })
                        .Items(
                            HQ.Combo().ID("cboRefNbr")
                            .Name("cboRefNbr").HQLangCode("REFNBR").HQProcedure("AR10200_pcGetRefNbr")
                            .HQColumnShow("RefNbr,DocDesc,DocType,OrigDocAmt")
                            .DisplayField("RefNbr").ValueField("RefNbr").ForceSelection(true)
                            .HQHeightWidth(400, 300).Flex(1).MarginSpec("0 0 0 5")
                            .MaxLength(30).EnforceMaxLength(true).HQAutoLoad(false).ReadOnly(true).Tag("X")
                            .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                            .HQParam(new StoreParameterCollection()
                            {
                                new StoreParameter() { Name = "@BatNbr", Value = "App.cboBatNbr.getValue()", Mode = ParameterMode.Raw },
                                new StoreParameter() { Name = "@BranchID", Value = "HQ.cpnyID", Mode = ParameterMode.Raw },        
                            })
                            .LoadData()
                            .Listeners(lst =>
                            {
                                lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                                lst.Change.Fn = "Event.Form.cboRefNbr_change";
                            })
                                            
                            , HQ.TextBox().ID("txtOrigDocAmt")
                            .Name("txtOrigDocAmt").HQLangCode("CustBal")
                            .ReadOnly(true).Tag("X")
                            .Flex(1).MarginSpec("0 0 0 5")
                        )

                        , X.Container().Layout(LayoutType.HBox)
                        .LayoutConfig(new HBoxLayoutConfig { Align = HBoxAlign.Stretch })
                        .Items(
                            HQ.TextBox().ID("txtInvcNbr")
                            .Name("txtInvcNbr").HQLangCode("RcptNo").DataIndex("InvcNbr")
                            .MaxLength(15).EnforceMaxLength(true).ReadOnly(true).Tag("X")
                            .Flex(1).MarginSpec("5 0 0 5")

                            , HQ.NumberField().ID("txtTotApply")
                            .Name("txtTotApply").HQLangCode("TotApply")
                            .Flex(1).MarginSpec("5 0 0 5")
                            .ReadOnly(true).DecimalPrecision(0).Tag("X")
                        )

                        , X.Container().Layout(LayoutType.HBox)
                        .LayoutConfig(new HBoxLayoutConfig { Align = HBoxAlign.Stretch })
                        .Items(
                            HQ.DateField().ID("dteDocDate")
                            .Name("dteDocDate").HQLangCode("DOCDATE").DataIndex("DocDate")
                            .Value(DateTime.Now).AllowBlank(false).Flex(1).MarginSpec("5 0 0 5")

                            , HQ.NumberField().ID("txtUnTotApply").Tag("X")
                            .Name("txtUnTotApply").HQLangCode("UNTOTAPPLY")
                            .Flex(1).MarginSpec("5 0 0 5")
                            .ReadOnly(true).DecimalPrecision(0)
                        )

                        , X.Container().Layout(LayoutType.HBox)
                        .LayoutConfig(new HBoxLayoutConfig { Align = HBoxAlign.Stretch })
                        .Items(
                            HQ.Combo().ID("cboDebtCollector")
                            .HQLangCode("DebtCollector").HQProcedure("AR10200_pcPaymentSalesPerson")
                            .ForceSelection(true).DataIndex("SlsperId")
                            .AllowBlank(false).HQHeightWidth(400, 300)
                            .HQColumnShow("Slsperid,Name").ValueField("Slsperid").DisplayField("Slsperid")
                            .Flex(1).MarginSpec("5 0 0 5")
                            .HQParam(new StoreParameterCollection() 
                            { 
                                new StoreParameter() { Name = "@BranchID", Value = "HQ.cpnyID", Mode = ParameterMode.Raw }
                            })
                            .LoadData()

                            , HQ.NumberField().ID("txtAutoPayment")
                            .Name("txtAutoPayment").HQLangCode("AUTOAPPL")
                            .Flex(1).MarginSpec("5 0 0 5").MinValue(0)
                            .DecimalPrecision(0).SelectOnFocus(true)
                        )

                        , X.Container().Layout(LayoutType.HBox)
                        .LayoutConfig(new HBoxLayoutConfig { Align = HBoxAlign.Stretch })
                        .Items(
                            HQ.NumberField().ID("txtOdd").Tag("X")
                            .Name("txtOdd").HQLangCode("BALANCE").ReadOnly(true)
                            .Flex(1).MarginSpec("5 0 0 5").DecimalPrecision(0)

                            , HQ.Combo().ID("cboBankAcct")
                            .Name("cboBankAcct").HQLangCode("BANKACCT").HQProcedure("AR10200_pcBankAcctCA").DataIndex("ReasonCD")
                            .HQColumnShow("BankAcct,CashAcctName,AcctNbr").DisplayField("BankAcct").ValueField("BankAcct")
                            .AllowBlank(false).HQHeightWidth(400, 300).ForceSelection(true)
                            .Flex(1).MarginSpec("5 0 0 5")
                            .HQParam(new StoreParameterCollection()
                                {
                                    new StoreParameter() { Name = "@BranchID", Value = "HQ.cpnyID", Mode = ParameterMode.Raw },
                                })
                            .LoadData()
                        )

                        , HQ.TextBox().ID("txtDescr")
                        .Name("txtDescr").HQLangCode("DESCR").DataIndex("DocDesc")
                        .MaxLength(100).EnforceMaxLength(true).AllowBlank(false)
                        .MarginSpec("5 0 0 5")

                        , X.Container().Layout(LayoutType.HBox)
                        .LayoutConfig(new HBoxLayoutConfig { Align = HBoxAlign.Stretch })
                        .Items(
                            X.Label().Text(" ").Flex(1).MarginSpec("5 5 0 155")

                            , HQ.Button().ID("btnAutoPayment")
                            .HQLangCode("AUTOAPPL").Flex(1).MarginSpec("5 0 5 155")
                            .Handler("Event.Form.btnAutoPayment_click")
                        )
                    )
                ) // pnlDocument
            ).Listeners(ls => {
                ls.Render.Handler = "HQ.common.control_render(this,'refNbr')";
            }) // pnlFilterDoc

            , X.GridPanel().ID("grdAdjust")
            .Region(Region.Center).Flex(1)
            .View(X.GridView().TrackOver(false))
            .StoreID("stoAdjust")
            .SortableColumns(false)
            .ColumnModel(
                X.RowNumbererColumn()

                , X.CheckColumn()
                .DataIndex("Selected").Width(30).Editable(true).HideTitleEl(true)
                .Align(Alignment.Center)
                .HeaderItems(
                    HQ.Checkbox().ID("chkSelectHeader")
                    .Handler("Event.Grid.chkSelectHeader_change")
                )

                , HQ.DateColumn().Text(Util.GetLang("DocDate")).DataIndex("DocDate").Width(100)

                , X.Column().Text(Util.GetLang("InvcNbr")).Width(150).DataIndex("InvcNbr")
                .Editor(
                    HQ.Combo().ID("cboInvcNbr").Name("cboInvcNbr").HQProcedure("AR10200_pgBindingGrid")
                    .HQColumnShow("InvcNbr,DocBal,CustId,Descr,DocDate").DisplayField("InvcNbr").ValueField("InvcNbr")
                    .Width(300).HQHeightWidth(500, 400).ForceSelection(true)
                    .HQDBSys(false).AllowBlank(true)
                    .HQParam(new StoreParameterCollection() { 
                        new StoreParameter("@BatNbr", "App.cboBatNbr.value", ParameterMode.Raw),
                        new StoreParameter("@BranchID", "App.txtBranchID.value", ParameterMode.Raw),
                        new StoreParameter("@CustId", "App.cboCustID.getValue()", ParameterMode.Raw),
                        new StoreParameter("@SlsperId", "App.cboSlsperID.getValue()", ParameterMode.Raw),
                        new StoreParameter("@DeliveryId", "App.cboDeliveryID.getValue()", ParameterMode.Raw),
                        new StoreParameter("@RefNbr", "App.cboRefNbr.value", ParameterMode.Raw),
                        new StoreParameter("@FromDate", "App.dteFromDate.getValue()", ParameterMode.Raw),
                        new StoreParameter("@ToDate", "App.dteToDate.getValue()", ParameterMode.Raw),
                        new StoreParameter("@DateType", "App.cboDateType.value", ParameterMode.Raw),
                        new StoreParameter("@IsGridF3", "1", ParameterMode.Value),
                    })
                    .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                    .Listeners(lst =>
                    {
                        lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                    })
                    .LoadData()
                )

                , X.NumberColumn()
                    .Text(Util.GetLang("Payment")).DataIndex("Payment")
                    .Format("0,000").Align(Alignment.Right).Width(150)
                    .Editor(
                        HQ.NumberField().DecimalPrecision(0)
                        .SelectOnFocus(true).MinValue(0)
                    )

                , X.NumberColumn().Text(Util.GetLang("DocBal")).DataIndex("DocBal")
                    .Format("0,000").Align(Alignment.Right)
                , X.Column().Text(Util.GetLang("CustId")).DataIndex("CustId")
                , X.Column().Text(Util.GetLang("CustName")).DataIndex("CustName")
                , X.Column().Text(Util.GetLang("SlsperID")).DataIndex("SlsperID")
                , X.Column().Text(Util.GetLang("Descr")).DataIndex("Descr").MinWidth(100).Flex(1)
                , X.Column().Text(Util.GetLang("RefNbr")).DataIndex("RefNbr").Hidden(true)
                , X.Column().Text(Util.GetLang("BatNbr")).DataIndex("BatNbr").Hidden(true)
                , X.Column().Text(Util.GetLang("DocType")).DataIndex("DocType").Hidden(true)

                , X.CommandColumn().Width(150)
                .Commands(
                    X.GridCommand()
                        .Text(Util.GetLang("Reject"))
                        .ToolTip(t =>
                        {
                            t.Text = Util.GetLang("Rejectrowchanges");
                        })
                        .CommandName("reject")
                        .Icon(Icon.ArrowUndo)
                )
                .PrepareToolbar(t =>
                {
                    t.Handler = "toolbar.items.get(0).setVisible(record.dirty);";
                })
                .Listeners(l =>
                {
                    l.Command.Handler = "Event.Grid.grdAdjust_reject(record, this);";
                })
            )
            .SelectionModel(Html.X().RowSelectionModel().ID("slmAdjust").Mode(SelectionMode.Multi))
            .Plugins(
                X.CellEditing()
                .ClicksToEdit(1)
                .Listeners(ls =>
                {
                    ls.BeforeEdit.Fn = "Event.Grid.grdAdjust_beforeEdit";
                    ls.Edit.Fn = "Event.Grid.grdAdjust_edit";
                    ls.ValidateEdit.Fn = "Event.Grid.grdAdjust_validateEdit";
                })
            )
            .Features(
                X.GridFilters()
                    .Local(true)
                    .Filters(
                        X.DateFilter().DataIndex("DocDate"),
                        X.StringFilter().DataIndex("InvcNbr"),
                        X.NumericFilter().DataIndex("Payment"),
                        X.NumericFilter().DataIndex("DocBal"),
                        X.StringFilter().DataIndex("CustId"),
                        X.StringFilter().DataIndex("CustName"),
                        X.StringFilter().DataIndex("SlsperID"),
                        X.StringFilter().DataIndex("Descr")
                    )
            )
            .Listeners(ls => {
                ls.Render.Handler = "HQ.common.control_render(this,'adjust')";
            })// grdAdjust
        )
    )
)

@(
    X.Window().ID("winRef")
    .Title(Util.GetLang("CRefToCcl"))
    .Icon(Icon.UserAdd).Layout(LayoutType.Fit)
    .Hidden(true).Maximizable(true)
    .Height(350)
    .Width(700)
    .Modal(true)
    .Items(
        X.FormPanel().ID("frmChoose")
        .Layout(LayoutType.Border)
        .TrackResetOnLoad(true)
        .DefaultAnchor("100%")
        .BodyPadding(5)
        .BodyBorder(0)
        .FieldDefaults(act => { act.LabelAlign = LabelAlign.Right; act.LabelWidth = 100; })
        .Items(
            X.Panel().Region(Region.Center)
            .Layout(LayoutType.Border)
            .Items(
                X.GridPanel().ID("grdRef")
                .Region(Region.Center).Scroll(ScrollMode.Both)
                .View(X.GridView().TrackOver(false))
                .SortableColumns(false).AutoScroll(true)
                .StoreID("stoRef")
                .ColumnModel(
                    X.CheckColumn()
                    .HideTitleEl(true).DataIndex("Selected")
                    .Align(Alignment.Center).ToolTip(Util.GetLang("Selected"))
                    .Width(50).Editable(true)
                    .HeaderItems(
                        HQ.Checkbox().ID("chkSelectHeaderRef")
                        .Handler("Event.Form.chkSelectHeaderRef_change")
                    )
                            
                    , X.Column().Text(Util.GetLang("InvcNbr")).DataIndex("InvcNbr")
                    , X.Column().Text(Util.GetLang("Payment")).DataIndex("AdjAmt")
                )
            )

            , X.Panel().Region(Region.South)
            .Layout(LayoutType.HBox)
            .LayoutConfig(new HBoxLayoutConfig() { Align=HBoxAlign.Middle, Pack=BoxPack.Center })
            .Items(
                HQ.Button().ID("btnOK")
                .HQLangCode("OK").MarginSpec("5 5 5 5")
                .Icon(Icon.Tick).Handler("Event.Form.btnOK_click")
                        
                ,HQ.Button().ID("btnCancel")
                .HQLangCode("Cancel").MarginSpec("5 5 5 5")
                .Icon(Icon.Decline).Handler("Event.Form.btnCancel_click")
            )
        )// FormPanel: frmChoose
    )// Window: winRef
)