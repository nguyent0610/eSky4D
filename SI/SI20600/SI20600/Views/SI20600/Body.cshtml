@using Ext.Net;
@using Ext.Net.MVC;
@using HQ.eSkyFramework;
@using HQ.eSkyFramework.HQControl;
@using SI20600;
@{
    Layout = null;
    var X = Html.X();
    var HQ = Html.HQ();
}

@(X.Viewport()
.Layout(LayoutType.Fit)
.Items(
    X.FormPanel()
    .ID("frmMain")
    .BodyPadding(0)
    .KeyMap(Util.SetupKeyMap())
    .TopBar(Util.SetupToolbar("Print", true, ""))
    .Layout(LayoutType.Fit)  
    .Items(
        ////Thiet ke giao dien o day

        X.GridPanel()
        .Scroll(ScrollMode.Both)
        .View(X.GridView().TrackOver(false))
        .ID("grdSI_Country")
        .Store(
             X.Store()
            .ID("stoData")
            .PageSize(50)//.AutoLoad(true)
            .Model(Util.GenerateModel(typeof(SI20600_pgLoadGrid_Result), "mdlSI_Country", "CountryID"))
            .ServerProxy(X.AjaxProxy().Url(Url.Action("GetData")))
            .Listeners(l => { 
                l.BeforeLoad.Handler = "HQ.common.showBusy(true,HQ.common.getLang(\"loadingdata\"));"; 
                l.Load.Handler = "HQ.common.showBusy(false);"; 
            })
        )
        .Listeners(p => p.BoxReady.Handler = "App.stoData.reload();")
        .SortableColumns(false)
        .ColumnModel(
        
         X.RowNumbererColumn()
                    , X.Column().Text(Util.GetLang("CountryID")).DataIndex("CountryID").Width(150).Editor(Html.X().TextField().AllowBlank(true).MaxLength(3).EnforceMaxLength(true))
                    , X.Column().Text(Util.GetLang("Descr")).DataIndex("Descr").Width(150).Editor(Html.X().TextField().AllowBlank(true).MaxLength(30).EnforceMaxLength(true))
                   

                    , X.CommandColumn().Width(150)
                    .Commands(
                            X.GridCommand()
                            .Text(Util.GetLang("Reject"))
                            .ToolTip(t =>
                            {
                                t.Text = Util.GetLang("Rejectrowchanges");
                            })
                            .CommandName("reject")
                            .Icon(Icon.ArrowUndo)
                    )
                    .PrepareToolbar(t =>
                    {
                        t.Handler = "toolbar.items.get(0).setVisible(record.dirty);";
                    })
                    .Listeners(l =>
                    {
                        l.Command.Handler = "grdSI_Country_Reject(record);";
                    })
        
        )
        .SelectionModel(X.RowSelectionModel().ID("slmData").Mode(SelectionMode.Multi))
        .BottomBar(
            X.PagingToolbar()
            .Items(
                X.Label("Page size:"),
                X.ToolbarSpacer(10),
                X.ComboBox()
                .Width(80)
                .Items("1", "2", "10", "20", "30", "50")
                .SelectedItems("50")
                .Listeners(l => l.Select.Fn = "HQ.grid.onPageSelect")
            )
            .Plugins(X.ProgressBarPager())
        )
        .Plugins(
            X.CellEditing()
            .ClicksToEdit(1)
            .Listeners(ls =>
            {
                ls.BeforeEdit.Fn = "grdSI_Country_BeforeEdit";
                ls.Edit.Fn = "grdSI_Country_Edit";
                ls.ValidateEdit.Fn = "grdSI_Country_ValidateEdit";
            })
        )

        .Features(
            X.GridFilters()
                .Local(true)
                .Filters(
                    X.StringFilter().DataIndex("CountryID"),
                    X.StringFilter().DataIndex("Descr")
      
                )
        )
    )
))
