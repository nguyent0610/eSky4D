@using Ext.Net;
@using Ext.Net.MVC;
@using HQ.eSkyFramework;
@using HQ.eSkyFramework.HQControl;
@using SI21600;
@{
    Layout = null;
    var X = Html.X();
    var HQ = Html.HQ();
}

@(X.Viewport()
.Layout(LayoutType.Fit)
.Items(
    X.FormPanel()
        .Layout(LayoutType.Column)
        .ID("treeForm")
        //.TrackResetOnLoad(true)
        .DefaultAnchor("100%")
        //.AutoScroll(true)
        .AutoScroll(true)
        .BodyPadding(5)
        .TopBar(Util.SetupToolbar("Print",true))
        .FieldDefaults(act => { act.LabelAlign = LabelAlign.Right; act.LabelWidth = 150; })
    
        .Items(
            X.FormPanel()
            .AutoScroll(true)
            .Layout(LayoutType.Fit)
            .ColumnWidth(0.20)
            .ID("frmTree")
            .TrackResetOnLoad(true)
            .BodyPadding(0)
            .FieldDefaults(act => { act.LabelAlign = LabelAlign.Right; act.LabelWidth = 150; })
            .Items(
                HQ.Combo().ID("cboType").Name("cboType").HQLangCode("SI21600_Type").HQProcedure("SI21600_pcType")
                .HQColumnShow("Code,Descr").DisplayField("Code").ValueField("Code").Region(Region.North)
                .Width(300).HQHeightWidth(400, 500).MarginSpec("5 0 0 0").Editable(false)
                .HQDBSys(false).MaxLength(50).EnforceMaxLength(true)
                .LoadData()
                .Listeners(lst =>
                {
                    lst.TriggerClick.Fn = "cboType_TriggerClick";
                    lst.Change.Fn = "cboType_Change";
                    lst.Expand.Fn = "cboType_Expand"; 
                })
                
                , X.TreePanel().ID("IDTree")
                .Title(Util.GetLang("Tree")).Height(600)
                .Region(Region.Center)
                .Border(false)
                .SelectionModel(X.TreeSelectionModel().ID("slmTree").Mode(SelectionMode.Multi))
                .Listeners(lst =>
                {
                    //lst.ItemClick.Fn = "NodeSelected_Change";
                })
            )
    )    

    , X.FormPanel()
    .ID("frmMain")
    .BodyPadding(0)
    .Region(Region.Center)
    .Layout(LayoutType.Border)
    .Listeners(l =>
    {
        l.BoxReady.Handler = "firstLoad();";
        //l.FieldChange.Fn = "frmChange";
    })
    .Items(
   
        ////Second Column
        //, X.Panel()
        //.Region(Region.East).Flex(6)
        //.Layout(LayoutType.Border)
        //.Split(true).AutoScroll(true)
        //.Items(
        //        X.Panel().Region(Region.North)
        //        .Items(
        //            X.Panel().ID("pnlheader")
        //            .Layout(LayoutType.HBox)
        //            .AutoScroll(true)
        //            .Items(
        //                X.Container().Layout(LayoutType.VBox).MarginSpec("5 20 0 0")
        //                .Items(
        //                    HQ.Combo().ID("cboID").Name("cboID")
        //                        .HQLangCode("ID").HQProcedure("SI21600_pcSYS_CloaseDateAuto").HQDBSys(true)
        //                        .HQColumnShow("ID,Descr").DisplayField("ID").ValueField("ID").HQHeightWidth(400, 300)
        //                        .ForceSelection(true).Editable(false)
        //                        .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
        //                        .Listeners(lst =>
        //                        {
        //                            lst.TriggerClick.Fn = "cboID_TriggerClick";//khi nhan X xoa du lieu goi ham de kiem tra
        //                            lst.Change.Fn = "cboID_Change";//khi thay doi du lieu
        //                            lst.Expand.Fn = "cboID_Expand";  //khi nhan xo ra du lieu cho chon, kiem tra xem co cho xo hay ko?
        //                            lst.KeyPress.Fn = "cboID_KeyPress";
        //                        })
        //                        .EnableKeyEvents(true)
        //                        .LoadData().Width(250)

        //                    , HQ.NumberField().ID("txtUpDates").Name("UpDates").HQLangCode("UpDates").MarginSpec("0 0 10 0").Width(250).MinValue(0).DecimalPrecision(0)
        //                )
        //                , X.Container().Layout(LayoutType.VBox).MarginSpec("5 0 0 0")
        //                .Items(
        //                    HQ.TextBox().ID("txtDescr").Name("Descr").HQLangCode("Descr").DataIndex("Descr")
        //                    .Width(400).MaxLength(200).EnforceMaxLength(true).LabelAlign(LabelAlign.Right).AllowBlank(false)

        //                    , X.Container().Layout(LayoutType.HBox)
        //                    .Items(
        //                        X.TimeField().ID("txtTime").FieldLabel(Util.GetLang("RunTime")).Name("txtTime").LabelAlign(LabelAlign.Right).AllowBlank(false).DataIndex("Time")
        //                        //.Listeners(l =>
        //                        //{
        //                        //    l.Change.Fn = "txtTime_Change";
        //                        //})
        //                        , HQ.Checkbox().ID("chkActive").Name("Active").HQLangCode("Active").MarginSpec("0 0 5 10").DataIndex("Active")
        //                    )
        //                )
        //            )
        //        )//header
        //        .Listeners(lss =>
        //        {
        //            lss.Render.Fn = "pnl_render";
        //        })

        //    , X.Panel().ID("pnlgrid")
        //    .Region(Region.Center)
        //    .Layout(LayoutType.Border)
        //    .Items(
        //        X.GridPanel()
        //        .Scroll(ScrollMode.Both)
        //        .View(X.GridView().TrackOver(false))
        //        .ID("grdSYS_CloseDateBranchAuto")
        ////.SelectionMemory(false)
        //        .Region(Region.Center).Flex(1)
        //        .Store(
        //            X.Store()
        //            .ID("stoSYS_CloseDateBranchAuto").AutoLoad(false)
        //            .PageSize(50)
        //            .Model(Util.GenerateModel(typeof(SI21600_pgSYS_CloseDateBranchAuto_Result), "mdlSI21600_pgSYS_CloseDateBranchAuto", "ID,BranchID"))
        //            .Parameters(ps =>
        //                    {
        //                        ps.Add(new StoreParameter("ID", "App.cboID.getValue()", ParameterMode.Raw));
        //                    })
        //            .ServerProxy(X.AjaxProxy().Url(Url.Action("GetSYS_CloseDateBranchAuto")))
        //            .Listeners(l =>
        //            {
        //                l.Load.Fn = "stoLoad";

        //            })
        //        )
        //        .Listeners(lst => lst.Render.Handler = "HQ.common.control_render(this,'grdSYS_CloseDateBranchAuto');")
        //        .ViewConfig(X.GridView().Plugins(X.GridDragDrop().EnableDrag(true).DDGroup("BranchID")).Listeners(l => l.BeforeDrop.Fn = "beforenodedrop"))

        //        .SortableColumns(false)
        //        .ColumnModel(
        //            X.RowNumbererColumn().Width(40)

        //            , X.Column().DataIndex("BranchID").Text(Util.GetLang("BranchID")).Width(100)
        //            .Editor(
        //                HQ.Combo().ID("cboBranchID")
        //                .Name("cboBranchID").HQProcedure("SI21600_pcCompany").HQDBSys(true)
        //                .HQColumnShow("CpnyID,CpnyName,Territory,Address").DisplayField("CpnyID").ValueField("CpnyID")
        //                .Width(300).HQHeightWidth(500, 400).MarginSpec("5 0 0 0").ForceSelection(true).HQAutoLoad(false)
        //                .HQParam(new StoreParameterCollection() 
        //                { 
        //                    new StoreParameter() { Name = "@UserID", Value = "HQ.userName", Mode = ParameterMode.Raw }
        //                })
        //                .LoadData()
        //            )

        //            , X.Column().Text(Util.GetLang("BranchName")).DataIndex("BranchName").Width(150).Renderer("renderBranchName")

        //            , X.CommandColumn().Width(150)
        //            .Commands(
        //                X.GridCommand()
        //                .Text(Util.GetLang("Reject"))
        //                .ToolTip(t => t.Text = Util.GetLang("Rejectrowchanges"))
        //                .CommandName("reject")
        //                .Icon(Icon.ArrowUndo)
        //            )
        //            .PrepareToolbar(t => t.Handler = "toolbar.items.get(0).setVisible(record.dirty);")
        //            .Listeners(l => l.Command.Handler = "grdSYS_CloseDateBranchAuto_Reject(record);")
        //        )
        //        .SelectionModel(X.RowSelectionModel().ID("slmSYS_CloseDateBranchAuto").Mode(SelectionMode.Multi))
        //        .BottomBar(
        //            X.PagingToolbar()
        //            .Items(
        //                X.Label("Page size:"),
        //                X.ToolbarSpacer(10),
        //                X.ComboBox()
        //                .Width(80)
        //                .Items("1", "2", "10", "20", "30", "50")
        //                .SelectedItems("50")
        //                .Listeners(l =>
        //                    {
        //                        l.Select.Fn = "HQ.grid.onPageSelect";
        //                    })
        //            )
        //            .Plugins(X.ProgressBarPager())
        //        )
        //        .Plugins(
        //            X.CellEditing()
        //            .ClicksToEdit(1)
        //            .Listeners(ls =>
        //            {
        //                ls.BeforeEdit.Fn = "grdSYS_CloseDateBranchAuto_BeforeEdit";
        //                ls.Edit.Fn = "grdSYS_CloseDateBranchAuto_Edit";
        //                ls.ValidateEdit.Fn = "grdSYS_CloseDateBranchAuto_ValidateEdit";
        //            })
        //        )

        //        .Features(
        //            X.GridFilters()
        //                .Local(true)
        //                .Filters(
        //                    X.StringFilter().DataIndex("BranchID"),
        //                    X.StringFilter().DataIndex("BranchName")
        //                )
        //        )
        //    )//Grid
        //    .Listeners(lss =>
        //    {
        //        lss.Render.Fn = "pnl_render";
        //    })
        //)//Panel
    )//frmMain

))
