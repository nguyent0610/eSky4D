@using Ext.Net;
@using Ext.Net.MVC;
@using HQ.eSkyFramework;
@using HQ.eSkyFramework.HQControl;
@using SI21900;
@{
    Layout = null;
    var X = Html.X();
    var HQ = Html.HQ();
}

@(X.Viewport()
.Layout(LayoutType.Fit)
.Items(
    X.FormPanel()
    .ID("frmMain")
    .BodyPadding(0)
    .KeyMap(Util.SetupKeyMap())
    .TopBar(Util.SetupToolbar("Print", true, ""))
    .Layout(LayoutType.Fit)
    .Items(
        ////Thiet ke giao dien o day

        X.GridPanel()
        .Scroll(ScrollMode.Both)
        .View(X.GridView().TrackOver(false))
        .ID("grdTerritory")
        .Store(
            X.Store()
            .ID("stoTerritory")
            .PageSize(50)
            .Model(Util.GenerateModel(typeof(SI21900_pgLoadTerritory_Result), "mdlSI21900_pgLoadTerritory", "Territory"))
            .ServerProxy(X.AjaxProxy().Url(Url.Action("GetTerritory"))).AutoLoad(false)
            .Listeners(l =>
            {
                l.BeforeLoad.Fn = "stoBeforeLoad";
                l.Load.Fn = "stoTerritory_Load";
                l.Update.Fn = "frmChange";                 
            })
        )
        .Listeners(p =>
                 {
                     p.BoxReady.Handler = "firstLoad();";
                 })
        .SortableColumns(false)
        .ColumnModel(
            X.RowNumbererColumn()
            .Width(40)
            , X.Column()
                .Flex(1)
                .Text(Util.GetLang("SI21900_Zone")) // Mã Miền
                .DataIndex("Zone")
                    .Editor(HQ.Combo()
                        .ID("cboZone")
                        .HQProcedure("SI21900_pcZone")
                        .HQColumnShow("Code,Descr").DataIndex("Zone")
                        .HQHeightWidth(400, 300)
                        .ValueField("Code").DisplayField("Code")
                        .SelectOnFocus(true).ForceSelection(true)
                        .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                        .HQParam(new StoreParameterCollection() {
                            new StoreParameter("@UserName", "HQ.userName", ParameterMode.Raw)
                            ,new StoreParameter("@CpnyID", "HQ.cpnyID", ParameterMode.Raw)
                            ,new StoreParameter("@LangID", "HQ.langID", ParameterMode.Raw)
                        })
                        .Listeners(lst =>
                            {
                                lst.TriggerClick.Handler = " { this.clearValue();}"; //"if (index == 0) { this.clearValue();}";
                                lst.Change.Fn = "cboZone_Change";
                                lst.Select.Fn = "cboZone_Change";

                            })
                                .LoadData()
                        )

            , X.Column()
                .Text(Util.GetLang("ProgramCode")) // Tên Miền
                .DataIndex("ZoneDescr")
                .Flex(1)
                 
            ,X.Column()
                .ID("Territory")
                .Text(Util.GetLang("SI21900_Territory")) // Mã Vùng Bán Hàng
                .DataIndex("Territory")
                .Flex(1)
                        .Editor(Html.X()
                            .TextField()
                            .MaxLength(10)
                            .EnforceMaxLength(true))
                    
            ,X.Column()
                .Text(Util.GetLang("SI21900_Descr")) // Tên Vùng Bán Hàng
                .DataIndex("Descr")
                .Flex(1)
                    .Editor(Html.X()
                        .TextField()
                        .MaxLength(200)
                        .EnforceMaxLength(true))



                , X.Column()
                    .Text(Util.GetLang("Distance"))
                    .DataIndex("Distance")
                    .Width(150)
                    .ID("txtDistance")
                    .Editor(Html.X()
                            .NumberField()
                            .MinValue(0)
                            .DecimalPrecision(2)
                            .MaxValue(99999999.99)
                            .AllowExponential(false))
                            .Renderer("renderDistance")       
                            
            ,X.CommandColumn()
                .Width(100)
                .Commands(
                    X.GridCommand()
                    .Text(Util.GetLang("Reject"))
                    .ToolTip(t => t.Text = Util.GetLang("Rejectrowchanges"))
                    .CommandName("reject")
                    .Icon(Icon.ArrowUndo)
                    )
            .PrepareToolbar(t => t.Handler = "toolbar.items.get(0).setVisible(record.dirty);")
            .Listeners(l => l.Command.Handler = "grdTerritory_Reject(record);")
        )
        .SelectionModel(X.RowSelectionModel().ID("slmTerritory").Mode(SelectionMode.Multi))
            .Listeners(lst => lst.Select.Fn = "slmTerritory_Select")
        .BottomBar(
            X.PagingToolbar()
            .Items(
                X.Label("Page size:"),
                X.ToolbarSpacer(10),
                X.ComboBox()
                .Width(80)
                .Items("1", "2", "10", "20", "30", "50")
                .SelectedItems("50")
                .Listeners(l =>
                    {
                        l.Select.Fn = "HQ.grid.onPageSelect";                   
                    })
            )
            .Plugins(X.ProgressBarPager())
        )
        .Plugins(
            X.CellEditing()
            .ClicksToEdit(1)
            .Listeners(ls =>
            {
                ls.BeforeEdit.Fn = "grdTerritory_BeforeEdit";
                ls.Edit.Fn = "grdTerritory_Edit";
                ls.ValidateEdit.Fn = "grdTerritory_ValidateEdit";

            })
        )

        .Features(
            X.GridFilters()
                .Local(true)
                .Filters(
                    X.StringFilter().DataIndex("Territory"),
                    X.StringFilter().DataIndex("Descr"),
                     X.StringFilter().DataIndex("Zone"),
                      X.StringFilter().DataIndex("ZoneDescr"),
                      X.NumericFilter().DataIndex("Distance")
                )
        )
    )
))
