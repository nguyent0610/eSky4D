@using Ext.Net;
@using Ext.Net.MVC;
@using HQ.eSkyFramework;
@using HQ.eSkyFramework.HQControl;
@using SI20400;
@{
    Layout = null;
    var X = Html.X();
    var HQ = Html.HQ();
}

@(X.Viewport()
.Layout(LayoutType.Fit)
.Items(
    X.FormPanel()
    .ID("frmMain")
    .BodyPadding(0)
    .KeyMap(Util.SetupKeyMap())
    .TopBar(Util.SetupToolbar("Print", true, ""))
    .Layout(LayoutType.Fit)  
    .Items(
        ////Thiet ke giao dien o day

        X.GridPanel()
        .Scroll(ScrollMode.Both)
        .View(X.GridView().TrackOver(false))
        .ID("grdSI_MaterialType")
        .Store(
             X.Store()
            .ID("stoSI_MaterialType")
            .PageSize(50).AutoLoad(false)
            .Model(Util.GenerateModel(typeof(SI20400_pgLoadGrid_Result), "mdlSI_MaterialType", "MaterialType"))
            .ServerProxy(X.AjaxProxy().Url(Url.Action("GetSI_MaterialType")))
            .Listeners(l =>
            {
                l.BeforeLoad.Fn = "stoBeforeLoad";
                l.Load.Fn = "stoSI_MaterialType_Load";
                l.Update.Fn = "frmChange";                 
            })
        )
        .Listeners(p =>
        {
            p.BoxReady.Handler = "firstLoad();";
        })
        .SortableColumns(false)
        .ColumnModel(
         X.RowNumbererColumn()
                    , X.Column().Text(Util.GetLang("MaterialType")).DataIndex("MaterialType").Width(150).Editor(Html.X().TextField().AllowBlank(true).MaxLength(10).EnforceMaxLength(true))
                    , X.Column().Text(Util.GetLang("Descr")).DataIndex("Descr").Width(150).Editor(Html.X().TextField().AllowBlank(true).MaxLength(30).EnforceMaxLength(true))
                    , X.Column().Text(Util.GetLang("Buyer")).DataIndex("Buyer").Width(150)
                    .Editor(
                        HQ.Combo().ID("cboBuyer").Name("cboBuyer").HQProcedure("SI20400_pcSI_Buyer")
                        .HQColumnShow("Buyer,BuyerName").DisplayField("Buyer").ValueField("Buyer")
                        .Width(300).HQHeightWidth(500, 400).MarginSpec("5 0 0 0")
                        .AllowBlank(true).ForceSelection(true).HQDBSys(false)
                        .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                        .HQParam(new StoreParameterCollection() { 
                            //new StoreParameter() { Name = "@BranchID", Value = "HQ.cpnyID" , Mode = ParameterMode.Raw }
                        })
                        .LoadData()
                        .Listeners(lst =>
                            {
                                lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                            })
                    )

                    , X.CommandColumn().Width(150)
                    .Commands(
                            X.GridCommand()
                            .Text(Util.GetLang("Reject"))
                            .ToolTip(t =>
                            {
                                t.Text = Util.GetLang("Rejectrowchanges");
                            })
                            .CommandName("reject")
                            .Icon(Icon.ArrowUndo)
                    )
                    .PrepareToolbar(t =>
                    {
                        t.Handler = "toolbar.items.get(0).setVisible(record.dirty);";
                    })
                    .Listeners(l =>
                    {
                        l.Command.Handler = "grdSI_MaterialType_Reject(record);";
                    })
        
        )
        .SelectionModel(X.RowSelectionModel().ID("slmSI_MaterialType").Mode(SelectionMode.Multi))
        .BottomBar(
            X.PagingToolbar()
            .Items(
                X.Label("Page size:"),
                X.ToolbarSpacer(10),
                X.ComboBox()
                .Width(80)
                .Items("1", "2", "10", "20", "30", "50")
                .SelectedItems("50")
                .Listeners(l => l.Select.Fn = "HQ.grid.onPageSelect")
            )
            .Plugins(X.ProgressBarPager())
        )
        .Plugins(
            X.CellEditing()
            .ClicksToEdit(1)
            .Listeners(ls =>
            {
                ls.BeforeEdit.Fn = "grdSI_MaterialType_BeforeEdit";
                ls.Edit.Fn = "grdSI_MaterialType_Edit";
                ls.ValidateEdit.Fn = "grdSI_MaterialType_ValidateEdit";
            })
        )

        .Features(
            X.GridFilters()
                .Local(true)
                .Filters(
                    X.StringFilter().DataIndex("MaterialType"),
                    X.StringFilter().DataIndex("Descr"),
                    X.StringFilter().DataIndex("Buyer")
      
                )
        )
    )
))
