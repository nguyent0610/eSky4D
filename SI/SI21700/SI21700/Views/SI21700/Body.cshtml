@using Ext.Net;
@using Ext.Net.MVC;
@using HQ.eSkyFramework;
@using HQ.eSkyFramework.HQControl;
@using SI21700;
@{
    Layout = null;
    var X = Html.X();
    var HQ = Html.HQ();
}

@(
    X.Viewport()
    .Layout(LayoutType.Fit)
    .Items(
        X.FormPanel()
        .ID("frmMain")
        .BodyPadding(0)
        .KeyMap(Util.SetupKeyMap())
        .TopBar(Util.SetupToolbar("Print", true, ""))
        .Layout(LayoutType.Fit)
        .Items(
        
            ////Thiet ke giao dien o day
            X.GridPanel()
            .Scroll(ScrollMode.Both)
            .View(X.GridView().TrackOver(false))
            .ID("grdSI_District")
            .Store(
                X.Store()
                .ID("stoSI_District")
                .PageSize(50)
                .Model(Util.GenerateModel(typeof(SI21700_pgLoadDistrict_Result), "mdSI_District", "Country,State,District"))
                .ServerProxy(X.AjaxProxy().Url(Url.Action("GetSI_District"))).AutoLoad(false)
                .Listeners(l =>
                {
                    l.BeforeLoad.Fn = "stoBeforeLoad";
                    l.Load.Fn = "stoSI_District_Load";
                    l.Update.Fn = "frmChange"; 
                }) // stoSI_District
            )
            .Listeners(p => p.BoxReady.Handler = "firstLoad();")
            .SortableColumns(false)
            .ColumnModel(
                X.RowNumbererColumn().Width(40)
               
                 , X.Column().Text(Util.GetLang("Country")).DataIndex("Country").Width(150)
                .Editor(
                    HQ.Combo().ID("cboCountry").Name("cboCountry").HQProcedure("SI21700_pcCountryAll")
                    .HQColumnShow("CountryID,Descr").DisplayField("CountryID").ValueField("CountryID")
                    .Width(300).HQHeightWidth(500, 400).MarginSpec("5 0 0 0")
                    .HQDBSys(false).AllowBlank(true).ForceSelection(true)
                    .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                    .Listeners(lst =>
                        {
                            lst.Change.Fn = "cboCountry_Change";
                            lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                        })
                     .LoadData()
                )
                
                 , X.Column().Text(Util.GetLang("State")).DataIndex("State").Width(150)
                .Editor(
                     HQ.Combo().ID("cboState").HQProcedure("SI21700_pcStateAll")
                        .HQColumnShow("State,Descr").HQHeightWidth(300, 400).ForceSelection(true)
                        .ValueField("State").DisplayField("State").HQAutoLoad(false)
                        .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                        .HQParam(new StoreParameterCollection()  { 
                            //do cboState load dựa vào cboCountry nên ta sử dụng bắt giá trị Country của hàng đang click vào trên grid
                            new StoreParameter() { Name = "@Country", Value = "App.cboCountry.getValue()", Mode = ParameterMode.Raw }
                        })
                        .Listeners(lst =>
                        {
                            lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                        })
                        .LoadData()
                ) 
                , X.Column().Text(Util.GetLang("District")).DataIndex("District").Width(150)
                .Editor(Html.X().TextField().MaxLength(10).EnforceMaxLength(true))
                
                , X.Column().Text(Util.GetLang("Name")).DataIndex("Name").Width(150)
                .Editor(Html.X().TextField().MaxLength(30).EnforceMaxLength(true))
               
                , X.CommandColumn().Width(150)
                .Commands(
                    Html.X().GridCommand()
                    .Text(Util.GetLang("Reject"))
                    .ToolTip(t =>
                    {
                        t.Text = Util.GetLang("Rejectrowchanges");
                    })
                    .CommandName("reject")
                    .Icon(Icon.ArrowUndo)
                )
                .PrepareToolbar(t =>
                {
                    t.Handler = "toolbar.items.get(0).setVisible(record.dirty);";
                })
                .Listeners(l =>
                {
                    l.Command.Handler = "grd_Reject(record);";
                })
            )
            .SelectionModel(X.RowSelectionModel().ID("slmSI_District").Mode(SelectionMode.Multi))
            .BottomBar(
                X.PagingToolbar()
                .Items(
                    X.Label("Page size:"),
                    X.ToolbarSpacer(10),
                    X.ComboBox()
                    .Width(80)
                    .Items("1", "2", "10", "20", "30", "50")
                    .SelectedItems("50")
                    .Listeners(l => l.Select.Fn = "HQ.grid.onPageSelect")
                )
                .Plugins(X.ProgressBarPager())
            )
            .Plugins(
                X.CellEditing()
                .ClicksToEdit(1)
                .Listeners(ls =>
                {
                    ls.BeforeEdit.Fn = "grdSI_District_BeforeEdit";
                    ls.Edit.Fn = "grdSI_District_Edit";
                    ls.ValidateEdit.Fn = "grdSI_District_ValidateEdit";                  
                })
            )
            .Features(
                X.GridFilters()
                .Local(true)
                .Filters(
                    X.StringFilter().DataIndex("Country"),
                    X.StringFilter().DataIndex("State"),
                    X.StringFilter().DataIndex("District"),
                    X.StringFilter().DataIndex("Name")
                )
            ) // grdSI_District
        ) // frmMain
    ) // Viewport
)
