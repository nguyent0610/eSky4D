@using Ext.Net;
@using Ext.Net.MVC;
@using HQ.eSkyFramework;
@using HQ.eSkyFramework.HQControl;
@using SA00300;
@{
    Layout = null;
    var X = Html.X();
    var HQ = Html.HQ();
}

@(X.Viewport()
.Layout(LayoutType.Fit)
.Items(
    X.FormPanel()
    .ID("frmMain")  
    .TrackResetOnLoad(true)
    .KeyMap(Util.SetupKeyMap())
    .TopBar(Util.SetupToolbar("Print", true, ""))
    .Layout(LayoutType.Border)
    .FieldDefaults(act => { act.LabelAlign = LabelAlign.Right; act.LabelWidth = 200; })
    .Listeners(l=>{
        l.BoxReady.Handler = "firstLoad()";
        l.FieldChange.Fn = "frmChange";
    })
    .Items(
        ////Thiet ke giao dien o day
        X.Panel().ID("pnlHeader")
        .Region(Region.North)
        .Items(
            X.Container().Layout(LayoutType.HBox).MarginSpec("0 0 5 0")
                .Items(
              
                    HQ.Combo().ID("cboUserID").MarginSpec("5 0 0 0")
                    .Name("cboUserID").HQLangCode("UserID").HQDBSys(true).AllowBlank(false)
                    .HQProcedure("SA00300_pcUser").HQColumnShow("UserName,FirstName,LastName").DisplayField("UserName").ValueField("UserName")
                    .HQHeightWidth(400, 300).MaxLength(30).EnforceMaxLength(true)
                    .LoadData()
                    .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                    .Listeners(lst => {
                            lst.TriggerClick.Fn = "cboUserID_TriggerClick";
                            lst.Change.Fn = "cboUserID_Change";
                            lst.Expand.Fn = "cboUserID_Expand"; 
                            lst.Select.Fn = "cboUserID_Select";
                        })
                        , HQ.Checkbox().ID("chkAuto").LabelWidth(500)
                        .Name("chkAuto").HQLangCode("CHECKAUTOUSERID").MarginSpec("5 0 0 10")
                        .Listeners(lst => 
                            { 
                                lst.Change.Handler = "chkAutoChange()"; 
                            })
                )
        )
        .Listeners(lss =>
        {
            lss.Render.Fn = "pnl_render";
        })

        , X.TabPanel().ID("tabDetail")
        .Region(Region.Center)
        .Layout(LayoutType.Border)
        //.Listeners(p => p.AfterRender.Fn = "tabDetail_AfterRender")
        .Items(
            X.Panel().ID("pnlUser")
            .Title(Util.GetLang("USER"))
            .Layout(LayoutType.HBox).AutoScroll(true)
            .Items(
                X.Container().Layout(LayoutType.VBox).MinWidth(500).Width(525)
                    .Items(                                                                  
                        HQ.TextBox().ID("FirstName").Name("FirstName").HQLangCode("FirstName").MarginSpec("3 0 0 0").Width(500).AllowBlank(false).MaxLength(250).EnforceMaxLength(true)
                        , HQ.TextBox().ID("LastName").Name("LastName").HQLangCode("LastName").MarginSpec("3 0 0 0").Width(500).AllowBlank(false).MaxLength(250).EnforceMaxLength(true)
                        , HQ.TextBox().ID("Address").Name("Address").HQLangCode("Address").MarginSpec("3 0 0 0").Width(500).AllowBlank(false).MaxLength(100).EnforceMaxLength(true)
                        , HQ.TextBox().InputType(Ext.Net.InputType.Email).ID("Email").Name("Email").HQLangCode("Email").MarginSpec("3 0 0 0").Width(500).AllowBlank(false).MaxLength(250).EnforceMaxLength(true)
                        , HQ.TextBox().ID("Tel").Name("Tel").HQLangCode("Tel").MarginSpec("3 0 0 0").Width(500).AllowBlank(false).MaxLength(15).EnforceMaxLength(true).MaskRe(@"/[0-9-,.*#()+/ ]/")
                        , HQ.TextBox().InputType(Ext.Net.InputType.Password).ID("Password").Name("Password").HQLangCode("Password").MarginSpec("3 0 0 0").Width(500).AllowBlank(false)
                        , HQ.TextBox().ID("PasswordQuestion").Name("PasswordQuestion").HQLangCode("PasswordQuestion").MarginSpec("3 0 0 0").Width(500).AllowBlank(false).MaxLength(200).EnforceMaxLength(true)
                        , HQ.TextBox().InputType(Ext.Net.InputType.Password).ID("PasswordAnswer").Name("PasswordAnswer").HQLangCode("PasswordAnswer").MarginSpec("3 0 0 0").Width(500).AllowBlank(false).MaxLength(100).EnforceMaxLength(true)
                        , HQ.TextBox().ID("ComputerID").Name("ComputerID").HQLangCode("ComputerID").MarginSpec("3 0 0 0").Width(500).MaxLength(100).EnforceMaxLength(true)                         
                        , HQ.Combo().ID("CpnyIDHand").Name("CpnyIDHand").MarginSpec("3 0 0 0")
                            .HQLangCode("CpnyID").HQDBSys(true).HQProcedure("SA00300_pcCompany")
                            .HQColumnShow("CpnyID,CpnyName").DisplayField("CpnyID").ValueField("CpnyID").MultiSelect(true)
                            .HQHeightWidth(400, 300)
                            .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                            .Listeners(lst => 
                            {                       
                                lst.Change.Fn = "CpnyIDHand_Change";
                                lst.TriggerClick.Handler = "if (index == 0) { this.clearValue(); GetAllCompany();}";
                                lst.Expand.Handler = "HQ.combo.expand(this,',');";
                                lst.Focus.Handler = "this.forceSelection = true;";
                                lst.Blur.Handler = "this.forceSelection = false;";
                                
                            })
                            .LoadData().Width(500)
                                
                        , HQ.TextBox().ID("CpnyID").Name("CpnyID").HQLangCode("CpnyIDHand").Width(500).MarginSpec("3 0 0 0").Tag("X").ReadOnly(true).Hidden(true)
                        , HQ.Combo().ID("UserTypes").Name("UserTypes").MarginSpec("3 0 0 0").AllowBlank(false)
                            .HQLangCode("UserTypes").HQDBSys(true).HQProcedure("SA00300_pcSYS_Role")
                            .HQColumnShow("Code,Descr").DisplayField("Code").ValueField("Code").MultiSelect(true)
                            .HQHeightWidth(400, 300)
                            .HQParam(new StoreParameterCollection() 
                            {
                                new StoreParameter() { Name = "@UserID", Value = "HQ.userName", Mode = ParameterMode.Raw }
                            })
                            .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                            .Listeners(lst => { 
                                lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                                lst.Expand.Handler = "HQ.combo.expand(this,',');"; 
                                lst.Focus.Handler = "this.forceSelection = true;"; 
                            })
                            .LoadData().Width(500)      
                        , HQ.Combo().ID("Channel").Name("Channel").MarginSpec("3 0 0 0").AllowBlank(false)
                            .HQLangCode("Channel").HQDBSys(false).HQProcedure("SA00300_pcSalesChannel")
                            .HQColumnShow("Code,Descr")
                            .DisplayField("Code")
                            .ValueField("Code")
                            .HQHeightWidth(400, 300)
                            .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                            .Listeners(lst => { 
                                lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}"; 
                                lst.Focus.Handler = "this.forceSelection = true;"; 
                            })
                            .LoadData().Width(500)        
                        , HQ.Checkbox().ID("Blocked").Name("Blocked").HQLangCode("Blocked").MarginSpec("3 0 0 205").Width(500)
                        , HQ.DateField().ID("BlockedTime").Name("BlockedTime").HQLangCode("BlockedTime").MarginSpec("3 0 0 0").Width(500)
                        , HQ.Checkbox().ID("LoggedIn").Name("LoggedIn").HQLangCode("LoggedIn").MarginSpec("3 0 0 205").Width(500)
                        , HQ.DateField().ID("LastLoggedIn").Name("LastLoggedIn").HQLangCode("LastLoggedIn").MarginSpec("3 0 0 0").Width(500)
                        , HQ.DateField().ID("BeginDay").Name("BeginDay").HQLangCode("BeginDay").MarginSpec("3 0 0 0").Width(500)
                        , HQ.NumberField().ID("CrtLmt").Name("CrtLmt").HQLangCode("CrtLmt").MarginSpec("3 0 0 0").Width(500).MinValue(0).DecimalPrecision(0)
                            .Listeners(lst => { lst.Blur.Fn = "checkCrtLmt"; })
                        , HQ.NumberField().ID("CrtLmtInvoice").Name("CrtLmtInvoice").HQLangCode("CrtLmtInvoice").MarginSpec("3 0 0 0").Width(500).MinValue(0).DecimalPrecision(0)
                            .Listeners(lst => { lst.Blur.Fn = "checkCrtLmtInvoice"; })
                        , HQ.NumberField().ID("ExpireDay").Name("ExpireDay").HQLangCode("ExpireDay").DecimalPrecision(0).MarginSpec("3 0 0 0").Width(500).AllowBlank(false).MinValue(1)
                            .Listeners(lst => { lst.Blur.Fn = "checkExpireDay"; })
                        , HQ.NumberField().ID("FailedLoginCount").Name("FailedLoginCount").DecimalPrecision(0).HQLangCode("FailedLoginCount").MarginSpec("3 0 0 0").Width(500).MinValue(0)
                            .Listeners(lst => { lst.Blur.Fn = "checkFailedLoginCount"; })
                        , HQ.TextBox().ID("JobTitle").Name("JobTitle").HQLangCode("JobTitle").MarginSpec("3 0 0 0").Width(500)
                        , HQ.Combo().ID("Manager").Name("Manager").MarginSpec("3 0 0 0")
                            .HQLangCode("Manager").HQDBSys(true).HQProcedure("SA00300_pcManager")
                            .HQColumnShow("UserName,FirstName,LastName,Address,Email")
                            .DisplayField("UserName")
                            .ValueField("UserName")
                            .HQHeightWidth(400, 300)
                            .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                            .Listeners(lst => { lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}"; lst.Focus.Handler = "this.forceSelection = true;"; })
                            .LoadData().Width(500)
                        , HQ.Combo().ID("Department").Name("Department").MarginSpec("3 0 0 0")
                            .HQLangCode("Department").HQDBSys(false).HQProcedure("SA00300_pcDepartment")
                            .HQColumnShow("Department,Name")
                            .DisplayField("Name")
                            .ValueField("Department")
                            .HQHeightWidth(400, 300)
                            .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                            .Listeners(lst => { lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}"; lst.Focus.Handler = "this.forceSelection = true;"; })
                            .LoadData().Width(500)
                        , HQ.Checkbox().ID("CheckFirstLogin").Name("CheckFirstLogin").HQLangCode("CheckFirstLogin").MarginSpec("3 0 0 205")                                            
                        , HQ.Combo().ID("HomeScreenNbr").Name("HomeScreenNbr").MarginSpec("3 0 0 0")
                            .HQLangCode("HomeScreenNbr").HQDBSys(true).HQProcedure("SA00300_pcSYS_Screen")
                            .HQColumnShow("Code,Descr")
                            .DisplayField("Descr")
                            .ValueField("Code")
                            .HQHeightWidth(400, 300)
                            .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                            .Listeners(lst => { lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}"; lst.Focus.Handler = "this.forceSelection = true;"; })
                            .LoadData().Width(500)

                        , X.Container().ID("PromotionApproval").Layout(LayoutType.HBox).MarginSpec("3 0 0 0")
                        .Items(
                            HQ.NumberField().ID("txtPromotionApprovalFrom").Name("txtPromotionApprovalFrom").HQLangCode("PromotionApproval").Width(345).Tag("X").DataIndex("PromotionApprovalFrom").MarginSpec("0 0 0 0").FieldStyle("text-align: right").MinValue(0)
                            .Listeners(lst =>
                            {
                                lst.Change.Fn = "txtPromotionApprovalFrom_Change";
                                //lst.Blur.Fn = "txtLat_Blur";
                            })

                            , HQ.NumberField().ID("txtPromotionApprovalTo").Name("txtPromotionApprovalTo").FieldLabel("-").LabelSeparator("").LabelWidth(5).Width(155).Tag("X").DataIndex("PromotionApprovalTo").FieldStyle("text-align: right").MinValue(0)
                            .Listeners(lst =>
                            {
                                lst.Focus.Fn = "txtPromotionApprovalTo_Focus";
                                lst.Blur.Handler = "App.txtPromotionApprovalTo.setMinValue(0);";
                            })
                        )
                                   
                                //,HQ.TextBox().ID("AutoID").Name("AutoID").HQLangCode("AutoID").MarginSpec("3 0 0 0").HQControlFocus("").Listeners(lst => { lst.Focus.Handler = "focus='Header'";})                                                                                                                                                
                                //,HQ.TextBox().ID("Images").Name("Images").HQLangCode("Images").MarginSpec("3 0 0 0").HQControlFocus("").Listeners(lst => { lst.Focus.Handler = "focus='Header'";})
                                //.HQControlFocus("").Listeners(lst => { lst.Focus.Handler = "focus='Header'";})
                        , HQ.Combo().ID("cboCategory").Name("cboCategory").MarginSpec("3 0 0 0").DataIndex("Category")
                        .HQLangCode("Category").HQDBSys(false).HQProcedure("SA00300_pcCategory")
                        .HQColumnShow("Code,Descr")
                        .DisplayField("Descr")
                        .ValueField("Code")
                        .HQHeightWidth(400, 300).MultiSelect(true)
                        .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                        .Listeners(lst => { lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}"; lst.Focus.Handler = "this.forceSelection = true;"; })
                        .HQParam(new StoreParameterCollection() 
                        {
                            new StoreParameter() { Name = "@UserName", Value = "HQ.userName", Mode = ParameterMode.Raw },
                            new StoreParameter() { Name = "@LangID", Value = "HQ.LangID", Mode = ParameterMode.Raw },
                            new StoreParameter() { Name = "@CpnyID", Value = "HQ.CpnyID", Mode = ParameterMode.Raw }
                    })
                        .LoadData().Width(500)
                )
                        

                    , X.Container().Layout(LayoutType.VBox).MinWidth(210).Width(210)
                    .Items(
                        X.Hidden().ID("hdnImages").DataIndex("Images")
                        , X.Image().ID("imgImages").Width(200).Height(200).MarginSpec("10 10 10 10")

                        , X.Container().Layout(LayoutType.HBox).MarginSpec("0 0 5 0")
                        .Items(
                            X.FileUploadField().ID("fupImages").Icon(Icon.ImageAdd).ButtonText(Util.GetLang("ChooseImage"))
                            .ButtonOnly(true).MarginSpec("0 5 5 10")
                            .Listeners(lst=>lst.Change.Fn="fupImages_change")

                            , X.Button().ID("btnClearImage").Icon(Icon.ImageDelete).Text(Util.GetLang("ClearImage")).MarginSpec("0 5 5 9")
                            .Handler("btnClearImage_click").Width(90)     
                        )
                    )
            
            
            )//pnlUser
            .Listeners(lss =>
            {
                lss.Render.Fn = "pnl_render";
            })

                , X.Panel().ID("pnlUserGroup")
                .Title(Util.GetLang("USERGROUP"))
                .Layout(LayoutType.Border)
                .Items(
                    X.GridPanel().ID("grdSYS_UserGroup")
                    .Scroll(ScrollMode.Both)
                    .View(X.GridView().TrackOver(false))
                    .Region(Region.Center).Flex(1)
                    .Store(
                         X.Store()
                        .ID("stoSYS_UserGroup")
                        .PageSize(50).AutoLoad(false)
                        .Model(Util.GenerateModel(typeof(SA00300_pgLoadSYS_UserGroup_Result), "mdlSYS_UserGroup", ""))
                        .Parameters(ps =>
                        {
                            ps.Add(new StoreParameter("UserID", "App.cboUserID.getValue()", ParameterMode.Raw));
                        })
                        .ServerProxy(X.AjaxProxy().Url(Url.Action("GetSYS_UserGroup")))
                        .Listeners(l =>
                        {
                            l.Load.Fn = "stoSYS_UserGroup_Load";
                        })
                    )
                    .Listeners(lst => lst.Render.Handler = "HQ.common.control_render(this,'grdSYS_UserGroup');")
                    .SortableColumns(false)
                    .ColumnModel(
                        X.RowNumbererColumn()
                        
                        , X.Column().Text(Util.GetLang("GroupID")).DataIndex("GroupID").Width(120)
                        .Editor(
                            HQ.Combo().ID("cboGroupIDGroup").Name("cboGroupIDGroup").HideLabel(true)
                            .HQLangCode("GroupID").HQDBSys(true).HQProcedure("SA00300_pcUserGroup")
                            .HQColumnShow("GroupID,Descr").DisplayField("GroupID").ValueField("GroupID")
                            .HQHeightWidth(400, 300)
                            .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                            .Listeners(lst => 
                            { 
                                lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}"; 
                            })
                            .LoadData()            
                        )
                        , X.Column().Text(Util.GetLang("Descr")).DataIndex("Descr").Width(120) 

                        , X.CommandColumn().Width(150)
                        .Commands(
                            X.GridCommand()
                            .Text(("Reject"))
                            .ToolTip(t =>
                            {
                                t.Text = ("Rejectrowchanges");
                            })
                            .CommandName("reject")
                            .Icon(Icon.ArrowUndo)
                        )
                        .PrepareToolbar(t =>
                        {
                            t.Handler = "toolbar.items.get(0).setVisible(record.dirty);";
                        })
                        .Listeners(l =>
                        {
                            l.Command.Handler = "grdSYS_UserGroup_Reject(record);";
                        })
                )
                .SelectionModel(
                    X.RowSelectionModel().ID("slmSYS_UserGroup").Mode(SelectionMode.Multi)
                        .Listeners(p=>p.Select.Handler = "_focusNo == 1")
                )
                .BottomBar(
                    X.PagingToolbar()
                    .Items(
                        X.Label("Page size:"),
                        X.ToolbarSpacer(10),
                        X.ComboBox()
                        .Width(80)
                        .Items("1", "2", "10", "20", "30", "50")
                        .SelectedItems("50")
                        .Listeners(l => l.Select.Fn = "HQ.grid.onPageSelect")
                    )
                    .Plugins(X.ProgressBarPager())
                )
                .Plugins(
                    X.CellEditing()
                    .ClicksToEdit(1)
                    .Listeners(ls =>
                    {
                        ls.BeforeEdit.Fn = "grdSYS_UserGroup_BeforeEdit";
                        ls.Edit.Fn = "grdSYS_UserGroup_Edit";
                        ls.ValidateEdit.Fn = "grdSYS_UserGroup_ValidateEdit";
                    })
                )
                .Features(
                    X.GridFilters()
                        .Local(true)
                        .Filters(
                            X.StringFilter().DataIndex("GroupID")
                        )
                )
                )
                .Listeners(lss =>
                {
                    lss.Render.Fn = "pnl_render";
                })
        ////tabpnlUserGroup

        
                , X.Panel().ID("pnlUserCompany")
                .Title(Util.GetLang("CompanyGroup"))
                .Layout(LayoutType.Border)
                .CloseAction(CloseAction.Hide)
                .Items(
                    X.GridPanel()
                    .Scroll(ScrollMode.Both)
                    .View(X.GridView().TrackOver(false))
                    .ID("grdSYS_UserCompany")
                    .Region(Region.Center).Flex(1)
                    .Store(
                         X.Store()
                        .ID("stoSYS_UserCompany")
                        .PageSize(50).AutoLoad(false)
                        .Model(Util.GenerateModel(typeof(SA00300_pgLoadSYS_UserCompany_Result), "mdlSYS_UserCompany", ""))
                        .Parameters(ps =>
                        {
                            ps.Add(new StoreParameter("UserID", "App.cboUserID.getValue()", ParameterMode.Raw));
                        })
                        .ServerProxy(X.AjaxProxy().Url(Url.Action("GetSYS_UserCompany")))
                        .Listeners(l =>
                        {
                            l.Load.Fn = "stoSYS_UserCompany_Load";
                        })
                    )
                    .Listeners(lst => lst.Render.Handler = "HQ.common.control_render(this,'grdSYS_UserCompany');")
                    .SortableColumns(false)
                    .ColumnModel(
                     X.RowNumbererColumn()
                        
                        , X.Column().Text(Util.GetLang("GroupID")).DataIndex("GroupID").Width(120)
                            .Editor(
                                HQ.Combo().ID("cboGroupIDCompany").Name("cboGroupIDCompany").HideLabel(true)
                                .HQLangCode("GroupID").HQDBSys(true).HQProcedure("SA00300_pcCompanyGroup")
                                .HQColumnShow("GroupID,Descr,ListCpny").DisplayField("GroupID").ValueField("GroupID")
                                .HQHeightWidth(400, 300)
                                .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                                .Listeners(lst => 
                                { 
                                    lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                                })
                                .LoadData()
                                )
                        , X.Column().Text(Util.GetLang("ListCpny")).DataIndex("ListCpny").Width(120)
                        , X.Column().Text(Util.GetLang("Descr")).DataIndex("Descr").Width(120)
                     
                        , X.CommandColumn().Width(150)
                        .Commands(
                            X.GridCommand()
                            .Text(("Reject"))
                            .ToolTip(t =>
                            {
                                t.Text = ("Rejectrowchanges");
                            })
                            .CommandName("reject")
                            .Icon(Icon.ArrowUndo)
                        )
                        .PrepareToolbar(t =>
                        {
                            t.Handler = "toolbar.items.get(0).setVisible(record.dirty);";
                        })
                        .Listeners(l =>
                        {
                            l.Command.Handler = "grdSYS_UserCompany_Reject(record);";
                        })
                    )
                    .SelectionModel(
                        X.RowSelectionModel().ID("slmSYS_UserCompany").Mode(SelectionMode.Multi)
                            .Listeners(p=>p.Select.Handler = "_focusNo == 2")
                    )
                    .BottomBar(
                        X.PagingToolbar()
                        .Items(
                            X.Label("Page size:"),
                            X.ToolbarSpacer(10),
                            X.ComboBox()
                            .Width(80)
                            .Items("1", "2", "10", "20", "30", "50")
                            .SelectedItems("50")
                            .Listeners(l => l.Select.Fn = "HQ.grid.onPageSelect")
                        )
                        .Plugins(X.ProgressBarPager())
                    )
                    .Plugins(
                        X.CellEditing()
                        .ClicksToEdit(1)
                        .Listeners(ls =>
                        {
                            ls.BeforeEdit.Fn = "grdSYS_UserCompany_BeforeEdit";
                            ls.Edit.Fn = "grdSYS_UserCompany_Edit";
                            ls.ValidateEdit.Fn = "grdSYS_UserCompany_ValidateEdit";
                        })
                    )
                    .Features(
                        X.GridFilters()
                            .Local(true)
                            .Filters(
                                X.StringFilter().DataIndex("GroupID")
                            )
                    )
                )
                .Listeners(lss =>
                {
                    lss.Render.Fn = "pnl_render";
                })//tabpnlUserCompany
        )//xtab
    )// frmMain
)
)
