//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
namespace SA03200
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class SA03200Entities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new SA03200Entities object using the connection string found in the 'SA03200Entities' section of the application configuration file.
        /// </summary>
        public SA03200Entities() : base("name=SA03200Entities", "SA03200Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new SA03200Entities object.
        /// </summary>
        public SA03200Entities(string connectionString) : base(connectionString, "SA03200Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new SA03200Entities object.
        /// </summary>
        public SA03200Entities(EntityConnection connection) : base(connection, "SA03200Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PPC_License> PPC_License
        {
            get
            {
                if ((_PPC_License == null))
                {
                    _PPC_License = base.CreateObjectSet<PPC_License>("PPC_License");
                }
                return _PPC_License;
            }
        }
        private ObjectSet<PPC_License> _PPC_License;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PPC_License EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPPC_License(PPC_License pPC_License)
        {
            base.AddObject("PPC_License", pPC_License);
        }

        #endregion

        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<SA03200_pgPPC_License_Result> SA03200_pgPPC_License()
        {
            return base.ExecuteFunction<SA03200_pgPPC_License_Result>("SA03200_pgPPC_License");
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SA03200Model", Name="PPC_License")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PPC_License : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PPC_License object.
        /// </summary>
        /// <param name="pDAID">Initial value of the PDAID property.</param>
        /// <param name="branchID">Initial value of the BranchID property.</param>
        /// <param name="slsperId">Initial value of the SlsperId property.</param>
        /// <param name="licenseKey">Initial value of the LicenseKey property.</param>
        /// <param name="activitionDay">Initial value of the ActivitionDay property.</param>
        /// <param name="checkAct">Initial value of the CheckAct property.</param>
        /// <param name="lastSyncDate">Initial value of the LastSyncDate property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="crtd_Datetime">Initial value of the Crtd_Datetime property.</param>
        /// <param name="crtd_Prog">Initial value of the Crtd_Prog property.</param>
        /// <param name="crtd_User">Initial value of the Crtd_User property.</param>
        /// <param name="lUpd_Datetime">Initial value of the LUpd_Datetime property.</param>
        /// <param name="lUpd_Prog">Initial value of the LUpd_Prog property.</param>
        /// <param name="lUpd_User">Initial value of the LUpd_User property.</param>
        /// <param name="tstamp">Initial value of the tstamp property.</param>
        public static PPC_License CreatePPC_License(global::System.String pDAID, global::System.String branchID, global::System.String slsperId, global::System.String licenseKey, global::System.Int32 activitionDay, global::System.Boolean checkAct, global::System.DateTime lastSyncDate, global::System.Boolean status, global::System.DateTime crtd_Datetime, global::System.String crtd_Prog, global::System.String crtd_User, global::System.DateTime lUpd_Datetime, global::System.String lUpd_Prog, global::System.String lUpd_User, global::System.Byte[] tstamp)
        {
            PPC_License pPC_License = new PPC_License();
            pPC_License.PDAID = pDAID;
            pPC_License.BranchID = branchID;
            pPC_License.SlsperId = slsperId;
            pPC_License.LicenseKey = licenseKey;
            pPC_License.ActivitionDay = activitionDay;
            pPC_License.CheckAct = checkAct;
            pPC_License.LastSyncDate = lastSyncDate;
            pPC_License.Status = status;
            pPC_License.Crtd_Datetime = crtd_Datetime;
            pPC_License.Crtd_Prog = crtd_Prog;
            pPC_License.Crtd_User = crtd_User;
            pPC_License.LUpd_Datetime = lUpd_Datetime;
            pPC_License.LUpd_Prog = lUpd_Prog;
            pPC_License.LUpd_User = lUpd_User;
            pPC_License.tstamp = tstamp;
            return pPC_License;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PDAID
        {
            get
            {
                return _PDAID;
            }
            set
            {
                if (_PDAID != value)
                {
                    OnPDAIDChanging(value);
                    ReportPropertyChanging("PDAID");
                    _PDAID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("PDAID");
                    OnPDAIDChanged();
                }
            }
        }
        private global::System.String _PDAID;
        partial void OnPDAIDChanging(global::System.String value);
        partial void OnPDAIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BranchID
        {
            get
            {
                return _BranchID;
            }
            set
            {
                if (_BranchID != value)
                {
                    OnBranchIDChanging(value);
                    ReportPropertyChanging("BranchID");
                    _BranchID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("BranchID");
                    OnBranchIDChanged();
                }
            }
        }
        private global::System.String _BranchID;
        partial void OnBranchIDChanging(global::System.String value);
        partial void OnBranchIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SlsperId
        {
            get
            {
                return _SlsperId;
            }
            set
            {
                if (_SlsperId != value)
                {
                    OnSlsperIdChanging(value);
                    ReportPropertyChanging("SlsperId");
                    _SlsperId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("SlsperId");
                    OnSlsperIdChanged();
                }
            }
        }
        private global::System.String _SlsperId;
        partial void OnSlsperIdChanging(global::System.String value);
        partial void OnSlsperIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LicenseKey
        {
            get
            {
                return _LicenseKey;
            }
            set
            {
                OnLicenseKeyChanging(value);
                ReportPropertyChanging("LicenseKey");
                _LicenseKey = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LicenseKey");
                OnLicenseKeyChanged();
            }
        }
        private global::System.String _LicenseKey;
        partial void OnLicenseKeyChanging(global::System.String value);
        partial void OnLicenseKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ActivitionDay
        {
            get
            {
                return _ActivitionDay;
            }
            set
            {
                OnActivitionDayChanging(value);
                ReportPropertyChanging("ActivitionDay");
                _ActivitionDay = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActivitionDay");
                OnActivitionDayChanged();
            }
        }
        private global::System.Int32 _ActivitionDay;
        partial void OnActivitionDayChanging(global::System.Int32 value);
        partial void OnActivitionDayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CheckAct
        {
            get
            {
                return _CheckAct;
            }
            set
            {
                OnCheckActChanging(value);
                ReportPropertyChanging("CheckAct");
                _CheckAct = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CheckAct");
                OnCheckActChanged();
            }
        }
        private global::System.Boolean _CheckAct;
        partial void OnCheckActChanging(global::System.Boolean value);
        partial void OnCheckActChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastSyncDate
        {
            get
            {
                return _LastSyncDate;
            }
            set
            {
                OnLastSyncDateChanging(value);
                ReportPropertyChanging("LastSyncDate");
                _LastSyncDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastSyncDate");
                OnLastSyncDateChanged();
            }
        }
        private global::System.DateTime _LastSyncDate;
        partial void OnLastSyncDateChanging(global::System.DateTime value);
        partial void OnLastSyncDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> WorkingDate
        {
            get
            {
                return _WorkingDate;
            }
            set
            {
                OnWorkingDateChanging(value);
                ReportPropertyChanging("WorkingDate");
                _WorkingDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WorkingDate");
                OnWorkingDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _WorkingDate;
        partial void OnWorkingDateChanging(Nullable<global::System.DateTime> value);
        partial void OnWorkingDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SIMID
        {
            get
            {
                return _SIMID;
            }
            set
            {
                OnSIMIDChanging(value);
                ReportPropertyChanging("SIMID");
                _SIMID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SIMID");
                OnSIMIDChanged();
            }
        }
        private global::System.String _SIMID;
        partial void OnSIMIDChanging(global::System.String value);
        partial void OnSIMIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.Boolean _Status;
        partial void OnStatusChanging(global::System.Boolean value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Crtd_Datetime
        {
            get
            {
                return _Crtd_Datetime;
            }
            set
            {
                OnCrtd_DatetimeChanging(value);
                ReportPropertyChanging("Crtd_Datetime");
                _Crtd_Datetime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Crtd_Datetime");
                OnCrtd_DatetimeChanged();
            }
        }
        private global::System.DateTime _Crtd_Datetime;
        partial void OnCrtd_DatetimeChanging(global::System.DateTime value);
        partial void OnCrtd_DatetimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Crtd_Prog
        {
            get
            {
                return _Crtd_Prog;
            }
            set
            {
                OnCrtd_ProgChanging(value);
                ReportPropertyChanging("Crtd_Prog");
                _Crtd_Prog = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Crtd_Prog");
                OnCrtd_ProgChanged();
            }
        }
        private global::System.String _Crtd_Prog;
        partial void OnCrtd_ProgChanging(global::System.String value);
        partial void OnCrtd_ProgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Crtd_User
        {
            get
            {
                return _Crtd_User;
            }
            set
            {
                OnCrtd_UserChanging(value);
                ReportPropertyChanging("Crtd_User");
                _Crtd_User = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Crtd_User");
                OnCrtd_UserChanged();
            }
        }
        private global::System.String _Crtd_User;
        partial void OnCrtd_UserChanging(global::System.String value);
        partial void OnCrtd_UserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LUpd_Datetime
        {
            get
            {
                return _LUpd_Datetime;
            }
            set
            {
                OnLUpd_DatetimeChanging(value);
                ReportPropertyChanging("LUpd_Datetime");
                _LUpd_Datetime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LUpd_Datetime");
                OnLUpd_DatetimeChanged();
            }
        }
        private global::System.DateTime _LUpd_Datetime;
        partial void OnLUpd_DatetimeChanging(global::System.DateTime value);
        partial void OnLUpd_DatetimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LUpd_Prog
        {
            get
            {
                return _LUpd_Prog;
            }
            set
            {
                OnLUpd_ProgChanging(value);
                ReportPropertyChanging("LUpd_Prog");
                _LUpd_Prog = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LUpd_Prog");
                OnLUpd_ProgChanged();
            }
        }
        private global::System.String _LUpd_Prog;
        partial void OnLUpd_ProgChanging(global::System.String value);
        partial void OnLUpd_ProgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LUpd_User
        {
            get
            {
                return _LUpd_User;
            }
            set
            {
                OnLUpd_UserChanging(value);
                ReportPropertyChanging("LUpd_User");
                _LUpd_User = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LUpd_User");
                OnLUpd_UserChanged();
            }
        }
        private global::System.String _LUpd_User;
        partial void OnLUpd_UserChanging(global::System.String value);
        partial void OnLUpd_UserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] tstamp
        {
            get
            {
                return StructuralObject.GetValidValue(_tstamp);
            }
            set
            {
                OntstampChanging(value);
                ReportPropertyChanging("tstamp");
                _tstamp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("tstamp");
                OntstampChanged();
            }
        }
        private global::System.Byte[] _tstamp;
        partial void OntstampChanging(global::System.Byte[] value);
        partial void OntstampChanged();

        #endregion

    
    }

    #endregion

    #region ComplexTypes
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="SA03200Model", Name="SA03200_pgPPC_License_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class SA03200_pgPPC_License_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SA03200_pgPPC_License_Result object.
        /// </summary>
        /// <param name="pDAID">Initial value of the PDAID property.</param>
        /// <param name="branchID">Initial value of the BranchID property.</param>
        /// <param name="slsperId">Initial value of the SlsperId property.</param>
        /// <param name="licenseKey">Initial value of the LicenseKey property.</param>
        /// <param name="activitionDay">Initial value of the ActivitionDay property.</param>
        /// <param name="checkAct">Initial value of the CheckAct property.</param>
        /// <param name="lastSyncDate">Initial value of the LastSyncDate property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="tstamp">Initial value of the tstamp property.</param>
        public static SA03200_pgPPC_License_Result CreateSA03200_pgPPC_License_Result(global::System.String pDAID, global::System.String branchID, global::System.String slsperId, global::System.String licenseKey, global::System.Int32 activitionDay, global::System.Boolean checkAct, global::System.DateTime lastSyncDate, global::System.Boolean status, global::System.Byte[] tstamp)
        {
            SA03200_pgPPC_License_Result sA03200_pgPPC_License_Result = new SA03200_pgPPC_License_Result();
            sA03200_pgPPC_License_Result.PDAID = pDAID;
            sA03200_pgPPC_License_Result.BranchID = branchID;
            sA03200_pgPPC_License_Result.SlsperId = slsperId;
            sA03200_pgPPC_License_Result.LicenseKey = licenseKey;
            sA03200_pgPPC_License_Result.ActivitionDay = activitionDay;
            sA03200_pgPPC_License_Result.CheckAct = checkAct;
            sA03200_pgPPC_License_Result.LastSyncDate = lastSyncDate;
            sA03200_pgPPC_License_Result.Status = status;
            sA03200_pgPPC_License_Result.tstamp = tstamp;
            return sA03200_pgPPC_License_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PDAID
        {
            get
            {
                return _PDAID;
            }
            set
            {
                OnPDAIDChanging(value);
                ReportPropertyChanging("PDAID");
                _PDAID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PDAID");
                OnPDAIDChanged();
            }
        }
        private global::System.String _PDAID;
        partial void OnPDAIDChanging(global::System.String value);
        partial void OnPDAIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BranchID
        {
            get
            {
                return _BranchID;
            }
            set
            {
                OnBranchIDChanging(value);
                ReportPropertyChanging("BranchID");
                _BranchID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BranchID");
                OnBranchIDChanged();
            }
        }
        private global::System.String _BranchID;
        partial void OnBranchIDChanging(global::System.String value);
        partial void OnBranchIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SlsperId
        {
            get
            {
                return _SlsperId;
            }
            set
            {
                OnSlsperIdChanging(value);
                ReportPropertyChanging("SlsperId");
                _SlsperId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SlsperId");
                OnSlsperIdChanged();
            }
        }
        private global::System.String _SlsperId;
        partial void OnSlsperIdChanging(global::System.String value);
        partial void OnSlsperIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LicenseKey
        {
            get
            {
                return _LicenseKey;
            }
            set
            {
                OnLicenseKeyChanging(value);
                ReportPropertyChanging("LicenseKey");
                _LicenseKey = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LicenseKey");
                OnLicenseKeyChanged();
            }
        }
        private global::System.String _LicenseKey;
        partial void OnLicenseKeyChanging(global::System.String value);
        partial void OnLicenseKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ActivitionDay
        {
            get
            {
                return _ActivitionDay;
            }
            set
            {
                OnActivitionDayChanging(value);
                ReportPropertyChanging("ActivitionDay");
                _ActivitionDay = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActivitionDay");
                OnActivitionDayChanged();
            }
        }
        private global::System.Int32 _ActivitionDay;
        partial void OnActivitionDayChanging(global::System.Int32 value);
        partial void OnActivitionDayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CheckAct
        {
            get
            {
                return _CheckAct;
            }
            set
            {
                OnCheckActChanging(value);
                ReportPropertyChanging("CheckAct");
                _CheckAct = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CheckAct");
                OnCheckActChanged();
            }
        }
        private global::System.Boolean _CheckAct;
        partial void OnCheckActChanging(global::System.Boolean value);
        partial void OnCheckActChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastSyncDate
        {
            get
            {
                return _LastSyncDate;
            }
            set
            {
                OnLastSyncDateChanging(value);
                ReportPropertyChanging("LastSyncDate");
                _LastSyncDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastSyncDate");
                OnLastSyncDateChanged();
            }
        }
        private global::System.DateTime _LastSyncDate;
        partial void OnLastSyncDateChanging(global::System.DateTime value);
        partial void OnLastSyncDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> WorkingDate
        {
            get
            {
                return _WorkingDate;
            }
            set
            {
                OnWorkingDateChanging(value);
                ReportPropertyChanging("WorkingDate");
                _WorkingDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WorkingDate");
                OnWorkingDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _WorkingDate;
        partial void OnWorkingDateChanging(Nullable<global::System.DateTime> value);
        partial void OnWorkingDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SIMID
        {
            get
            {
                return _SIMID;
            }
            set
            {
                OnSIMIDChanging(value);
                ReportPropertyChanging("SIMID");
                _SIMID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SIMID");
                OnSIMIDChanged();
            }
        }
        private global::System.String _SIMID;
        partial void OnSIMIDChanging(global::System.String value);
        partial void OnSIMIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.Boolean _Status;
        partial void OnStatusChanging(global::System.Boolean value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] tstamp
        {
            get
            {
                return StructuralObject.GetValidValue(_tstamp);
            }
            set
            {
                OntstampChanging(value);
                ReportPropertyChanging("tstamp");
                _tstamp = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("tstamp");
                OntstampChanged();
            }
        }
        private global::System.Byte[] _tstamp;
        partial void OntstampChanging(global::System.Byte[] value);
        partial void OntstampChanged();

        #endregion

    }

    #endregion

    
}
