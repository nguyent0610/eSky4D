@using Ext.Net;
@using Ext.Net.MVC;
@using HQ.eSkyFramework;
@using HQ.eSkyFramework.HQControl;
@using SA03200;
@{
    Layout = null;
    var X = Html.X();
    var HQ = Html.HQ();
}

@(X.Viewport()
.Layout(LayoutType.Fit)
.Items(
    X.FormPanel()
    .ID("frmMain")
    .BodyPadding(0)
    .KeyMap(Util.SetupKeyMap())
    .TopBar(Util.SetupToolbar("Print", true, ""))
    .Layout(LayoutType.Fit) 
    .Items(
        ////Thiet ke giao dien o day

        X.GridPanel()
        .Scroll(ScrollMode.Both)
        .View(X.GridView().TrackOver(false))
        .ID("grdPPC_License")
        .Store(
            X.Store()
            .ID("stoPPC_License")
            .PageSize(50)
            .Model(Util.GenerateModel(typeof(SA03200_pgPPC_License_Result), "mdlSA03200_pgPPC_License", "PDAID,BranchID,SlsperId"))
            .ServerProxy(X.AjaxProxy().Url(Url.Action("GetPPC_License"))).AutoLoad(false)
            .Listeners(l =>
            {
                l.BeforeLoad.Fn = "stoBeforeLoad";
                l.Load.Fn = "stoLoad";
                l.Update.Fn = "stoChanged";
            })
        )
        .Listeners(p =>
                 {
                     p.BoxReady.Handler = "firstLoad();";
                 })
        .SortableColumns(false)
        .ColumnModel(
            X.RowNumbererColumn().Width(40),
            
            X.Column().Text(Util.GetLang("PDAID")).DataIndex("PDAID").Width(150)
            .Editor(X.TextField().AllowBlank(true).MaxLength(30).EnforceMaxLength(true)),
            
            X.Column().Text(Util.GetLang("BranchID")).Width(100).DataIndex("BranchID")
            .Editor(
                HQ.Combo().ID("cboBranchID").Name("cboBranchID").HQDBSys(true).HQProcedure("SA03200_pcBranchAllByUser")
                .HQColumnShow("BranchID,BranchName").DisplayField("BranchID").ValueField("BranchID")
                .Width(300).HQHeightWidth(500, 400).MarginSpec("5 0 0 0").ForceSelection(true)
                .HQParam(new StoreParameterCollection() {                                
                    new StoreParameter() { Name = "@UserID", Value = "HQ.userName", Mode = ParameterMode.Raw }
                })
                .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                .Listeners(lst => { 
                    lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                    lst.Change.Fn = "cboBranchID_Change";
                })
                .LoadData()
            ),
                  
            X.Column().Text(Util.GetLang("SlsperId")).Width(100).DataIndex("SlsperId")
                .Editor(
                    HQ.Combo().ID("cboSlsperId").Name("cboSlsperId").HQProcedure("SA03200_pcSalesperson").HQDBSys(false)
                    .HQColumnShow("Slsperid,Name,BranchID").DisplayField("Name").ValueField("Slsperid").HQAutoLoad(false)
                    .Width(300).HQHeightWidth(500, 400).MarginSpec("5 0 0 0").ForceSelection(true)
                    .HQParam(new StoreParameterCollection() {
                     new StoreParameter() { Name = "@CpnyID", Value = "App.cboBranchID.getValue()", Mode = ParameterMode.Raw},
                     new StoreParameter() { Name = "@UserID", Value = "HQ.userName", Mode = ParameterMode.Raw}
                    })
                    .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                    .Listeners(lst => { 
                        lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                    })
                    .LoadData()
                ),
            
            X.Column().Text(Util.GetLang("LicenseKey")).DataIndex("LicenseKey").Width(150)
            .Editor(X.TextField().AllowBlank(false).MaxLength(250).EnforceMaxLength(true)),
            
            X.NumberColumn().Text(Util.GetLang("ActivitionDay")).DataIndex("ActivitionDay").Format("0,000").Width(150).Align(Alignment.Right)
            .Editor(X.NumberField().DecimalPrecision(0)).ID("txtActivitionDay"),
                                                
            X.DateColumn().Text(Util.GetLang("LastSyncDate")).DataIndex("LastSyncDate").Width(150).ID("txtLastSyncDate")
            .Editor(X.DateField().Format("MM/dd/yyyy")),
            
            X.CheckColumn().DataIndex("Status").Width(85).Editable(true).HideTitleEl(true).Align(Alignment.Center)
            .HeaderItems(
                HQ.Label().HQLangCode("Active").ID("Statustext")
                ,HQ.Checkbox().ID("StatusCheckAll").Listeners(l => l.Change.Fn = "StatusCheckAll_Change")   
            ).ID("txtStatus"),
            
            X.CommandColumn()
            .Width(150)
            .Commands(
                X.GridCommand()
                .Text(Util.GetLang("Reject"))
                .ToolTip(t => t.Text = Util.GetLang("Rejectrowchanges"))
                .CommandName("reject")
                .Icon(Icon.ArrowUndo)
            )
            .PrepareToolbar(t => t.Handler = "toolbar.items.get(0).setVisible(record.dirty);")
            .Listeners(l => l.Command.Handler = "grdPPC_License_Reject(record);")
        )
        .SelectionModel(X.RowSelectionModel().ID("slmPPC_License").Mode(SelectionMode.Multi))
        .BottomBar(
            X.PagingToolbar()
            .Items(
                X.Label("Page size:"),
                X.ToolbarSpacer(10),
                X.ComboBox()
                .Width(80)
                .Items("1", "2", "10", "20", "30", "50")
                .SelectedItems("50")
                .Listeners(l => l.Select.Fn = "HQ.grid.onPageSelect")
            )
            .Plugins(X.ProgressBarPager())
        )
        .Plugins(
            X.CellEditing()
            .ClicksToEdit(1)
            .Listeners(ls =>
            {
                ls.BeforeEdit.Fn = "grdPPC_License_BeforeEdit";
                ls.Edit.Fn = "grdPPC_License_Edit";
                ls.ValidateEdit.Fn = "grdPPC_License_ValidateEdit";
            })
        )

        .Features(
            X.GridFilters()
                .Local(true)
                .Filters(
                    X.StringFilter().DataIndex("PDAID"),
                    X.StringFilter().DataIndex("BranchID"),
                    X.StringFilter().DataIndex("SlsperId"),
                    X.StringFilter().DataIndex("Password"),
                    X.StringFilter().DataIndex("LicenseKey"),
                    X.NumericFilter().DataIndex("ActivitionDay"),
                    X.StringFilter().DataIndex("CheckAct"),
                    X.DateFilter().DataIndex("LastSyncDate"),
                    X.StringFilter().DataIndex("WorkingDate"),
                    X.StringFilter().DataIndex("SIMID"),
                    X.BooleanFilter().DataIndex("Status")
                    
                )
        )
    )
))
