@using Ext.Net;
@using Ext.Net.MVC;
@using HQ.eSkyFramework;
@using HQ.eSkyFramework.HQControl;
@using SA00000;
@{
    Layout = null;
    var X = Html.X();
    var HQ = Html.HQ();
}

@(X.Viewport()
.Layout(LayoutType.Fit)
.Items(
    X.FormPanel()
    .ID("frmMain")
    .TrackResetOnLoad(true)
    .KeyMap(Util.SetupKeyMap())
    .TopBar(Util.SetupToolbar("Print", true, ""))
    .Layout(LayoutType.Border)
    .FieldDefaults(act => { act.LabelAlign = LabelAlign.Right; act.LabelWidth = 200; })
    .Listeners(l =>
    {
        l.BoxReady.Handler = "firstLoad();";
        l.FieldChange.Fn = "frmChange";
    })
    .Items(
        ////Thiet ke giao dien o day
        X.Panel().ID("pnlHeader")
        .Region(Region.North)
        .Layout(LayoutType.VBox)
        .AutoScroll(true)
        .Items(
            HQ.Combo().ID("cboCpnyID").Name("cboCpnyID")
                .HQLangCode("CPNYID").HQDBSys(true).AllowBlank(false).MarginSpec("5 0 0 0")
                .HQProcedure("SA00000_pcCompanyAll").HQColumnShow("CpnyID,CpnyName").DisplayField("CpnyID").ValueField("CpnyID")
                .HQHeightWidth(400, 400).Width(600).MaxLength(30).EnforceMaxLength(true)
                .LoadData()
                .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                .Listeners(lst =>
                {
                    lst.TriggerClick.Fn = "cboCpnyID_TriggerClick";//khi nhan X xoa du lieu goi ham de kiem tra
                    lst.Change.Fn = "cboCpnyID_Change";//khi thay doi du lieu
                    lst.Select.Fn = "cboCpnyID_Select";//khi thay doi du lieu
                    lst.Expand.Fn = "cboCpnyID_Expand"; //khi nhan xo ra du lieu cho chon, kiem tra xem co cho xo hay ko?
                })

            , HQ.TextBox().ID("CpnyName").Name("CpnyName").HQLangCode("CPNYNAME").MarginSpec("5 0 5 0")
                .Width(600).AllowBlank(false).MaxLength(200).EnforceMaxLength(true)



        , HQ.Combo().ID("cboStatus").Name("Status").MarginSpec("0 0 5 0").AllowBlank(false)
                    .HQLangCode("SA00000Status").HQProcedure("SA00000_pcStatus")
                    .HQColumnShow("Code,Descr").DataIndex("Code").DisplayField("Descr").ValueField("Code")
                    .HQHeightWidth(400, 400).Width(600).ForceSelection(true).HQAutoLoad(true)
                    .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                    .Listeners(lst => { lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}"; })
                    
                    .HQParam(new StoreParameterCollection()
                    {
                                    new StoreParameter() { Name = "@CpnyID", Value = "HQ.cpnyID", Mode = ParameterMode.Raw },
                                    new StoreParameter() { Name = "@UserName", Value = "HQ.userName", Mode = ParameterMode.Raw },
                                    new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw }
                    }).LoadData()

        )
        .Listeners(lss =>
        {
            lss.Render.Handler = "HQ.common.control_render(this,'header')";
        })

        , X.TabPanel().ID("tabDetail")
        .Region(Region.Center)
        .Items(
            X.Panel().ID("pnlCompany")         //////////////Tab thong tin cty/////////////
            .Title(Util.GetLang("COMPANY"))
            .Layout(LayoutType.VBox).AutoScroll(true)
            .Items(
                HQ.TextBox().ID("Address").Name("Address").HQLangCode("Addr").MarginSpec("5 0 0 0").Width(600).AllowBlank(false).MaxLength(200).EnforceMaxLength(true)
                , HQ.TextBox().ID("Address1").Name("Address1").HQLangCode("Addr1").MarginSpec("5 0 0 0").Width(600).MaxLength(250).EnforceMaxLength(true)
                , HQ.TextBox().ID("Address2").Name("Address2").HQLangCode("SA00000Addr2").MarginSpec("5 0 0 0").Width(600).MaxLength(250).EnforceMaxLength(true)
                , HQ.TextBox().ID("Tel").Name("Tel").HQLangCode("Tel").MarginSpec("5 0 0 0").Width(600).AllowBlank(false).MaxLength(20).EnforceMaxLength(true).MaskRe(@"/[0-9()#;/*-.+ ]/")
                , HQ.TextBox().ID("Fax").Name("Fax").HQLangCode("Fax").MarginSpec("5 0 0 0").Width(600).AllowBlank(false).MaxLength(20).EnforceMaxLength(true).MaskRe(@"/[0-9()#;/*-.+ ]/")
                , HQ.TextBox().ID("TaxRegNbr").Name("TaxRegNbr").HQLangCode("TAXREGNBR").MarginSpec("5 0 0 0").Width(600).MaxLength(20).EnforceMaxLength(true)


                , HQ.Combo().ID("cboChannel").Name("cboChannel").MarginSpec("5 0 0 0").AllowBlank(false)
                    .HQLangCode("CHANNEL").HQProcedure("SA00000_pcAR_Channel")
                    .HQColumnShow("Code,Descr").DataIndex("Channel").DisplayField("Descr").ValueField("Code")
                    .HQHeightWidth(400, 400).Width(600).ForceSelection(true)
                    .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                    .Listeners(lst => { lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}"; })
                    .LoadData()
                , HQ.Combo().ID("cboType").Name("cboType").HQProcedure("SA00000_pcType").HQLangCode("SA00000TYPE")
                    .HQColumnShow("Code,Descr").DisplayField("Descr").ValueField("Code").DataIndex("Type")
                    .HQHeightWidth(400, 400).Width(600).MarginSpec("5 0 0 0")
                    .LoadData().ForceSelection(true)
                    .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                    .Listeners(lst =>
                    {
                        lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                        lst.Change.Fn = "cboType_Change";
                    })
                , HQ.Combo().ID("cboTerritory").Name("cboTerritory").MarginSpec("5 0 0 0").AllowBlank(false)
                    .HQLangCode("TERRITORY").HQProcedure("SA00000_pcTerritory")
                    .HQColumnShow("Territory,Descr").DataIndex("Territory").DisplayField("Descr").ValueField("Territory")
                    .HQHeightWidth(400, 400).Width(600).ForceSelection(true)
                    .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                    .Listeners(lst =>
                    {
                        lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                        lst.Change.Fn = "cboTerritory_Change";
                        lst.Focus.Handler = "this.forceSelection = true;";
                    })
                    .HQParam(new StoreParameterCollection()
                    {
                        new StoreParameter() { Name = "@UserID", Value = "HQ.userName", Mode = ParameterMode.Raw }
                    })
                    .LoadData()

                , HQ.Combo().ID("cboCountry").Name("cboCountry").HQProcedure("SA00000_pcCountryID").HQLangCode("COUNTRY")
                    .HQColumnShow("CountryID,Descr").DisplayField("Descr").ValueField("CountryID").DataIndex("Country")
                    .HQHeightWidth(400, 400).Width(600).MarginSpec("5 0 0 0").AllowBlank(false)
                    .LoadData().ForceSelection(false)
                    .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                    .Listeners(lst =>
                    {
                        lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                        lst.Change.Fn = "cboCountry_Change";
                        lst.Focus.Handler = "this.forceSelection = true;";
                    })

                , HQ.Combo().ID("cboState").Name("cboState").HQProcedure("SA00000_pcStateByCountry").HQLangCode("State")
                    .HQColumnShow("State,Descr").DisplayField("Descr").ValueField("State").DataIndex("State")
                    .HQHeightWidth(300, 400).Width(600).MarginSpec("5 0 0 0").AllowBlank(false)
                    .HQParam(new StoreParameterCollection()
                    {
                        new StoreParameter() { Name = "@Country", Value = "App.cboCountry.getValue()", Mode = ParameterMode.Raw },
                        new StoreParameter() { Name = "@Territory", Value = "App.cboTerritory.getValue()", Mode = ParameterMode.Raw }
                    })
                    .LoadData().ForceSelection(false)
                    .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                    .Listeners(lst =>
                    {
                        lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                        lst.Change.Fn = "cboState_Change";
                        lst.Focus.Handler = "this.forceSelection = true;";
                    })

                , HQ.Combo().ID("cboCity").Name("cboCity").HQProcedure("SA00000_pcCityByCountryState").HQLangCode("CITY")
                    .HQColumnShow("City,Name").DisplayField("Name").ValueField("City").DataIndex("City")
                    .HQHeightWidth(400, 400).Width(600).MarginSpec("5 0 0 0")
                    .HQParam(new StoreParameterCollection()
                    {
                        new StoreParameter() { Name = "@Country", Value = "App.cboCountry.getValue()", Mode = ParameterMode.Raw },
                        new StoreParameter() { Name = "@State", Value = "App.cboState.getValue()", Mode = ParameterMode.Raw }
                    })
                    .LoadData().ForceSelection(false)
                    .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                    .Listeners(lst =>
                    {
                        lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                        lst.Focus.Handler = "this.forceSelection = true;";
                    })

                , HQ.Combo().ID("cboDistrict").Name("cboDistrict").HQProcedure("SA00000_pcDistrictByCountryState").HQLangCode("DISTRICT")
                    .HQColumnShow("District,Name").DisplayField("Name").ValueField("District").DataIndex("District")
                    .HQHeightWidth(400, 400).Width(600).MarginSpec("5 0 0 0").AllowBlank(false).MultiSelect(true)
                    .HQParam(new StoreParameterCollection()
                    {
                        new StoreParameter() { Name = "@Country", Value = "App.cboCountry.getValue()", Mode = ParameterMode.Raw },
                        new StoreParameter() { Name = "@State", Value = "App.cboState.getValue()", Mode = ParameterMode.Raw }
                    })
                    .LoadData().ForceSelection(false)
                    .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                    .Listeners(lst =>
                    {
                        lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                        lst.Expand.Handler = "HQ.combo.expand(this,',');";
                        lst.Change.Fn = "cboDistrict_Change";
                        lst.Focus.Handler = "this.forceSelection = true;";
                    })


                    ,HQ.TextBox().ID("txtSalesState").Width(575).DataIndex("SalesState").MarginSpec("5 2 0 0").HQLangCode("SA00000StateSales").Hidden(true)
                    .ReadOnly(true).Tag("X")
                    .Listeners(lst =>
                    {
                        lst.Change.Fn = "txtSalesState_Change";
                    })
                    , X.Container().Layout(LayoutType.HBox).MarginSpec("0 0 5 0")
                    .Items(
                       HQ.TextBox().ID("txtSalesStateDescr").Width(575).MarginSpec("5 2 0 0").DataIndex("SalesStateDescr")
                       .HQLangCode("SalesStateDescr")//.AllowBlank(false)
                       .ReadOnly(true).Tag("X")
                       , X.Button().ID("btnSalesState").Icon(Icon.Add)
                       .Listeners(l => { l.Click.Handler = "btnState_TriggerClick();"; })
                       .Width(23)
                       .MarginSpec("5 0 0 0")
                    )




                //, HQ.Combo().ID("cboSalesState").Name("cboSalesState").HQProcedure("SA00000_pcStateSales").HQLangCode("SA00000StateSales")
                //.HQColumnShow("State,Descr").DisplayField("Descr").ValueField("State").DataIndex("SalesState")
                //.HQHeightWidth(300, 400).Width(600).MarginSpec("5 0 0 0").MultiSelect(true)
                //.HQParam(new StoreParameterCollection()
                //{
                //    new StoreParameter() { Name = "@UserName", Value = "HQ.userName", Mode = ParameterMode.Raw },
                //    new StoreParameter() { Name = "@CpnyID", Value = "HQ.cpnyID", Mode = ParameterMode.Raw },
                //    new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw },
                //    new StoreParameter() { Name = "@Country", Value = "App.cboCountry.getValue()", Mode = ParameterMode.Raw }
                //})
                //.LoadData().ForceSelection(false)
                //.Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                //.Listeners(lst =>
                //{
                //    lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                //    lst.Expand.Handler = "HQ.combo.expand(this,',');";
                //    lst.Change.Fn = "cboSalesState_Change";
                //    lst.Focus.Handler = "this.forceSelection = true;";
                //})

                , X.Container().Layout(LayoutType.HBox).MarginSpec("0 0 5 0")
                  .Items(
                     HQ.TextBox().ID("txtSalesDistrict").Width(575).DataIndex("SalesDistrict").MarginSpec("5 2 0 0").HQLangCode("SalesDistrict").Hidden(true)
                          .ReadOnly(true).Tag("X")
                     , HQ.TextBox().ID("txtSalesDistrictDescr").Width(575).DataIndex("SalesDistrictDescr")
                     .MarginSpec("5 2 0 0").HQLangCode("SalesDistrictDescr")//.AllowBlank(false)
                          .ReadOnly(true).Tag("X")

                     , X.Button().ID("btnSalesDistrict").Icon(Icon.Add)
                          .Listeners(l => { l.Click.Handler = "btnDistrict_TriggerClick();"; })
                          .Width(23)
                          .MarginSpec("5 0 0 0")
                  )


                //, HQ.Combo().ID("cboSalesDistrict").Name("cboSalesDistrict").HQProcedure("SA00000_pcDistrictSales").HQLangCode("SA00000DistrictSales")
                //.HQColumnShow("District,Descr").DisplayField("Descr").ValueField("District").DataIndex("SalesDistrict")
                //.HQHeightWidth(400, 400).Width(600).MarginSpec("5 0 0 0").MultiSelect(true)
                //.HQParam(new StoreParameterCollection()
                //{
                //    new StoreParameter() { Name = "@UserName", Value = "HQ.userName", Mode = ParameterMode.Raw },
                //    new StoreParameter() { Name = "@CpnyID", Value = "HQ.cpnyID", Mode = ParameterMode.Raw },
                //    new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw },
                //    new StoreParameter() { Name = "@Country", Value = "App.cboCountry.getValue()", Mode = ParameterMode.Raw },
                //    new StoreParameter() { Name = "@State", Value = "joinParams(App.cboSalesState)", Mode = ParameterMode.Raw }
                //})
                //.LoadData().ForceSelection(false)
                //.Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                //.Listeners(lst =>
                //{
                //    lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                //    lst.Expand.Handler = "HQ.combo.expand(this,',');";
                //    //lst.Change.Fn = "cboSalesState_Change";
                //    lst.Focus.Handler = "this.forceSelection = true;";
                //})






                , HQ.Combo().ID("cboCpnyType").Name("cboCpnyType").HQProcedure("SA00000_pcCpnyType").HQLangCode("CPNYTYPE")
                    .HQColumnShow("Code,Descr").DisplayField("Descr").ValueField("Code").DataIndex("CpnyType")
                    .HQHeightWidth(400, 400).Width(600).MarginSpec("5 0 0 0").HQDBSys(true).AllowBlank(false)
                    .HQParam(new StoreParameterCollection()
                    {
                        new StoreParameter() { Name = "@langID", Value = "HQ.langID", Mode = ParameterMode.Raw }
                    })
                    .LoadData().ForceSelection(true)
                    .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                    .Listeners(lst =>
                    {
                        lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                    })



                , HQ.TextBox().ID("Email").Name("Email").HQLangCode("EMAIL").MarginSpec("5 0 0 0").Width(600).AllowBlank(false).MaxLength(100).EnforceMaxLength(true)



                //, HQ.TextBox().ID("Owner").Name("Owner").HQLangCode("OWNER").MarginSpec("5 0 0 0").Width(600).MaxLength(100).EnforceMaxLength(true)

                , HQ.Combo().ID("cboOwner").Name("cboOwner").HQProcedure("SA00000_pcOwer").HQLangCode("SA00000Owner")
                    .HQColumnShow("Code,Descr").DisplayField("Descr").ValueField("Code").DataIndex("Owner")
                    .HQHeightWidth(300, 400).Width(600).MarginSpec("5 0 0 0")//.AllowBlank(false)
                    .HQParam(new StoreParameterCollection()
                    {
                        new StoreParameter() { Name = "@UserName", Value = "HQ.userName", Mode = ParameterMode.Raw },
                        new StoreParameter() { Name = "@CpnyID", Value = "HQ.cpnyID", Mode = ParameterMode.Raw },
                        new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw },
                        new StoreParameter() { Name = "@Territory", Value = "App.cboTerritory.getValue()", Mode = ParameterMode.Raw }
                    })
                    .LoadData().ForceSelection(false)
                    .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                    .Listeners(lst =>
                    {
                        lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                        //lst.Change.Fn = "cboState_Change";
                        lst.Focus.Handler = "this.forceSelection = true;";
                    })



                , HQ.TextBox().ID("Plant").Name("Plant").HQLangCode("PLANT").MarginSpec("5 0 0 0").Width(600).MaxLength(4).EnforceMaxLength(true)
                , HQ.TextBox().ID("DatabaseName").Name("DatabaseName").HQLangCode("DATABASENAME").MarginSpec("5 0 0 0").Width(600).ReadOnly(true)

                , HQ.NumberField().ID("Deposit").Name("Deposit").HQLangCode("Deposit").MarginSpec("5 0 0 0").Width(600).MinValue(0).DecimalPrecision(0)
                , HQ.NumberField().ID("CreditLimit").Name("CreditLimit").HQLangCode("CreditLimit").MarginSpec("5 0 0 0").Width(600).MinValue(0).DecimalPrecision(0)
                , HQ.NumberField().ID("MaxValue").Name("MaxValue").HQLangCode("SA0000MaxValue").MarginSpec("5 0 0 0").Width(600).MinValue(0).DecimalPrecision(0)

                , X.Container().ID("LatLng").Layout(LayoutType.HBox).MarginSpec("5 0 0 0")
                  .Items(
                     HQ.TextBox().ID("txtLat").Name("txtLat").HQLangCode("Lat/Lng").LabelWidth(100).InputWidth(195).Tag("X").DataIndex("Lat").FieldStyle("text-align: right").MaskRe(@"/[0-9()#;/*-.+ ]/")
                     .Listeners(lst =>
                     {
                         //lst.Change.Fn = "txtLat_Change";
                         //lst.Blur.Fn = "txtLat_Blur";
                     })

                     , HQ.TextBox().ID("txtLng").Name("txtLng").HQLangCode("/").LabelWidth(0).HideLabel(false).InputWidth(195).Tag("X").DataIndex("Lng").FieldStyle("text-align: right").MaskRe(@"/[0-9()#;/*-.+ ]/")
                     .Listeners(lst =>
                     {
                         //lst.Change.Fn = "txtLng_Change";
                         //lst.Blur.Fn = "txtLng_Blur";
                     })
                  )

            )//pnlUser
            .Listeners(lss =>
            {
                lss.Render.Handler = "HQ.common.control_render(this,'header')";
            })

            , X.Panel().ID("pnlSys_CompanyAddr")  //////////////Tab dia chi cty//////////////
                .Title(Util.GetLang("COMPANYADDR"))
                .Layout(LayoutType.Border)
                .Items(
                    X.GridPanel().ID("grdSys_CompanyAddr")
                    .Scroll(ScrollMode.Both)
                    .View(X.GridView().TrackOver(false))
                    .Region(Region.Center).Flex(1)
                    .Store(
                        X.Store()
                        .ID("stoSys_CompanyAddr")
                        .PageSize(50).AutoLoad(false)
                        .Model(Util.GenerateModel(typeof(SA00000_pgCompanyAddr_Result), "mdlSys_CompanyAddr", "AddrID"))
                        .Parameters(ps =>
                        {
                            ps.Add(new StoreParameter("CpnyID", "App.cboCpnyID.getValue()", ParameterMode.Raw));
                        })
                        .ServerProxy(X.AjaxProxy().Url(Url.Action("GetSys_CompanyAddr")))
                        .Listeners(p =>
                        {
                            p.Load.Fn = "stoSys_CompanyAddr_Load";
                        })
                    )
                    .Listeners(lst => lst.Render.Handler = "HQ.common.control_render(this,'grdSys_CompanyAddr');")
                    .SortableColumns(false)
                    .ColumnModel(
                        X.RowNumbererColumn()

                        , X.Column().Text(Util.GetLang("ADDRID")).DataIndex("AddrID").Width(150)
                            .Editor(X.TextField().AllowBlank(true).MaxLength(10).EnforceMaxLength(true))
                        , X.Column().Text(Util.GetLang("Addr1")).DataIndex("Addr1").Width(150)
                            .Editor(X.TextField().MaxLength(250).EnforceMaxLength(true))
                        , X.Column().Text(Util.GetLang("Addr2")).DataIndex("Addr2").Width(150)
                            .Editor(X.TextField().MaxLength(250).EnforceMaxLength(true))
                        , X.Column().Text(Util.GetLang("Attn")).DataIndex("Attn").Width(150)
                            .Editor(X.TextField().MaxLength(250).EnforceMaxLength(true))

                        , X.Column().Text(Util.GetLang("Country")).Width(100).DataIndex("Country")//.Renderer("renderCountry")
                            .Editor(
                                HQ.Combo().ID("cboCountry_grd").Name("cboCountry_grd").HQProcedure("SA00000_pcCountryID")
                                .HQColumnShow("CountryID,Descr").DisplayField("Descr").ValueField("CountryID")
                                .Width(300).HQHeightWidth(500, 400).ForceSelection(true)
                                .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                                .Listeners(lst =>
                                {
                                    lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                                    //lst.Change.Fn = "cboCountry_grd_Change";

                                })
                                .LoadData()
                            )

                        , X.Column().Text(Util.GetLang("State")).Width(100).DataIndex("State")//.Renderer("renderState")
                            .Editor(
                                HQ.Combo().ID("cboState_grd").Name("cboState_grd").HQProcedure("SA00000_pcStateByCountry")
                                .HQColumnShow("State,Descr").DisplayField("Descr").ValueField("State")
                                .Width(300).HQHeightWidth(500, 400).ForceSelection(true)
                                .HQParam(new StoreParameterCollection()
                                {
                                    new StoreParameter() { Name = "@Country", Value = "_country", Mode = ParameterMode.Raw },
                                   new StoreParameter() { Name = "@Territory", Value = "%", Mode = ParameterMode.Value }
                                })
                                .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                                .Listeners(lst =>
                                {
                                    lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                                    lst.Change.Fn = "cboState_grd_Change";
                                })
                                .LoadData()
                            )

                        , X.Column().Text(Util.GetLang("City")).Width(100).DataIndex("City")
                            .Editor(
                                HQ.Combo().ID("cboCity_grd").Name("cboCity_grd").HQProcedure("SA00000_pcCityByCountryState")
                                .HQColumnShow("City,Name").DisplayField("City").ValueField("City")
                                .Width(300).HQHeightWidth(500, 400).ForceSelection(true)
                                .HQParam(new StoreParameterCollection()
                                {
                                    new StoreParameter() { Name = "@Country", Value = "_country", Mode = ParameterMode.Raw },
                                    new StoreParameter() { Name = "@State", Value = "_state", Mode = ParameterMode.Raw }
                                })
                                .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                                .Listeners(lst =>
                                {
                                    lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                                })
                                .LoadData()
                            )

                        , X.Column().Text(Util.GetLang("Zip")).DataIndex("Zip").Width(150)
                            .Editor(X.TextField().MaxLength(10).EnforceMaxLength(true).MaskRe(@"/[0-9()#;/*-.+ ]/"))
                        , X.Column().Text(Util.GetLang("Fax")).DataIndex("Fax").Width(150)
                            .Editor(X.TextField().MaxLength(30).EnforceMaxLength(true).MaskRe(@"/[0-9()#;/*-.+ ]/"))
                        , X.Column().Text(Util.GetLang("Name")).DataIndex("Name").Width(150)
                            .Editor(X.TextField().MaxLength(250).EnforceMaxLength(true))
                        , X.Column().Text(Util.GetLang("Phone")).DataIndex("Phone").Width(150)
                            .Editor(X.TextField().MaxLength(30).EnforceMaxLength(true).MaskRe(@"/[0-9()#;/*-.+ ]/"))
                        , X.Column().Text(Util.GetLang("Salut")).DataIndex("Salut").Width(150)
                            .Editor(X.TextField().MaxLength(30).EnforceMaxLength(true))

                        , X.Column().Text(Util.GetLang("TaxId00")).Width(100).DataIndex("TaxId00")
                            .Editor(
                                HQ.Combo().ID("cboTaxId00").Name("cboTaxId00").HQProcedure("SA00000_pcTaxAll")
                                .HQColumnShow("TaxID,Descr").DisplayField("Descr").ValueField("TaxID")
                                .Width(300).HQHeightWidth(500, 400).ForceSelection(true)
                                .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                                .Listeners(lst =>
                                {
                                    lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                                })
                                .LoadData()
                            )

                        , X.Column().Text(Util.GetLang("TaxId01")).Width(100).DataIndex("TaxId01")
                            .Editor(
                                HQ.Combo().ID("cboTaxId01").Name("cboTaxId01").HQProcedure("SA00000_pcTaxAll")
                                .HQColumnShow("TaxID,Descr").DisplayField("Descr").ValueField("TaxID")
                                .Width(300).HQHeightWidth(500, 400).ForceSelection(true)
                                .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                                .Listeners(lst =>
                                {
                                    lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                                })
                                .LoadData()
                            )

                        , X.Column().Text(Util.GetLang("TaxId02")).Width(100).DataIndex("TaxId02")
                            .Editor(
                                HQ.Combo().ID("cboTaxId02").Name("cboTaxId02").HQProcedure("SA00000_pcTaxAll")
                                .HQColumnShow("TaxID,Descr").DisplayField("Descr").ValueField("TaxID")
                                .Width(300).HQHeightWidth(500, 400).ForceSelection(true)
                                .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                                .Listeners(lst =>
                                {
                                    lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                                })
                                .LoadData()
                            )

                        , X.Column().Text(Util.GetLang("TaxId03")).Width(100).DataIndex("TaxId03")
                            .Editor(
                                HQ.Combo().ID("cboTaxId03").Name("cboTaxId03").HQProcedure("SA00000_pcTaxAll")
                                .HQColumnShow("TaxID,Descr").DisplayField("Descr").ValueField("TaxID")
                                .Width(300).HQHeightWidth(500, 400).ForceSelection(true)
                                .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                                .Listeners(lst =>
                                {
                                    lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                                })
                                .LoadData()
                            )

                        , X.Column().Text(Util.GetLang("TaxLocId")).DataIndex("TaxLocId").Width(150)
                            .Editor(X.TextField().MaxLength(15).EnforceMaxLength(true))
                        , X.Column().Text(Util.GetLang("TaxRegNbr")).DataIndex("TaxRegNbr").Width(150)
                            .Editor(X.TextField().MaxLength(15).EnforceMaxLength(true))

                        , X.CommandColumn().Width(150)
                        .Commands(
                            X.GridCommand()
                            .Text(("Reject"))
                            .ToolTip(t =>
                            {
                                t.Text = ("Rejectrowchanges");
                            })
                            .CommandName("reject")
                            .Icon(Icon.ArrowUndo)
                        )
                        .PrepareToolbar(t =>
                        {
                            t.Handler = "toolbar.items.get(0).setVisible(record.dirty);";
                        })
                        .Listeners(l =>
                        {
                            l.Command.Handler = "grdSys_CompanyAddr_Reject(record);";
                        })
                    )
                    .SelectionModel(X.RowSelectionModel().ID("slmSys_CompanyAddr")
                    .Mode(SelectionMode.Multi))
                    .BottomBar(
                        X.PagingToolbar()
                        .Items(
                            X.Label("Page size:"),
                            X.ToolbarSpacer(10),
                            X.ComboBox()
                            .Width(80)
                            .Items("1", "2", "10", "20", "30", "50")
                            .SelectedItems("50")
                            .Listeners(l => l.Select.Fn = "HQ.grid.onPageSelect")
                        )
                        .Plugins(X.ProgressBarPager())
                    )
                    .Plugins(
                        X.CellEditing()
                        .ClicksToEdit(1)
                        .Listeners(ls =>
                        {
                            ls.BeforeEdit.Fn = "grdSys_CompanyAddr_BeforeEdit";
                            ls.Edit.Fn = "grdSys_CompanyAddr_Edit";
                            ls.ValidateEdit.Fn = "grdSys_CompanyAddr_ValidateEdit";
                        })
                    )
                    .Features(
                        X.GridFilters()
                            .Local(true)
                            .Filters(
                                X.StringFilter().DataIndex("AddrID"),
                                X.StringFilter().DataIndex("Addr1"),
                                X.StringFilter().DataIndex("Addr2"),
                                X.StringFilter().DataIndex("Attn"),
                                X.StringFilter().DataIndex("Fax"),
                                X.StringFilter().DataIndex("Name"),
                                X.StringFilter().DataIndex("Phone"),
                                X.StringFilter().DataIndex("Salut"),
                                X.StringFilter().DataIndex("Zip"),
                                X.StringFilter().DataIndex("TaxRegNbr"),
                                X.StringFilter().DataIndex("TaxLocId"),
                                X.StringFilter().DataIndex("State"),
                                X.StringFilter().DataIndex("City"),
                                X.StringFilter().DataIndex("Country")//.ValidateRecord(p => p.Fn = "stringCountry")
                            )
                    )
                )
                .Listeners(lss =>
                {
                    lss.Render.Handler = "HQ.common.control_render(this,'grdSys_CompanyAddr')";
                })
            ////tabpnlUserGroup

            , X.Panel().ID("pnlSYS_SubCompany")  //////////////Tab hang muc dau tu//////////////
                .Title(Util.GetLang("SUBCOMPANY"))
                .Layout(LayoutType.Border)
                .Items(
                    X.GridPanel().ID("grdSYS_SubCompany")
                    .Scroll(ScrollMode.Both)
                    .View(X.GridView().TrackOver(false))
                    .Region(Region.Center).Flex(1)
                    .Store(
                        X.Store()
                        .ID("stoSYS_SubCompany")
                        .PageSize(50).AutoLoad(false)
                        .Model(Util.GenerateModel(typeof(SA00000_pgSubCompany_Result), "mdlSYS_SubCompany", "SubCpnyID"))
                        .Parameters(ps =>
                        {
                            ps.Add(new StoreParameter("CpnyID", "App.cboCpnyID.getValue()", ParameterMode.Raw));
                        })
                        .ServerProxy(X.AjaxProxy().Url(Url.Action("GetSYS_SubCompany")))
                        .Listeners(p =>
                        {
                            p.Load.Fn = "stoSYS_SubCompany_Load";
                        })
                    )
                    .Listeners(lst => lst.Render.Handler = "HQ.common.control_render(this,'grdSYS_SubCompany');")
                    .SortableColumns(false)
                    .ColumnModel(
                        X.RowNumbererColumn()

                        , X.Column().Text(Util.GetLang("SubCpnyID")).Width(150).DataIndex("SubCpnyID")
                            .Editor(
                                HQ.Combo().ID("cboSubCpnyID").Name("cboSubCpnyID").HQProcedure("SA00000_pcCompanyAll")
                                .HQColumnShow("CpnyID,CpnyName").DisplayField("CpnyName").ValueField("CpnyID")
                                .Width(300).HQHeightWidth(500, 400).ForceSelection(true).HQDBSys(true)
                                .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                                .Listeners(lst =>
                                {
                                    lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                                })
                                .LoadData()
                            )

                        , X.Column().Text(Util.GetLang("Sub_BranchName")).Width(250).DataIndex("SubCpnyName")//.Renderer("renderBranchName")

                        , X.CommandColumn().Width(150)
                        .Commands(
                            X.GridCommand()
                            .Text(("Reject"))
                            .ToolTip(t =>
                            {
                                t.Text = ("Rejectrowchanges");
                            })
                            .CommandName("reject")
                            .Icon(Icon.ArrowUndo)
                        )
                        .PrepareToolbar(t =>
                        {
                            t.Handler = "toolbar.items.get(0).setVisible(record.dirty);";
                        })
                        .Listeners(l =>
                        {
                            l.Command.Handler = "grdSYS_SubCompany_Reject(record);";
                        })
                        )
                        .SelectionModel(X.RowSelectionModel().ID("slmSYS_SubCompany")
                        .Mode(SelectionMode.Multi))
                        .BottomBar(
                            X.PagingToolbar()
                            .Items(
                                X.Label("Page size:"),
                                X.ToolbarSpacer(10),
                                X.ComboBox()
                                .Width(80)
                                .Items("1", "2", "10", "20", "30", "50")
                                .SelectedItems("50")
                                .Listeners(l => l.Select.Fn = "HQ.grid.onPageSelect")
                            )
                            .Plugins(X.ProgressBarPager())
                        )
                        .Plugins(
                            X.CellEditing()
                            .ClicksToEdit(1)
                            .Listeners(ls =>
                            {
                                ls.BeforeEdit.Fn = "grdSYS_SubCompany_BeforeEdit";
                                ls.Edit.Fn = "grdSYS_SubCompany_Edit";
                                ls.ValidateEdit.Fn = "grdSYS_SubCompany_ValidateEdit";
                            })
                        )
                        .Features(
                            X.GridFilters()
                                .Local(true)
                                .Filters(
                                    X.StringFilter().DataIndex("SubCpnyID"),
                                    X.StringFilter().DataIndex("SubCpnyName")
                                )
                        )
                )
                .Listeners(lss =>
                {
                    lss.Render.Handler = "HQ.common.control_render(this,'grdSYS_SubCompany')";
                })//tabpnlUserCompany
                , X.Panel().ID("pnlHandle")        //////////////Tab thong tin cty/////////////
                .Title(Util.GetLang("SA00000Process"))
                .Layout(LayoutType.VBox).AutoScroll(true)
                .Items(
                    HQ.Button().ID("btnAddSAManager").Text(Util.GetLang("AddSAManager")).MarginSpec("5 0 0 250").Width(200)
                        .Listeners(p => p.Click.Fn = "btnAddSAManager_Click")
                    , HQ.TextArea().ID("txtSAManager").HQLangCode("SAManager").DataIndex("SAManager").Width(600).Tag("X").ReadOnly(true).MarginSpec("5 0 0 0")
                    , HQ.TextBox().ID("txtManager").HQLangCode("SA00000Manager").Width(600).Tag("X").ReadOnly(true).MarginSpec("5 0 0 0")

                    //,HQ.Combo().ID("cboManager").Name("cboManager").HQProcedure("SA00000_pcUser").HQLangCode("SA00000Manager").HQDBSys(true)
                    //.HQColumnShow("UserName,Name").DisplayField("UserName").ValueField("UserName").MultiSelect(true)//.Hidden(true)
                    //.HQHeightWidth(400, 400).Width(600).MarginSpec("5 0 0 0")
                    //.LoadData().ForceSelection(true)
                    //.Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                    //.Listeners(lst =>
                    //{
                    //    lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                    //})
                    , HQ.Combo().ID("cboBranchOld").Name("cboBranchOld").HQProcedure("SA00000_pcCompanyAll").HQDBSys(true).HQLangCode("SA00000BranchOld").HQAutoLoad(false)
                    .HQColumnShow("CpnyID,CpnyName").DisplayField("CpnyID").ValueField("CpnyID")
                    .HQHeightWidth(400, 400).Width(600).MarginSpec("5 0 0 0")
                    .LoadData().ForceSelection(true)
                    .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                    .Listeners(lst =>
                    {
                        lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                        lst.Change.Fn = "cboBranchOld_Change";
                    })

                    
                    , HQ.Combo().ID("cboSlsperID").Name("cboSlsperID").HQProcedure("SA00000_pcSlsperID").HQLangCode("SA00000SlsperID")
                    .HQColumnShow("SlsperID,Name").DisplayField("SlsperID").ValueField("SlsperID").MultiSelect(true)
                    .HQHeightWidth(400, 400).Width(600).MarginSpec("5 0 0 0").ForceSelection(true)
                    .HQParam(new StoreParameterCollection()
                    {
                       new StoreParameter() { Name = "@BranchID", Value = "App.cboBranchOld.getValue()", Mode = ParameterMode.Raw }
                    })
                    .LoadData().ForceSelection(true)
                    .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                    .Listeners(lst =>
                    {
                        lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                    })

                        , HQ.Combo().ID("cboTDisplayID").Name("cboTDisplayID").HQProcedure("SA00000_pcTDisplay").HQLangCode("SA00000_TDisplay")
                    .HQColumnShow("DisplayID,Descr,FromDate,ToDate").DisplayField("DisplayID").ValueField("DisplayID").MultiSelect(true)
                    .HQHeightWidth(400, 400).Width(600).MarginSpec("5 0 0 0").ForceSelection(true)
                    .HQParam(new StoreParameterCollection()
                    {
                        new StoreParameter() { Name = "@CpnyID", Value = "HQ.cpnyID", Mode = ParameterMode.Raw },
                        new StoreParameter() { Name = "@UserName", Value = "HQ.userName", Mode = ParameterMode.Raw },
                        new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw },
                        new StoreParameter() { Name = "@BranchID", Value = "App.cboBranchOld.getValue()", Mode = ParameterMode.Raw }
                    })
                    .LoadData().ForceSelection(true)
                    .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                    .Listeners(lst =>
                    {
                        lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                    })

                    , HQ.Combo().ID("cboAccumulatedID").Name("cboAccumulatedID").HQProcedure("SA00000_pcAccumulated").HQLangCode("SA00000_Accumulated")
                    .HQColumnShow("SA00000_Accumulate,Descr,FromDate,ToDate").DisplayField("SA00000_Accumulate").ValueField("SA00000_Accumulate").MultiSelect(true)
                    .HQHeightWidth(400, 400).Width(600).MarginSpec("5 0 0 0").ForceSelection(true)
                    .HQParam(new StoreParameterCollection()
                    {
                        new StoreParameter() { Name = "@CpnyID", Value = "HQ.cpnyID", Mode = ParameterMode.Raw },
                        new StoreParameter() { Name = "@UserName", Value = "HQ.userName", Mode = ParameterMode.Raw },
                        new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw },
                        new StoreParameter() { Name = "@BranchID", Value = "App.cboBranchOld.getValue()", Mode = ParameterMode.Raw }
                    })
                    .LoadData().ForceSelection(true)
                    .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                    .Listeners(lst =>
                    {
                        lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                    })   
                        
                 )
            )//xtab
        )// frmMain
    )
)
@(X.Window()
    .ID("winUsers")
    .Hidden(true).Resizable(true).Maximizable(true)
    .Width(500).Height(500)
    .Layout(LayoutType.Fit)
    .AutoScroll(true).Closable(true)
    .Buttons(
        X.Button().ID("btnAdd").Text(Util.GetLang("Add"))
        .Listeners(p => p.Click.Fn = "btnAdd_Click")
       , X.Button().ID("btnCancel").Text(Util.GetLang("Cancel"))
        .Listeners(p => p.Click.Fn = "btnCancel_Click")
    )
    .Items(
       X.GridPanel().ID("grdUsers")
            .SelectionMemory(false)
            .Store(
                X.Store()
                    .ID("stoUsers")
                    .PageSize(50)
                    .Model(Util.GenerateModel(typeof(SA00000_pgLoadUsers_Result), "mdlSA00000_pgLoadUsers", ""))
                    .ServerProxy(X.AjaxProxy().Url(Url.Action("GetUsers"))).AutoLoad(false)
              )
            .ColumnModel(
                 X.RowNumbererColumn().Text(Util.GetLang("Index")).Width(50).Sortable(false)
                , X.Column().Text(Util.GetLang("UserID")).DataIndex("UserName").Width(150)
                , X.Column().Text(Util.GetLang("Name")).DataIndex("Name").Width(150)
                , X.CheckColumn().ID("CheckUser").DataIndex("CheckUser").Width(30).Editable(true).HideTitleEl(true)
                    .HeaderItems(
                        HQ.Checkbox().ID("CheckUser_All").MarginSpec("0 0 0 7").Listeners(l => l.Change.Fn = "CheckUser_Change")
                    )
            )
            .BottomBar(
                X.PagingToolbar()
                    .Items(
                        X.Label("Page size:"),
                        X.ToolbarSpacer(10),
                        X.ComboBox()
                        .Width(80)
                        .Items("1", "2", "10", "20", "30", "50")
                        .SelectedItems("50")
                        .Listeners(l =>
                        {
                            l.Select.Fn = "HQ.grid.onPageSelect";
                        })
                        )
                    .Plugins(X.ProgressBarPager())
            )
            .SelectionModel(
                X.RowSelectionModel()
                    .Mode(SelectionMode.Multi)
             )
            // .SortableColumns(false)
            .Features(
            X.GridFilters()
                .Local(true)
                .Filters(
                    X.StringFilter().DataIndex("UserName"),
                    X.StringFilter().DataIndex("Name")
                )
            )

    )
)


@(
 X.Window()
    .ID("winState")
    .Hidden(true)
    .Layout(LayoutType.Fit)
    .Height(500)
    .Width(800)
    .Maximized(false)
    .Modal(true)
    .Closable(true)
    .Listeners(l =>
    {
        l.BeforeShow.Fn = "winState_beforeShow";
        l.Close.Handler = "App.frmMain.unmask();App.winState.unmask();";
    })
    .Buttons(
     X.Button().Text(Util.GetLang("OK"))
    .Listeners(p => p.Click.Fn = "btnOKState_Click")
    , X.Button().ID("btnCancelState").Text(Util.GetLang("Cancel"))
    .Listeners(p => p.Click.Fn = "btnCancelState_Click")
    )
    .BottomBar(
        X.Toolbar()
        .Border(false)
        .Items(
        //X.Label().ID("lblCustomer").Width(200).MarginSpec("0 0 0 5").Hidd
        )
    )
    .Items(
            X.GridPanel().ID("grdState")
            .SelectionMemory(false)
            .Store(
                X.Store()
                        .ID("stoState")
                    .PageSize(50)
                        .Model(Util.GenerateModel(typeof(SA00000_pgState_Result), "mdlState", ""))
                        .ServerProxy(X.AjaxProxy().Url(Url.Action("GetState"))).AutoLoad(false)
                    .Parameters(ps =>
                    {
                        ps.Add(new StoreParameter("Country", "App.cboCountry.getValue()", ParameterMode.Raw));
                        ps.Add(new StoreParameter("listState", "_listState", ParameterMode.Raw));
                    })
                    .Listeners(l =>
                    {
                        l.BeforeLoad.Handler = " HQ.common.showBusy(true, HQ.common.getLang('loadingdata'));";
                        l.Load.Fn = "stoState_Load";
                    })
              )
            .ColumnModel(
            X.RowNumbererColumn().Text(Util.GetLang("Index")).Width(50).Sortable(false)
                , X.CheckColumn().DataIndex("Selected").Width(80).Editable(true).Text(Util.GetLang("Selected"))//.HideTitleEl(true).Text("ABC")
                    .HeaderItems(
                        HQ.Checkbox().ID("chkActive_All").MarginSpec("0 0 0 32").Listeners(l => l.Change.Fn = "chkActiveAll_Change")
                    )
                , X.Column().Text(Util.GetLang("Territory")).DataIndex("Territory").Width(100)
                , X.Column().Text(Util.GetLang("SA00000Territory")).DataIndex("TerritoryName").Width(200)
                , X.Column().Text(Util.GetLang("State")).DataIndex("State").Width(100)
                , X.Column().Text(Util.GetLang("DescrState")).DataIndex("Descr").Width(300)
            )
            .BottomBar(
                X.PagingToolbar()
                    .Items(
                        X.Label("Page size:"),
                        X.ToolbarSpacer(10),
                        X.ComboBox()
                        .Width(80)
                        .Items("1", "2", "10", "20", "30", "50")
                        .SelectedItems("50")
                        .Listeners(l =>
                        {
                            l.Select.Fn = "HQ.grid.onPageSelect";
                        })
                        )
                    .Plugins(X.ProgressBarPager())
            )
            .SelectionModel(
                X.RowSelectionModel()
                    .Mode(SelectionMode.Multi)
             )
            // .SortableColumns(false)
            .Features(
            X.GridFilters()
                .Local(true)
                .Filters(
                    X.BooleanFilter().DataIndex("Selected"),
                    X.StringFilter().DataIndex("Territory"),
                    X.StringFilter().DataIndex("TerritoryName"),
                    X.StringFilter().DataIndex("State"),
                    X.StringFilter().DataIndex("Descr")
                )
            )
    )

)


@(
 X.Window()
    .ID("winDistrict")
    .Hidden(true)
    .Layout(LayoutType.Fit)
    .Height(500)
    .Width(800)
    .Maximized(false)
    .Modal(true)
    .Closable(true)
    .Listeners(l =>
    {
        l.BeforeShow.Fn = "winDistrict_beforeShow";
        l.Close.Handler = "App.frmMain.unmask();App.winDistrict.unmask();";
    })
    .Buttons(
     X.Button().Text(Util.GetLang("OK"))
    .Listeners(p => p.Click.Fn = "btnOKDistrict_Click")
    , X.Button().ID("btnCancelDistrict").Text(Util.GetLang("Cancel"))
    .Listeners(p => p.Click.Fn = "btnCancelDistrict_Click")
    )
    .BottomBar(
        X.Toolbar()
        .Border(false)
        .Items(
        //X.Label().ID("lblCustomer").Width(200).MarginSpec("0 0 0 5").Hidd
        )
    )
    .Items(
            X.GridPanel().ID("grdDistrict")
            .SelectionMemory(false)
            .Store(
                X.Store()
                        .ID("stoDistrict")
                    .PageSize(50)
                        .Model(Util.GenerateModel(typeof(SA00000_pgDistrict_Result), "mdlDistrict", ""))
                        .ServerProxy(X.AjaxProxy().Url(Url.Action("GetDistrict"))).AutoLoad(false)
                    .Parameters(ps =>
                    {
                        ps.Add(new StoreParameter("Country", "App.cboCountry.getValue()", ParameterMode.Raw));
                        ps.Add(new StoreParameter("State", "App.txtSalesState.getValue()", ParameterMode.Raw));
                        ps.Add(new StoreParameter("listDistrict", "_listDistrict", ParameterMode.Raw));
                    })
                    .Listeners(l =>
                    {
                        l.BeforeLoad.Handler = " HQ.common.showBusy(true, HQ.common.getLang('loadingdata'));";
                        l.Load.Fn = "stoDistrict_Load";
                    })
              )
            .ColumnModel(
            X.RowNumbererColumn().Text(Util.GetLang("Index")).Width(50).Sortable(false)
                , X.CheckColumn().DataIndex("Selected").Width(80).Editable(true).Text(Util.GetLang("Selected"))//.HideTitleEl(true).Text("ABC")
                    .HeaderItems(
                        HQ.Checkbox().ID("chkActiveDistrict_All").MarginSpec("0 0 0 32").Listeners(l => l.Change.Fn = "chkActiveDistrictAll_Change")
                    )
                , X.Column().Text(Util.GetLang("State")).DataIndex("State").Width(100)
                , X.Column().Text(Util.GetLang("SA00000StateDescr")).DataIndex("Descr").Width(200)
                , X.Column().Text(Util.GetLang("District")).DataIndex("District").Width(100)
                , X.Column().Text(Util.GetLang("DistrictName")).DataIndex("DistrictName").Width(200)
            )
            .BottomBar(
                X.PagingToolbar()
                    .Items(
                        X.Label("Page size:"),
                        X.ToolbarSpacer(10),
                        X.ComboBox()
                        .Width(80)
                        .Items("1", "2", "10", "20", "30", "50")
                        .SelectedItems("50")
                        .Listeners(l =>
                        {
                            l.Select.Fn = "HQ.grid.onPageSelect";
                        })
                        )
                    .Plugins(X.ProgressBarPager())
            )
            .SelectionModel(
                X.RowSelectionModel()
                    .Mode(SelectionMode.Multi)
             )
            // .SortableColumns(false)
            .Features(
            X.GridFilters()
                .Local(true)
                .Filters(
                    X.BooleanFilter().DataIndex("Selected"),
                    X.StringFilter().DataIndex("State"),
                    X.StringFilter().DataIndex("Descr"),
                    X.StringFilter().DataIndex("District"),
                    X.StringFilter().DataIndex("DistrictName")
                )
            )
    )

)