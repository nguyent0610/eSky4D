@using Ext.Net;
@using Ext.Net.MVC;
@using HQ.eSkyFramework;
@using HQ.eSkyFramework.HQControl;
@using SA03001;
@{
    Layout = null;
    var X = Html.X();
    var HQ = Html.HQ();
    //var model = Util.GenerateModel(typeof(User),"mdlCustomer",""); // model of Customer// 
    //model.Fields.Add(new ModelField("Check",ModelFieldType.Boolean));      
    
}

@(X.Viewport()
.Layout(LayoutType.Fit)
.Items(
    X.FormPanel()
    .ID("frmMain")
    .BodyPadding(0)
    .KeyMap(Util.SetupKeyMap())
    //.TopBar(Util.SetupToolbar("Print,Save,Delete", true, ""))
        .TopBar(Util.SetupToolbar(new AbstractComponent[]{
            X.Button()
            .ID("btnReplace").Text(Util.GetLang("Replace"))
            .Icon(Icon.TextReplace)
            .Listeners(p=>{
                p.Click.Fn = "btnReplace_Click";              
            })
        }, "Print,Save,Delete", true, ""))
    .Layout(LayoutType.Border)
    .Listeners(l =>
    {
            l.BoxReady.Handler = "firstLoad();";
        //l.FieldChange.Fn = "frmChange";
    })
    .Items(
        X.Panel().ID("pnlGrid")
        .Region(Region.Center)
        .Layout(LayoutType.Border)
        .Items(
            X.GridPanel()
            .Scroll(ScrollMode.Both)
            .View(X.GridView().TrackOver(false).LoadMask(true))
            .Region(Region.Center).Flex(1)
            .ID("grdUser")
            .RowLines(true)
            .AutoScroll(true)
            .SelectionMemory(false)
            .Store(
                X.Store()
                .ID("stoUser")
                .PageSize(50)
                .Model(Util.GenerateModel(typeof(SA03001_pgLoadGrid_Result), "mdlUser", ""))
                .ServerProxy(X.AjaxProxy().Url(Url.Action("LoadGrid"))).AutoLoad(false)
                .Listeners(l =>
                {
                    l.BeforeLoad.Fn = "stoBeforeLoad";
                    l.Load.Fn = "stoLoad";
                    l.Update.Fn = "stoChanged";
                })
            )
            .ColumnModel(
                X.RowNumbererColumn().Text(Util.GetLang("Index")).Width(30).Listeners(x =>x.AfterRender.Handler = "this.resizable = true")
                ,X.CommandColumn().Text(Util.GetLang("Edit")).Align(Alignment.Center).Width(30)
                    .Commands(
                        X.GridCommand().Icon(Icon.BookEdit).CommandName("Edit_Click")
                    )
                    .Listeners(l => l.Command.Handler = "btnEdit_Click(record);")
                ,X.Column().Text(Util.GetLang("UserName")).DataIndex("UserName").Width(120)
                                                
                ,X.Column().Text(Util.GetLang("FirstName")).DataIndex("FirstName").Width(250)
                
                ,X.Column().Text(Util.GetLang("Address")).DataIndex("Address").Width(250).ID("Address")
                
                , X.Column().Text(Util.GetLang("Status")).DataIndex("StatusDescr").Width(120)
                    
                ,X.Column().Text(Util.GetLang("Password")).DataIndex("Password").Width(160).Renderer("rendererPassword")
                
                ,X.Column().Text(Util.GetLang("Email")).DataIndex("Email").Width(150)            
                  
                ,X.Column().Text(Util.GetLang("SA03001CpnyID")).DataIndex("CpnyID").Width(150)        
                
                ,X.Column().Text(Util.GetLang("Manager")).DataIndex("Manager").Width(150)   
                     
                ,X.Column().Text(Util.GetLang("UserTypes")).DataIndex("UserTypes").ID("UserTypes").Width(120)
                
                ,X.Column().Text(Util.GetLang("UserGroup")).DataIndex("UserGroup").Width(120)   
                 
                ,X.CheckColumn().Text(Util.GetLang("Blocked")).DataIndex("Blocked").StopSelection(false).Editable(false).Width(70)

                , X.DateColumn().Text(Util.GetLang("SA03001BeginDay")).DataIndex("BeginDay").Width(160)
                
                ,X.DateColumn().Text(Util.GetLang("BlockedTime")).DataIndex("BlockedTime").Width(160)  
                
                ,X.NumberColumn().Text(Util.GetLang("FailedLoginCount")).DataIndex("FailedLoginCount").Width(160).Format("00")  
               
                ,X.DateColumn().Text(Util.GetLang("LastLoggedIn")).DataIndex("LastLoggedIn").Width(160)              
                , X.Column().Text(Util.GetLang("Position")).DataIndex("PositionDescr").Width(120)
                , X.DateColumn().Text(Util.GetLang("StartWork")).DataIndex("StartWork").Width(160)
                , X.DateColumn().Text(Util.GetLang("EndWork")).DataIndex("EndWork").Width(160)
                , X.NumberColumn().Text(Util.GetLang("ExpireDay")).DataIndex("ExpireDay").Width(160).Format("00")
                ,X.Column().Text(Util.GetLang("Tel")).DataIndex("Tel").Width(120).ID("Tel")
                , X.Column().Text(Util.GetLang("Channel")).DataIndex("Channel").Width(120).ID("Channel")
                ,X.CheckColumn().Text(Util.GetLang("CheckFirstLogin")).DataIndex("CheckFirstLogin").Width(160).ID("CheckFirstLogin")
                ,X.CheckColumn().Text(Util.GetLang("MultiLogin")).DataIndex("MultiLogin").Width(160).ID("MultiLogin")
                //,X.CommandColumn().Width(150)
                //.Commands(
                //    X.GridCommand()
                //    .Text(Util.GetLang("Reject"))
                //    .ToolTip(t => t.Text = Util.GetLang("Rejectrowchanges"))
                //    .CommandName("reject")
                //    .Icon(Icon.ArrowUndo)
                    
                //)
                //.PrepareToolbar(t => t.Handler = "toolbar.items.get(0).setVisible(record.dirty);")
                //.Listeners(l => l.Command.Handler = "grdPO_CostPurchasePrice_Reject(record);")
            )
            .SelectionModel(X.RowSelectionModel().ID("slmUser").Mode(SelectionMode.Single))
            .BottomBar(
                X.PagingToolbar()
                .Items(
                    X.Label("Page size:"),
                    X.ToolbarSpacer(10),
                    X.ComboBox()
                    .Width(80)
                    .Items("1", "2", "10", "20", "30", "50")
                    .SelectedItems("50")
                    .Listeners(l =>
                        {
                            l.Select.Fn = "HQ.grid.onPageSelect";                   
                        })
                )
                .Plugins(X.ProgressBarPager())
            )
            //.Plugins(
            //    X.CellEditing()
            //    .ClicksToEdit(1)
            //    .Listeners(ls =>
            //    {
            //        ls.BeforeEdit.Fn = "grdPO_CostPurchasePrice_BeforeEdit";
            //        ls.Edit.Fn = "grdPO_CostPurchasePrice_Edit";
            //        ls.ValidateEdit.Fn = "grdPO_CostPurchasePrice_ValidateEdit";
            //    })
            //)
            .SortableColumns(false)
            .Features(
                X.GridFilters()
                    .Local(true)
                    .Filters(
                        X.StringFilter().DataIndex("UserName"),
                        X.StringFilter().DataIndex("FirstName"),
                        X.StringFilter().DataIndex("StatusDescr"),
                        //X.StringFilter().DataIndex("Password"),
                        X.StringFilter().DataIndex("Email"),
                        X.StringFilter().DataIndex("CpnyID"),
                        X.StringFilter().DataIndex("Manager"),
                        X.StringFilter().DataIndex("UserTypes"),
                        X.StringFilter().DataIndex("UserGroup"),
                        X.BooleanFilter().DataIndex("Blocked"),
                        X.DateFilter().DataIndex("BeginDay"),
                        X.DateFilter().DataIndex("BlockedTime")
                        ,X.NumericFilter().DataIndex("FailedLoginCount")
                        ,X.DateFilter().DataIndex("LastLoggedIn")
                        , X.StringFilter().DataIndex("PositionDescr")
                        , X.DateFilter().DataIndex("StartWork")
                        , X.DateFilter().DataIndex("EndWork")
                        , X.NumericFilter().DataIndex("ExpireDay")
                    )
            )
        
        )
        
        
    )
)
)

@(
 X.Window()
    .ID("winLocation")
    .Hidden(true)
    .Layout(LayoutType.Fit)
    .Height(450)
    .Width(800)
    .Maximized(false)
    .Modal(true)
    .Closable(true)
    .AutoScroll(true)
    .Buttons(
        X.Button().ID("btnLocationOK").Text(Util.GetLang("Save"))
       .Listeners(p => p.Click.Fn = "btnLocationOK_Click")
        ,X.Button().ID("btnLocationCancel").Text(Util.GetLang("Cancel"))
        .Listeners(p => p.Click.Fn = "btnLocationCancel_Click")
    )
    .BottomBar(
        X.Toolbar()
        .Border(false)
        .Items(
            X.Label().ID("lblLocationQtyAvail").Width(200).MarginSpec("0 0 0 5")
        )
    )
    .Items(
        X.FormPanel().ID("frmDetail").Layout(LayoutType.Fit)
            .FieldDefaults(act => { act.LabelAlign = LabelAlign.Right; })
            .Items(
                X.Panel().Layout(LayoutType.HBox).ID("pnlDetail").Border(false)
                    .Items(
                        X.Container().Layout(LayoutType.VBox).MarginSpec("10 0 0 0")
                           .Items(
                                X.Container().Layout(LayoutType.HBox)
                                .Items(
                                     HQ.TextBox().ID("txtUserName").Name("txtUserName").HQLangCode("UserName").DataIndex("UserName").MaxLength(30).EnforceMaxLength(true).LabelWidth(150).AllowBlank(false)
                                    , HQ.Checkbox().ID("chkAuto").LabelWidth(500)
                                    .Name("chkAuto").HQLangCode("CHECKAUTOUSERID").MarginSpec("5 0 0 10")
                                    .Listeners(lst =>
                                    {
                                        lst.Change.Handler = "chkAutoChange()";
                                    })
                                )
                               
                                ,HQ.TextBox().ID("txtFirstName").Name("txtFirstName").HQLangCode("FirstName").DataIndex("FirstName").MaxLength(50).EnforceMaxLength(true).LabelWidth(150).AllowBlank(false)
                                ,HQ.TextBox().ID("txtAddress").Name("txtAddress").HQLangCode("Address").DataIndex("Address").MaxLength(200).EnforceMaxLength(true).LabelWidth(150)
                                ,HQ.TextBox().ID("txtPassWord").Name("txtPassWord").HQLangCode("Password").DataIndex("Password").InputType(Ext.Net.InputType.Password).EnforceMaxLength(true).MaxLength(100).LabelWidth(150).AllowBlank(false)                                                             
                                ,HQ.TextBox().ID("txtEmail").Name("txtEmail").HQLangCode("Email").DataIndex("Email").MaxLength(250).EnforceMaxLength(true).MaxLength(250).EnforceMaxLength(true).LabelWidth(150).AllowBlank(false)
                                
                                 ,X.Container().Layout(LayoutType.HBox)
                                     .Items(
                                     HQ.Combo().ID("txtCpnyID").Name("txtCpnyID").HQLangCode("SA03001CpnyID").ReadOnly(true).Tag("X").MultiSelect(true).LabelWidth(150)
                                    .HQProcedure("SA03001_pcBranchAllByUser")
                                    .HQColumnShow("BranchID,BranchName").DisplayField("BranchID").ValueField("BranchID")
                                    .HQHeightWidth(400, 300)
                                    .HQDBSys(true).ForceSelection(true).HQAutoLoad(true).AllowBlank(false)
                                    .HQParam(new StoreParameterCollection() 
                                    { 
                                        new StoreParameter() { Name = "@UserID", Value = "HQ.userName", Mode = ParameterMode.Raw },
                                    })
                                    .LoadData()
                                       , HQ.Button().ID("btnBrown").Icon(Icon.Add)
                                        .Listeners(lst => lst.Click.Fn = "btnAddCustomer_Click")
                                  )
                                 ,HQ.Combo().ID("cboUserTypes").Name("cboUserTypes").HQLangCode("UserTypes").DataIndex("UserTypes").LabelWidth(150).Margins("5 0 0 0")
                                    .HQProcedure("SA03001_pcRole")
                                    .HQColumnShow("RoleID,Descr").DisplayField("RoleID").ValueField("RoleID").AllowBlank(false)
                                    .HQHeightWidth(400, 300)
                                    .HQDBSys(true).HQAutoLoad(true).MultiSelect(true)
                                    .HQParam(new StoreParameterCollection() 
                                    { 
                                        new StoreParameter() { Name = "@CpnyID", Value = "HQ.cpnyID", Mode = ParameterMode.Raw },
                                        new StoreParameter() { Name = "@UserID", Value = "HQ.userName", Mode = ParameterMode.Raw },
                                        new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw },
                                    })
                                    .LoadData()
                                    .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                                    .Listeners(l=>
                                    {
                                        l.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                                        l.Focus.Handler = "this.forceSelection = true;";
                                        l.Expand.Handler = "expand(this,',');";
                                        l.Blur.Handler = "this.forceSelection = false; expand(this,',');";
                                    })
                                    ,HQ.DateField().ID("dtpStartDate").Name("dtpStartDate").HQLangCode("StartDate").DataIndex("StartDate").LabelWidth(150).Hidden(true)//.ReadOnly(true).Tag("X")
                                  ,HQ.Combo().ID("cboStatus").Name("cboStatus").HQLangCode("Status").DataIndex("Status").LabelWidth(150)
                                .HQProcedure("SA03001_pcStatus").AllowBlank(false)
                                .HQColumnShow("Code,Descr").DisplayField("Descr").ValueField("Code")
                                .HQHeightWidth(400, 300)
                                .HQDBSys(true).ForceSelection(true).HQAutoLoad(true)
                                .HQParam(new StoreParameterCollection() 
                                { 
                                    new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw }
                                })
                                .LoadData()
                                .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                                .Listeners(l=>l.TriggerClick.Handler ="if (index == 0) { this.clearValue();}")
                                 ,HQ.DateField().ID("dtpStartWork").Name("dtpStartWork").HQLangCode("StartWork").DataIndex("StartWork").LabelWidth(150).AllowBlank(false)
                        .Listeners(p => p.Change.Fn = "dtpStartWork_Change")
                            , HQ.DateField().ID("dtpEndWork").Name("dtpEndWork").HQLangCode("EndWork").DataIndex("EndWork").LabelWidth(150).AllowBlank(false)

                )
                       ,X.Container().Layout(LayoutType.VBox).MarginSpec("10 0 0 10")
                            .Items(
                               HQ.Combo().ID("cboUserGroup").Name("cboUserGroup").HQLangCode("UserGroup").LabelWidth(180).DataIndex("UserGroup")
                                    .HQProcedure("SA03001_pcUserGroup")
                                    .HQColumnShow("GroupID,Descr").DisplayField("GroupID").ValueField("GroupID")
                                    .HQHeightWidth(400, 300)
                                    .HQDBSys(true).HQAutoLoad(true).MultiSelect(true)
                                    .HQParam(new StoreParameterCollection() 
                                    { 
                                        new StoreParameter() { Name = "@CpnyID", Value = "HQ.cpnyID", Mode = ParameterMode.Raw },
                                        new StoreParameter() { Name = "@UserID", Value = "HQ.userName", Mode = ParameterMode.Raw },
                                        new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw },
                                    })
                                    .LoadData()
                                    .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                                        .Listeners(l => { 
                                            l.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                                            l.Focus.Handler = "this.forceSelection = true;";
                                            l.Expand.Handler = "expand(this,',');";
                                            l.Blur.Handler = "this.forceSelection = false; expand(this,',');";
                                        })
                                    , HQ.DateField().ID("dtpBeginDay").Name("dtpBeginDay").HQLangCode("SA03001BeginDay").DataIndex("BeginDay").LabelWidth(180).AllowBlank(false)
                                     , HQ.Checkbox().ID("ckbBloked").Name("ckbBloked").HQLangCode("Blocked").DataIndex("Blocked").LabelWidth(180).MarginSpec("0 0 0 185")
                                 , HQ.NumberField().ID("txtExpireDay").Name("txtExpireDay").HQLangCode("ExpireDay").DataIndex("ExpireDay").LabelWidth(180).DecimalPrecision(0).MinValue(1).AllowBlank(false)
                                 ,HQ.DateField().ID("dteBlockedTime").Name("dteBlockedTime").HQLangCode("BlockedTime").DataIndex("BlockedTime").LabelWidth(180).ReadOnly(true).Tag("X")
                                 ,HQ.NumberField().ID("txtFailedLoginCount").Name("txtFailedLoginCount").HQLangCode("FailedLoginCount").DataIndex("FailedLoginCount").LabelWidth(180).DecimalPrecision(0)

                               ,HQ.DateField().ID("dteLastLoggedIn").Name("dteLastLoggedIn").HQLangCode("LastLoggedIn").DataIndex("LastLoggedIn").LabelWidth(180).ReadOnly(true).Tag("X")
                                ,HQ.Combo().ID("cboManager").Name("cboManager").HQLangCode("Manager").DataIndex("Manager").LabelWidth(180)
                                    .HQProcedure("SA03001_pcLoadManager")
                                    .HQColumnShow("Code,Descr").DisplayField("Descr").ValueField("Code")
                                    .HQHeightWidth(400, 300)
                                    .HQDBSys(true).ForceSelection(true).HQAutoLoad(true)
                                    .HQParam(new StoreParameterCollection() 
                                    { 
                                        new StoreParameter() { Name = "@CpnyID", Value = "HQ.cpnyID", Mode = ParameterMode.Raw },
                                        new StoreParameter() { Name = "@UserID", Value = "HQ.userName", Mode = ParameterMode.Raw },
                                        new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw },
                                    })
                                    .LoadData()
                                    .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                                    .Listeners(l=>l.TriggerClick.Handler ="if (index == 0) { this.clearValue();}")
                                , HQ.DateField().ID("dtpEndDate").Name("dtpEndDate").HQLangCode("EndDate").DataIndex("EndDate").LabelWidth(180).Hidden(true)//.ReadOnly(true).Tag("X")									
                                 , HQ.Combo().ID("cboPosition").Name("cboPosition").HQLangCode("Position").DataIndex("Position").LabelWidth(180)
                                .HQProcedure("SA03001_pcPosition")
                                .HQColumnShow("Code,Descr").DisplayField("Descr").ValueField("Code")
                                .HQHeightWidth(400, 300)
                                .HQDBSys(true).ForceSelection(true).HQAutoLoad(true)
                                .HQParam(new StoreParameterCollection() 
                                { 
                                    new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw }
                                })
                                .LoadData()
                                .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                                .Listeners(l => l.TriggerClick.Handler = "if (index == 0) { this.clearValue();}")
                                ,HQ.TextBox().ID("txtTel").Name("txtTel").HQLangCode("Tel").DataIndex("Tel").MaxLength(15).EnforceMaxLength(true).LabelWidth(180) 
                                , HQ.Combo().ID("cboChannel").Name("cboChannel").HQLangCode("Channel").DataIndex("Channel").LabelWidth(180)
                                .HQProcedure("SA03001_pcChannel")
                                .HQColumnShow("Code,Descr").DisplayField("Descr").ValueField("Code")
                                .HQHeightWidth(400, 300)
                                .HQDBSys(false).ForceSelection(true).HQAutoLoad(true)
                                .HQParam(new StoreParameterCollection() 
                                { 
                                    new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw },
                                    new StoreParameter() { Name = "@UserName", Value = "HQ.userName", Mode = ParameterMode.Raw },
                                    new StoreParameter() { Name = "@CpnyID", Value = "HQ.cpnyID", Mode = ParameterMode.Raw }
                                })
                                .LoadData()
                                .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                                .Listeners(l => l.TriggerClick.Handler = "if (index == 0) { this.clearValue();}")
                                ,HQ.Checkbox().ID("ckbCheckFirstLogin").Name("ckbCheckFirstLogin").HQLangCode("CheckFirstLogin").DataIndex("CheckFirstLogin").LabelWidth(180).MarginSpec("0 0 0 185")
                                , HQ.Checkbox().ID("ckbMultiLogin").Name("ckbMultiLogin").HQLangCode("MultiLogin").DataIndex("MultiLogin").LabelWidth(180).MarginSpec("0 0 0 185")
                                
                            )
                    )
            )
    )
    
)

@(
 X.Window()
    .ID("winBranch")
    .Hidden(true)
    .Layout(LayoutType.Fit)
    .Height(400)
    .Width(500)
    .Maximized(false)
    .Modal(true)
    .Closable(true)
    .Buttons(
        X.Button().ID("btnBranchOK").Text(Util.GetLang("Save"))
        .Listeners(p => p.Click.Fn = "btnBranchOK_Click")
        ,X.Button().ID("btnBranchCancel").Text(Util.GetLang("Cancel"))
        .Listeners(p => p.Click.Fn = "btBranchCancel_Click")
    )
    .BottomBar(
        X.Toolbar()
        .Border(false)
        .Items(
            X.Label().ID("lblCustomer").Width(200).MarginSpec("0 0 0 5")
        )
    )
    .Items(
        X.GridPanel().ID("grdBranch")
            .SelectionMemory(false)
            .Store(
                X.Store()
                    .ID("stoBranch")
                    .PageSize(50)
                    .Model(Util.GenerateModel(typeof(SA03001_pgBranchAllByUser_Result), "mdlBranch", ""))
                    .ServerProxy(X.AjaxProxy().Url(Url.Action("LoadBranch"))).AutoLoad(false)
                        .Parameters(ps =>
                        {
                            ps.Add(new StoreParameter("listBranchID", "", ParameterMode.Value));

                        })              
                    .Listeners(l =>
                    {
                        l.BeforeLoad.Fn = "stoBeforeLoad";
                        l.Load.Fn = "stoBranch_Load";
                        l.Update.Fn = "stoChanged";                 
                    })
              )
            .ColumnModel(
                 X.RowNumbererColumn().Text(Util.GetLang("Index")).Width(50).Sortable(false)
                ,X.CheckColumn().DataIndex("Check").Width(80).Editable(true).Text(Util.GetLang("Status"))//.HideTitleEl(true).Text("ABC")
                    .HeaderItems(
                        HQ.Checkbox().ID("chkActive_All").MarginSpec("0 0 0 32").Listeners(l=>l.Change.Fn="chkActiveAll_Change")
                    )
               // ,X.Column().Text(Util.GetLang("PVNName")).DataIndex("PVNName").Width(150).Sortable(false)
                , X.Column().Text(Util.GetLang("ZoneDescr")).DataIndex("ZoneDescr").Width(120)
                , X.Column().Text(Util.GetLang("TerritoryDescr")).DataIndex("TerritoryDescr").Width(120)
                , X.Column().Text(Util.GetLang("SubTerritoryDescr")).DataIndex("SubTerritoryDescr").Width(120)
                , X.Column().Text(Util.GetLang("StateDescr")).DataIndex("StateDescr").Width(120)
                ,X.Column().Text(Util.GetLang("BranchID")).DataIndex("BranchID").Width(120)
                ,X.Column().Text(Util.GetLang("BranchName")).DataIndex("BranchName").Width(250)
                ,X.Column().Text(Util.GetLang("Addr")).DataIndex("Addr").Width(270)
            )
            .BottomBar(
                X.PagingToolbar()
                    .Items(
                        X.Label("Page size:"),
                        X.ToolbarSpacer(10),
                        X.ComboBox()
                        .Width(80)
                        .Items("1", "2", "10", "20", "30", "50")
                        .SelectedItems("50")
                        .Listeners(l =>
                            {
                                l.Select.Fn = "HQ.grid.onPageSelect";
                            })
                        )
                    .Plugins(X.ProgressBarPager())
            ) 
            .SelectionModel(
                X.RowSelectionModel()                
                    .Mode(SelectionMode.Multi)
             )
            // .SortableColumns(false)
            .Features(
            X.GridFilters()
                .Local(true)
                .Filters(
                    X.BooleanFilter().DataIndex("Check"),
                   // X.StringFilter().DataIndex("PVNName"),
                    X.StringFilter().DataIndex("ZoneDescr"),
                    X.StringFilter().DataIndex("TerritoryDescr"),
                    X.StringFilter().DataIndex("SubTerritoryDescr"),
                    X.StringFilter().DataIndex("StateDescr"),
                    X.StringFilter().DataIndex("BranchID"),
                    X.StringFilter().DataIndex("BranchName"),
                    X.StringFilter().DataIndex("Addr")

                )
            )
             
    )
    
)
@(
 X.Window()
    .ID("winReplace")
    .Hidden(true)
    .Layout(LayoutType.Border)
    .Maximized(true)
    .Modal(true)
    .Closable(true)
    //.AutoScroll(true)
    .Buttons(
        X.Button().ID("btnUpdate").Text(Util.GetLang("Update")).Icon(Icon.ArrowRefresh)
           .Listeners(p => p.Click.Fn = "btnUpdate_Click")
    )
    .BottomBar(
        X.Toolbar()
        .Border(false)
        .Items(
                X.Label().ID("lblReplace").Width(200).MarginSpec("0 0 0 5")
        )
    )
    .Items(
            X.Panel().ID("pnlUserNameOld")
            .Region(Region.West).Border(false)
            .Layout(LayoutType.Border).Flex(1)
            .Items(
                        X.Panel().ID("pnlHeader")
                        .Region(Region.North)
                        .Height(40)
                        .AutoScroll(true)
                        .Items(
                                HQ.TextBox().ID("txtUserNameOld").HQLangCode("Nhân viên bị thay thế").MarginSpec("5 0 0 10").Width(300).ReadOnly(true).Tag("X")
                        )       
                        , X.Panel().ID("pnlTreeAVC").Title(Util.GetLang("Phân Cấp")).Region(Region.Center)
                        .Layout(LayoutType.Fit)
                        .Split(true).AutoScroll(true)
                        .Listeners(lst =>
                        {
                            //lst.AfterRender.Handler = "treeAVC_AfterRender('pnlTreeAVC');";
                        })
                        .BottomBar(
                                X.Toolbar()
                                .Items(
                                    X.ToolbarFill()

                                    , HQ.Button()
                                    .HQLangCode("Expand")
                                    .Icon(Icon.BulletTogglePlus)
                                    .Handler("btnExpand_click")

                                    , X.ToolbarSpacer()
                                    , X.ToolbarSeparator()
                                    , X.ToolbarSpacer()

                                    , HQ.Button()
                                    .HQLangCode("Collapse")
                                    .Icon(Icon.BulletToggleMinus)
                                    .Handler("btnCollapse_click")

                                    , X.ToolbarFill()
                                )
                            ) 
                    )
            , X.Panel().ID("pnlUserNameNew")
            .Region(Region.Center).Border(false)
            .Layout(LayoutType.Border)
            .Items(

                    X.Panel().ID("pnlHeaderUserReplace")
                    .Region(Region.North)
                    .Height(40)
                    .AutoScroll(true)
                    .Items(
                            HQ.Combo().ID("cboUserBy").Name("cboUserBy").MarginSpec("5 0 0 0").Width(300)
                            .HQLangCode("Thay thế bởi").HQDBSys(true).HQProcedure("SA03001_pcUserIDBy").HQisPaging(true).PageSize(20)
                            .HQColumnShow("UserName,Name").ForceSelection(true).AllowBlank(false)
                            .DisplayField("Name").ValueField("UserName").HQHeightWidth(400, 300)
                            .HQParam(new StoreParameterCollection() 
                            { 
                                new StoreParameter() { Name = "@UserID", Value = "HQ.userName", Mode = ParameterMode.Raw },
                                new StoreParameter() { Name = "@CpnyID", Value = "HQ.cpnyID", Mode = ParameterMode.Raw },
                                new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw },
                                new StoreParameter() { Name = "@UserIDOld", Value = "_userName", Mode = ParameterMode.Raw }
                            })
                            .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                            .Listeners(ls =>
                            {
                                ls.TriggerClick.Handler = "if (index == 0) { this.focus(true);this.clearValue(); }";
                                ls.Change.Fn = "cboUserBy_Change";
                                //ls.Select.Fn = "cboUserBy_Select";
                            })
                            .LoadData()
                        )
                    , X.Panel().ID("pnlTreeAVCUserReplace").Title(Util.GetLang("Phân Cấp")).Region(Region.Center)
                    .Layout(LayoutType.Fit)
                    .Split(true).AutoScroll(true)
                    .Listeners(lst =>
                    {
                        //lst.AfterRender.Handler = "treeAVC_AfterRender1('pnlTreeAVC1');";
                    })
                    .BottomBar(
                                X.Toolbar()
                                .Items(
                                    X.ToolbarFill()

                                    , HQ.Button()
                                    .HQLangCode("Expand")
                                    .Icon(Icon.BulletTogglePlus)
                                    .Handler("btnUserReplaceExpand_click")

                                    , X.ToolbarSpacer()
                                    , X.ToolbarSeparator()
                                    , X.ToolbarSpacer()

                                    , HQ.Button()
                                    .HQLangCode("Collapse")
                                    .Icon(Icon.BulletToggleMinus)
                                    .Handler("btnUserReplaceCollapse_click")

                                    , X.ToolbarFill()
                                )
                        ) 
            )           
    )
 )
