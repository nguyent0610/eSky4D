@using Ext.Net;
@using Ext.Net.MVC;
@using HQ.eSkyFramework;
@using HQ.eSkyFramework.HQControl;
@using CA20100;
@{
    Layout = null;
    var X = Html.X();
    var HQ = Html.HQ();
}

@(
    X.Viewport()
    .Layout(LayoutType.Fit)
    .Items(
        X.FormPanel()
        .ID("frmMain")
        .BodyPadding(0)
        .KeyMap(Util.SetupKeyMap())
        .TopBar(Util.SetupToolbar("Print", true, ""))
        .Layout(LayoutType.Fit)
        .Listeners(l =>
                                {
                                    l.BoxReady.Handler = "firstLoad()";
                                })
         
        .Items(
        
            ////Thiet ke giao dien o day
            X.GridPanel()
            .Scroll(ScrollMode.Both)
            .View(X.GridView().TrackOver(false))
            .ID("grdEntryType")
            .Store(
                X.Store()
                .ID("stoEntryType")
                .PageSize(50)
                .Model(Util.GenerateModel(typeof(CA20100_pgLoadEntryType_Result), "mdCA_EntryType", "EntryID"))
                .ServerProxy(X.AjaxProxy().Url(Url.Action("GetEntryType"))).AutoLoad(false)
                .Listeners(l =>
                {
                    //l.BeforeLoad.Handler = "App.stoMasterType.reload(); HQ.common.showBusy(true,HQ.common.getLang(\"loadingdata\"));";
                    //l.Load.Handler = "HQ.common.showBusy(false);"; 
                    l.Load.Fn = "stoLoad";
                    l.Update.Fn = "frmChange";
                }) // stoEntryType
            )
            .Listeners(lst => lst.Render.Handler = "HQ.common.control_render(this,'grdEntryType');")
            .SortableColumns(false)
            .ColumnModel(
                X.RowNumbererColumn().Width(40)
                
                , X.Column().ID("EntryID").Text(Util.GetLang("EntryID")).DataIndex("EntryID").Width(150)
                .Editor(Html.X().TextField().MaxLength(10).EnforceMaxLength(true))
                    
                , X.Column().Text(Util.GetLang("Descr")).DataIndex("descr").Width(150)
                .Editor(Html.X().TextField().MaxLength(200).EnforceMaxLength(true))

                        , X.Column().Text(Util.GetLang("RcptDisbFlg")).DataIndex("RcptDisbFlg").Width(150).Renderer("change")
                .Editor(
                    HQ.Combo().ID("cboType").Name("cboType").HQProcedure("CA20100_pcType")
                    .HQColumnShow("Descr").DisplayField("Descr").ValueField("Code")
                    .Width(300).HQHeightWidth(500, 400).MarginSpec("5 0 0 0")
                    .HQDBSys(false).AllowBlank(true).ForceSelection(true)
                    .HQParam(new StoreParameterCollection() { 
                        new StoreParameter() { Name = "@LangID", Value = "HQ.langID" , Mode = ParameterMode.Raw }
                    })
                    .LoadData()
                )
                
               ,X.CheckColumn().ID("chkActive").DataIndex("active").Align(Alignment.Center)
                                    .Editable(true).HideTitleEl(true)
                                    .HeaderItems(
                                        X.Container().Layout(LayoutType.HBox)
                                        .LayoutConfig(new HBoxLayoutConfig { Align=HBoxAlign.Middle, Pack = BoxPack.Center })
                                        .Items(
                                                HQ.Checkbox().ID("ActiveCheckAll").MarginSpec("0 0 0 10")
                                                             .Listeners(l => l.Change.Fn = "ActiveCheckAll_Change")
                                            
                                                ,HQ.Label().HQLangCode("active").ID("Activetext")
                                               )
                                    )
                                    
                , X.CommandColumn().Width(150)
                .Commands(
                    Html.X().GridCommand()
                    .Text(Util.GetLang("Reject"))
                    .ToolTip(t =>
                    {
                        t.Text = Util.GetLang("Rejectrowchanges");
                    })
                    .CommandName("reject")
                    .Icon(Icon.ArrowUndo)
                )
                .PrepareToolbar(t =>
                {
                    t.Handler = "toolbar.items.get(0).setVisible(record.dirty);";
                })
                .Listeners(l =>
                {
                    l.Command.Handler = "grd_Reject(record);";
                })
            )
            .SelectionModel(X.RowSelectionModel().ID("slmEntryType").Mode(SelectionMode.Multi))
            .BottomBar(
                X.PagingToolbar()
                .Items(
                    X.Label("Page size:"),
                    X.ToolbarSpacer(10),
                    X.ComboBox()
                    .Width(80)
                    .Items("1", "2", "10", "20", "30", "50")
                    .SelectedItems("50")
                    .Listeners(l => l.Select.Fn = "HQ.grid.onPageSelect")
                )
                .Plugins(X.ProgressBarPager())
            )
            .Plugins(
                X.CellEditing()
                .ClicksToEdit(1)
                .Listeners(ls =>
                {
                    ls.BeforeEdit.Fn = "grdEntryType_BeforeEdit";
                    ls.Edit.Fn = "grdEntryType_Edit";
                    ls.ValidateEdit.Fn = "grdEntryType_ValidateEdit";
                  //  ls.CancelEdit.Fn = "grdEntryType_CancelEdit";
                })
            )
            .Features(
                X.GridFilters()
                .Local(true)
                .Filters(
                    X.StringFilter().DataIndex("EntryID"),
                    X.StringFilter().DataIndex("descr"),
                    X.StringFilter().DataIndex("RcptDisbFlg")
                )
            ) // grdEntryType
        ) // frmMain
    ) // Viewport
)
