@using Ext.Net;
@using Ext.Net.MVC;
@using HQ.eSkyFramework;
@using HQ.eSkyFramework.HQControl;
@using CA20200;
@{
    Layout = null;
    var X = Html.X();
    var HQ = Html.HQ();
}

@(X.Viewport()
    .Layout(LayoutType.Fit)
    .Items(
        X.FormPanel()
        .ID("frmMain")
        .BodyPadding(0)
        .KeyMap(Util.SetupKeyMap())
        .TopBar(Util.SetupToolbar("Print", true, ""))
        .FieldDefaults(act => { act.LabelAlign = LabelAlign.Right; act.LabelWidth = 150; })
        .Layout(LayoutType.Fit)
        .Listeners(l =>
                        {
                            l.BoxReady.Handler = "firstLoad()";
                        })
         
        .Items(
            ////Thiet ke giao dien o day

            X.GridPanel()
            .Scroll(ScrollMode.Both)
            .View(X.GridView().TrackOver(false))
            .ID("grdAccount")
            .Store(
                X.Store()
                .ID("stoAccount")
                .PageSize(50)
                .Model(Util.GenerateModel(typeof(CA20200_pgLoadAccount_Result), "mdCA_Account", "BranchID,BankAcct"))
                .ServerProxy(X.AjaxProxy().Url(Url.Action("GetAccount"))).AutoLoad(false)
                .Listeners(l =>
                {
                    //l.BeforeLoad.Handler = "HQ.common.showBusy(true,HQ.common.getLang(\"loadingdata\"));";
                 //   l.Load.Handler = "HQ.common.showBusy(false);";
                    l.Load.Fn = "stoLoad";
                    l.Update.Fn = "frmChange";
                })
            )
            .Listeners(lst => lst.Render.Handler = "HQ.common.control_render(this,'grdAccount');")
            .SortableColumns(false)
            .ColumnModel(
                X.RowNumbererColumn().Width(40)
                , X.Column().ID("BranchID").Text(Util.GetLang("BranchID")).DataIndex("BranchID").Width(150)
                    .Editor(
                         HQ.Combo().ID("cboBranchID").Name("cboBranchID").HQProcedure("CA20200_pcBranch")                      
                        .HQColumnShow("BranchID,BranchName").DisplayField("BranchID").ValueField("BranchID")
                        .Width(300).HQHeightWidth(500, 400).MarginSpec("5 0 0 0")
                        .HQDBSys(false).AllowBlank(true).ForceSelection(true)
                        .HQParam(new StoreParameterCollection()
                        {
                            new StoreParameter() { Name = "@UserID", Value = "HQ.userName", Mode = ParameterMode.Raw },

                        })
                        .LoadData()
                        .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                        .Listeners(lst =>
                            {
                               
                                lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";   
                            })
                            )
                , X.Column().ID("BankAcct").Text(Util.GetLang("BankAcct")).DataIndex("BankAcct").Width(150)
                    .Editor(X.TextField().MaxLength(10).EnforceMaxLength(true))
                , X.Column().Text(Util.GetLang("AcctName")).DataIndex("AcctName").Width(150)
                    .Editor(X.TextField().MaxLength(100).EnforceMaxLength(true))
                , X.Column().Text(Util.GetLang("AcctNbr")).DataIndex("AcctNbr").Width(150)
                    .Editor(X.TextField().MaxLength(30).EnforceMaxLength(true))
                , X.Column().Text(Util.GetLang("AddrID")).DataIndex("AddrID").Width(150)
                    .Editor(
                        HQ.Combo().ID("cboAddrID").Name("cboAddrID").HQProcedure("CA20200_pcLoadAddress")                      
                        .HQColumnShow("AddrID,Name,Addr1,Addr2").DisplayField("AddrID").ValueField("AddrID")
                        .Width(300).HQHeightWidth(500, 400).MarginSpec("5 0 0 0")
                        .HQDBSys(false).AllowBlank(true).ForceSelection(true)
                        .LoadData()
                    )
                 ,X.CheckColumn().DataIndex("Active").Width(150).Editable(true).HideTitleEl(true)
                    .HeaderItems(
                       // HQ.Label().HQLangCode("Active").ID("Activetext").MarginSpec("0 0 0 5")
                        HQ.Checkbox().ID("ActiveCheckAll").HQLangCode("Active").Listeners(l => l.Change.Fn = "ActiveCheckAll_Change").MarginSpec("0 0 0 20")
                      )
                     //   .ID("txtActive"))
                , X.CommandColumn().Width(150)
                                        .Commands(
                                            X.GridCommand()
                                                .Text(Util.GetLang("Reject"))
                                                .ToolTip(t =>
                                                {
                                                    t.Text = Util.GetLang("Rejectrowchanges");
                                                })
                                                .CommandName("reject")
                                                .Icon(Icon.ArrowUndo)
                                        )
                                        .PrepareToolbar(t =>
                                        {
                                            t.Handler = "toolbar.items.get(0).setVisible(record.dirty);";
                                        })
                                        .Listeners(l =>
                                        {
                                            l.Command.Handler = "grd_Reject(record);";
                                        })
                                        
            )
            .SelectionModel(X.RowSelectionModel().ID("slmAccount").Mode(SelectionMode.Multi))
            .BottomBar(
                X.PagingToolbar()
                .Items(
                    X.Label("Page size:"),
                    X.ToolbarSpacer(10),
                    X.ComboBox()
                    .Width(80)
                    .Items("1", "2", "10", "20", "30", "50")
                    .SelectedItems("50")
                    .Listeners(l => l.Select.Fn = "HQ.grid.onPageSelect")
                )
                .Plugins(X.ProgressBarPager())
            )
            .Plugins(
                X.CellEditing()
                .ClicksToEdit(1)
                .Listeners(ls =>
                {
                    ls.BeforeEdit.Fn = "grdAccount_BeforeEdit";
                    ls.Edit.Fn = "grdAccount_Edit";
                    ls.ValidateEdit.Fn = "grdAccount_ValidateEdit";
                    ls.CancelEdit.Fn = "grdAccount_CancelEdit";
                })
            )

            .Features(
                X.GridFilters()
                    .Local(true)
                    .Filters(
                        X.StringFilter().DataIndex("BranchID"),
                        X.StringFilter().DataIndex("BankAcct"),
                        X.StringFilter().DataIndex("AcctNbr"),
                        X.StringFilter().DataIndex("Active"),
                        X.StringFilter().DataIndex("AddrID"),
                        X.StringFilter().DataIndex("AcctName")
                     )
            )
        )
    )
)
