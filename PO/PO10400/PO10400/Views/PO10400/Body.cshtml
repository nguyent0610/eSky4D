@using Ext.Net;
@using Ext.Net.MVC;
@using HQ.eSkyFramework;
@using HQ.eSkyFramework.HQControl;
@using PO10400;
@{
    Layout = null;
    var X = Html.X();
    var HQ = Html.HQ();
}

@(
 Html.X().Viewport().Layout(LayoutType.Fit)
    .Items(
        X.FormPanel()
        .Layout(LayoutType.Border)
        .ID("frmMain")
        .TrackResetOnLoad(true)          
        .BodyBorder(0)
        .TopBar(Util.SetupToolbar("new,delete,print", true, "Event.Form.menuClick"))//save,close,
        .FieldDefaults(act => { act.LabelAlign = LabelAlign.Right; act.LabelWidth = 100; })
        .Items(
        //X.Panel().Layout(LayoutType.VBox).Region(Region.North).AutoScroll(true).Items(
            X.Panel().ID("pnlHeader").Layout(LayoutType.HBox).Region(Region.North).AutoScroll(true)
            .LayoutConfig(new HBoxLayoutConfig { Align = HBoxAlign.Top }).Border(false)
            .Items(
            //fitler data
                X.FieldSet().Layout(LayoutType.HBox)
                .Title(Util.GetLang("FilterData"))
                .LayoutConfig(new HBoxLayoutConfig { Align=HBoxAlign.Stretch, Pack = BoxPack.Center })
                .Items(
                    // First Column
                    X.Container().Layout(LayoutType.VBox).MarginSpec("0 5 5 5")
                    .MinWidth(300).Flex(1).Width(300)
                    .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Stretch })
                    .Items(
                        HQ.Combo().ID("cboZone").HQAutoLoad(false)
                        .HQLangCode("Zone").HQProcedure("PO10400_pcZone")
                        .HQColumnShow("Code,Descr").ValueField("Code").DisplayField("Code")
                        .HQHeightWidth(400, 300).MultiSelect(true).ForceSelection(true)
                        .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                        .HQParam(new StoreParameterCollection() { 
                            new StoreParameter("@UserID", "HQ.userName", ParameterMode.Raw) 
                            ,new StoreParameter("@BranchID", "HQ.cpnyID", ParameterMode.Raw) 
                        })
                        .LoadData()
                        .Listeners(l =>
                        {
                            l.TriggerClick.Fn = "Event.Form.btnHideTrigger_click";
                            l.Change.Fn = "Event.Form.cbo_Change";
                                              
                        })

                        , HQ.Combo().ID("cboTerritory")
                        .HQLangCode("Territory").HQProcedure("PO10400_pcTerritory")
                        .HQColumnShow("Code,Descr").ValueField("Code").DisplayField("Code")
                        .HQHeightWidth(400, 300).MultiSelect(true).ForceSelection(true)
                        .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                        .HQParam(new StoreParameterCollection() { 
                            new StoreParameter("@UserID", "HQ.userName", ParameterMode.Raw) 
                            ,new StoreParameter("@BranchID", "HQ.cpnyID", ParameterMode.Raw) 
                            ,new StoreParameter("@Zone", "App.cboZone.getValue().join(',')", ParameterMode.Raw) 
                        })
                        .LoadData()
                        .Listeners(l =>
                        {
                            l.TriggerClick.Fn = "Event.Form.btnHideTrigger_click";
                            l.Change.Fn = "Event.Form.cbo_Change";                 
                        })

                        , HQ.Combo().ID("cboBranchID")
                         .HQLangCode("Branch").HQProcedure("PO10400_pcBranchID")
                        .HQColumnShow("BranchID,BranchName").ValueField("BranchID").DisplayField("BranchID")
                        .HQHeightWidth(400, 300).MultiSelect(true).ForceSelection(true)
                        .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                        .HQParam(new StoreParameterCollection() { 
                            new StoreParameter("@UserID", "HQ.userName", ParameterMode.Raw) 
                            ,new StoreParameter("@BranchID", "HQ.cpnyID", ParameterMode.Raw)
                            ,new StoreParameter("@Zone", "App.cboZone.getValue().join(',')", ParameterMode.Raw) 
                            ,new StoreParameter("@Territory", "App.cboTerritory.getValue().join(',')", ParameterMode.Raw) 
                        })
                        .LoadData()
                        .Listeners(l =>
                        {
                            l.TriggerClick.Fn = "Event.Form.btnHideTrigger_click";                       
                        })
                    ) //end First Column
                    // Second Column
                    ,X.Container().Layout(LayoutType.VBox).MarginSpec("0 5 5 5")
                    .Width(20)
                    .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Stretch })
                    .Items(
                            HQ.Checkbox().ID("chkZone").LabelWidth(0).BoxLabel("")
                            .Listeners(l =>
                                {
                                    l.Change.Fn = "Event.Form.chk_Click";
                                })
                            ,HQ.Checkbox().ID("chkTerritory").LabelWidth(0).BoxLabel("")
                            .Listeners(l =>
                                {
                                    l.Change.Fn = "Event.Form.chk_Click";
                                })
                            ,HQ.Checkbox().ID("chkBranchID").LabelWidth(0).BoxLabel("")
                            .Listeners(l =>
                                {
                                    l.Change.Fn = "Event.Form.chk_Click";
                                })
                    )//end Second Column
                    // Third Column
                    , X.Container().Layout(LayoutType.VBox).MarginSpec("0 5 5 5")
                    .MinWidth(250).Flex(1).Width(300)
                    .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Stretch })
                    .Items(
                   

                        HQ.Combo().ID("cboStatusFilter")
                            .HQLangCode("Status").HQProcedure("PO10400_pcStatus")
                            .HQColumnShow("Descr").ValueField("Code").DisplayField("Descr")
                            .HQHeightWidth(400, 300).MultiSelect(true)//.HQFirstDefault(true)
                            .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                            .HQParam(new StoreParameterCollection() { 
                                new StoreParameter("@UserID", "HQ.userName", ParameterMode.Raw) 
                                ,new StoreParameter("@LangID", "HQ.langID", ParameterMode.Raw)
                                             
                            })
                            .LoadData()
                            .Listeners(l =>
                            {
                                l.TriggerClick.Fn = "Event.Form.btnHideTrigger_click";
                            })
                        , HQ.DateField().ID("dtpFromDate")
                            .HQLangCode("FromDate")
                            .Listeners(l => l.Change.Fn = "Event.Form.dtpFromDate_change")

                        , HQ.DateField().ID("dtpToDate")
                            .HQLangCode("ToDate")
                    
                        , HQ.Button().ID("btnLoad").MarginSpec("0 0 0 105")
                            .HQLangCode("LoadData").Icon(Icon.ArrowRefresh)
                            .Handler("Event.Form.btnLoad_click")

                    ) //end Third Column
                     // Third Column
                    ,X.Container().Layout(LayoutType.VBox).MarginSpec("0 5 5 5")
                    .Width(20)
                    .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Stretch })
                    .Items(
                            HQ.Checkbox().ID("chkStatus").LabelWidth(0).BoxLabel("")
                            .Listeners(l =>
                                {
                                    l.Change.Fn = "Event.Form.chk_Click";
                                })                       
                    )//end Third Column
                )//end filter
                // Four Column
                , X.FieldSet().Layout(LayoutType.VBox).MarginSpec("0 5 5 5")
                .Title(Util.GetLang("Handle")).Width(300)
                .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Stretch, Pack = BoxPack.Center })
                .Items(
                    HQ.Combo().ID("cboStatusApprove").AllowBlank(false).HQAutoLoad(false)
                    .HQLangCode("Status").HQProcedure("PO10400_pcStatus").ForceSelection(true)
                    .HQColumnShow("Code,Descr").ValueField("Code").DisplayField("Descr")//.HQFirstDefault(true)
                    .HQHeightWidth(400, 300)
                    .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                    .HQParam(new StoreParameterCollection() { 
                        new StoreParameter("@UserID", "HQ.userName", ParameterMode.Raw) 
                        ,new StoreParameter("@LangID", "HQ.langID", ParameterMode.Raw) 
                    })
                    .LoadData()
                    .Listeners(l =>
                    {
                        l.TriggerClick.Fn = "Event.Form.btnHideTrigger_click";
                        l.Change.Fn = "Event.Form.cbo_Change";
                    })

                    , HQ.Combo().ID("cboHandleApprove").AllowBlank(false).ForceSelection(true).Tag("X")
                    .HQLangCode("Handle").HQProcedure("PO10400_pcHandle")
                    .HQColumnShow("Descr,ToStatus").ValueField("Code").DisplayField("Descr")
                    .HQHeightWidth(400, 300)
                    .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                    .HQParam(new StoreParameterCollection() { 
                        new StoreParameter("@UserID", "HQ.userName", ParameterMode.Raw) 
                        ,new StoreParameter("@Status", "App.cboStatusApprove.getValue()", ParameterMode.Raw) 
                        ,new StoreParameter("@LangID", "HQ.langID", ParameterMode.Raw) 
                    })
                    .LoadData()
                    .Listeners(l =>
                    {
                        l.TriggerClick.Fn = "Event.Form.btnHideTrigger_click";
                    })
                    , HQ.NumberField().DecimalPrecision(0).ReadOnly(true).ID("txtTotQty").Name("txtTotQty").HQLangCode("QUANTITYTOTAL").EmptyText("0").Tag("X")
                     , HQ.NumberField().DecimalPrecision(0).ReadOnly(true).ID("txtTotAmt").Name("txtTotAmt").HQLangCode("TOTAMT").EmptyText("0").Tag("X")

                    ) //end Four Column 
                                               
                ) // pnlHeader 
                //        , X.Container().Layout(LayoutType.HBox).Items(
                //            //X.Image().ID("imgo").CellCls("rơ").Width(20).Height(20).MarginSpec("3 0 0 10"), X.Label().Text(Util.GetLang("PS00010Blue")).Width(200).MarginSpec("3 0 0 0")
                //            //, X.Image().AddCls("row-red").Width(20).Height(20).MarginSpec("3 0 0 10"), X.Label().Text(Util.GetLang("PS00010Red")).Width(200).MarginSpec("3 0 0 0")
                //            //, X.Image().AddCls("row-yellow").Width(20).Height(20).MarginSpec("3 0 0 10"), X.Label().Text(Util.GetLang("PS00010Yellow")).Width(200).MarginSpec("3 0 0 0")
                //            //, X.Image().AddCls("row-pink").Width(20).Height(20).MarginSpec("3 0 0 10"), X.Label().Text(Util.GetLang("PS00010White")).Width(200).MarginSpec("3 0 0 0")
                //            )
                //)               
                , X.GridPanel().ID("grdDet")
                .Region(Region.Center)
                .Scroll(ScrollMode.Both)                
                .View(X.GridView().GetRowClass(function => function.Fn = "getRowClass"))
                .SortableColumns(true)
                .Store(X.Store().ID("stoDet")
                    .AutoLoad(false).PageSize(50)
                    .Model(Util.GenerateModel(typeof(PO10400_pgLoadPOHeader_Result), "mdlDet", ""))       
                    .ServerProxy(
                        X.AjaxProxy()                
                        .Url(Url.Action("GetDet", "PO10400"))
                        .ActionMethods(action =>
                        {
                            action.Read = HttpMethod.POST;
                        })
                        .Reader(X.JsonReader().Root("data").TotalProperty("totaldata"))
                    )
                    .Listeners(l =>
                        {
                            l.Update.Fn = "Other.calQtyAmt";
                            l.BeforeLoad.Handler = "HQ.common.showBusy(true, HQ.common.getLang('loadingdata'));";
                            l.Load.Handler = "HQ.common.showBusy(false)";
                         })
                    .Parameters(ps =>
                    {              
                        ps.Add(new StoreParameter("cpnyID", "App.cboBranchID.getValue().join(',')", ParameterMode.Raw));               
                        ps.Add(new StoreParameter("fromDate", "App.dtpFromDate.getValue()", ParameterMode.Raw));
                        ps.Add(new StoreParameter("todate", "App.dtpToDate.getValue()", ParameterMode.Raw));
                        ps.Add(new StoreParameter("status", "App.cboStatusFilter.getValue().join(',')", ParameterMode.Raw));
                    }))
                    
                .SelectionMemory(false)
                .ColumnModel(
                    X.RowNumbererColumn()
                    , Html.X().ImageCommandColumn().Text(Util.GetLang("")).Locked(true)
                                .Width(30)
                                .Commands(
                                    Html.X().ImageCommand()
                                        .Icon(Icon.ApplicationViewColumns)
                                        .ToolTip(t =>
                                        {
                                            t.Text = Util.GetLang("EditPONbr");
                                        })
                                        .CommandName("Edit")
                                )
                                 .Listeners(l => {
                                                    l.Command.Handler = "Other.loadPopup(record);";
                                                })
                    , X.CheckColumn().HideTitleEl(true).DataIndex("Selected").Locked(true)
                        .Align(Alignment.Center).Width(30).Editable(true)
                        .HeaderItems(
                            HQ.Checkbox().ID("chkSelectHeader")
                            .Handler("Event.Grid.chkSelectHeader_click")
                        )
                   
                    , X.Column().Text(Util.GetLang("BranchID")).DataIndex("BranchID").Locked(true)
                    , X.Column().Text(Util.GetLang("BranchName")).DataIndex("BranchName").Locked(true)
                    , X.Column().Text(Util.GetLang("PONbr")).DataIndex("PONbr").Locked(true)
                    , HQ.DateColumn().Text(Util.GetLang("PODate")).DataIndex("PODate")
                    , HQ.DateColumn().Text(Util.GetLang("ShipmentPlan")).DataIndex("ShipmentPlan")
                    , X.Column().Text(Util.GetLang("Shipping Address")).DataIndex("ShipAddr1")
                    , X.Column().Text(Util.GetLang("SlsPerID")).DataIndex("SlsPerID")
                    , X.Column().Text(Util.GetLang("SlsperName")).DataIndex("Name") 
                    , X.Column().Text(Util.GetLang("ShipDistAddrID")).DataIndex("ShipDistAddrID")
                    , X.Column().Text(Util.GetLang("ShipDistAddrName")).DataIndex("ShipDistAddrName")                                            
                    //, X.Column().Text(Util.GetLang("POTypeDescr")).DataIndex("POType").Renderer("Process.renderPOType")
                    , X.Column().Text(Util.GetLang("Status")).DataIndex("Status").Renderer("Process.renderStatus")
                    //, X.Column().Text(Util.GetLang("ReasonRSM")).DataIndex("ReasonRSM").Hidden(true)                               
                    , X.NumberColumn().Align(Alignment.Right).Text(Util.GetLang("TotQty")).DataIndex("TotalQty").Format("0,000,000")
                    , X.NumberColumn().Align(Alignment.Right).Text(Util.GetLang("TxblAmt")).DataIndex("TxblAmt").Format("0,000,000")
                    , X.NumberColumn().Align(Alignment.Right).Text(Util.GetLang("TaxAmt")).DataIndex("TaxAmt").Format("0,000,000")
                    , X.NumberColumn().Align(Alignment.Right).Text(Util.GetLang("TotAmt")).DataIndex("TotAmt").Format("0,000,000")
                   
                )
                .SelectionModel(X.RowSelectionModel().ID("slmDet").Mode(SelectionMode.Single))
                .Plugins(
                    X.CellEditing()
                    .ClicksToEdit(1)
                    .Listeners(ls =>
                    {
                        ls.BeforeEdit.Fn = "Event.Grid.grdDet_beforeEdit";
                    })
                )
                .BottomBar(
                        X.PagingToolbar().ID("pg")
                        .Items(
                            X.Label("Pagesize:"),
                            X.ToolbarSpacer(10),
                            X.ComboBox()
                            .Width(80)
                            .Items("1", "2", "10", "20", "30", "50")
                            .SelectedItems("50")
                            .Listeners(l =>
                                {
                                    l.Select.Fn = "HQ.grid.onPageSelect";
                                })
                        )
                        .Plugins(X.ProgressBarPager().ID("pagDetail"))
                    )
            .Features(
                        X.GridFilters()
                        .Local(true)
                        .Filters(
                            X.StringFilter().DataIndex("BranchID"),
                            X.StringFilter().DataIndex("BranchName"),
                            X.StringFilter().DataIndex("PONbr"),
                            X.DateFilter().DataIndex("PODate"),
                            X.StringFilter().DataIndex("ShipmentPlan"),
                            X.StringFilter().DataIndex("ShipAddr1"),
                            //X.StringFilter().DataIndex("POType"),
                            X.StringFilter().DataIndex("Status"),
                            X.NumericFilter().DataIndex("TotalQty"),
                            X.NumericFilter().DataIndex("TxblAmt"),
                            X.NumericFilter().DataIndex("TaxAmt"),
                            X.NumericFilter().DataIndex("TotAmt")
                        ))
                    // grdDet
        )
        .Listeners(lst =>
        {
            lst.BoxReady.Fn = "Event.Form.frmMain_boxReady";
            //lst.FieldChange.Fn = "Event.Form.frmMain_fieldChange";
        })
                     
    )// Form: frmMain
)
  @(X.ToolTip().Target("App.grdDet.getView().el")
        .Delegate(".x-grid-cell")
        .TrackMouse(true)
        .Listeners(lst => lst.Show.Handler = "onShowTooltip(this, App.grdDet,true);") )
@(X.Window()
        .ID("winDetail")
        .Title(Util.GetLang("EditPONbr"))
        .Icon(Icon.Application)
        .Maximized(true)
        .Modal(true)
        .Hidden(true)
        .Layout(LayoutType.Fit)
        .Listeners(p =>
            {
                p.Show.Fn = "Popup.loadSourcePopup";
                p.Close.Fn = "Popup.close";
                p.BeforeClose.Fn = "Popup.winDetail_BeforeClose";
            })
        .Loader(X.ComponentLoader()
            .Url("")
            .Mode(LoadMode.Frame)
            .LoadMask(lm => lm.ShowMask = true)
        )
)
        
@(X.Window()
        .ID("winDetailold")
        .Title(Util.GetLang("EditPONbr"))
        .Icon(Icon.Application)
        .Maximized(true)
        .Modal(true)
        .Hidden(true)
        .Layout(LayoutType.Fit)
        .Listeners(p =>
            {
                p.Show.Fn = "Popup.loadSourcePopup";
                p.Close.Fn = "Popup.close";
                p.BeforeClose.Fn = "Popup.winDetail_BeforeClose";
            })
        .Items(
            X.FormPanel()
                .Layout(LayoutType.Border)
                .ID("frmDetail")
                .TrackResetOnLoad(true)
                .KeyMap(Util.SetupKeyMap("Popup.menufrmDetail_Click"))
                .TopBar(Util.SetupToolbar("print", true, "Popup.menufrmDetail_Click"))//save,close,
               // .TopBar(Util.SetupToolbar("PO10400",, handlerName: "Popup.menufrmDetail_Click"))
                .FieldDefaults(act => { act.LabelAlign = LabelAlign.Right; })
                .Listeners(l =>
                                {                                               
                                l.FieldChange.Fn = "Popup.frmChange";
                            })
                .Items(
                // CAC PHAN TREN GIU NGUYEN, GIAO DIEN THIET KE O DAY 
                  X.Panel().ID("frmDetailpnlHeader").Layout(LayoutType.VBox).Region(Region.North).Border(false).AutoScroll(true)
                    .Listeners(lst =>
                        {
                            lst.Render.Handler = "HQ.common.control_render(this,'header')";
                            //lst.Resize.Handler = "App.tabfrmDetail.setAnchor(\"100% -\" + App.frmDetailpnlHeader.getHeight());";
                        })//focus header        
                    .Items(
                            X.Container().Layout(LayoutType.HBox).Items(
                               HQ.TextBox().ID("txtBranchID").Name("txtBranchID").ReadOnly(true).MaxLength(30).HQLangCode("BranchID").LabelWidth(110).InputWidth(150).MarginSpec("3 0 0 0").Tag("X")
                                , HQ.NumberField().DecimalPrecision(0).AllowDecimals(true).ReadOnly(true).ID("txtCA").Name("txtCA").HQLangCode("CAEA").LabelWidth(110).InputWidth(50).AllowBlank(false).MarginSpec("3 0 0 0").Tag("X")
                                , HQ.NumberField().DecimalPrecision(0).ReadOnly(true).ID("txtEA").Name("txtEA").HQLangCode("/").LabelSeparator("").LabelWidth(5).HideLabel(false).InputWidth(50).AllowBlank(false).MarginSpec("3 0 0 0").Tag("X")
                                , HQ.NumberField().DecimalPrecision(0).ReadOnly(true).ID("POFeeTot").Name("POFeeTot").HQLangCode("POFEETOT").LabelWidth(110).InputWidth(110).AllowBlank(false).MarginSpec("3 0 0 0").Tag("X")
                                , HQ.Combo().ID("POType").Name("POType").AllowBlank(false).MarginSpec("3 0 0 0").LabelWidth(130).InputWidth(110).Tag("X").ReadOnly(true)
                                                        .HQLangCode("POType").HQDBSys(false).HQProcedure("PO10400_pcPOType")
                                                        .HQColumnShow("Descr").ForceSelection(true)
                                                        .DisplayField("Descr")
                                                        .ValueField("Code")
                                                        .HQHeightWidth(400, 300)
                                                        .HQParam(new StoreParameterCollection() {
                                                                        new StoreParameter() { Name = "@LangID",Value = "HQ.langID", Mode = ParameterMode.Raw}
                                                    })
                                                        .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                                                        .Listeners(lst => { lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}"; })
                                                        .LoadData()

                                )
                            , X.Container().Layout(LayoutType.HBox).Items(
                                HQ.TextBox().ID("txtBranchName").Name("txtBranchName").ReadOnly(true).MaxLength(400).HQLangCode("BranchName").LabelWidth(110).InputWidth(375).MarginSpec("3 0 0 0").Tag("X")
                                , HQ.NumberField().DecimalPrecision(0).AllowDecimals(true).ReadOnly(true).ID("txtRcptTotAmt").Name("txtRcptTotAmt").HQLangCode("TXBLAMT").LabelWidth(110).InputWidth(110).AllowBlank(false).MarginSpec("3 0 0 0").Tag("X")
                                , HQ.Combo().ID("BlktPONbr").Name("BlktPONbr").MarginSpec("3 0 0 0").LabelWidth(130).InputWidth(110).HQLangCode("BlktPONbr").Tag("X").ReadOnly(true)
                                                            

                                )
                            , X.Container().Layout(LayoutType.HBox).Items(
                                HQ.TextBox().ID("txtPONbr").Name("txtPONbr").MarginSpec("3 0 0 0").HQLangCode("PONbr").LabelWidth(110).InputWidth(150).Tag("X").ReadOnly(true)
                                , HQ.Combo().ID("cboStatus").DataIndex("Status").Name("cboStatus").MarginSpec("3 0 0 0").LabelWidth(110).InputWidth(110)
                                                        .HQLangCode("Status").HQDBSys(false).HQProcedure("PO10400_pcStatus").ForceSelection(false)
                                                        .HQColumnShow("Descr").ReadOnly(true).Tag("X")
                                                        .DisplayField("Descr")
                                                        .ValueField("Code")
                                                        .HQHeightWidth(400, 400)
                                                        .HQParam(new StoreParameterCollection() {
                                                                        new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw}
                                                                        ,new StoreParameter() { Name = "@UserID", Value = "HQ.userName", Mode = ParameterMode.Raw}                                                               
                                                    })
                                                        .Listeners(lst => { lst.Change.Fn = "Popup.cboStatus_Change"; })
                                                        .LoadData()

                                , HQ.NumberField().DecimalPrecision(0).ReadOnly(true).ID("DISCOUNT").Name("DISCOUNT").HQLangCode("DISCOUNT").LabelWidth(110).InputWidth(110).AllowBlank(false).MarginSpec("3 0 0 0").Tag("X")
                                , HQ.TextBox().ID("ReqNbr").Name("ReqNbr").MaxLength(20).HQLangCode("ReqNbr").LabelWidth(130).InputWidth(110).MarginSpec("3 0 0 0").Tag("X").ReadOnly(true)
                                )
                            , X.Container().Layout(LayoutType.HBox).Items(
                                HQ.TextBox().ID("txtVendID").AllowBlank(false).HQLangCode("VendID").Name("txtVendID").MarginSpec("3 0 0 0").LabelWidth(110).InputWidth(150).Tag("X").ReadOnly(true)

                                , HQ.Combo().ID("cboHandle").Name("Handle").MarginSpec("3 0 0 0").LabelWidth(110).InputWidth(110)
                                                        .HQLangCode("Handle").HQDBSys(false).HQProcedure("PO10400_pcHandle").ForceSelection(true)
                                                        .HQColumnShow("Descr")
                                                        .DisplayField("Descr")
                                                        .ValueField("Code")                                                      
                                                        .HQHeightWidth(400, 300).ForceSelection(true)
                                                        .HQParam(new StoreParameterCollection() {
                                                                        new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw}
                                                                        ,new StoreParameter() { Name = "@UserID", Value = "HQ.userName", Mode = ParameterMode.Raw}                                                             
                                                                        ,new StoreParameter() { Name = "@Status", Value = "App.cboStatus.getValue()", Mode = ParameterMode.Raw}
                                                    })
                                                        .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                                                        .Listeners(lst =>
                                                            {
                                                                lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                                                                lst.Focus.Handler = "this.forceSelection = true;";
                                                            })
                                                        .LoadData()
                                , HQ.NumberField().DecimalPrecision(0).ReadOnly(true).ID("TAX").Name("TAX").HQLangCode("TAX").LabelWidth(110).InputWidth(110).AllowBlank(false).MarginSpec("3 0 0 0").Tag("X")
                                , HQ.NumberField().DecimalPrecision(0).ReadOnly(true).ID("EXTVOL").Name("EXTVOL").HQLangCode("EXTVOL").LabelWidth(130).InputWidth(110).AllowBlank(false).MarginSpec("3 0 0 0").Tag("X")
                                )
                                , X.Container().Layout(LayoutType.HBox).MarginSpec("3 0 3 0").Items(
                                    HQ.DateField().ID("dtPODate").Name("PODate").AllowBlank(false).HQLangCode("PODate").LabelWidth(110).InputWidth(150).AllowBlank(false).Tag("X").ReadOnly(true)

                                    , X.Container().Width(225)
                                    , HQ.NumberField().DecimalPrecision(0).ID("POAmt").Name("POAmt").HQLangCode("TOTAMT").LabelWidth(110).InputWidth(110).AllowBlank(false).Tag("X").ReadOnly(true)
                                    , HQ.NumberField().DecimalPrecision(0).ID("EXTWEIGHT").Name("EXTWEIGHT").HQLangCode("EXTWEIGHT").LabelWidth(130).InputWidth(110).AllowBlank(false).Tag("X").ReadOnly(true)
                                )
                            )//Header                                                       
                            , X.TabPanel()
                                .Layout(LayoutType.Fit)
                                .Region(Region.Center)                               
                                .ID("tabfrmDetail")
                                .Items(
                                        X.Panel()
                                        .ID("tabLineItem")
                                        .Layout(LayoutType.Fit)
                                        .Title(Util.GetLang("LINRITEM"))
                                        .Padding(5)
                                        .Items(

                                               Html.X().GridPanel()
                                                .Flex(1)
                                                .AutoScroll(true)
                                                .SortableColumns(false)
                                                .ID("grdDetail")
                                                .SelectionMemory(false)
                                                .Listeners(lst =>
                                                    {
                                                        lst.Render.Handler = "HQ.common.control_render(this,'grdDetail')";                                                       
                                                    })//focus grdDetail                                     
                                                .View(X.GridView().TrackOver(false).GetRowClass(function => function.Fn = "getRowClass"))
                                                .Store(
                                                        X.Store().ID("stoPO10400_pgDetail").AutoLoad(false)
                                                        .PageSize(50)
                                                        .Model(Util.GenerateModel(typeof(PO10400_pgDetail_Result), "mdlPO10400_pgDetailModel", "PurchaseType,InvtID", true))
                                                        .Listeners(l =>
                                                            {
                                                                l.Load.Fn = "Popup.loadDataDetail";
                                                                l.DataChanged.Fn = "Popup.stoChanged";
                                                            })
                                                        .ServerProxy(
                                                                X.AjaxProxy()
                                                                .Url(Url.Action("GetPO10400_pgDetail", "PO10400"))

                                                                                                    )
                                                        .Parameters(ps =>
                                                                        {
                                                                            ps.Add(new StoreParameter("branchID", "App.txtBranchID.getValue()", ParameterMode.Raw));
                                                                            ps.Add(new StoreParameter("pONbr", "App.txtPONbr.getValue()", ParameterMode.Raw));
                                                                        })
                                                              )
                                                .ColumnModel(
                                                Html.X().RowNumbererColumn()
                                                , Html.X().Column().Text(Util.GetLang("PurchaseType")).DataIndex("PurchaseType").Renderer("Popup.renderPurchaseType")
                                                                                    .Editor(HQ.Combo().ID("PurchaseType").Name("PurchaseType").HideLabel(true).LabelWidth(0)
                                                                                            .HQDBSys(false).HQProcedure("PO10400_pcPurchaseType").ForceSelection(true)
                                                                                            .HQColumnShow("Descr")
                                                                                            .DisplayField("Descr")
                                                                                            .ValueField("Code")
                                                                                            .HQHeightWidth(400, 300)
                                                                            .HQParam(new StoreParameterCollection() {
                                                                                        new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw}
                                                                    })
                                                                            .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                                                                                            .Listeners(lst => { lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}"; })
                                                                                            .LoadData()
                                                                                            )
                                                , Html.X().Column().Text(Util.GetLang("InvtID")).DataIndex("InvtID")
                                                                                    .Editor(HQ.Combo().ID("cboInvtID").Name("InvtID").HideLabel(true).LabelWidth(0).ForceSelection(true)
                                                                                            .HQDBSys(false).HQProcedure("PO10400_pcInventoryActive")
                                                                                            .HQColumnShow("InvtID,Descr")
                                                                                            .DisplayField("InvtID")
                                                                                            .ValueField("InvtID")
                                                                                            .HQHeightWidth(400, 300).Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                                                .HQParam(new StoreParameterCollection() {
                                                    new StoreParameter() { Name = "@UserName", Value = "HQ.userName", Mode = ParameterMode.Raw},
                                                    new StoreParameter() { Name = "@CpnyID", Value = "HQ.cpnyID", Mode = ParameterMode.Raw},
                                                    new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw}
                                                })
                                                                                            .Listeners(lst =>
                                                                                            {
                                                                                                lst.Change.Fn = "Popup.cboGInvtID_Change";
                                                                                                lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                                                                                            })
                                                                                            .LoadData()
                                                                                            )
                                                , Html.X().Column().Text(Util.GetLang("TranDesc")).DataIndex("TranDesc").Width(150).Editor(Html.X().TextField().MaxLength(100100))
                                                , Html.X().Column().Text(Util.GetLang("SiteID")).DataIndex("SiteID").Renderer("Popup.renderSiteID")
                                                                                    .Editor(HQ.Combo().ID("cboSiteID").Name("SiteID").HideLabel(true).LabelWidth(0)
                                                                                            .HQDBSys(false).HQProcedure("PO10400_pcSiteAll").ForceSelection(true)
                                                                                            .HQColumnShow("SiteID,Name")
                                                                                            .DisplayField("Name")
                                                                                            .ValueField("SiteID")
                                                                                            .HQHeightWidth(400, 300)
                                                                            .HQParam(new StoreParameterCollection() {
                                                                                        new StoreParameter() { Name = "@BranchID", Value = "App.txtBranchID.getValue()", Mode = ParameterMode.Raw}											                          
                                                                    })
                                                                            .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                                                                                            .Listeners(lst => { lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}"; })
                                                                                            .LoadData()
                                                                                            )
                                                , Html.X().NumberColumn().Align(Alignment.Right).Text(Util.GetLang("QtyOrd")).DataIndex("QtyOrd").Width(110).Format("0,000,000").Editor(Html.X().NumberField().DecimalPrecision(0))

                                                , Html.X().Column().Text(Util.GetLang("PurchUnit")).DataIndex("PurchUnit")
                                                                                    .Editor(HQ.Combo().ID("cboPurchUnit").Name("PurchUnit").HideLabel(true).LabelWidth(0)
                                                                                            .HQDBSys(false).HQProcedure("PO10400_pcINUnit_Invt_Class_From_To").HQValue("_purUnit", true)
                                                                                            .HQColumnShow("FromUnit").ForceSelection(true)
                                                                                            .DisplayField("FromUnit")
                                                                                            .ValueField("FromUnit")
                                                                                            .HQHeightWidth(400, 300)
                                                                            .HQParam(new StoreParameterCollection() {
                                                                                        new StoreParameter() { Name = "@ClassID", Value = "_classID", Mode = ParameterMode.Raw}
                                                                                        ,new StoreParameter() { Name = "@StkUnit", Value = "_stkUnit", Mode = ParameterMode.Raw}
                                                                                        ,new StoreParameter() { Name = "@InvtID", Value = "_invtID", Mode = ParameterMode.Raw}											                          
                                                                    })
                                                                            .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                                                                                            .Listeners(lst => { lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}"; })
                                                                                            .LoadData()
                                                                                            )
                                                , Html.X().NumberColumn().Align(Alignment.Right).Text(Util.GetLang("UnitCost")).DataIndex("UnitCost").Width(130).Format("0,000,000").Editor(Html.X().NumberField().DecimalPrecision(0))
                                                , Html.X().NumberColumn().Align(Alignment.Right).Text(Util.GetLang("DiscPct")).DataIndex("DiscPct").Width(130).Format("0,000,000.00").Editor(Html.X().NumberField().DecimalPrecision(2))
                                                , Html.X().NumberColumn().Align(Alignment.Right).Text(Util.GetLang("DiscAmt")).DataIndex("DiscAmt").Width(130).Format("0,000,000.00").Editor(Html.X().NumberField().DecimalPrecision(2))
                                                , Html.X().NumberColumn().Align(Alignment.Right).Text(Util.GetLang("ExtCost")).DataIndex("ExtCost").Width(130).Format("0,000,000").Editor(Html.X().NumberField().DecimalPrecision(0))
                                                , Html.X().Column().Text(Util.GetLang("TaxCat")).DataIndex("TaxCat").Width(0)
                                                                                    .Editor(HQ.Combo().ForceSelection(true).ID("TaxCat").Name("TaxCat").HideLabel(true).LabelWidth(0)
                                                                                            .HQDBSys(false).HQProcedure("PO10400_pcTaxCat")
                                                                                            .HQColumnShow("CatID").ForceSelection(true)
                                                                                            .DisplayField("CatID")
                                                                                            .ValueField("CatID")
                                                                                            .HQHeightWidth(400, 300).Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                                                                                            .Listeners(lst => { lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}"; })
                                                                                            .LoadData()
                                                                                            )
                                                , Html.X().Column().Text(Util.GetLang("TaxID")).DataIndex("TaxID").Width(0)
                                                                                    .Editor(HQ.Combo().ID("cboTaxID").Name("TaxID").HideLabel(true).LabelWidth(0)
                                                                                            .HQDBSys(false).HQProcedure("PO10400_pdAP_VenDorTaxes").HQAutoLoad(false)
                                                                                            .HQColumnShow("taxid").MultiSelect(true)
                                                                                            .DisplayField("taxid").ForceSelection(true)
                                                                                            .ValueField("taxid")
                                                                                            .HQHeightWidth(400, 300)
                                                                            .HQParam(new StoreParameterCollection() {
                                                                                        new StoreParameter() { Name = "@VendID", Value = "App.txtVendID.getValue()", Mode = ParameterMode.Raw}
                                                                                        ,new StoreParameter() { Name = "@OrdFromId", Value = "", Mode = ParameterMode.Value}
                                                                    })
                                                                            .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                                                                                            .Listeners(lst => { lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}"; })
                                                                                            .LoadData()
                                                                                            )
                                                , Html.X().NumberColumn().Align(Alignment.Right).Text(Util.GetLang("POFee")).Hidden(true).DataIndex("POFee").Width(130).Format("0,000,000").Editor(HQ.NumberField())
                                                , Html.X().NumberColumn().Align(Alignment.Right).Text(Util.GetLang("UnitWeight")).DataIndex("UnitWeight").Width(130).Format("0,000,000").Editor(HQ.NumberField().DecimalPrecision(0))
                                                , Html.X().NumberColumn().Align(Alignment.Right).Text(Util.GetLang("ExtWeight")).DataIndex("ExtWeight").Width(130).Format("0,000,000")//.Editor(HQ.NumberField())
                                                , Html.X().NumberColumn().Align(Alignment.Right).Text(Util.GetLang("UnitVolume")).DataIndex("UnitVolume").Width(130).Format("0,000,000").Editor(HQ.NumberField().DecimalPrecision(0))
                                                , Html.X().NumberColumn().Align(Alignment.Right).Text(Util.GetLang("ExtVolume")).DataIndex("ExtVolume").Width(130).Format("0,000,000")//.Editor(HQ.NumberField())

                                                , HQ.DateColumn().Text(Util.GetLang("ReqdDate")).DataIndex("ReqdDate").Width(90).Editor(HQ.DateField())
                                                , HQ.DateColumn().Text(Util.GetLang("PromDate")).DataIndex("PromDate").Width(90).Editor(HQ.DateField())
                                                , Html.X().Column().Text(Util.GetLang("VouchStage")).DataIndex("VouchStage").Renderer("Popup.renderVouchStage").Width(140)
                                                    .Editor(HQ.Combo().ID("VouchStage").Name("VouchStage").HideLabel(true).LabelWidth(0)
                                                            .HQDBSys(false).HQProcedure("PO10400_pcVouchStage")
                                                            .HQColumnShow("Descr").ForceSelection(true)
                                                            .DisplayField("Descr")
                                                            .ValueField("Code")
                                                            .HQHeightWidth(400, 300)
                                                    .HQParam(new StoreParameterCollection() {
                                                            new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw}
                                                    })
                                                    .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                                                        .Listeners(lst => { lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}"; })
                                                        .LoadData()
                                                    )
                                                , Html.X().Column().Text(Util.GetLang("RcptStage")).DataIndex("RcptStage").Renderer("Popup.renderRcptStage").Width(140)
                                                        .Editor(HQ.Combo().ID("RcptStage").Name("RcptStage").HideLabel(true).LabelWidth(0)
                                                                .HQDBSys(false).HQProcedure("PO10400_pcRcptStage")
                                                                .HQColumnShow("Descr").ForceSelection(true)
                                                                .DisplayField("Descr")
                                                                .ValueField("Code")
                                                                .HQHeightWidth(400, 300)
                                                        .HQParam(new StoreParameterCollection() {
                                                            new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw}
                                                        })
                                                        .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                                                            .Listeners(lst => { lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}"; })
                                                            .LoadData()
                                                        )


                                            , Html.X().CommandColumn().Width(70).Commands(Html.X().GridCommand().Text(Util.GetLang("Reject"))
                                                                                    .ToolTip(t =>
                                                                                    {
                                                                                        t.Text = Util.GetLang("Rejectrowchanges");
                                                                                    })
                                                                                    .CommandName("reject")
                                                                                    .Icon(Icon.ArrowUndo)
                                                                                    )
                                                                                    .PrepareToolbar(t =>
                                                                                    {
                                                                                        t.Handler = "toolbar.items.get(0).setVisible(record.dirty);";
                                                                                    })
                                                                                    .Listeners(l =>
                                                                                    {
                                                                                        l.Command.Handler = "Popup.grdPO_Detail_Reject(record);";
                                                                                    })
                                                                                )
                                                                .SelectionModel(Html.X().RowSelectionModel().ID("slmPO_Detail").Mode(SelectionMode.Single))
                                                                .Plugins(
                                                                    X.CellEditing()
                                                                    .ClicksToEdit(1)
                                                                    .Listeners(ls =>
                                                                    {
                                                                        ls.BeforeEdit.Fn = "Popup.grdPO_Detail_BeforeEdit";
                                                                        ls.Edit.Fn = "Popup.grdPO_Detail_Edit";
                                                                        ls.ValidateEdit.Fn = "Popup.grdPO_Detail_ValidateEdit";

                                                                    })
                                                                )
                                                                .BottomBar(
                                                                        X.PagingToolbar()
                                                                        .Items(
                                                                            X.Label("Pagesize:"),
                                                                            X.ToolbarSpacer(10),
                                                                            X.ComboBox().ID("cboPageSize").Name("cboPageSize")
                                                                            .Width(80)
                                                                            .Items("1", "2", "10", "20", "30", "50")
                                                                            .SelectedItems("50")
                                                                            .Listeners(l =>
                                                                                {
                                                                                    l.Select.Fn = "HQ.grid.onPageSelect";
                                                                                })
                                                                        )
                                                                        .Plugins(X.ProgressBarPager().ID("pagfrmDetail"))
                                                                    )
                                    )//tab tabLineItem
                                    , X.Panel()
                                    .ID("tabTax").AutoScroll(true)
                                    .Layout(LayoutType.VBox)
                                    .LayoutConfig(config => { config.Add(new VBoxLayoutConfig() { Align = VBoxAlign.Stretch }); })
                                    .Title(Util.GetLang("TAX"))
                                    .Padding(5)
                                    .Items(

                                        Html.X().GridPanel()
                                                       .Flex(1)
                                                        .ID("grdTaxTrans")
                                                        .StoreID("stoPO10400_pgLoadTaxTrans")
                                                        .ColumnModel(
                                                                        Html.X().RowNumbererColumn()
                                                                        , Html.X().Column().Text(Util.GetLang("LineRef")).DataIndex("LineRef").Width(150)
                                                                        , Html.X().Column().Text(Util.GetLang("TaxID")).DataIndex("TaxID").Width(150)
                                                                        , Html.X().NumberColumn().Align(Alignment.Right).Text(Util.GetLang("TxblAmt")).DataIndex("TxblAmt").Width(150).Format("0,000,000")
                                                                        , Html.X().NumberColumn().Align(Alignment.Right).Text(Util.GetLang("TaxAmt")).DataIndex("TaxAmt").Width(150).Format("0,000,000.00")
                                                                        , Html.X().NumberColumn().Align(Alignment.Right).Text(Util.GetLang("TaxRate")).DataIndex("TaxRate").Width(150).Format("0,000,000")
                                                                        , Html.X().Column().Text(Util.GetLang("TaxLevel")).DataIndex("TaxLevel").Width(150)
                                                                    )

                                        , X.BoxSplitter()
                                        , Html.X().GridPanel()
                                                       .Flex(1)
                                                        .ID("grdTaxDoc")
                                                        .Store(
                                                                  Html.X().Store()
                                                                      .ID("stoPO10400_LoadTaxDoc")
                                                                      .Model(
                                                                          Util.GenerateModel(typeof(PO10400_pgLoadTaxTrans_Result), "mdlPO10400_pgLoadTaxTransDoc", "")
                                                                      )
                                                              )
                                                        .ColumnModel(
                                                                        Html.X().RowNumbererColumn()
                                                                        , Html.X().Column().Text(Util.GetLang("TaxID")).DataIndex("TaxID").Width(150)
                                                                        , Html.X().NumberColumn().Align(Alignment.Right).Text(Util.GetLang("TxblAmt")).DataIndex("TxblAmt").Width(150).Format("0,000,000")
                                                                        , Html.X().NumberColumn().Align(Alignment.Right).Text(Util.GetLang("TaxAmt")).DataIndex("TaxAmt").Width(150).Format("0,000,000")
                                                                        , Html.X().NumberColumn().Align(Alignment.Right).Text(Util.GetLang("TaxRate")).DataIndex("TaxRate").Width(150).Format("0,000,000")


                                                                    )


                                        )//tabTax                                                                                                         

                                  )//tab detail
                        )
            )
)

