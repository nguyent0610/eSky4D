@using Ext.Net;
@using Ext.Net.MVC;
@using eBiz4DWebFrame;
@using eBiz4DWebFrame.HQControl;
@using PO20100;

@model System.Collections.IEnumerable

@{
    Layout = null;
    var X = Html.X();
    var HQ = Html.HQ();
    var acc = Session["PO20100"] as AccessRight;
    
}



 <script src='@Url.Content("Scripts/common.js")' type="text/javascript"></script>

<script >
    var paramInvtID = "";
    var focus = '0';
    var isUpdate = strToBool('@acc.Update.ToString()');
    var isInsert = strToBool('@acc.Insert.ToString()');
    var isDelete = strToBool('@acc.Delete.ToString()');
    var recentRecord = null;
    function Save() {       
        App.dataForm.getForm().updateRecord();
        if (App.dataForm.isValid()) {
            App.dataForm.submit({
                waitMsg: 'Submiting...',
                url: 'PO20100/Save',
                params: {

                    lstPOPriceHeader: Ext.encode(App.storePOPriceHeader.getChangedData({ skipIdForPhantomRecords: false })),
                    lstPOPrice: Ext.encode(App.storePOPrice.getChangedData({ skipIdForPhantomRecords: false })),
                    lstPOPriceCpny: Ext.encode(App.storePOPriceCpny.getChangedData({ skipIdForPhantomRecords: false }))
                },
                success: function (data) {
                    var PriceID = App.cboPriceID.getValue();
                    App.cboPriceID.getStore().load();                    
                    App.cboPriceID.setValue(PriceID);
                    menuClick("refresh");
                },

                failure: function () {
                }
            });
        }
    }
    function Delete(item) {
        if (item == 'yes') {
            App.direct.Delete(App.cboPriceID.getValue(), {
                success: function () {
                    App.cboPriceID.getStore().load();
                    App.cboPriceID.setValue('');
                    menuClick('new');
                },
                eventMask: { msg: '@Util.GetLang("DeletingData")', showMask: true }
                });
            }
    };
   
    var menuClick = function (command) {
        switch (command) {
            case "first":
                if (focus == 'POPriceHeader') {
                    App.cboPriceID.setValue(App.cboPriceID.getStore().first().get('PriceID'));                  
                }
                else if (focus == 'POPrice') {
                    App.SelectModelPOPrice.select(0);
                } else if (focus == 'POPriceCpny') {
                    App.SelectModelPOPriceCpny.select(0);
                    
                }
                break;
            case "next":
                if (focus == 'POPriceHeader') {
                    var index = App.cboPriceID.getStore().indexOf(App.cboPriceID.getStore().getById(App.cboPriceID.getValue()));
                    App.cboPriceID.setValue(App.cboPriceID.getStore().getAt(index + 1).get('PriceID'));
                }
                else if (focus == 'POPrice') {
                    App.SelectModelPOPrice.selectNext();
                } else if (focus == 'POPriceCpny') {
                    App.SelectModelPOPriceCpny.selectNext();
                }
                break;
            case "prev":
                if (focus == 'POPriceHeader') {
                    var index = App.cboPriceID.getStore().indexOf(App.cboPriceID.getStore().getById(App.cboPriceID.getValue()));
                    App.cboPriceID.setValue(App.cboPriceID.getStore().getAt(index - 1).get('CpnyID'));
                }
                else if (focus == 'POPrice') {
                    App.SelectModelPOPrice.selectPrevious();
                } else if (focus == 'POPriceCpny') {
                    App.SelectModelPOPriceCpny.selectPrevious();
                }
                break;
            case "last":
                if (focus == 'POPriceHeader') {
                    App.cboPriceID.setValue(App.cboPriceID.getStore().last().get('PriceID'));
                }
                else if (focus == 'POPrice') {
                    App.SelectModelPOPrice.select(App.storePOPrice.data.items.length-1);
                } else if (focus == 'POPriceCpny') {
                    App.SelectModelPOPriceCpny.select(App.storePOPriceCpny.data.items.length-1);
                }
                break;
            case "save":
                Save();
                break;
            case "delete":
                if (focus == 'POPriceHeader') {
                    if (App.cboPriceID.value) {
                        if (isDelete) {
                            callMessage(11, '', 'Delete');
                        }
                    } else {
                        menuClick('new');
                    }
                } else if (focus == 'POPrice') {
                    if ((App.cboPriceID.value && isUpdate && isDelete) || (!App.cboPriceID.value && isInsert)) {
                        App.grdPOPrice.deleteSelected();
                    }
                } else if (focus == 'POPriceCpny') {
                    if ((App.cboPriceID.value && isUpdate && isDelete) || (!App.cboPriceID.value && isInsert)) {
                        App.grdPOPriceCpny.deleteSelected();
                    }
                }
                break;
            case "close":
                if (App.dataForm.getRecord()!= undefined) App.dataForm.updateRecord();
                if (storeIsChange(App.storePOPriceHeader,false) || storeIsChange(App.storePOPrice) || storeIsChange(App.storePOPriceCpny)) {
                    callMessage(5, '', 'closeScreen');
                } else {
                    this.parentAutoLoadControl.close()
                }
                break;
            case "new":
                App.cboPriceID.setValue(null);               
                break;
            case "refresh":
                App.storePOPriceHeader.load();
                App.storePOPrice.load();
                App.storePOPriceCpny.load();
                break;
            default:
        }
    };         
    var loadData = function () {
        if (App.storePOPriceHeader.getCount() == 0) {
            App.storePOPriceHeader.insert(0, Ext.data.Record());
        }
        App.dataForm.getForm().loadRecord(App.storePOPriceHeader.getAt(0));
    };        
    var closeScreen = function (item) {
        if (item == "no") {
            this.parentAutoLoadControl.close()
        }
        else if (item == "yes") {
            Save();
        }
    };
    function storeIsChange(store, isCreate) {
        if (isCreate == undefined) isCreate = true;
        if ((isCreate == true ? store.getChangedData().Created.length > 1 : false) || store.getChangedData().Updated != undefined || store.getChangedData().Deleted != undefined) {
            return true;
        }
        return false;
    };
    var grdPOPrice_BeforeEdit = function (editor, e) {
        if (App.cboPriceID.getValue() == null || !isUpdate) return false;
        var strkey = e.record.idProperty.split(',');
         paramInvtID = e.record.data.InvtID;
        App.UOM.getStore().load();
        
        if (e.record.phantom == false && strkey.indexOf(e.column.dataIndex) != -1)
            return false;
        
    };   
    var grdPOPrice_ValidateEdit = function (item, e) {
        if (e.field == 'InvtID') {
            if (e.value && e.record.phantom) {
                var flat = App.storePOPrice.findBy(function (record, id) {
                    if (record.get('InvtID') == e.value && record.id != e.record.id) {

                        return true;
                    }
                    return false;
                });

                if (flat != -1) {
                    callMessage(219, e.value, '');
                    return false;
                }
            }
        }
    };
    var grdPOPrice_Edit = function (item, e) {
        if (e.field == 'InvtID') {
            if (e.value) {
                var flat = App.storePOPrice.findBy(function (record, id) {
                    if (!record.get('InvtID')) {
                        return true;
                    }
                    return false;
                });
                if (flat == -1) {
                    App.storePOPrice.insert(App.storePOPrice.getCount(), Ext.data.Record());
                }
            }
        }
    };
    var grdPOPriceCpny_BeforeEdit = function (editor, e) {
        if (App.cboPriceID.getValue() == null || !isUpdate) return false;
        var strkey = e.record.idProperty.split(',');       
        if (e.record.phantom == false && strkey.indexOf(e.column.dataIndex) != -1)
            return false;

    };  
    var grdPOPriceCpny_ValidateEdit = function (item, e) {
        if (e.field == 'CpnyID') {
            if (e.value && e.record.phantom) {
                var flat = App.storePOPriceCpny.findBy(function (record, id) {
                    if (record.get('CpnyID') == e.value && record.id != e.record.id) {

                        return true;
                    }
                    return false;
                });

                if (flat != -1) {
                    callMessage(219, e.value, '');
                    return false;
                }
            }
        }
    };
    var grdPOPriceCpny_Edit = function (item, e) {
        if (e.field == 'CpnyID') {
            if (e.value) {
                var flat = App.storePOPriceCpny.findBy(function (record, id) {
                    if (!record.get('CpnyID')) {
                        return true;
                    }
                    return false;
                });
                if (flat == -1) {
                    App.storePOPriceCpny.insert(App.storePOPriceCpny.getCount(), Ext.data.Record());
                }
            }
        }
    };
    var cboPriceID_Change = function (item, newValue, oldValue) {
        App.cboPriceID.setValue(newValue);
        if ((item.valueModels.length == 0 || item.valueModels == null) && App.storePOPriceHeader.data.items.length!=0) {
            App.storePOPriceHeader.load();
            App.storePOPrice.load();
            App.storePOPriceCpny.load();
            lockcontrol();
        }
        else if (item.valueModels.length != 0)
        {
            oldValue = null;
            App.storePOPriceHeader.load();
            App.storePOPrice.load();
            App.storePOPriceCpny.load();
            lockcontrol();
        }
       
    };
    var cboInvtID_Change = function (item, newValue, oldValue) {
        var r = App.InvtID.valueModels[0];
        if (r == null) {
            App.SelectModelPOPrice.getSelection()[0].set('Descr', "");
        }
        else {
            App.SelectModelPOPrice.getSelection()[0].set('Descr', r.data.Descr);
        }
                
    };
    var cboCpnyID_Change = function (item, newValue, oldValue) {
        var r = App.CpnyID.valueModels[0];
        if (r == null) {
            App.SelectModelPOPriceCpny.getSelection()[0].set('CpnyName', "");
        }
        else {
            App.SelectModelPOPriceCpny.getSelection()[0].set('CpnyName', r.data.BranchName);
        }
        // App.SelectModelPOPrice.getSelection()[0].set('Descr', App.InvtID.displayTplData[0].Descr);        
    };
    var chkPublic_Change = function (checkbox, checked) {
       
        if (checked ) {
            App.tabPO20100.closeTab(App.tabCompany)
           
        }
        else {
            App.tabPO20100.addTab(App.tabCompany)
           
        }
        // App.SelectModelPOPrice.getSelection()[0].set('Descr', App.InvtID.displayTplData[0].Descr);        
    };
    function btnFill_Click() {               
        App.storePOPrice.each(function (item, index, totalItems) {
            item.set('Disc', App.txtFill.getValue());
           
        });
        
    };
    var tabPO_Setup_AfterRender = function (obj) {
        if (this.parentAutoLoadControl != null)
            obj.setHeight(this.parentAutoLoadControl.getHeight() - 100);
        else {
            obj.setHeight(Ext.getBody().getViewSize().height - 100);
        }
    };
    var frmloadAfterRender = function (obj) {
        App.storePOPriceHeader.load();
        App.storePOPrice.load();
        App.storePOPriceCpny.load();      
        lockcontrol();
    };
    function lockcontrol() {
        if (App.cboPriceID.valueModels.length == 0) {
            App.Descr.setReadOnly(!isInsert);
            App.Public.setReadOnly(!isInsert);
            App.Status.setReadOnly(!isInsert);
            App.txtFill.setReadOnly(!isInsert);
            App.btnFill.setDisabled(!isInsert);
            App.EffDate.setReadOnly(!isInsert);
        }
        else {
            App.Descr.setReadOnly(!isUpdate);
            App.Public.setReadOnly(!isUpdate);
            App.Status.setReadOnly(!isUpdate);
            App.txtFill.setReadOnly(!isUpdate);
            App.btnFill.setDisabled(!isUpdate);
            App.EffDate.setReadOnly(!isUpdate);
        }
    }
</script>
@Html.X().ResourceManager().Theme(Theme.Gray)



@(Html.X().Store().ID("storePOPriceHeader")   
        .Model(Util.GenerateModel(typeof(PO_PriceHeader), "POPriceHeaderModel", "PriceID"))       
        .Proxy(
                X.AjaxProxy()                
                .Url(Url.Action("GetPOPriceHeader", "PO20100"))                
                .ActionMethods(action =>
                {
                    action.Read = HttpMethod.POST;
                })
                .Reader(X.JsonReader().Root("data").TotalProperty("totaldata"))
            ) 
        .Parameters(ps =>
                        {
                            ps.Add(new StoreParameter("PriceID", "App.cboPriceID.value", ParameterMode.Raw));
                        })      
        .Listeners(p=>p.Load.Handler="loadData()" )        
  )

@(Html.X().Store().ID("storePOPrice")   
        .Model(Util.GenerateModel(typeof(PO20100GetPOPrice_Result), "POPriceModel", "PriceID,InvtID,UOM")) 
        .Listeners(p => p.Load.Handler = "App.storePOPrice.insert(App.storePOPrice.getCount(), Ext.data.Record());;")      
        .Proxy(
                X.AjaxProxy()                
                .Url(Url.Action("GetPOPrice", "PO20100"))                
                .ActionMethods(action =>
                {
                    action.Read = HttpMethod.POST;
                })
                .Reader(X.JsonReader().Root("data").TotalProperty("totaldata"))
            ) 
        .Parameters(ps =>
                        {
                            ps.Add(new StoreParameter("PriceID", "App.cboPriceID.value", ParameterMode.Raw));
                        })      
)       

@(Html.X().Store().ID("storePOPriceCpny")   
        .Model(Util.GenerateModel(typeof(PO20100GetPOPriceCpny_Result), "POPriceCpnyModel", "PriceID,CpnyID")) 
        .Listeners(p => p.Load.Handler = "App.storePOPriceCpny.insert(App.storePOPriceCpny.getCount(), Ext.data.Record());;")       
        .Proxy(
                X.AjaxProxy()                
                .Url(Url.Action("GetPOPriceCpny", "PO20100"))                
                .ActionMethods(action =>
                {
                    action.Read = HttpMethod.POST;
                })
                .Reader(X.JsonReader().Root("data").TotalProperty("totaldata"))
            ) 
        .Parameters(ps =>
                        {
                            ps.Add(new StoreParameter("PriceID", "App.cboPriceID.value", ParameterMode.Raw));
                        })      
)       

       
@(Html.X().Viewport().Layout(LayoutType.Fit)
    .Items(
        X.FormPanel()
        .Layout(LayoutType.Anchor)
        .ID("dataForm")
        .TrackResetOnLoad(true)
        .DefaultAnchor("100%")
        .BodyPadding(10)
        .TopBar(Util.SetupToolbar("PO20100"))
        .FieldDefaults(act => { act.LabelAlign = LabelAlign.Right; act.LabelWidth = 150; })
        .Listeners(itm=>itm.AfterRender.Fn="frmloadAfterRender")
        .Items(
        // CAC PHAN TREN GIU NGUYEN, GIAO DIEN THIET KE O DAY 
            X.Panel().ID("Header").Layout(LayoutType.Anchor)
            .Items(
                        X.Container().Layout(LayoutType.HBox).MarginSpec("0 0 5 0").Items(
                                HQ.Combo().ID("cboPriceID").Name("cboPriceID").HQLangCode("PriceID").HQProcedure("ppv_PriceID").HQColumnShow("PriceID,Descr").DisplayField("PriceID").ValueField("PriceID").Width(300).HQHeightWidth(400, 300)
                                        .HQParam(new StoreParameterCollection() { 
                                                                                    new StoreParameter() { Name = "@LangID", Value = Current.LangID.ToString(), Mode = ParameterMode.Value }
                                                                                    , new StoreParameter() { Name = "@ScreenNbr", Value = "PO20100", Mode = ParameterMode.Value }
                                                                                    , new StoreParameter() { Name = "@UserID", Value = Current.UserName.ToString(), Mode = ParameterMode.Value }                                                                                    
                                                                                }).LoadData()
                                        .Listeners(lst =>
                                                {
                                                    lst.Focus.Handler = "focus='POPriceHeader'";
                                                    lst.Change.Fn = "cboPriceID_Change";
                                                }
                                        )
                                
                                , HQ.TextBox().ID("Descr").Name("Descr").HQLangCode("Descr").Width(300).AllowBlank(false).MarginSpec("0 0 0 20").HQControlFocus("LastPONbr").HideLabel(true).Listeners(lst => { lst.Focus.Handler = "focus='POPriceHeader'"; })
                                , HQ.Checkbox().ID("Status").Name("Status").HQLangCode("ACTIVE").MarginSpec("0 0 0 5").Listeners(lst => { lst.Focus.Handler = "focus='POPriceHeader'"; })
                        ),
                        X.Container().Layout(LayoutType.HBox).MarginSpec("0 0 5 0").Items(
                                X.NumberField().ID("txtFill").Name("txtFill").FieldLabel(Util.GetLang("Fill")).MaskRe(@"/[\d].[\d]{2}/").Width(210).MaxLength(3).Listeners(lst => { lst.Focus.Handler = "focus='POPriceHeader'"; })
                                , HQ.Button().ID("btnFill").HQLangCode("Fill").Width(80).MarginSpec("0 0 0 10").Listeners(lst => { lst.Focus.Handler = "focus='POPriceHeader'"; lst.Click.Handler = "btnFill_Click()"; })
                                , HQ.DateField().ID("EffDate").Name("EffDate").HQLangCode("EffDate").Width(320).AllowBlank(false).LabelWidth(120).Value("2014-03-19").Listeners(lst => { lst.Focus.Handler = "focus='POPriceHeader'"; })
                                , HQ.Checkbox().ID("Public").Name("Public").HQLangCode("Public").MarginSpec("0 0 0 5").HQControlFocus("DfltRcptUnitFromIN")
                                                                        .Listeners(lst => { lst.Focus.Handler = "focus='POPriceHeader'"; lst.Change.Fn = "chkPublic_Change"; })
                        )

                )
            ,
            X.TabPanel()
            .Layout(LayoutType.Anchor)
            .ID("tabPO20100")
            .Listeners(p => p.AfterRender.Fn = "tabPO_Setup_AfterRender")
            .Items(
                    X.Panel()
                    .ID("tabDetail")
                    .Layout(LayoutType.Anchor)
                    .AnchorVertical("100%")
                    .Title(Util.GetLang("POPrice"))
                    .Padding(5)
                    .Items(
                            Html.X().GridPanel()
                                    .Frame(true)
                                    .AnchorHorizontal("100%")
                                    .AnchorVertical("100%")
                                    .RenderTo("contentCenter")
                                    .Scroll(ScrollMode.Both)
                                    .ID("grdPOPrice")
                                    .StoreID("storePOPrice")
                                    .ColumnModel(
                                        Html.X().RowNumbererColumn(),
                                                                Html.X().Column().Text(Util.GetLang("InvtID")).DataIndex("InvtID").Width(120)
                                                                        .Editor(
                                                                                HQ.Combo().ID("InvtID").Name("InvtID").HideLabel(true).HQProcedure("ppv_InventoryActive").HQColumnShow("InvtID,Descr").DisplayField("InvtID").ValueField("InvtID")
                                                                                .HQHeightWidth(400, 300).LabelWidth(0).LoadData()
                                                                                .Listeners(lst =>
                                                                                            {
                                                                                                lst.Change.Fn = "cboInvtID_Change";
                                                                                            })
                                                                                )
                                                                , Html.X().Column().Text(Util.GetLang("Descr")).DataIndex("Descr").Width(150).Editor(Html.X().TextField().MaxLength(100))
                                                                
                                                                , Html.X().Column().Text(Util.GetLang("UOM")).DataIndex("UOM").Width(150)
                                                                        .Editor(
                                                                                HQ.Combo().ID("UOM").Name("UOM").HideLabel(true).HQProcedure("ppv_PO20100INUnit_Invt_Class_From_To").HQColumnShow("FromUnit").DisplayField("FromUnit").ValueField("FromUnit").HQHeightWidth(400, 300).LabelWidth(0)
                                                                                        .HQParam(new StoreParameterCollection() { 
                                                                                                                            new StoreParameter() { Name = "@InvtID", Value = "paramInvtID", Mode = ParameterMode.Raw }                                                                                                                                    
                                                                                        }).LoadData()

                                                                                )
                                                                , Html.X().NumberColumn().Text(Util.GetLang("QtyBreak")).DataIndex("QtyBreak").Width(150).Format("0,000,000").Editor(Html.X().NumberField().MaskRe(@"/[\d]/"))
                                                                , Html.X().NumberColumn().Text(Util.GetLang("Price")).DataIndex("Price").Width(150).Format("0,000,000").Editor(Html.X().NumberField().MaskRe(@"/[\d]/"))
                                                                , Html.X().NumberColumn().Text(Util.GetLang("Disc")).DataIndex("Disc").Width(150).Format("00.00").Editor(Html.X().NumberField().MaskRe(@"/[\d].[\d]{2}/"))
                                                                , Html.X().CommandColumn()
                                                                                        .Width(70)
                                                                                        .Commands(
                                                                                            Html.X().GridCommand()
                                                                                                .Text(Util.GetLang("Reject"))
                                                                                                .ToolTip(t =>
                                                                                                {
                                                                                                    t.Text = Util.GetLang("Rejectrowchanges");
                                                                                                })
                                                                                                .CommandName("reject")
                                                                                                .Icon(Icon.ArrowUndo)
                                                                                        )
                                                                                        .PrepareToolbar(t =>
                                                                                        {
                                                                                            t.Handler = "toolbar.items.get(0).setVisible(record.dirty);";
                                                                                        })
                                                                                        .Listeners(l =>
                                                                                        {
                                                                                            l.Command.Handler = "record.reject();";
                                                                                        })
                                    )
                                    .Listeners(lst =>
                                    {
                                        lst.Select.Handler = "focus='POPrice'";
                                        lst.Edit.Fn = "grdPOPrice_Edit";
                                        lst.BeforeEdit.Fn = "grdPOPrice_BeforeEdit";
                                        lst.ValidateEdit.Fn = "grdPOPrice_ValidateEdit";
                                    })
                                    .SelectionModel(Html.X().RowSelectionModel().ID("SelectModelPOPrice").Mode(SelectionMode.Multi))
                                    .Plugins(Html.X().CellEditing().ClicksToEdit(1))//Cho phep edit )                                                                       
                    ),

                    X.Panel()
                    .ID("tabCompany")
                    .Layout(LayoutType.Anchor)
                    .AnchorVertical("100%")
                    .Padding(5)
                    .Title(Util.GetLang("APPCOMP"))
                    .CloseAction(CloseAction.Hide)    
                    .Items(
                           Html.X().GridPanel()
                                .ID("grdPOPriceCpny")
                                .AnchorHorizontal("100%")
                                .AnchorVertical("100%")
                                .StoreID("storePOPriceCpny")
                                .ColumnModel(
                                        Html.X().RowNumbererColumn(),
                                        Html.X().Column().DataIndex("CpnyID").Width(150).Text(Util.GetLang("CpnyID"))
                                        .Editor(
                                                HQ.Combo().ID("CpnyID").Name("CpnyID").HideLabel(true).HQProcedure("ppv_BranchAllByUser").HQColumnShow("BranchID,BranchName").DisplayField("BranchID").ValueField("BranchID")
                                                        .HQHeightWidth(400, 300).LabelWidth(0)
                                                        .HQParam(new StoreParameterCollection() { 
                                                                                        new StoreParameter() { Name = "@UserID", Value = Current.UserName, Mode = ParameterMode.Value }                                                                                                                                    
                                                                                        }).LoadData()
                                                        .Listeners(lst =>
                                                                    {
                                                                        lst.Change.Fn = "cboCpnyID_Change";
                                                                    })
                                            ),

                                        Html.X().Column()
                                        .DataIndex("CpnyName")
                                        .Flex(1)
                                        .Text(Util.GetLang("CpnyName"))                                       
                                )
                                .Listeners(lst =>
                                {
                                    lst.Select.Handler = "focus='POPriceCpny'";                                   
                                    lst.Edit.Fn = "grdPOPriceCpny_Edit";
                                    lst.ValidateEdit.Fn = "grdPOPriceCpny_ValidateEdit";
                                    lst.BeforeEdit.Fn = "grdPOPriceCpny_BeforeEdit";
                                })
                                .SelectionModel(Html.X().RowSelectionModel().ID("SelectModelPOPriceCpny").Mode(SelectionMode.Multi))
                                .View(X.GridView().TrackOver(false))
                                .Plugins(Html.X().CellEditing().ClicksToEdit(1))
                                )
                        )
                )
        )

)
