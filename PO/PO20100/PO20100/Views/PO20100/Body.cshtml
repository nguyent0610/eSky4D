@using Ext.Net;
@using Ext.Net.MVC;
@using HQ.eSkyFramework;
@using HQ.eSkyFramework.HQControl;
@using PO20100;
@{
    Layout = null;
    var X = Html.X();
    var HQ = Html.HQ();
}

@(X.Viewport()
.Layout(LayoutType.Fit)
.Items(
    X.FormPanel()
    .ID("frmMain")
    .BodyPadding(0)
    .KeyMap(Util.SetupKeyMap())
    .TopBar(Util.SetupToolbar("Print", true, ""))
    .Layout(LayoutType.Border)
    .Listeners(l =>
    {
        l.BoxReady.Handler = "firstLoad()";
        l.FieldChange.Fn = "frmChange";
    })
    .Items(
        ////Thiet ke giao dien o day
        X.Panel().ID("pnlHeader")
        .Region(Region.North)
        .Items(
            X.Container().Layout(LayoutType.HBox).MarginSpec("5 0 5 0")
            .Items(
                HQ.Combo().ID("cboPriceID").Name("cboPriceID").HQLangCode("PriceID").HQProcedure("PO20100_pcPriceID").AllowBlank(false)
                .HQColumnShow("PriceID,Descr").DisplayField("PriceID").ValueField("PriceID").Width(300).HQHeightWidth(400, 300).MaxLength(20).EnforceMaxLength(true)
                .HQParam(new StoreParameterCollection() {
                    new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw }
                    , new StoreParameter() { Name = "@ScreenNbr", Value = "PO20100", Mode = ParameterMode.Value }
                    , new StoreParameter() { Name = "@UserID", Value ="HQ.userName", Mode = ParameterMode.Raw }
                })
                .LoadData()
                .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                .Listeners(lst =>
                {
                    lst.TriggerClick.Fn = "cboPriceID_TriggerClick";//khi nhan X xoa du lieu goi ham de kiem tra
                    lst.Change.Fn = "cboPriceID_Change";
                    lst.Expand.Fn = "cboPriceID_Expand";  //khi nhan xo ra du lieu cho chon, kiem tra xem co cho xo hay ko?
                })

                , HQ.TextBox().ID("Descr").Name("Descr").HQLangCode("Descr").Width(300).MaxLength(200).EnforceMaxLength(true).AllowBlank(false).MarginSpec("0 0 0 20").HQControlFocus("LastPONbr").HideLabel(true).Listeners(lst => { })
                , HQ.Checkbox().ID("Status").Name("Status").HQLangCode("ACTIVE").MarginSpec("0 0 0 5")
                  
            ),
            X.Container().Layout(LayoutType.HBox).MarginSpec("0 0 5 0")
            .Items(
                HQ.NumberField().ID("txtFill").Name("txtFill").HQLangCode("Fill").MaskRe(@"/[0-9-,-/ ]/").Width(210)
                , HQ.Button().ID("btnFill").HQLangCode("Fill").Width(80).MarginSpec("0 0 0 10")
                .Listeners(lst =>
                {
                    lst.Click.Handler = "btnFill_Click()";
                })
                , HQ.DateField().ID("EffDate").Name("EffDate").HQLangCode("EffDate").Width(320).AllowBlank(false).LabelWidth(120)
                .Format("dd-MM-yyyy")
                , HQ.Checkbox().ID("Public").Name("Public").HQLangCode("Public").MarginSpec("0 0 0 5")
                .Listeners(lst =>
                {
                    lst.Change.Fn = "chkPublic_Change";
                })
            )
        )
        .Listeners(lss =>
        {
            lss.Render.Fn = "pnl_render";
        })

        , X.TabPanel().ID("tabBot")
        .Region(Region.Center)
        .Items(
            X.Panel().ID("pnlPO_Price")
            .Title(Util.GetLang("POPrice"))
            .Layout(LayoutType.Border)
            .Items(
                X.GridPanel().ID("grdPO_Price")
                .Scroll(ScrollMode.Both)
                .View(X.GridView().TrackOver(false))
                .Region(Region.Center).Flex(1)
                .Store(
                     X.Store().AutoLoad(false)
                    .ID("stoPO_Price")
                    .PageSize(50)
                    .Model(Util.GenerateModel(typeof(PO20100_pgGetPOPrice_Result), "mdlPO_Price", "PriceID,InvtID"))
                    .Parameters(ps =>
                    {
                        ps.Add(new StoreParameter("PriceID", "App.cboPriceID.getValue()", ParameterMode.Raw));
                    })
                    .ServerProxy(X.AjaxProxy().Url(Url.Action("GetPO_Price")))
                    .Listeners(l =>
                    {
                        l.Load.Fn = "stoPO_Price_Load";
                        l.Update.Fn = "frmChange";
                    })
                )
                .Listeners(p => p.BoxReady.Handler = "App.stoPO_Price.reload();")
                .SortableColumns(false)
                .ColumnModel(

                    X.RowNumbererColumn()
                    , X.Column().Text(Util.GetLang("InvtID")).DataIndex("InvtID").Width(150).ID("InvtID")
                    .Editor(
                        HQ.Combo().ID("cboInvtID")
                        .Name("cboInvtID").HQProcedure("PO20100_pcInventoryActive")
                        .HQColumnShow("InvtID,Descr").DisplayField("InvtID").ValueField("InvtID")
                        .Width(200).HQHeightWidth(500, 400)
                        .AllowBlank(true).ForceSelection(true).HQDBSys(false).HQAutoLoad(false)
                        .HQParam(new StoreParameterCollection()
                        {//Param
                        })
                        .LoadData()
                        .Listeners(lst =>
                        {
                            lst.Change.Fn = "cboInvtID_Change";
                        })
                    )
                    , X.Column().Text(Util.GetLang("Descr")).DataIndex("Descr").Width(250)
                    , X.Column().Text(Util.GetLang("UOM")).DataIndex("UOM").Width(150)
                    .Editor(
                        HQ.Combo().ID("cboUOM").Name("cboUOM").HQProcedure("PO20100_pcUOM_InvtID")
                        .HQParam(new StoreParameterCollection()
                        {
                            new StoreParameter() { Name = "@InvtID", Value = "App.cboInvtID.getValue()" , Mode = ParameterMode.Raw }
                        })
                        .HQColumnShow("FromUnit").DisplayField("FromUnit").ValueField("FromUnit")
                        .Width(300).HQHeightWidth(500, 400)
                        .HQDBSys(false).AllowBlank(true).ForceSelection(true).HQAutoLoad(false)
                        .LoadData()
                    )
                    , X.NumberColumn().Text(Util.GetLang("QtyBreak")).DataIndex("QtyBreak").Width(150).Format("0,000,000").Editor(X.NumberField().MaskRe(@"/[\d]/").MinValue(0)).Align(Alignment.Right)
                    , X.NumberColumn().Text(Util.GetLang("Price")).DataIndex("Price").Width(150).Format("0,000,000").Editor(X.NumberField().MaskRe(@"/[\d]/").MinValue(0)).Align(Alignment.Right)
                    , X.NumberColumn().Text(Util.GetLang("Disc")).DataIndex("Disc").Width(150).Format("00.00").Editor(X.NumberField().MaskRe(@"/[0-9-,-/ ]/")).Align(Alignment.Right)

                    , X.CommandColumn().Width(150)
                    .Commands(
                        X.GridCommand()
                        .Text(("Reject"))
                        .ToolTip(t =>
                        {
                            t.Text = ("Rejectrowchanges");
                        })
                        .CommandName("reject")
                        .Icon(Icon.ArrowUndo)
                    )
                    .PrepareToolbar(t =>
                    {
                        t.Handler = "toolbar.items.get(0).setVisible(record.dirty);";
                    })
                    .Listeners(l =>
                    {
                        l.Command.Handler = "grdPO_Price_Reject(record);";
                    })
            )
            .SelectionModel(X.RowSelectionModel().ID("slmPO_Price")
            .Mode(SelectionMode.Multi))
            .BottomBar(
                X.PagingToolbar()
                .Items(
                    X.Label("Page size:"),
                    X.ToolbarSpacer(10),
                    X.ComboBox()
                    .Width(80)
                    .Items("1", "2", "10", "20", "30", "50")
                    .SelectedItems("50")
                    .Listeners(l => l.Select.Fn = "HQ.grid.onPageSelect")
                )
                .Plugins(X.ProgressBarPager())
            )
            .Plugins(
                X.CellEditing()
                .ClicksToEdit(1)
                .Listeners(ls =>
                {
                    ls.BeforeEdit.Fn = "grdPO_Price_BeforeEdit";
                    ls.Edit.Fn = "grdPO_Price_Edit";
                    ls.ValidateEdit.Fn = "grdPO_Price_ValidateEdit";
                })
            )

            .Features(
                X.GridFilters()
                    .Local(true)
                    .Filters(
                        X.StringFilter().DataIndex("InvtID"),
                        X.StringFilter().DataIndex("Descr"),
                        X.StringFilter().DataIndex("UOM"),
                        X.NumericFilter().DataIndex("QtyBreak"),
                        X.NumericFilter().DataIndex("Price"),
                        X.NumericFilter().DataIndex("Disc")
                                            
                    )
            )
            )
            .Listeners(lss =>
            {
                lss.Render.Fn = "pnl_render";
            })
        //tabpnlPrice



            , X.Panel().ID("pnlPO_PriceCpny")
            .Title(Util.GetLang("APPCOMP"))
            .Layout(LayoutType.Border)
            .CloseAction(CloseAction.Hide)
            .Items(

                X.GridPanel()
                .Scroll(ScrollMode.Both)
                .View(X.GridView().TrackOver(false))
                .ID("grdPO_PriceCpny")
                .Region(Region.Center).Flex(1)
                .Store(
                     X.Store().AutoLoad(false)
                    .ID("stoPO_PriceCpny")
                    .PageSize(50)
                    .Model(Util.GenerateModel(typeof(PO20100_pgGetPOPriceCpny_Result), "mdlPO_PriceCpny", "PriceID,CpnyID"))
                    .Parameters(ps =>
                    {
                        ps.Add(new StoreParameter("PriceID", "App.cboPriceID.getValue()", ParameterMode.Raw));
                    })
                    .ServerProxy(X.AjaxProxy().Url(Url.Action("GetPO_PriceCpny")))
                    .Listeners(l =>
                        {
                            l.Load.Fn = "stoPO_PriceCpny_Load";
                        })
                )
                .Listeners(p => p.BoxReady.Handler = "App.stoPO_PriceCpny.reload();")
                .SortableColumns(false)
                .ColumnModel(

                 X.RowNumbererColumn()
                    , X.Column().Text(Util.GetLang("CpnyID")).DataIndex("CpnyID").Width(150).ID("txtCpny")
                    .Editor(
                        HQ.Combo().ID("cboCpnyID").Name("cboCpnyID").HQProcedure("PO20100_pcBranchAllByUser")
                        .HQColumnShow("BranchID,BranchName").DisplayField("BranchID").ValueField("BranchID")
                        .Width(300).HQHeightWidth(500, 400)
                        .AllowBlank(true).ForceSelection(true).HQDBSys(false).HQAutoLoad(false)
                        .HQParam(new StoreParameterCollection() {
                            new StoreParameter() { Name = "@UserID", Value = "HQ.userName" , Mode = ParameterMode.Raw }
                        })
                        .LoadData()
                    )
                    , X.Column().Text(Util.GetLang("CpnyName")).DataIndex("CpnyName").Width(150)
                    , X.CommandColumn().Width(150)
                    .Commands(
                        X.GridCommand()
                        .Text(("Reject"))
                        .ToolTip(t =>
                        {
                            t.Text = ("Rejectrowchanges");
                        })
                        .CommandName("reject")
                        .Icon(Icon.ArrowUndo)
                    )
                    .PrepareToolbar(t =>
                    {
                        t.Handler = "toolbar.items.get(0).setVisible(record.dirty);";
                    })
                    .Listeners(l =>
                    {
                        l.Command.Handler = "grdPO_PriceCpny_Reject(record);";
                    })

                )
                .SelectionModel(X.RowSelectionModel().ID("slmPO_PriceCpny").Mode(SelectionMode.Multi))
                .BottomBar(
                    X.PagingToolbar()
                    .Items(
                        X.Label("Page size:"),
                        X.ToolbarSpacer(10),
                        X.ComboBox()
                        .Width(80)
                        .Items("1", "2", "10", "20", "30", "50")
                        .SelectedItems("50")
                        .Listeners(l => l.Select.Fn = "HQ.grid.onPageSelect")
                    )
                    .Plugins(X.ProgressBarPager())
                )
                .Plugins(
                    X.CellEditing()
                    .ClicksToEdit(1)
                    .Listeners(ls =>
                    {
                        ls.BeforeEdit.Fn = "grdPO_PriceCpny_BeforeEdit";
                        ls.Edit.Fn = "grdPO_PriceCpny_Edit";
                        ls.ValidateEdit.Fn = "grdPO_PriceCpny_ValidateEdit";
                    })
                )

                .Features(
                    X.GridFilters()
                        .Local(true)
                        .Filters(
                            X.StringFilter().DataIndex("CpnyID"),
                            X.StringFilter().DataIndex("CpnyName")
                        )
                )
            )
            .Listeners(lss =>
            {
                lss.Render.Fn = "pnl_render";
            })
        )
    )// frmMain
)
)
