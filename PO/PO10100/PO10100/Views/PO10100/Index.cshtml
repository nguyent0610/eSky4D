@using Ext.Net;
@using Ext.Net.MVC;
@using HQ.eSkyFramework;
@using HQ.eSkyFramework.HQControl;
@using PO10100;

@model System.Collections.IEnumerable
@{
    Layout = null;    
    var X = Html.X();
    var HQ = Html.HQ();
    ViewBag.Title = "PO10100";
    var acc = Session["PO10100"] as AccessRight;
    DateTime bussinessDate = DateTime.Now.ToDateShort();
}
<!DOCTYPE html>
<html>
 <!--Không thay đổi phần head Đổi mã màn hình PO10100.js tùy theo màn hình đổi lại-->
<head>
    <meta name="viewport" content="width=device-width" />
    <script src='@Url.Content("Scripts/hq.language"+Current.LangID+".js")' type="text/javascript"></script>
    <script src='@Url.Content("Scripts/hq.common.js")' type="text/javascript"></script>
    <script src='@Url.Content("Scripts/Screen/PO10100.js")' type="text/javascript"></script>
    <style>
        .x-grid-row-over .x-grid-cell-inner {
            font-weight : bold;
        }
    </style>
    <script>
        HQ.bussinessDate = new Date();
        HQ.cpnyID = '@Current.CpnyID';
        HQ.langID = '@Current.LangID';
        HQ.userName = '@Current.UserName';
        HQ.isUpdate = HQ.util.toBool('@acc.Update.ToString()');
        HQ.isInsert = HQ.util.toBool('@acc.Insert.ToString()');
        HQ.isDelete = HQ.util.toBool('@acc.Delete.ToString()');

    </script>  
    <title>@ViewBag.Title</title>
</head>
<body> 
@Html.X().ResourceManager().Theme((Theme)Enum.Parse(typeof(Theme), Current.Theme))


@(Html.X().Store().ID("stoPO_Header").AutoLoad(false)   
    .Model(Util.GenerateModel(typeof(PO_Header), "PO_HeaderModel", "BranchID,PONbr"))          
    .Proxy(
            X.AjaxProxy()                
            .Url(Url.Action("GetPO_Header", "PO10100"))                
            .ActionMethods(action =>
            {
                action.Read = HttpMethod.POST;
            })
            .Reader(X.JsonReader().Root("data").TotalProperty("totaldata"))
        ) 
    .Parameters(ps =>
                    {
                        ps.Add(new StoreParameter("branchID", "App.cboBranchID.getValue()", ParameterMode.Raw));
                        ps.Add(new StoreParameter("pONbr", "App.cboPONbr.getValue()", ParameterMode.Raw));
                    })  
    .Listeners(p=>p.Load.Handler="loadDataHeader()" )            
)
@(Html.X().Store().ID("stoPO10100_pdAP_VenDorTaxes").AutoLoad(true)   
    .Model(Util.GenerateModel(typeof(PO10100_pdAP_VenDorTaxes_Result), "PO10100_pdAP_VenDorTaxes_ResultModel", "taxid"))          
    .Proxy(
            X.AjaxProxy()                
            .Url(Url.Action("GetAP_VendorTax", "PO10100"))                
            .ActionMethods(action =>
            {
                action.Read = HttpMethod.POST;
            })
            .Reader(X.JsonReader().Root("data").TotalProperty("totaldata"))
        ) 
    .Parameters(ps =>
                    {
                        ps.Add(new StoreParameter("vendID", "App.cboVendID.getValue()", ParameterMode.Raw));
                        ps.Add(new StoreParameter("ordFromId", "", ParameterMode.Value));
                    })          
)

@HQ.Store().ID("stoPO10100_pdOM_UserDefault").HQProcedure("PO10100_pdOM_UserDefault").HQDBSys(false).HQParam(new StoreParameterCollection() {
											                    new StoreParameter() { Name = "@UserID", Value = "HQ.userName", Mode = ParameterMode.Raw}
                                                                ,new StoreParameter() { Name = "@BranchID", Value = "App.cboBranchID.getValue()", Mode = ParameterMode.Raw}
						                    }).LoadData().Listeners(lst => { lst.DataChanged.Handler = "loadPO10100_pdOM_UserDefault()"; })

@HQ.Store().ID("stoPO10100_pdPO_Setup").HQProcedure("PO10100_pdPO_Setup").HQDBSys(false).HQParam(new StoreParameterCollection() {
											                    new StoreParameter() { Name = "@UserID", Value ="HQ.userName", Mode = ParameterMode.Raw}
                                                                ,new StoreParameter() { Name = "@BranchID", Value = "App.cboBranchID.getValue()", Mode = ParameterMode.Raw}
						                    }).LoadData().Listeners(lst => { lst.Load.Handler = "loadPO10100_pdPO_Setup()"; })

@HQ.Store().ID("stoPO10100_pdSI_Tax").HQProcedure("PO10100_pdSI_Tax").HQDBSys(false).HQParam(new StoreParameterCollection() {
											                    new StoreParameter() { Name = "@UserID", Value ="HQ.userName", Mode = ParameterMode.Raw}
                                                                
						                    }).LoadData().Listeners(lst => { lst.Load.Handler = "loadPO10100_pdSI_Tax()"; }).AutoLoad(true)

@HQ.Store().ID("stoPO10100_pdIN_Inventory").HQProcedure("PO10100_pdIN_Inventory").HQDBSys(false).HQParam(new StoreParameterCollection() {
											                    new StoreParameter() { Name = "@UserID", Value ="HQ.userName", Mode = ParameterMode.Raw}
                                                                
						                    }).LoadData().Listeners(lst => { lst.Load.Handler = "loadPO10100_pdIN_Inventory()"; }).AutoLoad(true)


@HQ.Store().ID("stoPO10100_pdIN_UnitConversion").HQProcedure("PO10100_pdIN_UnitConversion").HQDBSys(false).LoadData().Listeners(lst => { lst.Load.Handler = "loadPO10100_pdIN_UnitConversion()"; }).AutoLoad(true)



@(Html.X().Store().ID("stoPO10100_pgLoadTaxTrans")   
                            .Model(Util.GenerateModel(typeof(PO10100_pgLoadTaxTrans_Result), "ModelPO10100_pgLoadTaxTrans_Result", ""))                                 
                            .Proxy(
                                    X.AjaxProxy()                
                                    .Url(Url.Action("GetPO10100_pgLoadTaxTrans", "PO10100"))                
                                    .ActionMethods(action =>
                                    {
                                        action.Read = HttpMethod.POST;
                                    })
                                    .Reader(X.JsonReader().Root("data").TotalProperty("totaldata"))
                                ) 
                            .Parameters(ps =>
                                            {
                                                ps.Add(new StoreParameter("branchID", "App.cboBranchID.getValue()", ParameterMode.Raw));
                                                ps.Add(new StoreParameter("pONbr", "App.cboPONbr.getValue()", ParameterMode.Raw));
                                            })
                        .Listeners(p => p.Load.Handler = "loadstoPO10100_pgLoadTaxTrans();")       
   
                    )
 
            @{ Html.RenderAction("Body", new { lang =@Current.LangID}); }
        
</body>
</html>
 