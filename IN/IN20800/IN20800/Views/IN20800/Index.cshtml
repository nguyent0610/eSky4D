@using Ext.Net;
@using Ext.Net.MVC;
@using HQ.eSkyFramework;
@using HQ.eSkyFramework.HQControl;
@using IN20800;

@model System.Collections.IEnumerable
@{
    Layout = null;
    var X = Html.X();
    ViewBag.Title = "IN20800";
    var acc = Session["IN20800"] as AccessRight;

}
<!DOCTYPE html>
<html>
 <!--Không thay đổi phần head Đổi mã màn hình IN20800.js tùy theo màn hình đổi lại-->
<head>
    <meta name="viewport" content="width=device-width" />
   <script src='@Url.Content("Scripts/hq.language"+Current.LangID+".js?"+DateTime.Now.ToString("yyyyMMddss"))' type="text/javascript"></script>
    <script src='@Url.Content("Scripts/hq.common.js?"+DateTime.Now.ToString("yyyyMMddss"))' type="text/javascript"></script>
    <script src='@Url.Content("Scripts/screen/IN20800.js?" + DateTime.Now.ToString("yyyyMMddss"))' type="text/javascript"></script>
    <style>
        .x-grid-row-over .x-grid-cell-inner {
            font-weight : bold;
        }
    </style>
    <script>
        HQ.cpnyID = '@Current.CpnyID';
        HQ.langID = '@Current.LangID';
        HQ.userName = '@Current.UserName';
        HQ.bussinessDate = new Date('@DateTime.Now.Date');
        HQ.isUpdate = HQ.util.toBool('@acc.Update.ToString()');
        HQ.isInsert = HQ.util.toBool('@acc.Insert.ToString()');
        HQ.isDelete = HQ.util.toBool('@acc.Delete.ToString()');
        HQ.Pack = HQ.util.toBool('@ViewBag.Pack');
        HQ.Price = HQ.util.toBool('@ViewBag.Price');
        HQ.showPricetype = HQ.util.toBool('@ViewBag.showPricetype');
        HQ.showCheckDuration = HQ.util.toBool('@ViewBag.showCheckDuration');
        HQ.showDiscountPct = HQ.util.toBool('@ViewBag.showDiscountPct');
    </script>  
    <title>@ViewBag.Title</title>
</head>
<body>   
    @(X.ResourceManager().Theme((Theme)Enum.Parse(typeof(Theme),Current.Theme.PassNull()==""?"Gray":Current.Theme.PassNull())))
    @*Make the store - the binding data of the form*@
    @(
 X.Store().ID("stoKitID")
            .AutoLoad(false)
            .Model(Util.GenerateModel(typeof(IN_Kit), "mdlIN_Kit", "KitID"))
            .Proxy(
                X.AjaxProxy()
                .Url(Url.Action("GetIN_KitHeader", "IN20800"))
                .ActionMethods(action =>
                {
                    action.Read = HttpMethod.POST;
                })
                .Reader(X.JsonReader().Root("data").TotalProperty("totaldata"))
            )
            .Parameters(ps =>
            {
                ps.Add(new StoreParameter("KitID", "App.cboKitID.getValue()", ParameterMode.Raw));
            })
            .Listeners(l =>
                {
                    l.BeforeLoad.Fn = "stoBeforeLoad";
                    l.Load.Fn = "stoLoad";
                }
            )
    )
        @X.GridFilters()<!--Khi cache cho grid-->
        @X.ProgressBarPager()<!--Khi cache cho grid -->   
        

        <!-- Gọi hàm Body trong IN20800Controller để dựng view Body.cshtml, mục đích tạo cache. -->  
        @{Html.RenderAction("Body", new {lang=Current.LangID});}
</body>
</html>
 