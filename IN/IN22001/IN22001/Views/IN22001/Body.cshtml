@using Ext.Net;
@using Ext.Net.MVC;
@using HQ.eSkyFramework;
@using HQ.eSkyFramework.HQControl;
@using IN22001;
@{
    Layout = null;
    var X = Html.X();
    var HQ = Html.HQ();
}

@(
 Html.X().Viewport().Layout(LayoutType.Fit)
    .Items(
        X.FormPanel()
        .Layout(LayoutType.Border)
        .ID("frmMain")
        .TrackResetOnLoad(true)
        //.DefaultAnchor("100%")
        .BodyPadding(10)
        .BodyBorder(0).AutoScroll(true)
        .TopBar(Util.SetupToolbar("close,print", true, "Event.Form.menuClick"))
        .FieldDefaults(act => { act.LabelAlign = LabelAlign.Right; act.LabelWidth = 100; })
        .Items(
            X.Panel().ID("pnlHeader").Layout(LayoutType.HBox).Region(Region.West)
            .LayoutConfig(new HBoxLayoutConfig { Align = HBoxAlign.Top }).Border(false)
            .Items(

                // First Column
                X.FieldSet().Title(Util.GetLang("POSM"))
                .Layout(LayoutType.VBox).MarginSpec("0 5 0 5")
                .MinWidth(200)//.Flex(1)
                .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Stretch })
                .Items(
                    HQ.Combo().ID("cboPosmID")
                    .HQLangCode("POSMID").HQProcedure("IN22001_pcPOSM")
                    .HQColumnShow("POSMId,FromDate,ToDate").HQHeightWidth(400, 300)
                    .ValueField("POSMId").DisplayField("POSMId").AllowBlank(false)
                    .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                    .HQParam(new StoreParameterCollection() { 
                        new StoreParameter("@UserID", "HQ.userName", ParameterMode.Raw) 
                        ,new StoreParameter("@CpnyID", "HQ.cpnyID", ParameterMode.Raw) 
                         ,new StoreParameter("@LangID", "HQ.langID", ParameterMode.Raw) 
                    })
                    .LoadData()
                    .Listeners(l =>
                    {
                        l.TriggerClick.Fn = "Event.Form.btnHideTrigger_click";
                        l.Change.Fn = "Event.Form.cboPosmID_change";
                    })
                    
                    ,HQ.DateField().ID("dtpFromDate")
                    .HQLangCode("FromDate").DataIndex("FromDate")
                    .AllowBlank(false)
                    .Listeners(l=>l.Change.Fn="Event.Form.dtpFromDate_change")
                    
                    ,HQ.DateField().ID("dtpToDate")
                    .AllowBlank(false)
                    .HQLangCode("ToDate").DataIndex("ToDate")
                    
                    ,HQ.Checkbox().ID("chkActive")
                    .MarginSpec("0 0 0 105")
                    .HQLangCode("Active").DataIndex("Active")
                ) // First Column
            )
            .Listeners(x => { 
                x.Render.Handler = "HQ.common.control_render(this,'posm')"; 
            })// pnlHeader
        //  Tree           
            , X.Panel().ID("company")
                .Region(Region.Center)
                .Layout(LayoutType.Border)
                .Items(
                            X.Panel().ID("treecompany")
                            .Region(Region.West).Flex(4)
                            .MinWidth(150).Split(true).AutoScroll(true)
                            .Listeners(l => { l.AfterRender.Handler = "tree_AfterRender('treecompany');"; })
                            .BottomBar(
                                X.Toolbar()
                                .Items(
                                    X.ToolbarFill()
                                    , HQ.Button().ID("btnExpand")
                                    .HQLangCode("Expand")
                                    .Icon(Icon.BulletTogglePlus)
                                    .Handler("btnExpand_Click")

                                    , X.ToolbarSpacer()
                                    , X.ToolbarSeparator()
                                    , X.ToolbarSpacer()

                                    , HQ.Button().ID("btnCollapse")
                                    .HQLangCode("Collapse")
                                    .Icon(Icon.BulletToggleMinus)
                                    .Handler("btnCollapse_Click")
                                    , X.ToolbarFill()
                                )
                            ) // treeBranch

                            , X.Panel()
                            .Region(Region.Center).Flex(1)
                            .Layout(LayoutType.VBox)
                            .MinWidth(50)
                            .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Stretch, Pack = BoxPack.Center })
                            .Items(
                                HQ.Button().ID("btnAddAll")
                                .ToolTip(Util.GetLang("AddAll")).HQLangCode("AddAll")
                                .Icon(Icon.ForwardGreen).MarginSpec("5 5 0 5")
                                .Handler("btnAddAll_click")

                                , HQ.Button().ID("btnAdd")
                                .ToolTip(Util.GetLang("Add")).HQLangCode("Add")
                                .Icon(Icon.PlayGreen).MarginSpec("5 5 0 5")
                                .Handler("btnAdd_click")

                                , HQ.Button().ID("btnDel")
                                .ToolTip(Util.GetLang("Del")).HQLangCode("Del")
                                .Icon(Icon.ReverseGreen).MarginSpec("5 5 0 5")
                                .Handler("btnDel_click")

                                , HQ.Button().ID("btnDelAll")
                                .ToolTip(Util.GetLang("DelAll")).HQLangCode("DelAll")
                                .Icon(Icon.RewindGreen).MarginSpec("5 5 0 5")
                                .Handler("btnDelAll_click")
                            ) // Panel

                            ,
                             X.Panel().Region(Region.East).Flex(6).Layout(LayoutType.Fit).AutoScroll(true)
                            .Items
                            (
                                X.GridPanel().ID("grdDet")
                                .Scroll(ScrollMode.Both)
                                .View(X.GridView().TrackOver(false))
                                .SortableColumns(false)

                                    .Store(
                                        X.Store()
                                        .ID("stoDet")
                                        .PageSize(50).AutoLoad(false)
                                        .Model(Util.GenerateModel(typeof(IN22001_pgBranch_Result), "mdlCpny", ""))
                                        .Parameters(ps =>
                                        {
                                            ps.Add(new StoreParameter("posmID", "App.cboPosmID.getValue()", ParameterMode.Raw));
                                        })
                                        .ServerProxy(X.AjaxProxy().Url(Url.Action("GetBranch")))
                                            .Listeners(l =>
                                            {
                                                l.BeforeLoad.Handler = "this.HQFieldKeys=['BranchID'];";
                                                l.Load.Fn = "Store.stoDet_load";
                                                l.DataChanged.Handler = "Event.Form.frmMain_fieldChange()";
                                                
                                            })
                                    )
                                .ColumnModel(
                                    X.RowNumbererColumn().MinWidth(20).Width(30).MaxWidth(100).Listeners(x => x.AfterRender.Handler = "this.resizable = true")                                   
                                    , X.Column().Text(Util.GetLang("IN22001CodeLV")).DataIndex("BranchID")
                                        .Editor(
                                            HQ.Combo().ID("cboBranchID")
                                            .HQProcedure("IN22001_pcBranchID").HQColumnShow("CpnyID,CpnyName,CpnyType")
                                            .HQHeightWidth(400, 450)
                                            .ValueField("CpnyID").DisplayField("CpnyID")
                                            .ForceSelection(true)
                                            .HQParam(new StoreParameterCollection() 
                                            {                                         
                                                new StoreParameter("@UserName", "HQ.userName", ParameterMode.Raw),
                                                new StoreParameter("@CpnyID", "HQ.cpnyID", ParameterMode.Raw),                                               
                                                new StoreParameter("@LangID", "HQ.langID", ParameterMode.Raw) 
                                            })
                                            .LoadData()
                                         )

                                    , X.Column().MinWidth(100).Flex(1)
                                    .Text(Util.GetLang("IN22001NameLV")).DataIndex("CpnyName")
                                    , X.Column().MinWidth(100).Flex(1)
                                    .Text(Util.GetLang("IN22001ClassifyLV")).DataIndex("CpnyType")                               
                                    , X.CommandColumn()
                                    .Commands(
                                        X.GridCommand()
                                        .Text(Util.GetLang("Reject"))
                                        .ToolTip(t => t.Text = Util.GetLang("Reject"))
                                        .CommandName("reject")
                                        .Icon(Icon.ArrowUndo)
                                    )
                                    .PrepareToolbar(t => t.Handler = "toolbar.items.get(0).setVisible(record.dirty);")
                                    .Listeners(l => l.Command.Handler = "Event.Grid.grd_reject(this, record);")
                                )
                                .SelectionModel(X.RowSelectionModel().ID("slmDet").Mode(SelectionMode.Single))
                                .BottomBar(
                                    X.PagingToolbar()
                                    .HideRefresh(true)
                                    .Items(
                                        X.Label("Page size:"), X.ToolbarSpacer(10),
                                        X.ComboBox().Width(80)
                                        .Items("1", "2", "10", "20", "30", "50")
                                        .SelectedItems("50").ForceSelection(true)
                                        .Listeners(l =>
                                            {
                                                l.Select.Fn = "HQ.grid.onPageSelect";
                                            })
                                    )
                                    .Plugins(X.ProgressBarPager())
                                )
                                .Plugins(
                                    X.CellEditing()
                                    .ClicksToEdit(1)
                                    .Listeners(ls =>
                                    {
                                        ls.BeforeEdit.Fn = "Event.Grid.grdDet_beforeEdit";
                                        ls.Edit.Fn = "Event.Grid.grdDet_edit";
                                        ls.ValidateEdit.Fn = "Event.Grid.grdDet_validateEdit";
                                    })
                                ) // grdCompany
                                .Features(
                                        X.GridFilters()
                                        .Local(true)
                                        .Filters(
                                            X.StringFilter().DataIndex("BranchID"),
                                            X.StringFilter().DataIndex("CpnyName"),
                                            X.StringFilter().DataIndex("CpnyType")
                                        )
                                    )
                           )
                    )
                    .Listeners(x =>
                    {
                       // x.Activate.Handler = "App.cboBranchID.store.reload(); HQ.focus = 'grdDet'";
                        x.Render.Handler = "HQ.common.control_render(this,'grdDet')";
                        
                    })                               
        )
            .Listeners(lst =>
            {
                lst.BoxReady.Fn = "Event.Form.frmMain_boxReady";
                lst.FieldChange.Fn = "Event.Form.frmMain_fieldChange";
            })// Form: frmMain
    )
)