@using Ext.Net;
@using Ext.Net.MVC;
@using HQ.eSkyFramework;
@using HQ.eSkyFramework.HQControl;
@using IN10800;
@{
    Layout = null;
    var X = Html.X();
    var HQ = Html.HQ();
}

@(
 Html.X().Viewport().Layout(LayoutType.Fit)
    .Items(
        X.FormPanel()
        .Layout(LayoutType.Border)
        .ID("frmMain")
        .TrackResetOnLoad(true)
        //.DefaultAnchor("100%")
        .BodyPadding(10)
        .BodyBorder(0).AutoScroll(true)
        .TopBar(Util.SetupToolbar("new,print", true, "Event.Form.menuClick"))
        .FieldDefaults(act => { act.LabelAlign = LabelAlign.Right; act.LabelWidth = 150; })
        .Items(
            X.Panel().ID("pnlHeader")
            .Layout(LayoutType.HBox).Region(Region.North).MinWidth(1005)
            .LayoutConfig(new HBoxLayoutConfig { Align = HBoxAlign.Top }).Border(false)
            .Items(

                // First Column
                X.Container().Layout(LayoutType.VBox).MarginSpec("5 0 5 0")
                .MinWidth(200).Flex(1)
                .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Stretch })
                .Items(
                    HQ.Combo().ID("cboBranchID")
                    .HQLangCode("Branch").HQProcedure("IN10800_pcBranchID")
                    .HQColumnShow("BranchID,BranchName").ValueField("BranchID").DisplayField("BranchName")
                    .HQHeightWidth(400, 300).ForceSelection(true).HQAutoLoad(false).AllowBlank(false)
                    .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                    .HQParam(new StoreParameterCollection() { 
                        new StoreParameter("@UserID", "HQ.userName", ParameterMode.Raw) 
                        ,new StoreParameter("@CpnyID", "HQ.cpnyID", ParameterMode.Raw) 
                    })
                    .LoadData()
                    .Listeners(l =>
                    {
                        l.TriggerClick.Fn = "Event.Form.btnHideTrigger_click";
                        l.Change.Fn = "Event.Form.cboBranchID_change";
                    })
                    
                    ,HQ.Combo().ID("cboSlsperID")
                    .HQLangCode("Salesman").HQProcedure("IN10800_pcSlsperID")
                    .HQColumnShow("SlsperID,Name").ValueField("SlsperID").DisplayField("Name")
                    .HQHeightWidth(400, 300).ForceSelection(true).AllowBlank(false).HQAutoLoad(false)
                    .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                    .HQParam(new StoreParameterCollection() { 
                        new StoreParameter("@UserID", "HQ.userName", ParameterMode.Raw) 
                        ,new StoreParameter("@CpnyID", "HQ.cpnyID", ParameterMode.Raw) 
                        ,new StoreParameter("@BranchID", "App.cboBranchID.getValue()", ParameterMode.Raw) 
                    })
                    .LoadData()
                    .Listeners(l =>
                    {
                        l.TriggerClick.Fn = "Event.Form.btnHideTrigger_click";
                        l.Change.Fn = "Event.Form.cboSlsperID_change";
                    })
                    
                    ,HQ.Combo().ID("cboCustID")
                    .HQLangCode("Customer").HQProcedure("IN10800_pcCustID")
                    .HQColumnShow("CustID,CustName").ValueField("CustID").DisplayField("CustName")
                    .HQHeightWidth(400, 300).ForceSelection(true).AllowBlank(false).HQAutoLoad(false)
                    .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                    .HQParam(new StoreParameterCollection() { 
                        new StoreParameter("@UserID", "HQ.userName", ParameterMode.Raw) 
                        ,new StoreParameter("@CpnyID", "HQ.cpnyID", ParameterMode.Raw) 
                        ,new StoreParameter("@BranchID", "App.cboBranchID.getValue()", ParameterMode.Raw) 
                        ,new StoreParameter("@SlsperID", "App.cboSlsperID.getValue()", ParameterMode.Raw) 
                    })
                    .LoadData()
                    .Listeners(l =>
                    {
                        l.TriggerClick.Fn = "Event.Form.btnHideTrigger_click";
                        l.Change.Fn = "Event.Form.cboCustID_change";
                    })
                ) // First Column

                // Second Column
                , X.Container().Layout(LayoutType.VBox).MarginSpec("5 0 5 0")
                .MinWidth(200).Flex(1)
                .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Stretch })
                .Items(
                    HQ.TextBox().ID("txtStkOutNbr")
                    .HQLangCode("StkOutNbr").DataIndex("StkOutNbr")
                    
                    , HQ.Combo().ID("cboStockType")
                    .HQLangCode("Type").HQProcedure("IN10800_pcType")
                    .HQColumnShow("Code,Descr").ValueField("Code").DisplayField("Descr")
                    .HQHeightWidth(400, 300).ForceSelection(true).AllowBlank(false)
                    .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                    .HQParam(new StoreParameterCollection() { 
                        new StoreParameter("@UserID", "HQ.userName", ParameterMode.Raw) 
                        ,new StoreParameter("@CpnyID", "HQ.cpnyID", ParameterMode.Raw) 
                    })
                    .LoadData()
                    .Listeners(l =>
                    {
                        l.TriggerClick.Fn = "Event.Form.btnHideTrigger_click";
                        l.Change.Fn = "Event.Form.cboStockType_change";
                    })
                    
                    ,HQ.DateField().ID("dtpStkOutDate")
                    .HQLangCode("DATE").AllowBlank(false)
                    .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                    .Listeners(l =>
                    {
                        l.TriggerClick.Handler = "this.clear()";
                        l.Change.Fn = "Event.Form.dtpStkOutDate_change";
                    })
                ) // Second Column
                
                // Third Column
                , X.Container().Layout(LayoutType.VBox).MarginSpec("5 5 5 0")
                .MinWidth(250)//.Flex(1)
                .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Stretch, Pack = BoxPack.Center })
                .Items(
                    
                ) // Third Column
            ) // pnlHeader

            , X.GridPanel().ID("grdStockOutletDet")
            .Region(Region.Center)
            .Scroll(ScrollMode.Both).MinWidth(1005)
            .View(X.GridView().TrackOver(false))
            .SortableColumns(false)
            .Store(
                X.Store().ID("stoStockOutletDet").AutoLoad(false).PageSize(50).RemotePaging(true)
                .Model(Util.GenerateModel(typeof(IN10800_pgStockOutletDet_Result), "mdlStockOutletDet", ""))
                .Proxy(
                    X.AjaxProxy()
                    .Url(Url.Action("GetStockOutletDet", "IN10800"))
                    .ActionMethods(action =>
                    {
                        action.Read = HttpMethod.POST;
                    })
                    .Reader(X.JsonReader().Root("data").TotalProperty("totaldata"))
                )
                .Parameters(ps =>
                {
                    ps.Add(new StoreParameter("branchID", "App.cboBranchID.getValue()", ParameterMode.Raw));
                    ps.Add(new StoreParameter("slsperID", "App.cboSlsperID.getValue()", ParameterMode.Raw));
                    ps.Add(new StoreParameter("stkOutNbr", "App.txtStkOutNbr.getValue()", ParameterMode.Raw));
                })
                .Listeners(l =>
                    {
                        l.BeforeLoad.Fn = "Store.stoStockOutletDet_beforeLoad";
                        l.Load.Fn = "Store.stoStockOutletDet_load";
                        l.Update.Handler = "Event.Form.frmMain_fieldChange()";
                        l.DataChanged.Handler = "Event.Form.frmMain_fieldChange()";
                    }
                )
            )
            .ColumnModel(
                X.RowNumbererColumn()
                
                , X.Column().Text(Util.GetLang("InvtID")).DataIndex("InvtID")
                .Editor(
                    HQ.Combo().ID("cboInvtID")
                    .HQProcedure("IN10800_pcInvtID").HQColumnShow("InvtID,Descr")
                    .ValueField("InvtID").DisplayField("InvtID")
                    .HQHeightWidth(400, 300).ForceSelection(true)
                    .HQParam(new StoreParameterCollection() { 
                        new StoreParameter("@UserID", "HQ.userName", ParameterMode.Raw) 
                        ,new StoreParameter("@CpnyID", "HQ.cpnyID", ParameterMode.Raw)
                        ,new StoreParameter("@BranchID", "App.cboBranchID.getValue()", ParameterMode.Raw)
                    })
                    .LoadData()
                )
                
                , X.Column().Text(Util.GetLang("Descr")).DataIndex("Descr").Width(200)
                .Renderer("Process.renderDescr")
                
                , X.DateColumn().Text(Util.GetLang("ExpireDate")).DataIndex("ExpDate").Format("dd/MM/yyyy")
                .Hidden(true).Hideable(false)
                .Editor(HQ.DateField().Format("dd/MM/yyyy"))
                
                , X.Column().Text(Util.GetLang("Reason")).DataIndex("ReasonID")
                .Width(150).Renderer("Process.renderDescr")
                .Editor(
                    HQ.Combo().ID("cboReason")
                    .HQProcedure("IN10800_pcReason").HQColumnShow("Code,Descr")
                    .ValueField("Code").DisplayField("Descr")
                    .HQHeightWidth(400, 300).ForceSelection(true)
                    .HQParam(new StoreParameterCollection() { 
                        new StoreParameter("@UserID", "HQ.userName", ParameterMode.Raw) 
                        ,new StoreParameter("@CpnyID", "HQ.cpnyID", ParameterMode.Raw) 
                    })
                    .LoadData()
                )
                
                , X.NumberColumn().Text(Util.GetLang("Qty")).DataIndex("StkQty").Format("0,000")
                .Editor(
                    X.NumberField().SelectOnFocus(true).DecimalPrecision(0).MinValue(0)
                )
                
                //, X.CommandColumn()
                //.Commands(
                //    X.GridCommand()
                //    .Text(Util.GetLang("Reject"))
                //    .ToolTip(t => t.Text = Util.GetLang("Rejectrowchanges"))
                //    .CommandName("reject")
                //    .Icon(Icon.ArrowUndo)
                //)
                //.PrepareToolbar(t => t.Handler = "toolbar.items.get(0).setVisible(record.dirty);")
                //.Listeners(l => l.Command.Handler = "Event.Grid.grd_reject(this, record);")
            )
            .SelectionModel(X.RowSelectionModel().ID("slmStockOutletDet").Mode(SelectionMode.Single))
            .Plugins(
                X.CellEditing()
                .ClicksToEdit(1)
                .Listeners(ls =>
                {
                    ls.BeforeEdit.Fn = "Event.Grid.grdStockOutletDet_beforeEdit";
                    ls.Edit.Fn = "Event.Grid.grdStockOutletDet_edit";
                    ls.ValidateEdit.Fn = "Event.Grid.grdStockOutletDet_validateEdit";
                })
            )
            .Features(
                X.GridFilters().Local(true)
                .Filters(
                    X.StringFilter().DataIndex("ReasonID")
                    ,X.StringFilter().DataIndex("InvtID")
                    ,X.StringFilter().DataIndex("Descr")
                    ,X.DateFilter().DataIndex("ExpDate")
                    ,X.NumericFilter().DataIndex("StkQty")
                )
            )
            .BottomBar(
                X.PagingToolbar().ID("pag")
                .Items(
                    X.Label(Util.GetLang("PageSize")),
                    X.ToolbarSpacer(10),
                    X.ComboBox()
                    .Width(80)
                    .Items("1", "2", "10", "20", "30", "50")
                    .SelectedItems("50")
                    .Listeners(l =>
                        {
                            l.Select.Fn = "HQ.grid.onPageSelect";
                        })
                )
                .Plugins(X.ProgressBarPager())
            )// grdStockOutletDet
        )
        .Listeners(lst =>
        {
            lst.BoxReady.Fn = "Event.Form.frmMain_boxReady";
            lst.FieldChange.Fn = "Event.Form.frmMain_fieldChange";
        })// Form: frmMain
    )
)