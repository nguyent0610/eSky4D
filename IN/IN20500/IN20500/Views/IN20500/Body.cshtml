@using Ext.Net;
@using Ext.Net.MVC;
@using HQ.eSkyFramework;
@using HQ.eSkyFramework.HQControl;
@using IN20500;
@{
    Layout = null;
    var X = Html.X();
    var HQ = Html.HQ();
}

@(X.Viewport()
.Layout(LayoutType.Fit)
.Items(
    X.FormPanel()
    .ID("frmMain")
    .TrackResetOnLoad(true)
    .KeyMap(Util.SetupKeyMap())
    .TopBar(Util.SetupToolbar("Print", true, ""))
    .Layout(LayoutType.Border)
    .FieldDefaults(act => { act.LabelAlign = LabelAlign.Right; act.LabelWidth = 150; })
    .Listeners(l =>
    {
        l.BoxReady.Handler = "firstLoad()";
        l.FieldChange.Fn = "frmChange";
    })
    .Items(
        ////Thiet ke giao dien o day
        X.Panel().Region(Region.West).ID("pnlWest")
        .Layout(LayoutType.Border).Flex(1).Split(true).CollapseMode(CollapseMode.Mini)
        .Items(
            X.TreePanel().ID("treeInvt").MultiSelect(false)
            .Width(300).Region(Region.Center).Flex(1).AutoScroll(true)
            .Title(Util.GetLang("Tree"))
            .Split(true) 
            .Border(false)
            .SelectionModel(X.TreeSelectionModel().ID("slmtreeInvt").Mode(SelectionMode.Multi))
            .Listeners(lst =>
            {
                lst.Select.Fn = "nodeSelected_Change";
                lst.BeforeItemExpand.Handler = "this.el.mask('Loading...', 'x-mask-loading'); Ext.suspendLayouts();";
                lst.AfterItemExpand.Handler = "Ext.resumeLayouts(true); this.el.unmask();";
            })
            .BottomBar(
                X.Toolbar()
                .Items(
                    X.ToolbarFill()
                    
                    , HQ.Button().ID("btnExpand")
                    .HQLangCode("Expand")
                    .Icon(Icon.BulletTogglePlus)
                    .Handler("btnExpand_click")

                    , X.ToolbarSpacer()
                    , X.ToolbarSeparator()
                    , X.ToolbarSpacer()

                    , HQ.Button().ID("btnCollapse")
                    .HQLangCode("Collapse")
                    .Icon(Icon.BulletToggleMinus)
                    .Handler("btnCollapse_click")

                    , X.ToolbarFill()
                )
            )
        ).Listeners(lss =>
        {
            lss.Render.Handler = "HQ.common.control_render(this,'header')";
        })
        
        , X.Panel().Region(Region.Center)
        .Layout(LayoutType.Border).Flex(4).Split(true)
        .Items(
            X.Panel().ID("pnlHeader")      ////////////////Header//////////////// 
            .Region(Region.North)
            .Layout(LayoutType.VBox)
            .AutoScroll(true)
            .Items(
                X.Container().Layout(LayoutType.HBox)
                    .Items(
                        HQ.Combo().ID("cboInvtID").Name("cboInvtID").HQLangCode("InvtID").Tag("X").AllowBlank(false)//
                            .HQProcedure("IN20500_pcloadInvtID").HQColumnShow("InvtID,Descr,Descr1,BarCode,Color")
                            .DisplayField("InvtID").ValueField("InvtID").MaxLength(30).EnforceMaxLength(true)
                            .Width(300).HQHeightWidth(400, 300).MarginSpec("5 0 0 0").ForceSelection(true)
                            .HQisPaging(true).PageSize(20).LoadData()
                            .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                            .Listeners(lst =>
                            {
                                lst.Change.Fn = "cboInvtID_Change";
                                lst.Select.Fn = "cboInvtID_Select";
                                lst.TriggerClick.Fn = "cboInvtID_TriggerClick";
                                lst.Focus.Fn = "cboInvtID_Focus";
                            })
                            
                        , HQ.Button().ID("btnCopy").Width(100).MarginSpec("5 0 0 5")
                            .HQLangCode("CopyFrom").Listeners(p =>
                            {
                                p.Click.Fn = "btnCopy_Click";
                            })
                            
                        , HQ.TextBox().ID("txtInvtIDCopy").Name("txtInvtIDCopy").HQLangCode("InvtID").MarginSpec("5 0 0 0")
                            .MaxLength(30).EnforceMaxLength(true).Width(195).LabelWidth(80)
                            
                        , HQ.Combo().ID("cboApproveStatus").ReadOnly(true).Tag("X").DataIndex("ApproveStatus")
                            .Name("cboApproveStatus").HQLangCode("ApproveStatus").HQProcedure("IN20500_pcApproveStatus")
                            .HQColumnShow("Code,Descr").DisplayField("Descr").ValueField("Code").HQValue("H", false)
                            .Width(300).HQHeightWidth(400, 300).MarginSpec("5 0 0 0")
                            .ForceSelection(true)
                            .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                            .HQParam(new StoreParameterCollection() 
                            {
                                new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw }   
                            })
                            .LoadData()
                            .Listeners(lst =>
                            {
                                lst.Change.Handler = "App.cboHandle.store.reload();";
                                lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                            })
                        
                    )//Header Row 1 

                , X.Container().Layout(LayoutType.HBox)
                    .Items(
                         HQ.TextBox().ID("txtDescr").Name("txtDescr").HQLangCode("Descr").DataIndex("Descr")
                            .Width(600).MaxLength(100).EnforceMaxLength(true).AllowBlank(false).MarginSpec("5 0 0 0")
                            
                        , HQ.Combo().ID("cboHandle")
                            .Name("cboHandle").HQLangCode("Handle").HQProcedure("IN20500_pcHandle").Tag("X")
                            .HQColumnShow("Code,Descr").DisplayField("Descr").ValueField("ToStatus")
                            .Width(300).HQHeightWidth(400, 300).MarginSpec("5 0 0 0")
                            .ForceSelection(true).HQAutoLoad(false)
                            .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                            .HQParam(new StoreParameterCollection()
                            {
                                new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw },
                                new StoreParameter() { Name = "@Status", Value = "App.cboApproveStatus.getValue()", Mode = ParameterMode.Raw },
                                new StoreParameter() { Name = "@UserID", Value = "HQ.userName", Mode = ParameterMode.Raw }
                            })
                            .LoadData()
                            .Listeners(lst =>
                            {
                                lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                            })
                    )//Header Row 2
                    
                , X.Container().Layout(LayoutType.HBox)
                    .Items(
                        HQ.TextBox().ID("txtDescr1").Name("txtDescr1").HQLangCode("Descr1").DataIndex("Descr1")
                            .Width(600).MaxLength(100).EnforceMaxLength(true).MarginSpec("5 0 0 0")
                    )//Header Row 3
                    
                , X.Container().Layout(LayoutType.HBox)
                    .Items(
                        HQ.Combo().ID("cboStatus").Name("cboStatus").HQLangCode("Status").DataIndex("Status")
                            .HQProcedure("IN20500_pcStatus").HQColumnShow("Code,Descr")
                            .DisplayField("Descr").ValueField("Code").AllowBlank(false)
                            .Width(300).HQHeightWidth(400, 300).MarginSpec("5 0 5 0")
                            .HQParam(new StoreParameterCollection()
                            {
                                new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw },
                            })
                            .LoadData()
                            .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                            .Listeners(lst =>
                            {
                                lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                                lst.Focus.Handler = "this.forceSelection = true;";  
                            })
                            
                        , HQ.Checkbox().ID("chkPublic").Name("chkPublic").HQLangCode("Public").DataIndex("Public")
                            .Width(300).MarginSpec("5 0 5 10")
                            .Listeners(lst=>
                            {
                                lst.Change.Fn = "chkPublic_Change";
                            })  
                    )//Header Row 4
            )
            .Listeners(lss =>
            {
                lss.Render.Handler = "HQ.common.control_render(this,'header')";
            })

            , X.TabPanel().ID("tabDetail")
            .Region(Region.Center)
            .Listeners(p=>p.TabChange.Fn="tabDetail_Change")
            .Items(
                X.Panel().ID("pnlDfltInfo")         //////////////Tab default info//////////////
                .Title(Util.GetLang("DfltInfo"))
                .Layout(LayoutType.HBox).AutoScroll(true)
                .Items(
                    X.Container().Layout(LayoutType.VBox)
                    .Items(
                        HQ.Combo().ID("cboClassID").Name("cboClassID").HQLangCode("ClassID").DataIndex("ClassID")
                            .HQProcedure("IN20500_pcProductCLassAll").HQColumnShow("ClassID,Descr")
                            .DisplayField("Descr").ValueField("ClassID").AllowBlank(false)
                            .Width(300).HQHeightWidth(400, 300).MarginSpec("5 0 0 0")
                            .LoadData()
                            .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                            .Listeners(lst =>
                            {
                                lst.Change.Fn = "cboClassID_Change";
                                //lst.Select.Fn = "cboClassID_Select";
                                lst.TriggerClick.Fn = "cboClassID_TriggerClick";
                                lst.Focus.Handler = "this.forceSelection = true;";  
                            })
                        
                        , HQ.Combo().ID("cboPriceClassID").Name("cboPriceClassID").HQLangCode("PriceClassID").DataIndex("PriceClassID")
                            .HQProcedure("IN20500_pcItemPriceClass").HQColumnShow("PriceClassID,Descr")
                            .DisplayField("Descr").ValueField("PriceClassID")
                            .Width(300).HQHeightWidth(400, 300).MarginSpec("5 0 0 0")
                            .LoadData()
                            .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                            .Listeners(lst =>
                            {
                                lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                                lst.Focus.Handler = "this.forceSelection = true;";  
                            })
                    
                        , HQ.Combo().ID("cboInvtType").Name("cboInvtType").HQLangCode("Type").DataIndex("InvtType")
                            .HQProcedure("IN20500_pcIvntType").HQColumnShow("Code,Descr")
                            .DisplayField("Descr").ValueField("Code").AllowBlank(false)
                            .Width(300).HQHeightWidth(400, 300).MarginSpec("5 0 0 0")
                            .HQParam(new StoreParameterCollection() 
                            { 
                                new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw }
                            })
                            .LoadData()
                            .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                            .Listeners(lst =>
                            {
                                lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                                lst.Focus.Handler = "this.forceSelection = true;";  
                            })
                        
                        , HQ.Combo().ID("cboSource").Name("cboSource").HQLangCode("Source").DataIndex("Source")
                            .HQProcedure("IN20500_pcSource").HQColumnShow("Code,Descr")
                            .DisplayField("Descr").ValueField("Code").AllowBlank(false)
                            .Width(300).HQHeightWidth(400, 300).MarginSpec("5 0 0 0")
                            .HQParam(new StoreParameterCollection() 
                            { 
                                new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw }
                            })
                            .LoadData()
                            .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                            .Listeners(lst =>
                            {
                                lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                                lst.Focus.Handler = "this.forceSelection = true;";  
                            })
                        
                        , HQ.Combo().ID("cboValMthd").Name("cboValMthd").HQLangCode("ValMthd").DataIndex("ValMthd")
                            .HQProcedure("IN20500_pcValMthd").HQColumnShow("Code,Descr")
                            .DisplayField("Descr").ValueField("Code").AllowBlank(false)
                            .Width(300).HQHeightWidth(400, 300).MarginSpec("5 0 0 0")
                            .HQParam(new StoreParameterCollection() 
                            { 
                                new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw }
                            })
                            .LoadData()
                            .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                            .Listeners(lst =>
                            {
                                lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                                lst.Focus.Handler = "this.forceSelection = true;";  
                            })
                    
                        , HQ.Combo().ID("cboLotSerTrack").Name("cboLotSerTrack").HQLangCode("LotSerTrack").DataIndex("LotSerTrack")
                            .HQProcedure("IN20500_pcLotSerTrack").HQColumnShow("Code,Descr")
                            .DisplayField("Descr").ValueField("Code").AllowBlank(false)
                            .Width(300).HQHeightWidth(400, 300).MarginSpec("5 0 0 0")
                            .HQParam(new StoreParameterCollection() 
                            { 
                                new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw }
                            })
                            .LoadData()
                            .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                            .Listeners(lst =>
                            {
                                lst.Change.Fn = "cboLotSerTrack_Change";
                                //lst.Select.Fn = "cboDfltLotSerTrack_Select";
                                lst.TriggerClick.Handler = "if (index == 0) { this.clearValue(); App.tabDetail.child('#pnlLotSerial').tab.setDisabled(true);}";
                                lst.Focus.Handler = "this.forceSelection = true;";  
                            })  
                        
                        , HQ.Combo().ID("cboBuyer").Name("cboBuyer").HQLangCode("Buyer").DataIndex("Buyer")
                            .HQProcedure("IN20500_pcBuyerAll").HQColumnShow("Buyer,BuyerName")
                            .DisplayField("BuyerName").ValueField("Buyer")
                            .Width(300).HQHeightWidth(400, 300).MarginSpec("5 0 0 0")
                            .LoadData()
                            .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                            .Listeners(lst =>
                            {
                                lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                                lst.Focus.Handler = "this.forceSelection = true;";  
                            })
                        
                        , HQ.Combo().ID("cboStkUnit").Name("cboStkUnit").HQLangCode("StkUnit").DataIndex("StkUnit")
                            .HQProcedure("IN20500_pcgetToUnit").HQColumnShow("ToUnit")
                            .DisplayField("ToUnit").ValueField("ToUnit").AllowBlank(false)
                            .Width(300).HQHeightWidth(400, 300).MarginSpec("5 0 0 0")
                            .LoadData()
                            .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                            .Listeners(lst =>
                            {
                                lst.Change.Fn = "cboStkUnit_Change";
                                //lst.Select.Fn = "filterStkUnit";
                                lst.TriggerClick.Fn = "cboStkUnit_TriggerClick";
                                lst.Focus.Handler = "this.forceSelection = true;";  
                            })
                        
                        , HQ.Combo().ID("cboDfltPOUnit").Name("cboDfltPOUnit").HQLangCode("POUnit").DataIndex("DfltPOUnit")
                            .HQProcedure("IN20500_pcGetDfltPOUnitSOUnit").HQColumnShow("FromUnit")
                            .DisplayField("FromUnit").ValueField("FromUnit").AllowBlank(false)
                            .Width(300).HQHeightWidth(400, 300).MarginSpec("5 0 0 0")
                            .HQParam(new StoreParameterCollection() 
                            { 
                                new StoreParameter() { Name = "@ToUnit", Value = "App.cboStkUnit.getValue()", Mode = ParameterMode.Raw },
                                new StoreParameter() { Name = "@ClassID", Value = "App.cboClassID.getValue()", Mode = ParameterMode.Raw },
                                new StoreParameter() { Name = "@InvtID", Value = "InvtID", Mode = ParameterMode.Raw }
                            })
                            .LoadData()
                            .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                            .Listeners(lst =>
                            {
                                lst.Expand.Handler = "if(Ext.isEmpty(App.cboStkUnit.getValue())) App.cboDfltPOUnit.collapse();";
                                lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                                lst.Focus.Handler = "this.forceSelection = true;";  
                            }) 
                        
                        , HQ.Combo().ID("cboDfltSOUnit").Name("cboDfltSOUnit").HQLangCode("SOUnit").DataIndex("DfltSOUnit")
                            .HQProcedure("IN20500_pcGetDfltPOUnitSOUnit").HQColumnShow("FromUnit")
                            .DisplayField("FromUnit").ValueField("FromUnit").AllowBlank(false)
                            .Width(300).HQHeightWidth(400, 300).MarginSpec("5 0 0 0")
                            .HQParam(new StoreParameterCollection() 
                            { 
                                new StoreParameter() { Name = "@ToUnit", Value = "App.cboStkUnit.getValue()", Mode = ParameterMode.Raw },
                                new StoreParameter() { Name = "@ClassID", Value = "App.cboClassID.getValue()", Mode = ParameterMode.Raw },
                                new StoreParameter() { Name = "@InvtID", Value = "InvtID", Mode = ParameterMode.Raw }
                            })
                            .LoadData()
                            .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                            .Listeners(lst =>
                            {
                                lst.Expand.Handler = "if(Ext.isEmpty(App.cboStkUnit.getValue())) App.cboDfltSOUnit.collapse();";
                                lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                                lst.Focus.Handler = "this.forceSelection = true;";  
                            }) 
                        
                        , HQ.Combo().ID("cboMaterialType").Name("cboMaterialType").HQLangCode("MaterialType").DataIndex("MaterialType")
                            .HQProcedure("IN20500_pcMaterialTypeAll").HQColumnShow("MaterialType,Descr")
                            .DisplayField("Descr").ValueField("MaterialType")
                            .Width(300).HQHeightWidth(400, 300).MarginSpec("5 0 0 0")
                            .LoadData()
                            .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                            .Listeners(lst =>
                            {
                                lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                                lst.Focus.Handler = "this.forceSelection = true;";  
                            }) 
                        
                        , HQ.Combo().ID("cboDfltSlsTaxCat").Name("cboDfltSlsTaxCat").HQLangCode("TaxCat").DataIndex("TaxCat")
                            .HQProcedure("IN20500_pcTaxCat").HQColumnShow("CatID,Descr")
                            .DisplayField("Descr").ValueField("CatID").AllowBlank(false)
                            .Width(300).HQHeightWidth(400, 300).MarginSpec("5 0 0 0")
                            .LoadData()
                            .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                            .Listeners(lst =>
                            {
                                lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                                lst.Focus.Handler = "this.forceSelection = true;";  
                            }) 
                    )
                    
                    , X.Container().Layout(LayoutType.VBox).MinWidth(240)
                    .Items(
                        HQ.Checkbox().ID("chkStkItem").Name("chkStkItem").HQLangCode("StkItem").DataIndex("StkItem")
                            .Width(240).MarginSpec("5 0 0 30")
                            
                        , X.Container().MarginSpec("5 0 5 30")
                            .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Stretch })
                            .Items(
                                X.Hidden().ID("hdnPPCStorePicReq").DataIndex("Picture")
                                , X.Image().ID("imgPPCStorePicReq").Width(210).Height(200)

                                , X.Container().Layout(LayoutType.HBox).MarginSpec("0 0 0 0")
                                .Items(
                                    X.FileUploadField().ID("fupPPCStorePicReq").Icon(Icon.ImageAdd).ButtonText(Util.GetLang("ChooseImage")).Frame(false)
                                        .ButtonOnly(true).MarginSpec("5 0 0 0")
                                        .Listeners(lst=>{
                                            lst.Change.Fn = "fupPPCStorePicReq_Change";
                                        })

                                    , X.Button().ID("btnClearImage").Icon(Icon.ImageDelete).Text(Util.GetLang("ClearImage")).MarginSpec("5 0 0 10")
                                        .Handler("btnClearImage_click").Width(100)
                                  
                                )
                            )// Image
                    )
                    
                    , X.Container().Layout(LayoutType.VBox).MarginSpec("32 0 0 0").MinWidth(240)
                    .Items(
                        X.Container().MarginSpec("0 0 0 0")
                        .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Stretch })
                        .Items(
                            X.Hidden().ID("hdnPPCStoreMediaReq").DataIndex("Media")
                            , X.Image().ID("imgPPCStoreMediaReq").Width(210).Height(200)
                                .Listeners(l =>
                                {
                                    l.Click.Fn = "PlayVideo";
                                })

                            , X.Container().Layout(LayoutType.HBox).MarginSpec("0 0 0 0")
                            .Items(
                                X.FileUploadField().ID("fupPPCStoreMediaReq").Icon(Icon.ImageAdd).ButtonText(Util.GetLang("ChooseMedia")).Frame(false)
                                    .ButtonOnly(true).MarginSpec("5 0 0 0")
                                    .Listeners(l =>
                                    {
                                        l.Change.Fn = "fupPPCStoreMediaReq_Change";
                                    })

                                , X.Button().ID("btnDeleteMedia").Icon(Icon.ImageDelete).Text(Util.GetLang("DeleteMedia")).MarginSpec("5 0 0 10")
                                    .Handler("btnDeleteMedia_Click").Width(100)
                            )
                        )
                    )
                    
                )//Tab default info
                .Listeners(lss =>
                {
                    lss.Render.Handler = "HQ.common.control_render(this,'header')";
                })

                , X.Panel().ID("pnlAttribute")         //////////////Tab Attribute//////////////
                .Title(Util.GetLang("Attribute"))
                .Layout(LayoutType.HBox).AutoScroll(true)
                .Items(
                    X.Container().Layout(LayoutType.VBox)
                    .Items(
                        HQ.TextBox().ID("txtColor").Name("txtColor").HQLangCode("Color").DataIndex("Color")
                            .Width(300).MaxLength(20).EnforceMaxLength(true).MarginSpec("5 0 0 0")
                            
                        , HQ.TextBox().ID("txtSize").Name("txtSize").HQLangCode("Size").DataIndex("Size")
                            .Width(300).MaxLength(10).EnforceMaxLength(true).MarginSpec("5 0 0 0")
                            
                        , HQ.Combo().ID("cboStyle").Name("cboStyle").HQLangCode("Style").DataIndex("Style")
                            .HQProcedure("IN20500_pcStyle").HQColumnShow("Ma,Nganh")
                            .DisplayField("Nganh").ValueField("Ma")
                            .Width(300).HQHeightWidth(400, 300).MarginSpec("5 0 0 0")
                            .LoadData()
                            .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                            .Listeners(lst =>
                            {
                                lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                                lst.Focus.Handler = "this.forceSelection = true;";
                            })
                            
                        , HQ.NumberField().ID("txtStkVol").Name("txtStkVol").HQLangCode("StkVol").DataIndex("StkVol")
                            .Width(300).MinValue(0).MarginSpec("5 0 0 0").EnableKeyEvents(true)
                            .Listeners(p=>p.KeyDown.Fn = "event_KeyDown")
                            
                        , HQ.NumberField().ID("txtStkWt").Name("txtStkWt").HQLangCode("StkWt").DataIndex("StkWt")
                            .Width(300).MinValue(0).MarginSpec("5 0 0 0").EnableKeyEvents(true)
                            .Listeners(p=>p.KeyDown.Fn = "event_KeyDown")
                            
                        , HQ.Combo().ID("cboStkWtUnit").Name("cboStkWtUnit").HQLangCode("StkWtUnit").DataIndex("StkWtUnit")
                            .HQProcedure("IN20500_pcGetToUnit").HQColumnShow("ToUnit")
                            .DisplayField("ToUnit").ValueField("ToUnit")
                            .Width(300).HQHeightWidth(400, 300).MarginSpec("5 0 0 0")
                            .LoadData()
                            .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                            .Listeners(lst =>
                            {
                                lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                                lst.Focus.Handler = "this.forceSelection = true;";  
                            })
                            
                        , HQ.NumberField().ID("txtSOPrice").Name("txtSOPrice").HQLangCode("SOPrice").DataIndex("SOPrice")
                            .Width(300).MinValue(0).MarginSpec("5 0 0 0").EnableKeyEvents(true)
                            .Listeners(p=>p.KeyDown.Fn = "event_KeyDown")
                        , HQ.NumberField().ID("txtPOPrice").Name("txtPOPrice").HQLangCode("POPrice").DataIndex("POPrice")
                            .Width(300).MinValue(0).MarginSpec("5 0 0 0").EnableKeyEvents(true)
                            .Listeners(p=>p.KeyDown.Fn = "event_KeyDown")
                        , HQ.NumberField().ID("txtIRSftyStkDays").Name("txtIRSftyStkDays").HQLangCode("SftyStkDay").DataIndex("IRSftyStkDays")
                            .Width(300).MinValue(0).MarginSpec("5 0 0 0").EnableKeyEvents(true)
                            .Listeners(p=>p.KeyDown.Fn = "event_KeyDown")
                        , HQ.NumberField().ID("txtIRSftyStkPct").Name("txtIRSftyStkPct").HQLangCode("SftyStkPct").DataIndex("IRSftyStkPct").MarginSpec("3 0 0 0")
                            .Width(300).MinValue(0).MarginSpec("5 0 0 0").EnableKeyEvents(true)
                            .Listeners(p=>p.KeyDown.Fn = "event_KeyDown")
                        , HQ.NumberField().ID("txtIRSftyStkQty").Name("txtIRSftyStkQty").HQLangCode("SftyStkQty").DataIndex("IRSftyStkQty").MarginSpec("3 0 0 0")
                            .Width(300).MinValue(0).MarginSpec("5 0 0 0").EnableKeyEvents(true)
                            .Listeners(p=>p.KeyDown.Fn = "event_KeyDown")
                        , HQ.NumberField().ID("txtIROverStkQty").Name("txtIROverStkQty").HQLangCode("OverStkQty").DataIndex("IROverStkQty").MarginSpec("3 0 0 0")
                            .Width(300).MinValue(0).MarginSpec("5 0 0 0").EnableKeyEvents(true)
                            .Listeners(p=>p.KeyDown.Fn = "event_KeyDown")
                    )
                    
                    , X.Container().Layout(LayoutType.VBox)
                    .Items(
                        HQ.NumberField().ID("txtPrePayPct").Name("txtPrePayPct").HQLangCode("PrePayPct").DataIndex("PrePayPct")
                            .Width(300).MinValue(0).MarginSpec("5 0 0 0").EnableKeyEvents(true)
                            .Listeners(p=>p.KeyDown.Fn = "event_KeyDown")
                        , HQ.NumberField().ID("txtPOFee").Name("txtPOFee").HQLangCode("POFee").DataIndex("POFee")
                            .Width(300).MinValue(0).MarginSpec("5 0 0 0").EnableKeyEvents(true)
                            .Listeners(p=>p.KeyDown.Fn = "event_KeyDown")
                        , HQ.NumberField().ID("txtSOFee").Name("txtSOFee").HQLangCode("SOFee").DataIndex("SOFee")
                            .Width(300).MinValue(0).MarginSpec("5 0 0 0").EnableKeyEvents(true)
                            .Listeners(p=>p.KeyDown.Fn = "event_KeyDown")
                        , HQ.Combo().ID("cboVendor1").Name("cboVendor1").HQLangCode("Vendor1").DataIndex("VendID1")
                            .HQProcedure("IN20500_pcVendor").HQColumnShow("VendID,name")
                            .DisplayField("name").ValueField("VendID")
                            .Width(300).HQHeightWidth(400, 300).MarginSpec("5 0 0 0")
                            .LoadData()
                            .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                            .Listeners(lst =>
                            {
                                lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                                lst.Focus.Handler = "this.forceSelection = true;";  
                            })
                            
                        , HQ.Combo().ID("cboVendor2").Name("cboVendor2").HQLangCode("Vendor2").DataIndex("VendID2")
                            .HQProcedure("IN20500_pcVendor").HQColumnShow("VendID,name")
                            .DisplayField("name").ValueField("VendID")
                            .Width(300).HQHeightWidth(400, 300).MarginSpec("5 0 0 0")
                            .LoadData()
                            .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                            .Listeners(lst =>
                            {
                                lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                                lst.Focus.Handler = "this.forceSelection = true;";  
                            })
                            
                        , HQ.NumberField().ID("txtLossRate00").Name("txtLossRate00").HQLangCode("LossRate1").DataIndex("LossRate00")
                            .Width(300).MinValue(0).MarginSpec("5 0 0 0").EnableKeyEvents(true)
                            .Listeners(p=>p.KeyDown.Fn = "event_KeyDown")
                        , HQ.NumberField().ID("txtLossRate01").Name("txtLossRate01").HQLangCode("LossRate2").DataIndex("LossRate01")
                            .Width(300).MinValue(0).MarginSpec("5 0 0 0").EnableKeyEvents(true)
                            .Listeners(p=>p.KeyDown.Fn = "event_KeyDown")
                        , HQ.NumberField().ID("txtLossRate02").Name("txtLossRate02").HQLangCode("LossRate3").DataIndex("LossRate02")
                            .Width(300).MinValue(0).MarginSpec("5 0 0 0").EnableKeyEvents(true)
                            .Listeners(p=>p.KeyDown.Fn = "event_KeyDown")
                        , HQ.NumberField().ID("txtLossRate03").Name("txtLossRate03").HQLangCode("LossRate4").DataIndex("LossRate03")
                            .Width(300).MinValue(0).MarginSpec("5 0 0 0").EnableKeyEvents(true)
                            .Listeners(p=>p.KeyDown.Fn = "event_KeyDown")
                    )
                )//Tab Attribute
                .Listeners(lss =>
                {
                    lss.Render.Handler = "HQ.common.control_render(this,'header')";
                })

                , X.Panel().ID("pnlLotSerial")         //////////////Tab Lot//////////////
                .Title(Util.GetLang("LotSerial"))
                .Layout(LayoutType.VBox).AutoScroll(true)
                .Items(
                    X.Container().Layout(LayoutType.HBox)
                    .Items(
                        X.Container().Layout(LayoutType.VBox)
                            .Items(
                                HQ.Combo().ID("cboDfltLotSerAssign").Name("cboDfltLotSerAssign").HQLangCode("Assignment").HQProcedure("IN20500_pcSerAssign")
                                    .HQColumnShow("Code,Descr").DisplayField("Descr").ValueField("Code").DataIndex("SerAssign")
                                    .LabelWidth(160).Width(410).HQHeightWidth(400, 300).MarginSpec("5 0 0 0")
                                    .HQDBSys(false).ForceSelection(true).HQAutoLoad(true).AllowBlank(false)
                                    .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                                    .HQParam(new StoreParameterCollection() 
                                    { 
                                        new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw }
                                    })
                                    .LoadData()
                                    .Listeners(lst =>
                                    {
                                        lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                                    })

                                , HQ.Combo().ID("cboDfltLotSerMthd").Name("cboDfltLotSerMthd").HQLangCode("IssMthd").HQProcedure("IN20500_pcLotSerIssMthd")
                                    .HQColumnShow("Code,Descr").DisplayField("Descr").ValueField("Code").DataIndex("LotSerIssMthd")
                                    .LabelWidth(160).Width(410).HQHeightWidth(400, 300).MarginSpec("5 0 0 0")
                                    .HQDBSys(false).ForceSelection(true).HQAutoLoad(true).AllowBlank(false)
                                    .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                                    .HQParam(new StoreParameterCollection() 
                                    { 
                                        new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw }
                                    })
                                    .LoadData()
                                    .Listeners(lst =>
                                    {
                                        lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                                    })

                                , HQ.NumberField().ID("txtDfltLotSerShelfLife").Name("txtDfltLotSerShelfLife").HQLangCode("ShelfLife").DataIndex("ShelfLife")
                                    .LabelWidth(160).Width(410).MarginSpec("5 0 0 0").DecimalPrecision(0)

                                , HQ.NumberField().ID("txtDfltWarrantyDays").Name("txtDfltWarrantyDays").HQLangCode("WarrantyDays").DataIndex("WarrantyDays")
                                    .LabelWidth(160).Width(410).MarginSpec("5 0 0 0").DecimalPrecision(0)
                            )
                        
                        , X.Container().Layout(LayoutType.VBox)
                            .Items(
                                HQ.Checkbox().ID("chkLotSerRcptAuto").Name("chkLotSerRcptAuto").HQLangCode("LotSerRcptAuto").DataIndex("LotSerRcptAuto")
                                    .Width(300).MarginSpec("5 0 0 10")
                                    .Listeners(p=>p.Change.Fn = "chkLotSerRcptAuto_Change")
                            )
                    )

                    , X.FieldSet().Layout(LayoutType.VBox).Title(Util.GetLang("Prefix")).MarginSpec("0 0 0 48")
                    .Items(
                        HQ.Combo().ID("cboDfltLotSerFxdTyp").Name("cboDfltLotSerFxdTyp").HQLangCode("Type").HQProcedure("IN20500_pcLotSerType")
                            .HQColumnShow("Code,Descr").DisplayField("Descr").ValueField("Code").DataIndex("LotSerFxdTyp")
                            .Width(350).HQHeightWidth(400, 300).MarginSpec("0 0 0 0").LabelWidth(101)
                            .HQDBSys(false).ForceSelection(true)
                            .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                            .HQParam(new StoreParameterCollection() 
                            { 
                                new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw }
                            })
                            .LoadData()
                            .Listeners(lst =>
                            {
                                lst.Change.Fn = "cboDfltLotSerFxdTyp_Change";
                                lst.TriggerClick.Handler = "if (index == 0) { this.clearValue(); App.txtDfltLotSerFxdVal.setValue('');}";
                            })

                        , HQ.NumberField().ID("txtDfltLotSerFxdLen").Name("txtDfltLotSerFxdLen").HQLangCode("Length").DataIndex("LotSerFxdLen")
                            .Width(350).MarginSpec("5 0 0 0").DecimalPrecision(0).LabelWidth(101).MinValue(0).MaxValue(12)
                            .Listeners(lst =>
                            {
                                lst.Change.Handler = "App.txtDfltLotSerFxdVal.setValue('')";
                            })

                        , HQ.TextBox().ID("txtDfltLotSerFxdVal").Name("txtDfltLotSerFxdVal").HQLangCode("Value").DataIndex("LotSerFxdVal")
                            .Width(350).MarginSpec("5 0 10 0").MaxLength(12).EnforceMaxLength(true).LabelWidth(101).EnableKeyEvents(true).Tag("X")
                            .Listeners(lst =>
                            {
                                lst.KeyDown.Fn = "txtDfltLotSerFxdVal_KeyDown";
                                lst.Change.Fn = "PrefixValue_Change";
                                lst.Blur.Fn = "txtDfltLotSerFxdVal_Blur";
                            })
                    )

                    , X.FieldSet().Layout(LayoutType.VBox).Title(Util.GetLang("Numeric")).MarginSpec("0 0 0 48")
                    .Items(
                        HQ.NumberField().ID("txtDfltLotSerNumLen").Name("txtDfltLotSerNumLen").HQLangCode("Length").DataIndex("LotSerNumLen")
                            .Width(350).MarginSpec("5 0 0 0").DecimalPrecision(0).LabelWidth(101)
                            .Listeners(lst =>
                            {
                                lst.Change.Handler = "App.txtDfltLotSerNumVal.setValue('')";
                            })
                        
                        , HQ.TextBox().ID("txtDfltLotSerNumVal").Name("txtDfltLotSerNumVal").HQLangCode("Value").DataIndex("LotSerNumVal")
                            .Width(350).MarginSpec("5 0 10 0").MaxLength(25).EnforceMaxLength(true).LabelWidth(101).MaskRe(@"/[0-9\.]/").FieldStyle("text-align:right")
                            .Listeners(lst =>
                            {
                                lst.Change.Fn = "LastFixValue_Change";
                                lst.Blur.Fn = "txtDfltLotSerNumVal_Blur";
                            })
                    )

                    , X.Container().Layout(LayoutType.VBox)
                    .Items(
                        HQ.TextBox().ID("lblShowNextLotSerial").Name("lblShowNextLotSerial").HQLangCode("NextLotSer")
                            .LabelWidth(160).Width(410).MarginSpec("5 0 0 0").ReadOnly(true).Tag("X")
                            //.Listeners(lst =>
                            //{
                                //lst.AfterRender.Fn = "NextShowNextLotSerial_AfterRender";
                            //})
                    )
                )//Tab Lot
                .Listeners(lss =>
                {
                    lss.Render.Handler = "HQ.common.control_render(this,'header')";
                })

                , X.Panel().ID("pnlCpnyID")  //////////////Tab Cpny//////////////
                .Title(Util.GetLang("CpnyID"))
                .Layout(LayoutType.Border)
                .Items(
                    X.GridPanel()
                    .Scroll(ScrollMode.Both)
                    .View(X.GridView().TrackOver(false))
                    .ID("grdCpny")
                    .Region(Region.Center).Flex(1)
                    .Store(
                        X.Store()
                        .ID("stoCpny")
                        .PageSize(50).AutoLoad(false)
                        .Model(Util.GenerateModel(typeof(IN20500_pgIN_InvtCpny_Result), "mdlIN20500_pgIN_InvtCpny", ""))
                        .Parameters(ps =>
                        {
                            ps.Add(new StoreParameter("InvtID", "App.cboInvtID.getValue()", ParameterMode.Raw));
                        })
                        .ServerProxy(X.AjaxProxy().Url(Url.Action("GetCpny")))
                        .Listeners(l =>
                        {
                            l.Load.Fn = "stoCpny_Load";
                        })
                    )
                    .Listeners(lst => lst.Render.Handler = "HQ.common.control_render(this,'grdCpny');")
                    .SortableColumns(false)
                    .ColumnModel(
                        X.RowNumbererColumn()

                        , X.Column().Text(Util.GetLang("CpnyID")).DataIndex("CpnyID").Width(120)
                            .Editor(
                                HQ.Combo().ID("cboCpnyID").Name("cboCpnyID").ForceSelection(true)
                                .HQDBSys(false).HQProcedure("IN20500_pcClassCpnyID").HQHeightWidth(400, 300)
                                .HQColumnShow("CpnyID,CpnyName").DisplayField("CpnyID").ValueField("CpnyID")
                                .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                                .Listeners(lst =>
                                {
                                    lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                                })
                                .LoadData()
                            )
                                
                        , X.Column().Text(Util.GetLang("CpnyName")).DataIndex("CpnyName").Width(200).Renderer("renderCpnyID")

                        , X.CommandColumn().Width(150)
                        .Commands(
                            X.GridCommand()
                            .Text(("Reject"))
                            .ToolTip(t =>
                            {
                                t.Text = ("Rejectrowchanges");
                            })
                            .CommandName("reject")
                            .Icon(Icon.ArrowUndo)
                        )
                        .PrepareToolbar(t =>
                        {
                            t.Handler = "toolbar.items.get(0).setVisible(record.dirty);";
                        })
                        .Listeners(l =>
                        {
                            l.Command.Handler = "grdCpny_Reject(record);";
                        })
                    )
                    .SelectionModel(X.RowSelectionModel().ID("slmCpny").Mode(SelectionMode.Multi))
                    .BottomBar(
                        X.PagingToolbar()
                        .Items(
                            X.Label("Page size:"),
                            X.ToolbarSpacer(10),
                            X.ComboBox()
                            .Width(80)
                            .Items("1", "2", "10", "20", "30", "50")
                            .SelectedItems("50")
                            .Listeners(l => l.Select.Fn = "HQ.grid.onPageSelect")
                        )
                        .Plugins(X.ProgressBarPager())
                    )
                    .Plugins(
                        X.CellEditing()
                        .ClicksToEdit(1)
                        .Listeners(ls =>
                        {
                            ls.BeforeEdit.Fn = "grdCpny_BeforeEdit";
                            ls.Edit.Fn = "grdCpny_Edit";
                            ls.ValidateEdit.Fn = "grdCpny_ValidateEdit";
                        })
                    )
                    .Features(
                        X.GridFilters()
                            .Local(true)
                            .Filters(
                                X.StringFilter().DataIndex("CpnyID"),
                                X.StringFilter().DataIndex("CpnyName")
                            )
                    )
                )//Tab Cpny
                .Listeners(lss =>
                {
                    lss.Render.Handler = "HQ.common.control_render(this,'pnlCpnyID')";
                })

            )//xtab
        )
    )// frmMain
)
)
