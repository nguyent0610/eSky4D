@using Ext.Net;
@using Ext.Net.MVC;
@using eBiz4DWebFrame;
@using eBiz4DWebFrame.HQControl;
@using IN10100;

@model System.Collections.IEnumerable
@{
    Layout = null;
    var X = Html.X();
    var HQ = Html.HQ();
    ViewBag.Title = "IN10100";
    var acc = Session["IN10100"] as AccessRight;
}
<!DOCTYPE html>
<html>
    <head>
        <meta name="viewport" content="width=device-width" />
<script src='@Url.Content("Scripts/common.js")' type="text/javascript"></script>
<script src='@Url.Content("Scripts/Screen/IN10100.js")' type="text/javascript"></script>
<style> @*Thuoc tinh hover tren grid *@
    .x-grid-row-over .x-grid-cell-inner {
        font-weight : bold;
    }
  
  
</style>
@*Script chung*@    
<script>
    var isUpdate = strToBool('@acc.Update.ToString().ToLower()');
    var isInsert = strToBool('@acc.Insert.ToString().ToLower()');
    var isDelete = strToBool('@acc.Delete.ToString().ToLower()');
    var strKeyGridGrid = '';
    var dSMAll = '';
    var areaAll = '';
    var stateAll = '';
    //check value
    var isAllValid = function (items) {
        if (items != undefined) {
            for (var i = 0; i < items.length; i++) {
                if (items[i]["InvtID"] == undefined) continue;
                if (items[i]["InvtID"].trim() == "") {
                    callMessage(15, '@Util.GetLang("InvtID")', null);
                    return false;
                }
       

        }
        return true;
    } else {
        return true;
    }
    };
</script>   

  <title>@ViewBag.Title</title>
    </head>
    <body>   
@(Html.X().ResourceManager().Theme((Theme)Enum.Parse(typeof(Theme),Current.Theme.PassNull()==""?"Gray":Current.Theme.PassNull())))


@(Html.X().Store().ID("storeForm").AutoLoad(false)
        .Model(Util.GenerateModel(typeof(ppv_INReceiptBatch_Result), "ppv_INReceiptBatch_ResultModel", ""))
        .Proxy(
            X.AjaxProxy()
            .Url(Url.Action("GetDataForm", "IN10100"))
            .ActionMethods(action =>
            {
                action.Read = HttpMethod.POST;
            })
            .Reader(X.JsonReader().Root("data").TotalProperty("totaldata"))
        )
        .Parameters(ps =>
        {
            ps.Add(new StoreParameter("BranchID", "App.txtBranchID.getValue()", ParameterMode.Raw));
            ps.Add(new StoreParameter("BatNbr", "App.cboBatNbr.getValue()", ParameterMode.Raw));
            
        })
        .Listeners(p => p.Load.Handler = "loadDataAutoHeader()")
  )


        @(Html.X().Store().ID("storeGrid").AutoLoad(false)  
        .Model(Util.GenerateModel(typeof(ppv_IN10100_ReceiptLoad_Result), "ppv_IN10100_ReceiptLoad_ResultModel", "InvtID"))
        .Proxy(
            X.AjaxProxy()
            .Url(Url.Action("GetDataGrid", "IN10100"))
            .ActionMethods(action =>
            {
                action.Read = HttpMethod.POST;
            })
            .Reader(X.JsonReader().Root("data").TotalProperty("totaldata"))
        )
        .Parameters(ps =>
        {
            ps.Add(new StoreParameter("BatNbr", "App.cboBatNbr.getValue()", ParameterMode.Raw));
            ps.Add(new StoreParameter("BranchID", "App.txtBranchID.getValue()", ParameterMode.Raw));
            

            //ps.Add(new StoreParameter("DSM", "(App.cboDSM.getValue()==null||App.cboDSM.getValue()=='')?dSMAll:App.cboDSM.getValue()", ParameterMode.Raw));
            //ps.Add(new StoreParameter("FromDate", "App.txtFromDate.getValue()", ParameterMode.Raw));
            //ps.Add(new StoreParameter("ToDate", "App.txtToDate.getValue()", ParameterMode.Raw));
            //ps.Add(new StoreParameter("QuestionType", "App.cboReportType.getValue()", ParameterMode.Raw));
            //ps.Add(new StoreParameter("QuestionCode", "App.cboReportDetail.getValue()", ParameterMode.Raw));
    
        })      
        //.Listeners(p=>p.Load.Fn="checkPT" )
  )




     @{ Html.RenderAction("Body"); }
    </body>
</html>
 