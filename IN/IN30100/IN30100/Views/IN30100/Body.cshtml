
@using Ext.Net;
@using Ext.Net.MVC;
@using HQ.eSkyFramework;
@using HQ.eSkyFramework.HQControl;
@using IN30100;
@{
    Layout = null;
    var X = Html.X();
    var HQ = Html.HQ();
}

@(
 X.Viewport()
.Layout(LayoutType.Fit)
.Items(
        X.FormPanel()
        .ID("frmMain")
        .BodyPadding(0)
        .KeyMap(Util.SetupKeyMap())
        .TopBar(Util.SetupToolbar("Print,Save,New,Delete", true, ""))
        .Layout(LayoutType.Border)
        .FieldDefaults(act => { act.LabelAlign = LabelAlign.Right; })
        .Listeners(l =>
        {
            //l.BoxReady.Handler = "firstLoad();";
            //l.FieldChange.Fn = "frmChange";
        })
        .Items(
            X.Panel().ID("pnlHeader")
            .Region(Region.North)
            .Layout(LayoutType.VBox)
            .AutoScroll(true)
            .Items(
                X.Container().Layout(LayoutType.HBox).MarginSpec("0 0 0 0")
                .Items(
                    HQ.Combo().ID("cboInvtID").Name("cboInvtID").MarginSpec("5 0 0 0").Width(315).LabelWidth(115)
                        .HQLangCode("InvtID").HQDBSys(false).HQProcedure("IN30100_pcInventoryActiveByBranch")
                        .HQColumnShow("InvtID,Descr,Color").ForceSelection(true)
                        .DisplayField("InvtID").ValueField("InvtID").HQHeightWidth(400, 300)
                        .HQParam(new StoreParameterCollection() {
                            new StoreParameter() { Name = "@BranchID", Value ="HQ.cpnyID", Mode = ParameterMode.Raw}
                        })
                        .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                        .Listeners(lst =>
                        {
                            lst.TriggerClick.Handler = "if (index == 0) { this.focus(true);this.clearValue(); }";
                            lst.Focus.Handler = "this.forceSelection=true;";
                        })  
                        .LoadData()
                    , HQ.NumberField().ID("lblBeginStock").Name("OpQty").HQLangCode("OpQty").MarginSpec("5 0 0 0").Width(250).MinValue(0).DecimalPrecision(0).LabelWidth(130).ReadOnly(true)
                    , HQ.NumberField().ID("lblEndStock").Name("CloQty").HQLangCode("CloQty").MarginSpec("5 0 0 0").Width(250).MinValue(0).DecimalPrecision(0).LabelWidth(130).ReadOnly(true)
                     
                    
                )
           
                , X.FieldSet().Layout(LayoutType.HBox).MarginSpec("5 0 5 5")
                //.Title(Util.GetLang("FilterData"))
                .LayoutConfig(new HBoxLayoutConfig { Align=HBoxAlign.Stretch, Pack = BoxPack.Center })
                .Items(
             
                    X.Container().Layout(LayoutType.VBox).MarginSpec("5 0 0 0")
                        .Items(
                            HQ.Combo().ID("cboSiteID").Name("cboSiteID").MarginSpec("5 30 0 0").Width(300)
                                .HQLangCode("SiteId").HQDBSys(false).HQProcedure("IN30100_pcSiteAll")
                                .HQColumnShow("SiteID,Name").ForceSelection(true)
                                .DisplayField("Name").ValueField("SiteID").HQHeightWidth(400, 300)
                                .HQParam(new StoreParameterCollection() {
                                    new StoreParameter() { Name = "@BranchID", Value ="HQ.cpnyID", Mode = ParameterMode.Raw}
                                })
                                .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                                .Listeners(lst =>
                                {
                                    lst.TriggerClick.Handler = "if (index == 0) { this.focus(true);this.clearValue(); }";
                                    lst.Focus.Handler = "this.forceSelection=true;";
                                })  
                                .LoadData()
                                
                            , HQ.Combo().ID("cboCustID").Name("cboCustID").MarginSpec("5 30 0 0").Width(300)
                                .HQLangCode("CustID").HQDBSys(false).HQProcedure("IN30100_pcCustomer")
                                .HQColumnShow("CustId,CustName,Addr1,Addr2").ForceSelection(true)
                                .DisplayField("CustName").ValueField("CustId").HQHeightWidth(400, 300)
                                .HQParam(new StoreParameterCollection() {
                                    new StoreParameter() { Name = "@BranchID", Value ="HQ.cpnyID", Mode = ParameterMode.Raw}
                                })
                                .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                                .Listeners(lst =>
                                {
                                    lst.TriggerClick.Handler = "if (index == 0) { this.focus(true);this.clearValue(); }";
                                    lst.Focus.Handler = "this.forceSelection=true;";
                                })  
                                .LoadData()
                                
                            , HQ.Combo().ID("cboVendID").Name("cboVendID").MarginSpec("5 30 0 0").Width(300)
                                .HQLangCode("VendID").HQDBSys(false).HQProcedure("IN30100_pcVendor")
                                .HQColumnShow("VendID,name,Address").ForceSelection(true)
                                .DisplayField("name").ValueField("VendID").HQHeightWidth(400, 300)
                                .HQParam(new StoreParameterCollection() {
                                    new StoreParameter() { Name = "@UserID", Value ="HQ.userName", Mode = ParameterMode.Raw},
                                    new StoreParameter() { Name = "@BranchID", Value ="HQ.cpnyID", Mode = ParameterMode.Raw}
                                })
                                .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                                .Listeners(lst =>
                                {
                                    lst.TriggerClick.Handler = "if (index == 0) { this.focus(true);this.clearValue(); }";
                                    lst.Focus.Handler = "this.forceSelection=true;";
                                })  
                                .LoadData()
                                
                            , HQ.Combo().ID("cboStatus").Name("cboStatus").MarginSpec("5 30 5 0").Width(300)
                                .HQLangCode("Status").HQDBSys(false).HQProcedure("IN30100_pcStatus")
                                .HQColumnShow("Descr").ForceSelection(true)
                                .DisplayField("Descr").ValueField("Code").HQHeightWidth(400, 300).HQValue("-2",false)
                                .HQParam(new StoreParameterCollection() {
                                    new StoreParameter() { Name = "@LangID", Value ="HQ.langID", Mode = ParameterMode.Raw}
                                })
                                .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                                .Listeners(lst =>
                                {
                                    lst.TriggerClick.Handler = "if (index == 0) { this.focus(true);this.clearValue(); }";
                                    lst.Focus.Handler = "this.forceSelection=true;";
                                })  
                                .LoadData()
                                
                        )//Column 1
                        
                    , X.Container().Layout(LayoutType.VBox).MarginSpec("5 0 0 0")
                        .Items(
                            HQ.DateField().ID("lblFromDate").MarginSpec("5 0 0 0").HQLangCode("FromDate").Width(220)
                            .Format("dd/MM/yyyy").Value(DateTime.Now.ToString("dd/MM/yyyy"))
                            
                            , HQ.DateField().ID("lblToDate").MarginSpec("5 0 0 0").HQLangCode("ToDate").Width(220)
                            .Format("dd/MM/yyyy").Value(DateTime.Now.ToString("dd/MM/yyyy"))
                            
                            , HQ.Combo().ID("cboJournalType").Name("cboJournalType").MarginSpec("5 158 0 0").Width(300)
                                .HQLangCode("JrnlType").HQDBSys(false).HQProcedure("IN30100_pcJournalType")
                                .HQColumnShow("Descr").ForceSelection(true)
                                .DisplayField("Descr").ValueField("Code").HQHeightWidth(400, 300).HQValue("%",false)
                                .HQParam(new StoreParameterCollection() {
                                    new StoreParameter() { Name = "@LangID", Value ="HQ.langID", Mode = ParameterMode.Raw}
                                })
                                .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                                .Listeners(lst =>
                                {
                                    lst.TriggerClick.Handler = "if (index == 0) { this.focus(true);this.clearValue(); }";
                                    lst.Focus.Handler = "this.forceSelection=true;";
                                })  
                                .LoadData()
                                
                            , HQ.Combo().ID("cboTransactionType").Name("cboTransactionType").MarginSpec("5 158 5 0").Width(300)
                                .HQLangCode("TranType").HQDBSys(false).HQProcedure("IN30100_pcTransactionType")
                                .HQColumnShow("Descr").ForceSelection(true)
                                .DisplayField("Descr").ValueField("Code").HQHeightWidth(400, 300).HQValue("%",false)
                                .HQParam(new StoreParameterCollection() {
                                    new StoreParameter() { Name = "@LangID", Value ="HQ.langID", Mode = ParameterMode.Raw}
                                })
                                .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                                .Listeners(lst =>
                                {
                                    lst.TriggerClick.Handler = "if (index == 0) { this.focus(true);this.clearValue(); }";
                                    lst.Focus.Handler = "this.forceSelection=true;";
                                })  
                                .LoadData()
                        )//Column 2
                )
                
            )//pnl Header

            , X.Panel().ID("pnlGrid")
            .Region(Region.Center)
            .Layout(LayoutType.Border)
            .Items(
                X.GridPanel().ID("grdIN_Transactions")
        //.Hidden(true)
                    .Scroll(ScrollMode.Both)
                    .View(X.GridView().TrackOver(false).LoadMask(true))
                    .Region(Region.Center).Flex(1)
                    .SelectionMemory(false)
                        .Store(
                            X.Store()
                            .ID("stoIN_Transactions")
                            .PageSize(50)
                            .Model(Util.GenerateModel(typeof(IN30100_pgTransactionsQuery_Result), "mdlIN30100_pgTransactionsQuery", ""))
                            .ServerProxy(X.AjaxProxy().Url(Url.Action("GetIN_Transactions"))).AutoLoad(false)
                            .Parameters(ps =>
                            {
                                ps.Add(new StoreParameter("BranchID", "HQ.cpnyID", ParameterMode.Raw));
                                ps.Add(new StoreParameter("InvtID", "App.cboInvtID.getValue()", ParameterMode.Raw));
                                ps.Add(new StoreParameter("CustID", "App.cboCustID.getValue()", ParameterMode.Raw));
                                ps.Add(new StoreParameter("VendID", "App.cboVendID.getValue()", ParameterMode.Raw));
                                ps.Add(new StoreParameter("SiteID", "App.cboSiteID.getValue()", ParameterMode.Raw));
                                ps.Add(new StoreParameter("TranType", "App.cboTransactionType.getValue()", ParameterMode.Raw));
                                ps.Add(new StoreParameter("JrnlType", "App.cboJournalType.getValue()", ParameterMode.Raw));
                                ps.Add(new StoreParameter("Status", "App.cboStatus.getValue()", ParameterMode.Raw));
                                ps.Add(new StoreParameter("FromDate", "App.lblFromDate.getValue()", ParameterMode.Raw));
                                ps.Add(new StoreParameter("ToDate", "App.lblToDate.getValue()", ParameterMode.Raw));
                            })
                             .Listeners(p => p.Load.Fn = "stoLoadgrdIN_Transactions")
                            )
                    .Listeners(lst => lst.Render.Handler = "HQ.common.control_render(this,'grdIN_Transactions');")
                    .SortableColumns(false)
        ////.ColumnModel(act => { act.Listeners.HeaderClick.Fn = "grdIN_Transactions_HeaderClick"; })
                    .ColumnModel(
                        X.RowNumbererColumn().Width(40)

                        , X.Column().Text(Util.GetLang("BatNbr")).DataIndex("BatNbr").Width(100)
                        , X.DateColumn().Text(Util.GetLang("TranDate")).DataIndex("TranDate").Width(100).Format("dd/MM/yyyy")
                        , X.Column().Text(Util.GetLang("JrnlType")).DataIndex("JrnlType").Width(100)
                        , X.Column().Text(Util.GetLang("TranType")).DataIndex("TranType").Width(100)
                        , X.NumberColumn().Text(Util.GetLang("StkQty")).DataIndex("Qty1").Width(150).Align(Alignment.Right).Format("0,000")
                        , X.NumberColumn().Text(Util.GetLang("UnitPrice")).DataIndex("UnitPrice").Width(150).Align(Alignment.Right).Format("0,000")
                        , X.NumberColumn().Text(Util.GetLang("ExtAmt")).DataIndex("TranAmt").Width(150).Align(Alignment.Right).Format("0,000")
                        , X.NumberColumn().Text(Util.GetLang("Cost")).DataIndex("UnitCost").Width(150).Align(Alignment.Right).Format("0,000")
                        , X.NumberColumn().Text(Util.GetLang("ExtCost")).DataIndex("ExtCost").Width(150).Align(Alignment.Right).Format("0,000")
                        , X.Column().Text(Util.GetLang("UnitDesc")).DataIndex("UnitDesc").Width(100)
                        , X.NumberColumn().Text(Util.GetLang("CnvFact")).DataIndex("CnvFact").Width(150).Align(Alignment.Right).Format("0,000")
                        , X.Column().Text(Util.GetLang("Site")).DataIndex("SiteID").Width(100)
                        , X.Column().Text(Util.GetLang("RefNbr")).DataIndex("RefNbr").Width(100)
                        , X.Column().Text(Util.GetLang("Descr")).DataIndex("TranDesc").Width(100)
                        , X.Column().Text(Util.GetLang("ReasonCD")).DataIndex("ReasonCD").Width(100)
                        , X.Column().Text(Util.GetLang("ID")).DataIndex("ObjID").Width(100)
                        , X.Column().Text(Util.GetLang("BranchID")).DataIndex("BranchID").Width(100)
                    
                        , X.CommandColumn().Width(150)
                        .Commands(
                            X.GridCommand()
                            .Text(Util.GetLang("Reject"))
                            .ToolTip(t => t.Text = Util.GetLang("Rejectrowchanges"))
                            .CommandName("reject")
                            .Icon(Icon.ArrowUndo)
                        )
                        .PrepareToolbar(t => t.Handler = "toolbar.items.get(0).setVisible(record.dirty);")
                        .Listeners(l => l.Command.Handler = "grdIN_Transactions_Reject(record);")
                    )
                    .SelectionModel(X.RowSelectionModel().ID("slmIN_Transactions").Mode(SelectionMode.Multi))
                    .BottomBar(
                            X.PagingToolbar()
                            .Items(
                                X.Label("Page size:"),
                                X.ToolbarSpacer(10),
                                X.ComboBox()
                                .Width(80)
                                .Items("1", "2", "10", "20", "30", "50")
                                .SelectedItems("50")
                                .Listeners(l => l.Select.Fn = "HQ.grid.onPageSelect")
                            )
                            .Plugins(X.ProgressBarPager())
                        )
                    .Plugins(
                        X.CellEditing()
                        .ClicksToEdit(1)
                        .Listeners(ls =>
                        {
                            //ls.BeforeEdit.Fn = "grdIN_Transactions_BeforeEdit";
                            //ls.Edit.Fn = "grdIN_Transactions_Edit";
                            //ls.ValidateEdit.Fn = "grdIN_Transactions_ValidateEdit";
                        })
                    )

                    .Features(
                        X.GridFilters()
                            .Local(true)
                            .Filters(
                                X.StringFilter().DataIndex("BatNbr"),
                                X.StringFilter().DataIndex("TranDate"),
                                X.StringFilter().DataIndex("JrnlType"),
                                X.StringFilter().DataIndex("TranType"),
                                X.NumericFilter().DataIndex("Qty1"),
                                X.StringFilter().DataIndex("UnitPrice"),
                                X.NumericFilter().DataIndex("TranAmt"),
                                X.StringFilter().DataIndex("UnitCost"),
                                X.NumericFilter().DataIndex("ExtCost"),
                                X.StringFilter().DataIndex("UnitDesc"),
                                X.StringFilter().DataIndex("CnvFact"),
                                X.StringFilter().DataIndex("SiteID"),
                                X.StringFilter().DataIndex("RefNbr"),
                                X.StringFilter().DataIndex("TranDesc"),
                                X.StringFilter().DataIndex("ReasonCD"),
                                X.StringFilter().DataIndex("ObjID"),
                                X.StringFilter().DataIndex("BranchID")
                            )
                    )
                    
            )//pnl Grid

        )//frm Main
)//View port
)
