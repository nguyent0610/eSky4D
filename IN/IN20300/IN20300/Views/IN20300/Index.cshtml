@using Ext.Net;
@using Ext.Net.MVC;
@using HQ.eSkyFramework;
@using HQ.eSkyFramework.HQControl;
@using IN20300;

@model System.Collections.IEnumerable
@{
    Layout = null;
    var X = Html.X();
    var HQ = Html.HQ();
    ViewBag.Title = "IN20300";
    var acc = Session["IN20300"] as AccessRight;
}
<!DOCTYPE html>
<html>
 <!--Không thay đổi phần head Đổi mã màn hình IN20300.js tùy theo màn hình đổi lại-->
<head>
    <meta name="viewport" content="width=device-width" />
    <script src='@Url.Content("Scripts/hq.language"+Current.LangID+".js?"+DateTime.Now.ToString("yyyyMMddss"))' type="text/javascript"></script>
    <script src='@Url.Content("Scripts/hq.common.js?"+DateTime.Now.ToString("yyyyMMddss"))' type="text/javascript"></script>
    <script src='@Url.Content("Scripts/screen/IN20300.js?" + DateTime.Now.ToString("yyyyMMddss"))' type="text/javascript"></script>
    <style>
        .x-grid-row-over .x-grid-cell-inner {
            font-weight : bold;
        }
    </style>
    <script>
       
        HQ.cpnyID = '@Current.CpnyID';
        HQ.langID = '@Current.LangID';
        HQ.userName = '@Current.UserName';
        HQ.isUpdate = HQ.util.toBool('@acc.Update.ToString()');
        HQ.isInsert = HQ.util.toBool('@acc.Insert.ToString()');
        HQ.isDelete = HQ.util.toBool('@acc.Delete.ToString()');
        HQ.allowedSales = HQ.util.toBool('@ViewBag.allowedSales');
        HQ.prioritize = HQ.util.toBool('@ViewBag.prioritize');
        //HQ.isUpdate = false;
        //HQ.isInsert = true;
        //HQ.isDelete = true;

    </script>  
    <title>@ViewBag.Title</title>
</head>
<body>   
    @(X.ResourceManager().Theme((Theme)Enum.Parse(typeof(Theme),Current.Theme.PassNull()==""?"Gray":Current.Theme.PassNull())))
    
        @X.GridFilters()<!--Khi cache cho grid-->
        @X.ProgressBarPager()<!--Khi cache cho grid -->   
        <!-- Gọi hàm Body trong IN20300Controller để dựng view Body.cshtml, mục đích tạo cache. -->   
    
        @(X.Store().ID("stoIN_Site").AutoLoad(false)
            .Model(Util.GenerateModel(typeof(IN_Site), "mdlIN_Site", "SiteId"))       
            .Proxy(
                X.AjaxProxy()                
                .Url(Url.Action("GetIN_Site", "IN20300"))                
                .ActionMethods(action =>
                {
                    action.Read = HttpMethod.POST;
                })
                .Reader(X.JsonReader().Root("data").TotalProperty("totaldata"))
            ) 
            .Parameters(ps =>
            {
                ps.Add(new StoreParameter("SiteId", "App.cboSiteId.getValue()", ParameterMode.Raw));
                ps.Add(new StoreParameter("BranchID", "App.cboBranchID.getValue()", ParameterMode.Raw));
            })      
            .Listeners(l =>
            {
                l.BeforeLoad.Fn = "stoBeforeLoad";
                l.Load.Fn = "stoLoad";                   
            })
      )  
        @(HQ.Store().ID("stoCheckPrioritize").HQProcedure("IN20300_ppCheckPrioritize")
            .HQParam(new StoreParameterCollection()
                {
                     new StoreParameter() { Name = "@CpnyID", Value = "HQ.cpnyID", Mode = ParameterMode.Raw }
                    , new StoreParameter() { Name = "@UserName", Value = "HQ.userName", Mode = ParameterMode.Raw }
                    , new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw }
                    , new StoreParameter() { Name = "@BranchID", Value = "App.cboBranchID.getValue()", Mode = ParameterMode.Raw }
                }).LoadData())

         
        @{Html.RenderAction("Body", new { lang=Current.LangID});}   
    
</body>
</html>
 