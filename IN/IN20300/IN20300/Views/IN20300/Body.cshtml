@using Ext.Net;
@using Ext.Net.MVC;
@using HQ.eSkyFramework;
@using HQ.eSkyFramework.HQControl;
@using IN20300;
@{
    Layout = null;
    var X = Html.X();
    var HQ = Html.HQ();
}
@(
 X.Viewport().Layout(LayoutType.Fit)
    .Items(
        X.FormPanel()
        .Layout(LayoutType.Border)
        .ID("frmMain")
        .AutoScroll(true)
        .BodyPadding(0)
        .TopBar(Util.SetupToolbar("Print", true, ""))
        .KeyMap(Util.SetupKeyMap())
        .FieldDefaults(act => { act.LabelAlign = LabelAlign.Right; act.LabelWidth = 150; })
        .Listeners(l =>
        {
            l.BoxReady.Handler = "firstLoad();";
            l.FieldChange.Fn = "frmChange";
        })
        .Items(
            X.Panel()
            .Region(Region.North)
            .ID("frmLeft")

            .Items(
                    X.Container().Layout(LayoutType.HBox)
                    .Items(
                        HQ.Combo().ID("cboBranchID").Name("cboBranchID").MarginSpec("5 0 0 0").Width(350)//.AllowBlank(false)
                        .HQLangCode("CPNYID").HQDBSys(false).HQProcedure("IN20300_pcBranchAllByUser")
                        .HQColumnShow("BranchID,BranchName").ForceSelection(true).AllowBlank(false)
                        .DisplayField("BranchID").ValueField("BranchID").HQHeightWidth(400, 300).Tag("X")
                        .HQParam(new StoreParameterCollection() {
                            new StoreParameter() { Name = "@UserID", Value ="HQ.userName", Mode = ParameterMode.Raw}
                        })
                        .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                        .Listeners(lst =>
                        {
                            lst.Change.Fn = "cboBranchID_Change";
                            lst.Select.Fn = "cboBranchID_Select";
                            lst.TriggerClick.Handler = "if (index == 0) { this.focus(true);this.clearValue();}";
                        })
                        .LoadData()

                         , HQ.Checkbox().Name("AllowedSales").HQLangCode("IN20300AllowedSales").MarginSpec("5 0 0 5").ID("chkAllowedSales")
                    )
                    , X.Container().Layout(LayoutType.HBox)
                    .Items(
                         HQ.Combo().ID("cboSiteId").Name("cboSiteId").HQLangCode("SiteId").HQProcedure("IN20300_pcSitebyBranch")
                        .HQColumnShow("SiteId,Name").DisplayField("SiteId").ValueField("SiteId").MarginSpec("5 0 5 0")
                        .Width(350).HQHeightWidth(400, 500).AllowBlank(false)
                        .HQDBSys(false).MaxLength(30).EnforceMaxLength(true).HQAutoLoad(false)
                        .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                        .HQParam(new StoreParameterCollection()
                        {
                            new StoreParameter() { Name = "@BranchID", Value = "App.cboBranchID.getValue()", Mode = ParameterMode.Raw }
                        })
                        .LoadData()
                            .Listeners(lst =>
                                {
                                    lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                                    lst.Change.Fn = "cboSiteId_Change";
                                    lst.Select.Fn = "cboSiteId_Select";
                                })
                        , HQ.Checkbox().Name("Public").HQLangCode("IN20300Active").MarginSpec("5 0 0 5")

                     )
                    , HQ.TextBox().ID("txtName").Name("txtName").HQLangCode("Name").AllowBlank(false)
                            .Width(500).MarginSpec("0 0 5 0").MaxLength(200).EnforceMaxLength(true).DataIndex("Name")

                        , HQ.Combo().ID("cboSiteType").Name("cboSiteType").HQLangCode("IN20300SiteType").HQProcedure("IN20300_pcSiteType")
                        .HQColumnShow("Code,Descr").DisplayField("Descr").ValueField("Code").MarginSpec("5 0 5 0")
                        .Width(350).HQHeightWidth(400, 500).AllowBlank(true)
                        .HQDBSys(false).DataIndex("SiteType")
                        .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                        .HQParam(new StoreParameterCollection()
                        {
                            new StoreParameter() { Name = "@UserID", Value = "HQ.userName", Mode = ParameterMode.Raw },
                            new StoreParameter() { Name = "@CpnyID", Value = "HQ.cpnyID", Mode = ParameterMode.Raw },
                            new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw }
                        })
                        .LoadData()
                        .Listeners(lst =>
                            {
                                lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                            })
                    , HQ.NumberField().ID("txtPrioritize").DecimalPrecision(0).HQLangCode("IN20300Prioritize").DataIndex("Prioritize").MinValue(0)
                    .Listeners(lst => {
                        lst.Blur.Fn = "txtPrioritize_Blur";
                    })

            )
        , X.TabPanel()
        .Region(Region.Center)
        .ID("tabIN_Site")
        //.Listeners(p => p.AfterRender.Fn = "tabIN_Site_AfterRender")
        .Items(
            X.Panel()
                .ID("tabInfo")
                .Layout(LayoutType.Column)
                .Region(Region.Center)
                .Title(Util.GetLang("Info"))
                .AutoScroll(true)
                .Items(
                    X.Container()
                        .Items(
                            HQ.TextBox().ID("txtWhKeeper").Name("txtWhKeeper").HQLangCode("WhKeeper").DataIndex("WhKeeper")
                                .MaxLength(200).EnforceMaxLength(true).MarginSpec("5 0 0 0").Width(350)

                            , HQ.TextBox().ID("txtAddress1").Name("txtAddress1").HQLangCode("Address1").DataIndex("Addr1")
                                .Width(350).MarginSpec("5 0 0 0").MaxLength(200).EnforceMaxLength(true)

                            , HQ.TextBox().ID("txtAddress2").Name("txtAddress2").HQLangCode("Address2").DataIndex("Addr2")
                                .Width(350).MarginSpec("5 0 0 0").MaxLength(200).EnforceMaxLength(true)

                            , HQ.Combo().ID("cboCountry").Name("cboCountry").HQLangCode("Country").HQProcedure("IN20300_pcCountry")
                            .HQColumnShow("CountryID,Descr").DisplayField("Descr").ValueField("CountryID").DataIndex("Country")
                            .Width(350).HQHeightWidth(400, 500).MarginSpec("5 0 0 0")
                            .HQDBSys(false)
                            .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                            .LoadData()
                            .Listeners(lst =>
                            {
                                lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                                lst.Change.Fn = "cboCountry_Changed";
                                lst.Focus.Handler = "this.forceSelection = true;";
                            })
        // cboCountry                    

                            , HQ.Combo().ID("cboState").Name("cboState").HQLangCode("STATE").HQProcedure("IN20300_pcStateByCountry")
                            .HQColumnShow("State,Descr").DisplayField("Descr").ValueField("State").DataIndex("State")
                            .Width(350).HQHeightWidth(400, 500).MarginSpec("5 0 0 0")
                            .HQDBSys(false).HQAutoLoad(false)
                            .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                            .HQParam(new StoreParameterCollection()
                            {
                                new StoreParameter() { Name = "@Country",  Value = "App.cboCountry.getValue()", Mode = ParameterMode.Raw },
                            })
                                .LoadData()
                                .Listeners(lst =>
                                {
                                    lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                                    lst.Change.Fn = "cboState_Changed";
                                    lst.Focus.Handler = "this.forceSelection = true;";
                                }) // cboState

                                , HQ.Combo().ID("cboCity").Name("cboCity").HQLangCode("CITY").HQProcedure("IN20300_pcCityByCountryState")
                                .HQColumnShow("City,Name").DisplayField("Name").ValueField("City").DataIndex("City")
                                .Width(350).HQHeightWidth(400, 500).MarginSpec("5 0 0 0")
                                .HQDBSys(false).HQAutoLoad(false)
                                .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                                .HQParam(new StoreParameterCollection()
                                {
                                    new StoreParameter() { Name = "@Country",  Value = "App.cboCountry.getValue()", Mode = ParameterMode.Raw },
                                    new StoreParameter() { Name = "@State",  Value = "App.cboState.getValue()", Mode = ParameterMode.Raw },
                                })
                                .LoadData()
                                .Listeners(lst =>
                                {
                                    lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                                    lst.Focus.Handler = "this.forceSelection = true;";
                                }) // cboCity

                            , HQ.Combo().ID("cboDistrict").Name("cboDistrict").HQLangCode("DISTRICT").HQProcedure("IN20300_pcDistrictByCountryState")
                            .HQColumnShow("District,Name").DisplayField("Name").ValueField("District").DataIndex("District")
                            .Width(350).HQHeightWidth(400, 500).MarginSpec("5 0 0 0")
                            .HQDBSys(false).HQAutoLoad(false)
                            .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                            .HQParam(new StoreParameterCollection()
                            {
                                new StoreParameter() { Name = "@Country",  Value = "App.cboCountry.getValue()", Mode = ParameterMode.Raw },
                                new StoreParameter() { Name = "@State",  Value = "App.cboState.getValue()", Mode = ParameterMode.Raw },
                            })
                            .LoadData()
                            .Listeners(lst =>
                            {
                                lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                                lst.Focus.Handler = "this.forceSelection = true;";
                            }) // cboDistrict
                            , HQ.TextBox().ID("txtZipCode").Name("txtZipCode").HQLangCode("Zip Code").DataIndex("Zip")
                                .MaxLength(10).EnforceMaxLength(true).MarginSpec("5 0 0 0").HQControlFocus("").Width(350)
                                .Listeners(lst =>
                                {

                                })
                            , HQ.TextBox().ID("txtFax").Name("txtFax").HQLangCode("Fax").DataIndex("Fax")
                                .Width(350).MarginSpec("5 0 0 0").MaxLength(30).EnforceMaxLength(true)

                            , HQ.TextBox().ID("txtPhone").Name("txtPhone").HQLangCode("Phone").DataIndex("Phone")
                                .Width(350).MarginSpec("5 0 0 0").MaxLength(30).EnforceMaxLength(true)

                            , HQ.TextBox().ID("txtEmailAddr").Name("txtEmailAddr").HQLangCode("EmailAddr").DataIndex("EmailAddress")
                            .Width(350).MarginSpec("5 0 0 0").MaxLength(300).EnforceMaxLength(true)

                            , HQ.TextBox().ID("txtWhNote").Name("txtWhNote").HQLangCode("IN20300WhNote").DataIndex("WhNote")
                            .Width(350).MarginSpec("5 0 0 0").MaxLength(300).EnforceMaxLength(true)

                        )
                    )
                )

            //, X.Panel()
        //        .ID("tabCpny")
        //        .Layout(LayoutType.Border)
        //        .Region(Region.Center)
        //        .Hidden(true)
        //        .Title(Util.GetLang("AppComp"))
        //        .Padding(5)
        //        .CloseAction(CloseAction.Hide)
        //        .Items(
        //            X.GridPanel()
        //                .Frame(true)
        //                .Region(Region.Center)
        //                .AnchorHorizontal("100%")
        //                .AnchorVertical("100%")
        //                .Scroll(ScrollMode.Both)
        //                .ID("grdCompany")
        //                .StoreID("stoCompany")
        //                .ColumnModel(
        //                                X.RowNumbererColumn()
        //                                , X.Column().Text(Util.GetLang("CpnyID")).DataIndex("CpnyID").Width(120)
        //                                                    .Editor(HQ.Combo().ID("cboCpnyID").Name("cboCpnyID").MarginSpec("3 0 0 0").HideLabel(true).LabelWidth(0)
        //                                                            .HQLangCode("CpnyID").HQDBSys(false).HQProcedure("IN20300_pcCpnybyUsername")
        //                                                            .HQColumnShow("CpnyID,CpnyName")
        //                                                            .DisplayField("CpnyID")
        //                                                            .ValueField("CpnyID")
        //                                                            .HQHeightWidth(400, 300)
        //                                                            .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
        //                                                            .HQParam(new StoreParameterCollection()
        //                                                            {
        //                                                                new StoreParameter() { Name = "@username", Value = Current.UserName.ToString(), Mode = ParameterMode.Value }
        //                                                            })
        //                                                            .Listeners(lst =>
        //                                                            {
        //                                                                //lst.Change.Fn = "cboCpnyID_Changed";
        //                                                                lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
        //                                                                lst.Focus.Fn = "grdCpny_focus";
        //                                                            })
        //                                                            .LoadData()

            //                                                            )
        //                                , X.Column().Text(Util.GetLang("CpnyName")).DataIndex("CpnyID").Width(150)
        //                                .Renderer("renderCpnyName")
        //                                .Listeners(lst =>
        //                                                            {                                                                            
        //                                                                lst.Focus.Fn = "grdCpny_focus";
        //                                                            })
        //                                , X.CommandColumn().Width(120).Commands(X.GridCommand().Text(Util.GetLang("Reject"))
        //                                                                                                .ToolTip(t =>
        //                                                                                                {
        //                                                                                                    t.Text = Util.GetLang("Rejectrowchanges");
        //                                                                                                })
        //                                                                                                .CommandName("reject")
        //                                                                                                .Icon(Icon.ArrowUndo)
        //                                                                                        )
        //                                                                                        .PrepareToolbar(t =>
        //                                                                                        {
        //                                                                                            t.Handler = "toolbar.items.get(0).setVisible(record.dirty);";
        //                                                                                        })
        //                                                                                        .Listeners(l =>
        //                                                                                        {
        //                                                                                            l.Command.Handler = "record.reject();";
        //                                                                                            l.Focus.Fn = "grdCpny_focus";
        //                                                                                        })
        //                            )
        //                    .Listeners(lst =>
        //                    {
        //                        lst.Edit.Fn = "grdCompany_Edit";
        //                        lst.BeforeEdit.Fn = "grdCompany_BeforeEdit";
        //                        lst.ValidateEdit.Fn = "grdCompany_ValidateEdit";
        //                        lst.Focus.Fn = "grdCpny_focus";
        //                        lst.ItemClick.Handler = "focus = '1'";
        //                    })
        //                    .SelectionModel(X.RowSelectionModel().ID("SelectModelIN20300_pcCpnybyUsername").Mode(SelectionMode.Multi))
        //                .Plugins(X.CellEditing().ClicksToEdit(1))//Cho phep edit )                                 
        //        )
        //        .Listeners(lst =>
        //                    {                                    
        //                        lst.Focus.Fn = "grdCpny_focus";                                                                        
        //                    })
        //// Tabpanel

        )
    )
)
