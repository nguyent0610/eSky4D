@using Ext.Net;
@using Ext.Net.MVC;
@using HQ.eSkyFramework;
@using HQ.eSkyFramework.HQControl;
@using IN21500;
@{
    Layout = null;
    var X = Html.X();
    var HQ = Html.HQ();
}

@(X.Viewport()
.Layout(LayoutType.Fit)
.Items(
    X.FormPanel()
    .ID("frmMain")
    .BodyPadding(0)
    .KeyMap(Util.SetupKeyMap())
    .TopBar(Util.SetupToolbar("Print", true, ""))
    .Layout(LayoutType.Fit)
    .Listeners(p=>p.FieldChange.Fn="frmChange")
    .Items(
        ////Thiet ke giao dien o day

        X.GridPanel()
        .Scroll(ScrollMode.Both)
        .View(X.GridView().TrackOver(false))
        .ID("grdData")
        .SelectionMemory(false)
        .Store(
            X.Store()
            .ID("stoData")
            .PageSize(50)
            .Model(Util.GenerateModel(typeof(IN21500_pgData_Result), "mdlIN21500_pgData", "Code"))
            .ServerProxy(X.AjaxProxy().Url(Url.Action("GetData"))).AutoLoad(false)
            .Listeners(l =>
            {
                l.BeforeLoad.Fn = "stoBeforeLoad";
                l.Load.Fn = "stoLoad";
                l.Update.Fn = "stoChanged";                 
            })
        )
        .Listeners(p =>
                 {
                     p.BoxReady.Handler = "firstLoad();";                     
                 })
        .SortableColumns(false)
        .ColumnModel(
            X.RowNumbererColumn().Width(40),
            X.Column().ID("InvtID").Text(Util.GetLang("InvtID")).DataIndex("InvtID").Width(150)
                    .Editor(HQ.Combo().ID("cboInvtID").Name("InvtID").HideLabel(true).LabelWidth(0)
                                .HQDBSys(false).HQProcedure("IN21500_pcInvtID").ForceSelection(true)
                                .HQColumnShow("InvtID,Descr")
                                .DisplayField("InvtID")
                                .ValueField("InvtID")
                                .HQHeightWidth(400, 300).Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                                .Listeners(lst =>
                                    {                                                                                            
                                        lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                                        lst.Expand.Handler = "HQ.combo.expandScrollToItem(this);";                                                                                                                                                              
                                    }) 
                                .HQParam(new StoreParameterCollection() {
                                        new StoreParameter() { Name = "@UserID", Value = "HQ.userName", Mode = ParameterMode.Raw}
                                        ,new StoreParameter() { Name = "@BranchID", Value = "HQ.cpnyID", Mode = ParameterMode.Raw}                                                             
                                                                                            
                                    })                                                                                           
                                .LoadData()               
                    ),
            X.Column().Text(Util.GetLang("Descr")).DataIndex("Descr").Width(150),
            
            HQ.DateColumn().Text(Util.GetLang("Date")).DataIndex("Date").Width(150)
                .Editor(HQ.DateField()),
            
            //X.DateColumn().Text(Util.GetLang("Date")).DataIndex("Date").Width(150)
            //    .Editor(X.DateField().AllowBlank(false).EnforceMaxLength(true).Listeners(lst=>lst.SpecialKey.Fn="")),            
            X.CommandColumn().Width(150)
            .Commands(
                X.GridCommand()
                .Text(Util.GetLang("Reject"))
                .ToolTip(t => t.Text = Util.GetLang("Rejectrowchanges"))
                .CommandName("reject")
                .Icon(Icon.ArrowUndo)
            )
            .PrepareToolbar(t => t.Handler = "toolbar.items.get(0).setVisible(record.dirty);")
            .Listeners(l => l.Command.Handler = "grdData_Reject(record);")
        )
        .SelectionModel(X.RowSelectionModel().ID("slmData").Mode(SelectionMode.Multi))
        .BottomBar(
            X.PagingToolbar()
            .Items(
                X.Label("Page size:"),
                X.ToolbarSpacer(10),
                X.ComboBox()
                .Width(80)
                .Items("1", "2", "10", "20", "30", "50")
                .SelectedItems("50")
                .Listeners(l =>
                    {
                        l.Select.Fn = "HQ.grid.onPageSelect";                   
                    })
            )
            .Plugins(X.ProgressBarPager())
        )
        .Plugins(
            X.CellEditing()
            .ClicksToEdit(1)
            .Listeners(ls =>
            {
                ls.BeforeEdit.Fn = "grdData_BeforeEdit";
                ls.Edit.Fn = "grdData_Edit";
                ls.ValidateEdit.Fn = "grdData_ValidateEdit";               
            })
        )

        .Features(
            X.GridFilters()
                .Local(true)
                .Filters(
                    X.StringFilter().DataIndex("InvtID"),
                    X.StringFilter().DataIndex("Descr"),
                    X.DateFilter().DataIndex("Date")
                )
        )
    )
))
