//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
namespace OM21100
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class OM21100Entities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new OM21100Entities object using the connection string found in the 'OM21100Entities' section of the application configuration file.
        /// </summary>
        public OM21100Entities() : base("name=OM21100Entities", "OM21100Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new OM21100Entities object.
        /// </summary>
        public OM21100Entities(string connectionString) : base(connectionString, "OM21100Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new OM21100Entities object.
        /// </summary>
        public OM21100Entities(EntityConnection connection) : base(connection, "OM21100Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OM_Discount> OM_Discount
        {
            get
            {
                if ((_OM_Discount == null))
                {
                    _OM_Discount = base.CreateObjectSet<OM_Discount>("OM_Discount");
                }
                return _OM_Discount;
            }
        }
        private ObjectSet<OM_Discount> _OM_Discount;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OM_DiscSeq> OM_DiscSeq
        {
            get
            {
                if ((_OM_DiscSeq == null))
                {
                    _OM_DiscSeq = base.CreateObjectSet<OM_DiscSeq>("OM_DiscSeq");
                }
                return _OM_DiscSeq;
            }
        }
        private ObjectSet<OM_DiscSeq> _OM_DiscSeq;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OM_DiscBreak> OM_DiscBreak
        {
            get
            {
                if ((_OM_DiscBreak == null))
                {
                    _OM_DiscBreak = base.CreateObjectSet<OM_DiscBreak>("OM_DiscBreak");
                }
                return _OM_DiscBreak;
            }
        }
        private ObjectSet<OM_DiscBreak> _OM_DiscBreak;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OM_DiscCpny> OM_DiscCpny
        {
            get
            {
                if ((_OM_DiscCpny == null))
                {
                    _OM_DiscCpny = base.CreateObjectSet<OM_DiscCpny>("OM_DiscCpny");
                }
                return _OM_DiscCpny;
            }
        }
        private ObjectSet<OM_DiscCpny> _OM_DiscCpny;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OM_DiscCust> OM_DiscCust
        {
            get
            {
                if ((_OM_DiscCust == null))
                {
                    _OM_DiscCust = base.CreateObjectSet<OM_DiscCust>("OM_DiscCust");
                }
                return _OM_DiscCust;
            }
        }
        private ObjectSet<OM_DiscCust> _OM_DiscCust;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OM_DiscCustClass> OM_DiscCustClass
        {
            get
            {
                if ((_OM_DiscCustClass == null))
                {
                    _OM_DiscCustClass = base.CreateObjectSet<OM_DiscCustClass>("OM_DiscCustClass");
                }
                return _OM_DiscCustClass;
            }
        }
        private ObjectSet<OM_DiscCustClass> _OM_DiscCustClass;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OM_DiscFreeItem> OM_DiscFreeItem
        {
            get
            {
                if ((_OM_DiscFreeItem == null))
                {
                    _OM_DiscFreeItem = base.CreateObjectSet<OM_DiscFreeItem>("OM_DiscFreeItem");
                }
                return _OM_DiscFreeItem;
            }
        }
        private ObjectSet<OM_DiscFreeItem> _OM_DiscFreeItem;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OM_DiscItem> OM_DiscItem
        {
            get
            {
                if ((_OM_DiscItem == null))
                {
                    _OM_DiscItem = base.CreateObjectSet<OM_DiscItem>("OM_DiscItem");
                }
                return _OM_DiscItem;
            }
        }
        private ObjectSet<OM_DiscItem> _OM_DiscItem;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OM_DiscItemClass> OM_DiscItemClass
        {
            get
            {
                if ((_OM_DiscItemClass == null))
                {
                    _OM_DiscItemClass = base.CreateObjectSet<OM_DiscItemClass>("OM_DiscItemClass");
                }
                return _OM_DiscItemClass;
            }
        }
        private ObjectSet<OM_DiscItemClass> _OM_DiscItemClass;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OM_Discount EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOM_Discount(OM_Discount oM_Discount)
        {
            base.AddObject("OM_Discount", oM_Discount);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OM_DiscSeq EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOM_DiscSeq(OM_DiscSeq oM_DiscSeq)
        {
            base.AddObject("OM_DiscSeq", oM_DiscSeq);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OM_DiscBreak EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOM_DiscBreak(OM_DiscBreak oM_DiscBreak)
        {
            base.AddObject("OM_DiscBreak", oM_DiscBreak);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OM_DiscCpny EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOM_DiscCpny(OM_DiscCpny oM_DiscCpny)
        {
            base.AddObject("OM_DiscCpny", oM_DiscCpny);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OM_DiscCust EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOM_DiscCust(OM_DiscCust oM_DiscCust)
        {
            base.AddObject("OM_DiscCust", oM_DiscCust);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OM_DiscCustClass EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOM_DiscCustClass(OM_DiscCustClass oM_DiscCustClass)
        {
            base.AddObject("OM_DiscCustClass", oM_DiscCustClass);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OM_DiscFreeItem EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOM_DiscFreeItem(OM_DiscFreeItem oM_DiscFreeItem)
        {
            base.AddObject("OM_DiscFreeItem", oM_DiscFreeItem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OM_DiscItem EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOM_DiscItem(OM_DiscItem oM_DiscItem)
        {
            base.AddObject("OM_DiscItem", oM_DiscItem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OM_DiscItemClass EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOM_DiscItemClass(OM_DiscItemClass oM_DiscItemClass)
        {
            base.AddObject("OM_DiscItemClass", oM_DiscItemClass);
        }

        #endregion

        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="discID">No Metadata Documentation available.</param>
        /// <param name="discSeq">No Metadata Documentation available.</param>
        public ObjectResult<OM21100_pgDiscItemClass_Result> OM21100_pgDiscItemClass(global::System.String discID, global::System.String discSeq)
        {
            ObjectParameter discIDParameter;
            if (discID != null)
            {
                discIDParameter = new ObjectParameter("DiscID", discID);
            }
            else
            {
                discIDParameter = new ObjectParameter("DiscID", typeof(global::System.String));
            }
    
            ObjectParameter discSeqParameter;
            if (discSeq != null)
            {
                discSeqParameter = new ObjectParameter("DiscSeq", discSeq);
            }
            else
            {
                discSeqParameter = new ObjectParameter("DiscSeq", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<OM21100_pgDiscItemClass_Result>("OM21100_pgDiscItemClass", discIDParameter, discSeqParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="discID">No Metadata Documentation available.</param>
        /// <param name="discSeq">No Metadata Documentation available.</param>
        /// <param name="branchID">No Metadata Documentation available.</param>
        public ObjectResult<OM21100_pgDiscCust_Result> OM21100_pgDiscCust(global::System.String discID, global::System.String discSeq, global::System.String branchID)
        {
            ObjectParameter discIDParameter;
            if (discID != null)
            {
                discIDParameter = new ObjectParameter("DiscID", discID);
            }
            else
            {
                discIDParameter = new ObjectParameter("DiscID", typeof(global::System.String));
            }
    
            ObjectParameter discSeqParameter;
            if (discSeq != null)
            {
                discSeqParameter = new ObjectParameter("DiscSeq", discSeq);
            }
            else
            {
                discSeqParameter = new ObjectParameter("DiscSeq", typeof(global::System.String));
            }
    
            ObjectParameter branchIDParameter;
            if (branchID != null)
            {
                branchIDParameter = new ObjectParameter("BranchID", branchID);
            }
            else
            {
                branchIDParameter = new ObjectParameter("BranchID", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<OM21100_pgDiscCust_Result>("OM21100_pgDiscCust", discIDParameter, discSeqParameter, branchIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="discID">No Metadata Documentation available.</param>
        /// <param name="discSeq">No Metadata Documentation available.</param>
        public ObjectResult<OM21100_pgDiscBundle_Result> OM21100_pgDiscBundle(global::System.String discID, global::System.String discSeq)
        {
            ObjectParameter discIDParameter;
            if (discID != null)
            {
                discIDParameter = new ObjectParameter("DiscID", discID);
            }
            else
            {
                discIDParameter = new ObjectParameter("DiscID", typeof(global::System.String));
            }
    
            ObjectParameter discSeqParameter;
            if (discSeq != null)
            {
                discSeqParameter = new ObjectParameter("DiscSeq", discSeq);
            }
            else
            {
                discSeqParameter = new ObjectParameter("DiscSeq", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<OM21100_pgDiscBundle_Result>("OM21100_pgDiscBundle", discIDParameter, discSeqParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="discID">No Metadata Documentation available.</param>
        /// <param name="discSeq">No Metadata Documentation available.</param>
        public ObjectResult<OM21100_pgDiscCustClass_Result> OM21100_pgDiscCustClass(global::System.String discID, global::System.String discSeq)
        {
            ObjectParameter discIDParameter;
            if (discID != null)
            {
                discIDParameter = new ObjectParameter("DiscID", discID);
            }
            else
            {
                discIDParameter = new ObjectParameter("DiscID", typeof(global::System.String));
            }
    
            ObjectParameter discSeqParameter;
            if (discSeq != null)
            {
                discSeqParameter = new ObjectParameter("DiscSeq", discSeq);
            }
            else
            {
                discSeqParameter = new ObjectParameter("DiscSeq", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<OM21100_pgDiscCustClass_Result>("OM21100_pgDiscCustClass", discIDParameter, discSeqParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="discID">No Metadata Documentation available.</param>
        /// <param name="discSeq">No Metadata Documentation available.</param>
        public ObjectResult<OM21100_pgDiscItem_Result> OM21100_pgDiscItem(global::System.String discID, global::System.String discSeq)
        {
            ObjectParameter discIDParameter;
            if (discID != null)
            {
                discIDParameter = new ObjectParameter("DiscID", discID);
            }
            else
            {
                discIDParameter = new ObjectParameter("DiscID", typeof(global::System.String));
            }
    
            ObjectParameter discSeqParameter;
            if (discSeq != null)
            {
                discSeqParameter = new ObjectParameter("DiscSeq", discSeq);
            }
            else
            {
                discSeqParameter = new ObjectParameter("DiscSeq", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<OM21100_pgDiscItem_Result>("OM21100_pgDiscItem", discIDParameter, discSeqParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="discID">No Metadata Documentation available.</param>
        /// <param name="discSeq">No Metadata Documentation available.</param>
        /// <param name="branchID">No Metadata Documentation available.</param>
        public ObjectResult<OM21100_pgCompany_Result> OM21100_pgCompany(global::System.String discID, global::System.String discSeq, global::System.String branchID)
        {
            ObjectParameter discIDParameter;
            if (discID != null)
            {
                discIDParameter = new ObjectParameter("DiscID", discID);
            }
            else
            {
                discIDParameter = new ObjectParameter("DiscID", typeof(global::System.String));
            }
    
            ObjectParameter discSeqParameter;
            if (discSeq != null)
            {
                discSeqParameter = new ObjectParameter("DiscSeq", discSeq);
            }
            else
            {
                discSeqParameter = new ObjectParameter("DiscSeq", typeof(global::System.String));
            }
    
            ObjectParameter branchIDParameter;
            if (branchID != null)
            {
                branchIDParameter = new ObjectParameter("BranchID", branchID);
            }
            else
            {
                branchIDParameter = new ObjectParameter("BranchID", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<OM21100_pgCompany_Result>("OM21100_pgCompany", discIDParameter, discSeqParameter, branchIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="discID">No Metadata Documentation available.</param>
        /// <param name="discSeq">No Metadata Documentation available.</param>
        /// <param name="lineRef">No Metadata Documentation available.</param>
        public ObjectResult<OM21100_pgFreeItem_Result> OM21100_pgFreeItem(global::System.String discID, global::System.String discSeq, global::System.String lineRef)
        {
            ObjectParameter discIDParameter;
            if (discID != null)
            {
                discIDParameter = new ObjectParameter("DiscID", discID);
            }
            else
            {
                discIDParameter = new ObjectParameter("DiscID", typeof(global::System.String));
            }
    
            ObjectParameter discSeqParameter;
            if (discSeq != null)
            {
                discSeqParameter = new ObjectParameter("DiscSeq", discSeq);
            }
            else
            {
                discSeqParameter = new ObjectParameter("DiscSeq", typeof(global::System.String));
            }
    
            ObjectParameter lineRefParameter;
            if (lineRef != null)
            {
                lineRefParameter = new ObjectParameter("LineRef", lineRef);
            }
            else
            {
                lineRefParameter = new ObjectParameter("LineRef", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<OM21100_pgFreeItem_Result>("OM21100_pgFreeItem", discIDParameter, discSeqParameter, lineRefParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="discID">No Metadata Documentation available.</param>
        /// <param name="discSeq">No Metadata Documentation available.</param>
        public ObjectResult<OM21100_pgDiscBreak_Result> OM21100_pgDiscBreak(global::System.String discID, global::System.String discSeq)
        {
            ObjectParameter discIDParameter;
            if (discID != null)
            {
                discIDParameter = new ObjectParameter("DiscID", discID);
            }
            else
            {
                discIDParameter = new ObjectParameter("DiscID", typeof(global::System.String));
            }
    
            ObjectParameter discSeqParameter;
            if (discSeq != null)
            {
                discSeqParameter = new ObjectParameter("DiscSeq", discSeq);
            }
            else
            {
                discSeqParameter = new ObjectParameter("DiscSeq", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<OM21100_pgDiscBreak_Result>("OM21100_pgDiscBreak", discIDParameter, discSeqParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="userID">No Metadata Documentation available.</param>
        public ObjectResult<OM21100_ptCompany_Result> OM21100_ptCompany(global::System.String userID)
        {
            ObjectParameter userIDParameter;
            if (userID != null)
            {
                userIDParameter = new ObjectParameter("UserID", userID);
            }
            else
            {
                userIDParameter = new ObjectParameter("UserID", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<OM21100_ptCompany_Result>("OM21100_ptCompany", userIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="userID">No Metadata Documentation available.</param>
        public ObjectResult<OM21100_ptTerritory_Result> OM21100_ptTerritory(global::System.String userID)
        {
            ObjectParameter userIDParameter;
            if (userID != null)
            {
                userIDParameter = new ObjectParameter("UserID", userID);
            }
            else
            {
                userIDParameter = new ObjectParameter("UserID", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<OM21100_ptTerritory_Result>("OM21100_ptTerritory", userIDParameter);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OM21100Model", Name="OM_DiscBreak")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OM_DiscBreak : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OM_DiscBreak object.
        /// </summary>
        /// <param name="discID">Initial value of the DiscID property.</param>
        /// <param name="discSeq">Initial value of the DiscSeq property.</param>
        /// <param name="lineRef">Initial value of the LineRef property.</param>
        /// <param name="breakAmt">Initial value of the BreakAmt property.</param>
        /// <param name="breakQty">Initial value of the BreakQty property.</param>
        /// <param name="discAmt">Initial value of the DiscAmt property.</param>
        /// <param name="crtd_DateTime">Initial value of the Crtd_DateTime property.</param>
        /// <param name="crtd_Prog">Initial value of the Crtd_Prog property.</param>
        /// <param name="crtd_User">Initial value of the Crtd_User property.</param>
        /// <param name="lUpd_DateTime">Initial value of the LUpd_DateTime property.</param>
        /// <param name="lUpd_Prog">Initial value of the LUpd_Prog property.</param>
        /// <param name="lUpd_User">Initial value of the LUpd_User property.</param>
        /// <param name="tstamp">Initial value of the tstamp property.</param>
        public static OM_DiscBreak CreateOM_DiscBreak(global::System.String discID, global::System.String discSeq, global::System.String lineRef, global::System.Double breakAmt, global::System.Double breakQty, global::System.Double discAmt, global::System.DateTime crtd_DateTime, global::System.String crtd_Prog, global::System.String crtd_User, global::System.DateTime lUpd_DateTime, global::System.String lUpd_Prog, global::System.String lUpd_User, global::System.Byte[] tstamp)
        {
            OM_DiscBreak oM_DiscBreak = new OM_DiscBreak();
            oM_DiscBreak.DiscID = discID;
            oM_DiscBreak.DiscSeq = discSeq;
            oM_DiscBreak.LineRef = lineRef;
            oM_DiscBreak.BreakAmt = breakAmt;
            oM_DiscBreak.BreakQty = breakQty;
            oM_DiscBreak.DiscAmt = discAmt;
            oM_DiscBreak.Crtd_DateTime = crtd_DateTime;
            oM_DiscBreak.Crtd_Prog = crtd_Prog;
            oM_DiscBreak.Crtd_User = crtd_User;
            oM_DiscBreak.LUpd_DateTime = lUpd_DateTime;
            oM_DiscBreak.LUpd_Prog = lUpd_Prog;
            oM_DiscBreak.LUpd_User = lUpd_User;
            oM_DiscBreak.tstamp = tstamp;
            return oM_DiscBreak;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DiscID
        {
            get
            {
                return _DiscID;
            }
            set
            {
                if (_DiscID != value)
                {
                    OnDiscIDChanging(value);
                    ReportPropertyChanging("DiscID");
                    _DiscID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("DiscID");
                    OnDiscIDChanged();
                }
            }
        }
        private global::System.String _DiscID;
        partial void OnDiscIDChanging(global::System.String value);
        partial void OnDiscIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DiscSeq
        {
            get
            {
                return _DiscSeq;
            }
            set
            {
                if (_DiscSeq != value)
                {
                    OnDiscSeqChanging(value);
                    ReportPropertyChanging("DiscSeq");
                    _DiscSeq = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("DiscSeq");
                    OnDiscSeqChanged();
                }
            }
        }
        private global::System.String _DiscSeq;
        partial void OnDiscSeqChanging(global::System.String value);
        partial void OnDiscSeqChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LineRef
        {
            get
            {
                return _LineRef;
            }
            set
            {
                if (_LineRef != value)
                {
                    OnLineRefChanging(value);
                    ReportPropertyChanging("LineRef");
                    _LineRef = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("LineRef");
                    OnLineRefChanged();
                }
            }
        }
        private global::System.String _LineRef;
        partial void OnLineRefChanging(global::System.String value);
        partial void OnLineRefChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double BreakAmt
        {
            get
            {
                return _BreakAmt;
            }
            set
            {
                OnBreakAmtChanging(value);
                ReportPropertyChanging("BreakAmt");
                _BreakAmt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BreakAmt");
                OnBreakAmtChanged();
            }
        }
        private global::System.Double _BreakAmt;
        partial void OnBreakAmtChanging(global::System.Double value);
        partial void OnBreakAmtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double BreakQty
        {
            get
            {
                return _BreakQty;
            }
            set
            {
                OnBreakQtyChanging(value);
                ReportPropertyChanging("BreakQty");
                _BreakQty = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BreakQty");
                OnBreakQtyChanged();
            }
        }
        private global::System.Double _BreakQty;
        partial void OnBreakQtyChanging(global::System.Double value);
        partial void OnBreakQtyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double DiscAmt
        {
            get
            {
                return _DiscAmt;
            }
            set
            {
                OnDiscAmtChanging(value);
                ReportPropertyChanging("DiscAmt");
                _DiscAmt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DiscAmt");
                OnDiscAmtChanged();
            }
        }
        private global::System.Double _DiscAmt;
        partial void OnDiscAmtChanging(global::System.Double value);
        partial void OnDiscAmtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Crtd_DateTime
        {
            get
            {
                return _Crtd_DateTime;
            }
            set
            {
                OnCrtd_DateTimeChanging(value);
                ReportPropertyChanging("Crtd_DateTime");
                _Crtd_DateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Crtd_DateTime");
                OnCrtd_DateTimeChanged();
            }
        }
        private global::System.DateTime _Crtd_DateTime;
        partial void OnCrtd_DateTimeChanging(global::System.DateTime value);
        partial void OnCrtd_DateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Crtd_Prog
        {
            get
            {
                return _Crtd_Prog;
            }
            set
            {
                OnCrtd_ProgChanging(value);
                ReportPropertyChanging("Crtd_Prog");
                _Crtd_Prog = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Crtd_Prog");
                OnCrtd_ProgChanged();
            }
        }
        private global::System.String _Crtd_Prog;
        partial void OnCrtd_ProgChanging(global::System.String value);
        partial void OnCrtd_ProgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Crtd_User
        {
            get
            {
                return _Crtd_User;
            }
            set
            {
                OnCrtd_UserChanging(value);
                ReportPropertyChanging("Crtd_User");
                _Crtd_User = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Crtd_User");
                OnCrtd_UserChanged();
            }
        }
        private global::System.String _Crtd_User;
        partial void OnCrtd_UserChanging(global::System.String value);
        partial void OnCrtd_UserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LUpd_DateTime
        {
            get
            {
                return _LUpd_DateTime;
            }
            set
            {
                OnLUpd_DateTimeChanging(value);
                ReportPropertyChanging("LUpd_DateTime");
                _LUpd_DateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LUpd_DateTime");
                OnLUpd_DateTimeChanged();
            }
        }
        private global::System.DateTime _LUpd_DateTime;
        partial void OnLUpd_DateTimeChanging(global::System.DateTime value);
        partial void OnLUpd_DateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LUpd_Prog
        {
            get
            {
                return _LUpd_Prog;
            }
            set
            {
                OnLUpd_ProgChanging(value);
                ReportPropertyChanging("LUpd_Prog");
                _LUpd_Prog = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LUpd_Prog");
                OnLUpd_ProgChanged();
            }
        }
        private global::System.String _LUpd_Prog;
        partial void OnLUpd_ProgChanging(global::System.String value);
        partial void OnLUpd_ProgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LUpd_User
        {
            get
            {
                return _LUpd_User;
            }
            set
            {
                OnLUpd_UserChanging(value);
                ReportPropertyChanging("LUpd_User");
                _LUpd_User = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LUpd_User");
                OnLUpd_UserChanged();
            }
        }
        private global::System.String _LUpd_User;
        partial void OnLUpd_UserChanging(global::System.String value);
        partial void OnLUpd_UserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] tstamp
        {
            get
            {
                return StructuralObject.GetValidValue(_tstamp);
            }
            set
            {
                OntstampChanging(value);
                ReportPropertyChanging("tstamp");
                _tstamp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("tstamp");
                OntstampChanged();
            }
        }
        private global::System.Byte[] _tstamp;
        partial void OntstampChanging(global::System.Byte[] value);
        partial void OntstampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Descr
        {
            get
            {
                return _Descr;
            }
            set
            {
                OnDescrChanging(value);
                ReportPropertyChanging("Descr");
                _Descr = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Descr");
                OnDescrChanged();
            }
        }
        private global::System.String _Descr;
        partial void OnDescrChanging(global::System.String value);
        partial void OnDescrChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OM21100Model", Name="OM_DiscCpny")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OM_DiscCpny : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OM_DiscCpny object.
        /// </summary>
        /// <param name="discID">Initial value of the DiscID property.</param>
        /// <param name="discSeq">Initial value of the DiscSeq property.</param>
        /// <param name="cpnyID">Initial value of the CpnyID property.</param>
        public static OM_DiscCpny CreateOM_DiscCpny(global::System.String discID, global::System.String discSeq, global::System.String cpnyID)
        {
            OM_DiscCpny oM_DiscCpny = new OM_DiscCpny();
            oM_DiscCpny.DiscID = discID;
            oM_DiscCpny.DiscSeq = discSeq;
            oM_DiscCpny.CpnyID = cpnyID;
            return oM_DiscCpny;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DiscID
        {
            get
            {
                return _DiscID;
            }
            set
            {
                if (_DiscID != value)
                {
                    OnDiscIDChanging(value);
                    ReportPropertyChanging("DiscID");
                    _DiscID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("DiscID");
                    OnDiscIDChanged();
                }
            }
        }
        private global::System.String _DiscID;
        partial void OnDiscIDChanging(global::System.String value);
        partial void OnDiscIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DiscSeq
        {
            get
            {
                return _DiscSeq;
            }
            set
            {
                if (_DiscSeq != value)
                {
                    OnDiscSeqChanging(value);
                    ReportPropertyChanging("DiscSeq");
                    _DiscSeq = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("DiscSeq");
                    OnDiscSeqChanged();
                }
            }
        }
        private global::System.String _DiscSeq;
        partial void OnDiscSeqChanging(global::System.String value);
        partial void OnDiscSeqChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CpnyID
        {
            get
            {
                return _CpnyID;
            }
            set
            {
                if (_CpnyID != value)
                {
                    OnCpnyIDChanging(value);
                    ReportPropertyChanging("CpnyID");
                    _CpnyID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CpnyID");
                    OnCpnyIDChanged();
                }
            }
        }
        private global::System.String _CpnyID;
        partial void OnCpnyIDChanging(global::System.String value);
        partial void OnCpnyIDChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OM21100Model", Name="OM_DiscCust")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OM_DiscCust : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OM_DiscCust object.
        /// </summary>
        /// <param name="discID">Initial value of the DiscID property.</param>
        /// <param name="discSeq">Initial value of the DiscSeq property.</param>
        /// <param name="custID">Initial value of the CustID property.</param>
        /// <param name="crtd_DateTime">Initial value of the Crtd_DateTime property.</param>
        /// <param name="crtd_Prog">Initial value of the Crtd_Prog property.</param>
        /// <param name="crtd_User">Initial value of the Crtd_User property.</param>
        /// <param name="lUpd_DateTime">Initial value of the LUpd_DateTime property.</param>
        /// <param name="lUpd_Prog">Initial value of the LUpd_Prog property.</param>
        /// <param name="lUpd_User">Initial value of the LUpd_User property.</param>
        /// <param name="tstamp">Initial value of the tstamp property.</param>
        public static OM_DiscCust CreateOM_DiscCust(global::System.String discID, global::System.String discSeq, global::System.String custID, global::System.DateTime crtd_DateTime, global::System.String crtd_Prog, global::System.String crtd_User, global::System.DateTime lUpd_DateTime, global::System.String lUpd_Prog, global::System.String lUpd_User, global::System.Byte[] tstamp)
        {
            OM_DiscCust oM_DiscCust = new OM_DiscCust();
            oM_DiscCust.DiscID = discID;
            oM_DiscCust.DiscSeq = discSeq;
            oM_DiscCust.CustID = custID;
            oM_DiscCust.Crtd_DateTime = crtd_DateTime;
            oM_DiscCust.Crtd_Prog = crtd_Prog;
            oM_DiscCust.Crtd_User = crtd_User;
            oM_DiscCust.LUpd_DateTime = lUpd_DateTime;
            oM_DiscCust.LUpd_Prog = lUpd_Prog;
            oM_DiscCust.LUpd_User = lUpd_User;
            oM_DiscCust.tstamp = tstamp;
            return oM_DiscCust;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DiscID
        {
            get
            {
                return _DiscID;
            }
            set
            {
                if (_DiscID != value)
                {
                    OnDiscIDChanging(value);
                    ReportPropertyChanging("DiscID");
                    _DiscID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("DiscID");
                    OnDiscIDChanged();
                }
            }
        }
        private global::System.String _DiscID;
        partial void OnDiscIDChanging(global::System.String value);
        partial void OnDiscIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DiscSeq
        {
            get
            {
                return _DiscSeq;
            }
            set
            {
                if (_DiscSeq != value)
                {
                    OnDiscSeqChanging(value);
                    ReportPropertyChanging("DiscSeq");
                    _DiscSeq = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("DiscSeq");
                    OnDiscSeqChanged();
                }
            }
        }
        private global::System.String _DiscSeq;
        partial void OnDiscSeqChanging(global::System.String value);
        partial void OnDiscSeqChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CustID
        {
            get
            {
                return _CustID;
            }
            set
            {
                if (_CustID != value)
                {
                    OnCustIDChanging(value);
                    ReportPropertyChanging("CustID");
                    _CustID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CustID");
                    OnCustIDChanged();
                }
            }
        }
        private global::System.String _CustID;
        partial void OnCustIDChanging(global::System.String value);
        partial void OnCustIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Crtd_DateTime
        {
            get
            {
                return _Crtd_DateTime;
            }
            set
            {
                OnCrtd_DateTimeChanging(value);
                ReportPropertyChanging("Crtd_DateTime");
                _Crtd_DateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Crtd_DateTime");
                OnCrtd_DateTimeChanged();
            }
        }
        private global::System.DateTime _Crtd_DateTime;
        partial void OnCrtd_DateTimeChanging(global::System.DateTime value);
        partial void OnCrtd_DateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Crtd_Prog
        {
            get
            {
                return _Crtd_Prog;
            }
            set
            {
                OnCrtd_ProgChanging(value);
                ReportPropertyChanging("Crtd_Prog");
                _Crtd_Prog = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Crtd_Prog");
                OnCrtd_ProgChanged();
            }
        }
        private global::System.String _Crtd_Prog;
        partial void OnCrtd_ProgChanging(global::System.String value);
        partial void OnCrtd_ProgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Crtd_User
        {
            get
            {
                return _Crtd_User;
            }
            set
            {
                OnCrtd_UserChanging(value);
                ReportPropertyChanging("Crtd_User");
                _Crtd_User = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Crtd_User");
                OnCrtd_UserChanged();
            }
        }
        private global::System.String _Crtd_User;
        partial void OnCrtd_UserChanging(global::System.String value);
        partial void OnCrtd_UserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LUpd_DateTime
        {
            get
            {
                return _LUpd_DateTime;
            }
            set
            {
                OnLUpd_DateTimeChanging(value);
                ReportPropertyChanging("LUpd_DateTime");
                _LUpd_DateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LUpd_DateTime");
                OnLUpd_DateTimeChanged();
            }
        }
        private global::System.DateTime _LUpd_DateTime;
        partial void OnLUpd_DateTimeChanging(global::System.DateTime value);
        partial void OnLUpd_DateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LUpd_Prog
        {
            get
            {
                return _LUpd_Prog;
            }
            set
            {
                OnLUpd_ProgChanging(value);
                ReportPropertyChanging("LUpd_Prog");
                _LUpd_Prog = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LUpd_Prog");
                OnLUpd_ProgChanged();
            }
        }
        private global::System.String _LUpd_Prog;
        partial void OnLUpd_ProgChanging(global::System.String value);
        partial void OnLUpd_ProgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LUpd_User
        {
            get
            {
                return _LUpd_User;
            }
            set
            {
                OnLUpd_UserChanging(value);
                ReportPropertyChanging("LUpd_User");
                _LUpd_User = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LUpd_User");
                OnLUpd_UserChanged();
            }
        }
        private global::System.String _LUpd_User;
        partial void OnLUpd_UserChanging(global::System.String value);
        partial void OnLUpd_UserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] tstamp
        {
            get
            {
                return StructuralObject.GetValidValue(_tstamp);
            }
            set
            {
                OntstampChanging(value);
                ReportPropertyChanging("tstamp");
                _tstamp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("tstamp");
                OntstampChanged();
            }
        }
        private global::System.Byte[] _tstamp;
        partial void OntstampChanging(global::System.Byte[] value);
        partial void OntstampChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OM21100Model", Name="OM_DiscCustClass")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OM_DiscCustClass : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OM_DiscCustClass object.
        /// </summary>
        /// <param name="discID">Initial value of the DiscID property.</param>
        /// <param name="discSeq">Initial value of the DiscSeq property.</param>
        /// <param name="classID">Initial value of the ClassID property.</param>
        /// <param name="crtd_DateTime">Initial value of the Crtd_DateTime property.</param>
        /// <param name="crtd_Prog">Initial value of the Crtd_Prog property.</param>
        /// <param name="crtd_User">Initial value of the Crtd_User property.</param>
        /// <param name="lUpd_DateTime">Initial value of the LUpd_DateTime property.</param>
        /// <param name="lUpd_Prog">Initial value of the LUpd_Prog property.</param>
        /// <param name="lUpd_User">Initial value of the LUpd_User property.</param>
        /// <param name="tstamp">Initial value of the tstamp property.</param>
        public static OM_DiscCustClass CreateOM_DiscCustClass(global::System.String discID, global::System.String discSeq, global::System.String classID, global::System.DateTime crtd_DateTime, global::System.String crtd_Prog, global::System.String crtd_User, global::System.DateTime lUpd_DateTime, global::System.String lUpd_Prog, global::System.String lUpd_User, global::System.Byte[] tstamp)
        {
            OM_DiscCustClass oM_DiscCustClass = new OM_DiscCustClass();
            oM_DiscCustClass.DiscID = discID;
            oM_DiscCustClass.DiscSeq = discSeq;
            oM_DiscCustClass.ClassID = classID;
            oM_DiscCustClass.Crtd_DateTime = crtd_DateTime;
            oM_DiscCustClass.Crtd_Prog = crtd_Prog;
            oM_DiscCustClass.Crtd_User = crtd_User;
            oM_DiscCustClass.LUpd_DateTime = lUpd_DateTime;
            oM_DiscCustClass.LUpd_Prog = lUpd_Prog;
            oM_DiscCustClass.LUpd_User = lUpd_User;
            oM_DiscCustClass.tstamp = tstamp;
            return oM_DiscCustClass;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DiscID
        {
            get
            {
                return _DiscID;
            }
            set
            {
                if (_DiscID != value)
                {
                    OnDiscIDChanging(value);
                    ReportPropertyChanging("DiscID");
                    _DiscID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("DiscID");
                    OnDiscIDChanged();
                }
            }
        }
        private global::System.String _DiscID;
        partial void OnDiscIDChanging(global::System.String value);
        partial void OnDiscIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DiscSeq
        {
            get
            {
                return _DiscSeq;
            }
            set
            {
                if (_DiscSeq != value)
                {
                    OnDiscSeqChanging(value);
                    ReportPropertyChanging("DiscSeq");
                    _DiscSeq = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("DiscSeq");
                    OnDiscSeqChanged();
                }
            }
        }
        private global::System.String _DiscSeq;
        partial void OnDiscSeqChanging(global::System.String value);
        partial void OnDiscSeqChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ClassID
        {
            get
            {
                return _ClassID;
            }
            set
            {
                if (_ClassID != value)
                {
                    OnClassIDChanging(value);
                    ReportPropertyChanging("ClassID");
                    _ClassID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ClassID");
                    OnClassIDChanged();
                }
            }
        }
        private global::System.String _ClassID;
        partial void OnClassIDChanging(global::System.String value);
        partial void OnClassIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Crtd_DateTime
        {
            get
            {
                return _Crtd_DateTime;
            }
            set
            {
                OnCrtd_DateTimeChanging(value);
                ReportPropertyChanging("Crtd_DateTime");
                _Crtd_DateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Crtd_DateTime");
                OnCrtd_DateTimeChanged();
            }
        }
        private global::System.DateTime _Crtd_DateTime;
        partial void OnCrtd_DateTimeChanging(global::System.DateTime value);
        partial void OnCrtd_DateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Crtd_Prog
        {
            get
            {
                return _Crtd_Prog;
            }
            set
            {
                OnCrtd_ProgChanging(value);
                ReportPropertyChanging("Crtd_Prog");
                _Crtd_Prog = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Crtd_Prog");
                OnCrtd_ProgChanged();
            }
        }
        private global::System.String _Crtd_Prog;
        partial void OnCrtd_ProgChanging(global::System.String value);
        partial void OnCrtd_ProgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Crtd_User
        {
            get
            {
                return _Crtd_User;
            }
            set
            {
                OnCrtd_UserChanging(value);
                ReportPropertyChanging("Crtd_User");
                _Crtd_User = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Crtd_User");
                OnCrtd_UserChanged();
            }
        }
        private global::System.String _Crtd_User;
        partial void OnCrtd_UserChanging(global::System.String value);
        partial void OnCrtd_UserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LUpd_DateTime
        {
            get
            {
                return _LUpd_DateTime;
            }
            set
            {
                OnLUpd_DateTimeChanging(value);
                ReportPropertyChanging("LUpd_DateTime");
                _LUpd_DateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LUpd_DateTime");
                OnLUpd_DateTimeChanged();
            }
        }
        private global::System.DateTime _LUpd_DateTime;
        partial void OnLUpd_DateTimeChanging(global::System.DateTime value);
        partial void OnLUpd_DateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LUpd_Prog
        {
            get
            {
                return _LUpd_Prog;
            }
            set
            {
                OnLUpd_ProgChanging(value);
                ReportPropertyChanging("LUpd_Prog");
                _LUpd_Prog = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LUpd_Prog");
                OnLUpd_ProgChanged();
            }
        }
        private global::System.String _LUpd_Prog;
        partial void OnLUpd_ProgChanging(global::System.String value);
        partial void OnLUpd_ProgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LUpd_User
        {
            get
            {
                return _LUpd_User;
            }
            set
            {
                OnLUpd_UserChanging(value);
                ReportPropertyChanging("LUpd_User");
                _LUpd_User = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LUpd_User");
                OnLUpd_UserChanged();
            }
        }
        private global::System.String _LUpd_User;
        partial void OnLUpd_UserChanging(global::System.String value);
        partial void OnLUpd_UserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] tstamp
        {
            get
            {
                return StructuralObject.GetValidValue(_tstamp);
            }
            set
            {
                OntstampChanging(value);
                ReportPropertyChanging("tstamp");
                _tstamp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("tstamp");
                OntstampChanged();
            }
        }
        private global::System.Byte[] _tstamp;
        partial void OntstampChanging(global::System.Byte[] value);
        partial void OntstampChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OM21100Model", Name="OM_DiscFreeItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OM_DiscFreeItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OM_DiscFreeItem object.
        /// </summary>
        /// <param name="discID">Initial value of the DiscID property.</param>
        /// <param name="discSeq">Initial value of the DiscSeq property.</param>
        /// <param name="lineRef">Initial value of the LineRef property.</param>
        /// <param name="freeItemID">Initial value of the FreeItemID property.</param>
        /// <param name="freeItemQty">Initial value of the FreeItemQty property.</param>
        /// <param name="crtd_DateTime">Initial value of the Crtd_DateTime property.</param>
        /// <param name="crtd_Prog">Initial value of the Crtd_Prog property.</param>
        /// <param name="crtd_User">Initial value of the Crtd_User property.</param>
        /// <param name="lUpd_DateTime">Initial value of the LUpd_DateTime property.</param>
        /// <param name="lUpd_Prog">Initial value of the LUpd_Prog property.</param>
        /// <param name="lUpd_User">Initial value of the LUpd_User property.</param>
        /// <param name="tstamp">Initial value of the tstamp property.</param>
        public static OM_DiscFreeItem CreateOM_DiscFreeItem(global::System.String discID, global::System.String discSeq, global::System.String lineRef, global::System.String freeItemID, global::System.Double freeItemQty, global::System.DateTime crtd_DateTime, global::System.String crtd_Prog, global::System.String crtd_User, global::System.DateTime lUpd_DateTime, global::System.String lUpd_Prog, global::System.String lUpd_User, global::System.Byte[] tstamp)
        {
            OM_DiscFreeItem oM_DiscFreeItem = new OM_DiscFreeItem();
            oM_DiscFreeItem.DiscID = discID;
            oM_DiscFreeItem.DiscSeq = discSeq;
            oM_DiscFreeItem.LineRef = lineRef;
            oM_DiscFreeItem.FreeItemID = freeItemID;
            oM_DiscFreeItem.FreeItemQty = freeItemQty;
            oM_DiscFreeItem.Crtd_DateTime = crtd_DateTime;
            oM_DiscFreeItem.Crtd_Prog = crtd_Prog;
            oM_DiscFreeItem.Crtd_User = crtd_User;
            oM_DiscFreeItem.LUpd_DateTime = lUpd_DateTime;
            oM_DiscFreeItem.LUpd_Prog = lUpd_Prog;
            oM_DiscFreeItem.LUpd_User = lUpd_User;
            oM_DiscFreeItem.tstamp = tstamp;
            return oM_DiscFreeItem;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DiscID
        {
            get
            {
                return _DiscID;
            }
            set
            {
                if (_DiscID != value)
                {
                    OnDiscIDChanging(value);
                    ReportPropertyChanging("DiscID");
                    _DiscID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("DiscID");
                    OnDiscIDChanged();
                }
            }
        }
        private global::System.String _DiscID;
        partial void OnDiscIDChanging(global::System.String value);
        partial void OnDiscIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DiscSeq
        {
            get
            {
                return _DiscSeq;
            }
            set
            {
                if (_DiscSeq != value)
                {
                    OnDiscSeqChanging(value);
                    ReportPropertyChanging("DiscSeq");
                    _DiscSeq = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("DiscSeq");
                    OnDiscSeqChanged();
                }
            }
        }
        private global::System.String _DiscSeq;
        partial void OnDiscSeqChanging(global::System.String value);
        partial void OnDiscSeqChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LineRef
        {
            get
            {
                return _LineRef;
            }
            set
            {
                if (_LineRef != value)
                {
                    OnLineRefChanging(value);
                    ReportPropertyChanging("LineRef");
                    _LineRef = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("LineRef");
                    OnLineRefChanged();
                }
            }
        }
        private global::System.String _LineRef;
        partial void OnLineRefChanging(global::System.String value);
        partial void OnLineRefChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FreeItemID
        {
            get
            {
                return _FreeItemID;
            }
            set
            {
                if (_FreeItemID != value)
                {
                    OnFreeItemIDChanging(value);
                    ReportPropertyChanging("FreeItemID");
                    _FreeItemID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("FreeItemID");
                    OnFreeItemIDChanged();
                }
            }
        }
        private global::System.String _FreeItemID;
        partial void OnFreeItemIDChanging(global::System.String value);
        partial void OnFreeItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FreeItemBudgetID
        {
            get
            {
                return _FreeItemBudgetID;
            }
            set
            {
                OnFreeItemBudgetIDChanging(value);
                ReportPropertyChanging("FreeItemBudgetID");
                _FreeItemBudgetID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FreeItemBudgetID");
                OnFreeItemBudgetIDChanged();
            }
        }
        private global::System.String _FreeItemBudgetID;
        partial void OnFreeItemBudgetIDChanging(global::System.String value);
        partial void OnFreeItemBudgetIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double FreeItemQty
        {
            get
            {
                return _FreeItemQty;
            }
            set
            {
                OnFreeItemQtyChanging(value);
                ReportPropertyChanging("FreeItemQty");
                _FreeItemQty = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FreeItemQty");
                OnFreeItemQtyChanged();
            }
        }
        private global::System.Double _FreeItemQty;
        partial void OnFreeItemQtyChanging(global::System.Double value);
        partial void OnFreeItemQtyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FreeITemSiteID
        {
            get
            {
                return _FreeITemSiteID;
            }
            set
            {
                OnFreeITemSiteIDChanging(value);
                ReportPropertyChanging("FreeITemSiteID");
                _FreeITemSiteID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FreeITemSiteID");
                OnFreeITemSiteIDChanged();
            }
        }
        private global::System.String _FreeITemSiteID;
        partial void OnFreeITemSiteIDChanging(global::System.String value);
        partial void OnFreeITemSiteIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UnitDescr
        {
            get
            {
                return _UnitDescr;
            }
            set
            {
                OnUnitDescrChanging(value);
                ReportPropertyChanging("UnitDescr");
                _UnitDescr = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UnitDescr");
                OnUnitDescrChanged();
            }
        }
        private global::System.String _UnitDescr;
        partial void OnUnitDescrChanging(global::System.String value);
        partial void OnUnitDescrChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Crtd_DateTime
        {
            get
            {
                return _Crtd_DateTime;
            }
            set
            {
                OnCrtd_DateTimeChanging(value);
                ReportPropertyChanging("Crtd_DateTime");
                _Crtd_DateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Crtd_DateTime");
                OnCrtd_DateTimeChanged();
            }
        }
        private global::System.DateTime _Crtd_DateTime;
        partial void OnCrtd_DateTimeChanging(global::System.DateTime value);
        partial void OnCrtd_DateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Crtd_Prog
        {
            get
            {
                return _Crtd_Prog;
            }
            set
            {
                OnCrtd_ProgChanging(value);
                ReportPropertyChanging("Crtd_Prog");
                _Crtd_Prog = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Crtd_Prog");
                OnCrtd_ProgChanged();
            }
        }
        private global::System.String _Crtd_Prog;
        partial void OnCrtd_ProgChanging(global::System.String value);
        partial void OnCrtd_ProgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Crtd_User
        {
            get
            {
                return _Crtd_User;
            }
            set
            {
                OnCrtd_UserChanging(value);
                ReportPropertyChanging("Crtd_User");
                _Crtd_User = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Crtd_User");
                OnCrtd_UserChanged();
            }
        }
        private global::System.String _Crtd_User;
        partial void OnCrtd_UserChanging(global::System.String value);
        partial void OnCrtd_UserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LUpd_DateTime
        {
            get
            {
                return _LUpd_DateTime;
            }
            set
            {
                OnLUpd_DateTimeChanging(value);
                ReportPropertyChanging("LUpd_DateTime");
                _LUpd_DateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LUpd_DateTime");
                OnLUpd_DateTimeChanged();
            }
        }
        private global::System.DateTime _LUpd_DateTime;
        partial void OnLUpd_DateTimeChanging(global::System.DateTime value);
        partial void OnLUpd_DateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LUpd_Prog
        {
            get
            {
                return _LUpd_Prog;
            }
            set
            {
                OnLUpd_ProgChanging(value);
                ReportPropertyChanging("LUpd_Prog");
                _LUpd_Prog = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LUpd_Prog");
                OnLUpd_ProgChanged();
            }
        }
        private global::System.String _LUpd_Prog;
        partial void OnLUpd_ProgChanging(global::System.String value);
        partial void OnLUpd_ProgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LUpd_User
        {
            get
            {
                return _LUpd_User;
            }
            set
            {
                OnLUpd_UserChanging(value);
                ReportPropertyChanging("LUpd_User");
                _LUpd_User = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LUpd_User");
                OnLUpd_UserChanged();
            }
        }
        private global::System.String _LUpd_User;
        partial void OnLUpd_UserChanging(global::System.String value);
        partial void OnLUpd_UserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] tstamp
        {
            get
            {
                return StructuralObject.GetValidValue(_tstamp);
            }
            set
            {
                OntstampChanging(value);
                ReportPropertyChanging("tstamp");
                _tstamp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("tstamp");
                OntstampChanged();
            }
        }
        private global::System.Byte[] _tstamp;
        partial void OntstampChanging(global::System.Byte[] value);
        partial void OntstampChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OM21100Model", Name="OM_DiscItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OM_DiscItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OM_DiscItem object.
        /// </summary>
        /// <param name="discID">Initial value of the DiscID property.</param>
        /// <param name="discSeq">Initial value of the DiscSeq property.</param>
        /// <param name="invtID">Initial value of the InvtID property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        /// <param name="bundleAmt">Initial value of the BundleAmt property.</param>
        /// <param name="bundleNbr">Initial value of the BundleNbr property.</param>
        /// <param name="bundleQty">Initial value of the BundleQty property.</param>
        /// <param name="crtd_DateTime">Initial value of the Crtd_DateTime property.</param>
        /// <param name="crtd_Prog">Initial value of the Crtd_Prog property.</param>
        /// <param name="crtd_User">Initial value of the Crtd_User property.</param>
        /// <param name="lUpd_DateTime">Initial value of the LUpd_DateTime property.</param>
        /// <param name="lUpd_Prog">Initial value of the LUpd_Prog property.</param>
        /// <param name="lUpd_User">Initial value of the LUpd_User property.</param>
        /// <param name="tstamp">Initial value of the tstamp property.</param>
        public static OM_DiscItem CreateOM_DiscItem(global::System.String discID, global::System.String discSeq, global::System.String invtID, global::System.Int16 active, global::System.Double bundleAmt, global::System.Int16 bundleNbr, global::System.Double bundleQty, global::System.DateTime crtd_DateTime, global::System.String crtd_Prog, global::System.String crtd_User, global::System.DateTime lUpd_DateTime, global::System.String lUpd_Prog, global::System.String lUpd_User, global::System.Byte[] tstamp)
        {
            OM_DiscItem oM_DiscItem = new OM_DiscItem();
            oM_DiscItem.DiscID = discID;
            oM_DiscItem.DiscSeq = discSeq;
            oM_DiscItem.InvtID = invtID;
            oM_DiscItem.Active = active;
            oM_DiscItem.BundleAmt = bundleAmt;
            oM_DiscItem.BundleNbr = bundleNbr;
            oM_DiscItem.BundleQty = bundleQty;
            oM_DiscItem.Crtd_DateTime = crtd_DateTime;
            oM_DiscItem.Crtd_Prog = crtd_Prog;
            oM_DiscItem.Crtd_User = crtd_User;
            oM_DiscItem.LUpd_DateTime = lUpd_DateTime;
            oM_DiscItem.LUpd_Prog = lUpd_Prog;
            oM_DiscItem.LUpd_User = lUpd_User;
            oM_DiscItem.tstamp = tstamp;
            return oM_DiscItem;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DiscID
        {
            get
            {
                return _DiscID;
            }
            set
            {
                if (_DiscID != value)
                {
                    OnDiscIDChanging(value);
                    ReportPropertyChanging("DiscID");
                    _DiscID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("DiscID");
                    OnDiscIDChanged();
                }
            }
        }
        private global::System.String _DiscID;
        partial void OnDiscIDChanging(global::System.String value);
        partial void OnDiscIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DiscSeq
        {
            get
            {
                return _DiscSeq;
            }
            set
            {
                if (_DiscSeq != value)
                {
                    OnDiscSeqChanging(value);
                    ReportPropertyChanging("DiscSeq");
                    _DiscSeq = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("DiscSeq");
                    OnDiscSeqChanged();
                }
            }
        }
        private global::System.String _DiscSeq;
        partial void OnDiscSeqChanging(global::System.String value);
        partial void OnDiscSeqChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String InvtID
        {
            get
            {
                return _InvtID;
            }
            set
            {
                if (_InvtID != value)
                {
                    OnInvtIDChanging(value);
                    ReportPropertyChanging("InvtID");
                    _InvtID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("InvtID");
                    OnInvtIDChanged();
                }
            }
        }
        private global::System.String _InvtID;
        partial void OnInvtIDChanging(global::System.String value);
        partial void OnInvtIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Int16 _Active;
        partial void OnActiveChanging(global::System.Int16 value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double BundleAmt
        {
            get
            {
                return _BundleAmt;
            }
            set
            {
                OnBundleAmtChanging(value);
                ReportPropertyChanging("BundleAmt");
                _BundleAmt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BundleAmt");
                OnBundleAmtChanged();
            }
        }
        private global::System.Double _BundleAmt;
        partial void OnBundleAmtChanging(global::System.Double value);
        partial void OnBundleAmtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 BundleNbr
        {
            get
            {
                return _BundleNbr;
            }
            set
            {
                OnBundleNbrChanging(value);
                ReportPropertyChanging("BundleNbr");
                _BundleNbr = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BundleNbr");
                OnBundleNbrChanged();
            }
        }
        private global::System.Int16 _BundleNbr;
        partial void OnBundleNbrChanging(global::System.Int16 value);
        partial void OnBundleNbrChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BundleOrItem
        {
            get
            {
                return _BundleOrItem;
            }
            set
            {
                OnBundleOrItemChanging(value);
                ReportPropertyChanging("BundleOrItem");
                _BundleOrItem = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BundleOrItem");
                OnBundleOrItemChanged();
            }
        }
        private global::System.String _BundleOrItem;
        partial void OnBundleOrItemChanging(global::System.String value);
        partial void OnBundleOrItemChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double BundleQty
        {
            get
            {
                return _BundleQty;
            }
            set
            {
                OnBundleQtyChanging(value);
                ReportPropertyChanging("BundleQty");
                _BundleQty = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BundleQty");
                OnBundleQtyChanged();
            }
        }
        private global::System.Double _BundleQty;
        partial void OnBundleQtyChanging(global::System.Double value);
        partial void OnBundleQtyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DiscType
        {
            get
            {
                return _DiscType;
            }
            set
            {
                OnDiscTypeChanging(value);
                ReportPropertyChanging("DiscType");
                _DiscType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DiscType");
                OnDiscTypeChanged();
            }
        }
        private global::System.String _DiscType;
        partial void OnDiscTypeChanging(global::System.String value);
        partial void OnDiscTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UnitDesc
        {
            get
            {
                return _UnitDesc;
            }
            set
            {
                OnUnitDescChanging(value);
                ReportPropertyChanging("UnitDesc");
                _UnitDesc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UnitDesc");
                OnUnitDescChanged();
            }
        }
        private global::System.String _UnitDesc;
        partial void OnUnitDescChanging(global::System.String value);
        partial void OnUnitDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Crtd_DateTime
        {
            get
            {
                return _Crtd_DateTime;
            }
            set
            {
                OnCrtd_DateTimeChanging(value);
                ReportPropertyChanging("Crtd_DateTime");
                _Crtd_DateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Crtd_DateTime");
                OnCrtd_DateTimeChanged();
            }
        }
        private global::System.DateTime _Crtd_DateTime;
        partial void OnCrtd_DateTimeChanging(global::System.DateTime value);
        partial void OnCrtd_DateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Crtd_Prog
        {
            get
            {
                return _Crtd_Prog;
            }
            set
            {
                OnCrtd_ProgChanging(value);
                ReportPropertyChanging("Crtd_Prog");
                _Crtd_Prog = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Crtd_Prog");
                OnCrtd_ProgChanged();
            }
        }
        private global::System.String _Crtd_Prog;
        partial void OnCrtd_ProgChanging(global::System.String value);
        partial void OnCrtd_ProgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Crtd_User
        {
            get
            {
                return _Crtd_User;
            }
            set
            {
                OnCrtd_UserChanging(value);
                ReportPropertyChanging("Crtd_User");
                _Crtd_User = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Crtd_User");
                OnCrtd_UserChanged();
            }
        }
        private global::System.String _Crtd_User;
        partial void OnCrtd_UserChanging(global::System.String value);
        partial void OnCrtd_UserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LUpd_DateTime
        {
            get
            {
                return _LUpd_DateTime;
            }
            set
            {
                OnLUpd_DateTimeChanging(value);
                ReportPropertyChanging("LUpd_DateTime");
                _LUpd_DateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LUpd_DateTime");
                OnLUpd_DateTimeChanged();
            }
        }
        private global::System.DateTime _LUpd_DateTime;
        partial void OnLUpd_DateTimeChanging(global::System.DateTime value);
        partial void OnLUpd_DateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LUpd_Prog
        {
            get
            {
                return _LUpd_Prog;
            }
            set
            {
                OnLUpd_ProgChanging(value);
                ReportPropertyChanging("LUpd_Prog");
                _LUpd_Prog = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LUpd_Prog");
                OnLUpd_ProgChanged();
            }
        }
        private global::System.String _LUpd_Prog;
        partial void OnLUpd_ProgChanging(global::System.String value);
        partial void OnLUpd_ProgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LUpd_User
        {
            get
            {
                return _LUpd_User;
            }
            set
            {
                OnLUpd_UserChanging(value);
                ReportPropertyChanging("LUpd_User");
                _LUpd_User = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LUpd_User");
                OnLUpd_UserChanged();
            }
        }
        private global::System.String _LUpd_User;
        partial void OnLUpd_UserChanging(global::System.String value);
        partial void OnLUpd_UserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] tstamp
        {
            get
            {
                return StructuralObject.GetValidValue(_tstamp);
            }
            set
            {
                OntstampChanging(value);
                ReportPropertyChanging("tstamp");
                _tstamp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("tstamp");
                OntstampChanged();
            }
        }
        private global::System.Byte[] _tstamp;
        partial void OntstampChanging(global::System.Byte[] value);
        partial void OntstampChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OM21100Model", Name="OM_DiscItemClass")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OM_DiscItemClass : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OM_DiscItemClass object.
        /// </summary>
        /// <param name="discID">Initial value of the DiscID property.</param>
        /// <param name="discSeq">Initial value of the DiscSeq property.</param>
        /// <param name="classID">Initial value of the ClassID property.</param>
        /// <param name="crtd_DateTime">Initial value of the Crtd_DateTime property.</param>
        /// <param name="crtd_Prog">Initial value of the Crtd_Prog property.</param>
        /// <param name="crtd_User">Initial value of the Crtd_User property.</param>
        /// <param name="lUpd_DateTime">Initial value of the LUpd_DateTime property.</param>
        /// <param name="lUpd_Prog">Initial value of the LUpd_Prog property.</param>
        /// <param name="lUpd_User">Initial value of the LUpd_User property.</param>
        /// <param name="tstamp">Initial value of the tstamp property.</param>
        public static OM_DiscItemClass CreateOM_DiscItemClass(global::System.String discID, global::System.String discSeq, global::System.String classID, global::System.DateTime crtd_DateTime, global::System.String crtd_Prog, global::System.String crtd_User, global::System.DateTime lUpd_DateTime, global::System.String lUpd_Prog, global::System.String lUpd_User, global::System.Byte[] tstamp)
        {
            OM_DiscItemClass oM_DiscItemClass = new OM_DiscItemClass();
            oM_DiscItemClass.DiscID = discID;
            oM_DiscItemClass.DiscSeq = discSeq;
            oM_DiscItemClass.ClassID = classID;
            oM_DiscItemClass.Crtd_DateTime = crtd_DateTime;
            oM_DiscItemClass.Crtd_Prog = crtd_Prog;
            oM_DiscItemClass.Crtd_User = crtd_User;
            oM_DiscItemClass.LUpd_DateTime = lUpd_DateTime;
            oM_DiscItemClass.LUpd_Prog = lUpd_Prog;
            oM_DiscItemClass.LUpd_User = lUpd_User;
            oM_DiscItemClass.tstamp = tstamp;
            return oM_DiscItemClass;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DiscID
        {
            get
            {
                return _DiscID;
            }
            set
            {
                if (_DiscID != value)
                {
                    OnDiscIDChanging(value);
                    ReportPropertyChanging("DiscID");
                    _DiscID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("DiscID");
                    OnDiscIDChanged();
                }
            }
        }
        private global::System.String _DiscID;
        partial void OnDiscIDChanging(global::System.String value);
        partial void OnDiscIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DiscSeq
        {
            get
            {
                return _DiscSeq;
            }
            set
            {
                if (_DiscSeq != value)
                {
                    OnDiscSeqChanging(value);
                    ReportPropertyChanging("DiscSeq");
                    _DiscSeq = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("DiscSeq");
                    OnDiscSeqChanged();
                }
            }
        }
        private global::System.String _DiscSeq;
        partial void OnDiscSeqChanging(global::System.String value);
        partial void OnDiscSeqChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ClassID
        {
            get
            {
                return _ClassID;
            }
            set
            {
                if (_ClassID != value)
                {
                    OnClassIDChanging(value);
                    ReportPropertyChanging("ClassID");
                    _ClassID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ClassID");
                    OnClassIDChanged();
                }
            }
        }
        private global::System.String _ClassID;
        partial void OnClassIDChanging(global::System.String value);
        partial void OnClassIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Crtd_DateTime
        {
            get
            {
                return _Crtd_DateTime;
            }
            set
            {
                OnCrtd_DateTimeChanging(value);
                ReportPropertyChanging("Crtd_DateTime");
                _Crtd_DateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Crtd_DateTime");
                OnCrtd_DateTimeChanged();
            }
        }
        private global::System.DateTime _Crtd_DateTime;
        partial void OnCrtd_DateTimeChanging(global::System.DateTime value);
        partial void OnCrtd_DateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Crtd_Prog
        {
            get
            {
                return _Crtd_Prog;
            }
            set
            {
                OnCrtd_ProgChanging(value);
                ReportPropertyChanging("Crtd_Prog");
                _Crtd_Prog = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Crtd_Prog");
                OnCrtd_ProgChanged();
            }
        }
        private global::System.String _Crtd_Prog;
        partial void OnCrtd_ProgChanging(global::System.String value);
        partial void OnCrtd_ProgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Crtd_User
        {
            get
            {
                return _Crtd_User;
            }
            set
            {
                OnCrtd_UserChanging(value);
                ReportPropertyChanging("Crtd_User");
                _Crtd_User = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Crtd_User");
                OnCrtd_UserChanged();
            }
        }
        private global::System.String _Crtd_User;
        partial void OnCrtd_UserChanging(global::System.String value);
        partial void OnCrtd_UserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LUpd_DateTime
        {
            get
            {
                return _LUpd_DateTime;
            }
            set
            {
                OnLUpd_DateTimeChanging(value);
                ReportPropertyChanging("LUpd_DateTime");
                _LUpd_DateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LUpd_DateTime");
                OnLUpd_DateTimeChanged();
            }
        }
        private global::System.DateTime _LUpd_DateTime;
        partial void OnLUpd_DateTimeChanging(global::System.DateTime value);
        partial void OnLUpd_DateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LUpd_Prog
        {
            get
            {
                return _LUpd_Prog;
            }
            set
            {
                OnLUpd_ProgChanging(value);
                ReportPropertyChanging("LUpd_Prog");
                _LUpd_Prog = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LUpd_Prog");
                OnLUpd_ProgChanged();
            }
        }
        private global::System.String _LUpd_Prog;
        partial void OnLUpd_ProgChanging(global::System.String value);
        partial void OnLUpd_ProgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LUpd_User
        {
            get
            {
                return _LUpd_User;
            }
            set
            {
                OnLUpd_UserChanging(value);
                ReportPropertyChanging("LUpd_User");
                _LUpd_User = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LUpd_User");
                OnLUpd_UserChanged();
            }
        }
        private global::System.String _LUpd_User;
        partial void OnLUpd_UserChanging(global::System.String value);
        partial void OnLUpd_UserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] tstamp
        {
            get
            {
                return StructuralObject.GetValidValue(_tstamp);
            }
            set
            {
                OntstampChanging(value);
                ReportPropertyChanging("tstamp");
                _tstamp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("tstamp");
                OntstampChanged();
            }
        }
        private global::System.Byte[] _tstamp;
        partial void OntstampChanging(global::System.Byte[] value);
        partial void OntstampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UnitDesc
        {
            get
            {
                return _UnitDesc;
            }
            set
            {
                OnUnitDescChanging(value);
                ReportPropertyChanging("UnitDesc");
                _UnitDesc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UnitDesc");
                OnUnitDescChanged();
            }
        }
        private global::System.String _UnitDesc;
        partial void OnUnitDescChanging(global::System.String value);
        partial void OnUnitDescChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OM21100Model", Name="OM_Discount")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OM_Discount : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OM_Discount object.
        /// </summary>
        /// <param name="discID">Initial value of the DiscID property.</param>
        /// <param name="crtd_DateTime">Initial value of the Crtd_DateTime property.</param>
        /// <param name="crtd_Prog">Initial value of the Crtd_Prog property.</param>
        /// <param name="crtd_User">Initial value of the Crtd_User property.</param>
        /// <param name="lUpd_DateTime">Initial value of the LUpd_DateTime property.</param>
        /// <param name="lUpd_Prog">Initial value of the LUpd_Prog property.</param>
        /// <param name="lUpd_User">Initial value of the LUpd_User property.</param>
        /// <param name="tstamp">Initial value of the tstamp property.</param>
        public static OM_Discount CreateOM_Discount(global::System.String discID, global::System.DateTime crtd_DateTime, global::System.String crtd_Prog, global::System.String crtd_User, global::System.DateTime lUpd_DateTime, global::System.String lUpd_Prog, global::System.String lUpd_User, global::System.Byte[] tstamp)
        {
            OM_Discount oM_Discount = new OM_Discount();
            oM_Discount.DiscID = discID;
            oM_Discount.Crtd_DateTime = crtd_DateTime;
            oM_Discount.Crtd_Prog = crtd_Prog;
            oM_Discount.Crtd_User = crtd_User;
            oM_Discount.LUpd_DateTime = lUpd_DateTime;
            oM_Discount.LUpd_Prog = lUpd_Prog;
            oM_Discount.LUpd_User = lUpd_User;
            oM_Discount.tstamp = tstamp;
            return oM_Discount;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DiscID
        {
            get
            {
                return _DiscID;
            }
            set
            {
                if (_DiscID != value)
                {
                    OnDiscIDChanging(value);
                    ReportPropertyChanging("DiscID");
                    _DiscID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("DiscID");
                    OnDiscIDChanged();
                }
            }
        }
        private global::System.String _DiscID;
        partial void OnDiscIDChanging(global::System.String value);
        partial void OnDiscIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Descr
        {
            get
            {
                return _Descr;
            }
            set
            {
                OnDescrChanging(value);
                ReportPropertyChanging("Descr");
                _Descr = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Descr");
                OnDescrChanged();
            }
        }
        private global::System.String _Descr;
        partial void OnDescrChanging(global::System.String value);
        partial void OnDescrChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DiscClass
        {
            get
            {
                return _DiscClass;
            }
            set
            {
                OnDiscClassChanging(value);
                ReportPropertyChanging("DiscClass");
                _DiscClass = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DiscClass");
                OnDiscClassChanged();
            }
        }
        private global::System.String _DiscClass;
        partial void OnDiscClassChanging(global::System.String value);
        partial void OnDiscClassChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DiscType
        {
            get
            {
                return _DiscType;
            }
            set
            {
                OnDiscTypeChanging(value);
                ReportPropertyChanging("DiscType");
                _DiscType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DiscType");
                OnDiscTypeChanged();
            }
        }
        private global::System.String _DiscType;
        partial void OnDiscTypeChanging(global::System.String value);
        partial void OnDiscTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Crtd_DateTime
        {
            get
            {
                return _Crtd_DateTime;
            }
            set
            {
                OnCrtd_DateTimeChanging(value);
                ReportPropertyChanging("Crtd_DateTime");
                _Crtd_DateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Crtd_DateTime");
                OnCrtd_DateTimeChanged();
            }
        }
        private global::System.DateTime _Crtd_DateTime;
        partial void OnCrtd_DateTimeChanging(global::System.DateTime value);
        partial void OnCrtd_DateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Crtd_Prog
        {
            get
            {
                return _Crtd_Prog;
            }
            set
            {
                OnCrtd_ProgChanging(value);
                ReportPropertyChanging("Crtd_Prog");
                _Crtd_Prog = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Crtd_Prog");
                OnCrtd_ProgChanged();
            }
        }
        private global::System.String _Crtd_Prog;
        partial void OnCrtd_ProgChanging(global::System.String value);
        partial void OnCrtd_ProgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Crtd_User
        {
            get
            {
                return _Crtd_User;
            }
            set
            {
                OnCrtd_UserChanging(value);
                ReportPropertyChanging("Crtd_User");
                _Crtd_User = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Crtd_User");
                OnCrtd_UserChanged();
            }
        }
        private global::System.String _Crtd_User;
        partial void OnCrtd_UserChanging(global::System.String value);
        partial void OnCrtd_UserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LUpd_DateTime
        {
            get
            {
                return _LUpd_DateTime;
            }
            set
            {
                OnLUpd_DateTimeChanging(value);
                ReportPropertyChanging("LUpd_DateTime");
                _LUpd_DateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LUpd_DateTime");
                OnLUpd_DateTimeChanged();
            }
        }
        private global::System.DateTime _LUpd_DateTime;
        partial void OnLUpd_DateTimeChanging(global::System.DateTime value);
        partial void OnLUpd_DateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LUpd_Prog
        {
            get
            {
                return _LUpd_Prog;
            }
            set
            {
                OnLUpd_ProgChanging(value);
                ReportPropertyChanging("LUpd_Prog");
                _LUpd_Prog = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LUpd_Prog");
                OnLUpd_ProgChanged();
            }
        }
        private global::System.String _LUpd_Prog;
        partial void OnLUpd_ProgChanging(global::System.String value);
        partial void OnLUpd_ProgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LUpd_User
        {
            get
            {
                return _LUpd_User;
            }
            set
            {
                OnLUpd_UserChanging(value);
                ReportPropertyChanging("LUpd_User");
                _LUpd_User = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LUpd_User");
                OnLUpd_UserChanged();
            }
        }
        private global::System.String _LUpd_User;
        partial void OnLUpd_UserChanging(global::System.String value);
        partial void OnLUpd_UserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] tstamp
        {
            get
            {
                return StructuralObject.GetValidValue(_tstamp);
            }
            set
            {
                OntstampChanging(value);
                ReportPropertyChanging("tstamp");
                _tstamp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("tstamp");
                OntstampChanged();
            }
        }
        private global::System.Byte[] _tstamp;
        partial void OntstampChanging(global::System.Byte[] value);
        partial void OntstampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Crtd_Role
        {
            get
            {
                return _Crtd_Role;
            }
            set
            {
                OnCrtd_RoleChanging(value);
                ReportPropertyChanging("Crtd_Role");
                _Crtd_Role = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Crtd_Role");
                OnCrtd_RoleChanged();
            }
        }
        private global::System.String _Crtd_Role;
        partial void OnCrtd_RoleChanging(global::System.String value);
        partial void OnCrtd_RoleChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OM21100Model", Name="OM_DiscSeq")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OM_DiscSeq : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OM_DiscSeq object.
        /// </summary>
        /// <param name="discID">Initial value of the DiscID property.</param>
        /// <param name="discSeq">Initial value of the DiscSeq property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        /// <param name="endDate">Initial value of the EndDate property.</param>
        /// <param name="promo">Initial value of the Promo property.</param>
        /// <param name="startDate">Initial value of the StartDate property.</param>
        /// <param name="crtd_DateTime">Initial value of the Crtd_DateTime property.</param>
        /// <param name="crtd_Prog">Initial value of the Crtd_Prog property.</param>
        /// <param name="crtd_User">Initial value of the Crtd_User property.</param>
        /// <param name="lUpd_DateTime">Initial value of the LUpd_DateTime property.</param>
        /// <param name="lUpd_Prog">Initial value of the LUpd_Prog property.</param>
        /// <param name="lUpd_User">Initial value of the LUpd_User property.</param>
        /// <param name="tstamp">Initial value of the tstamp property.</param>
        /// <param name="proAplForItem">Initial value of the ProAplForItem property.</param>
        /// <param name="autoFreeItem">Initial value of the AutoFreeItem property.</param>
        /// <param name="allowEditDisc">Initial value of the AllowEditDisc property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="pOStartDate">Initial value of the POStartDate property.</param>
        /// <param name="pOEndDate">Initial value of the POEndDate property.</param>
        /// <param name="pOUse">Initial value of the POUse property.</param>
        public static OM_DiscSeq CreateOM_DiscSeq(global::System.String discID, global::System.String discSeq, global::System.Int16 active, global::System.DateTime endDate, global::System.Int16 promo, global::System.DateTime startDate, global::System.DateTime crtd_DateTime, global::System.String crtd_Prog, global::System.String crtd_User, global::System.DateTime lUpd_DateTime, global::System.String lUpd_Prog, global::System.String lUpd_User, global::System.Byte[] tstamp, global::System.String proAplForItem, global::System.Boolean autoFreeItem, global::System.Boolean allowEditDisc, global::System.String status, global::System.DateTime pOStartDate, global::System.DateTime pOEndDate, global::System.Boolean pOUse)
        {
            OM_DiscSeq oM_DiscSeq = new OM_DiscSeq();
            oM_DiscSeq.DiscID = discID;
            oM_DiscSeq.DiscSeq = discSeq;
            oM_DiscSeq.Active = active;
            oM_DiscSeq.EndDate = endDate;
            oM_DiscSeq.Promo = promo;
            oM_DiscSeq.StartDate = startDate;
            oM_DiscSeq.Crtd_DateTime = crtd_DateTime;
            oM_DiscSeq.Crtd_Prog = crtd_Prog;
            oM_DiscSeq.Crtd_User = crtd_User;
            oM_DiscSeq.LUpd_DateTime = lUpd_DateTime;
            oM_DiscSeq.LUpd_Prog = lUpd_Prog;
            oM_DiscSeq.LUpd_User = lUpd_User;
            oM_DiscSeq.tstamp = tstamp;
            oM_DiscSeq.ProAplForItem = proAplForItem;
            oM_DiscSeq.AutoFreeItem = autoFreeItem;
            oM_DiscSeq.AllowEditDisc = allowEditDisc;
            oM_DiscSeq.Status = status;
            oM_DiscSeq.POStartDate = pOStartDate;
            oM_DiscSeq.POEndDate = pOEndDate;
            oM_DiscSeq.POUse = pOUse;
            return oM_DiscSeq;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DiscID
        {
            get
            {
                return _DiscID;
            }
            set
            {
                if (_DiscID != value)
                {
                    OnDiscIDChanging(value);
                    ReportPropertyChanging("DiscID");
                    _DiscID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("DiscID");
                    OnDiscIDChanged();
                }
            }
        }
        private global::System.String _DiscID;
        partial void OnDiscIDChanging(global::System.String value);
        partial void OnDiscIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DiscSeq
        {
            get
            {
                return _DiscSeq;
            }
            set
            {
                if (_DiscSeq != value)
                {
                    OnDiscSeqChanging(value);
                    ReportPropertyChanging("DiscSeq");
                    _DiscSeq = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("DiscSeq");
                    OnDiscSeqChanged();
                }
            }
        }
        private global::System.String _DiscSeq;
        partial void OnDiscSeqChanging(global::System.String value);
        partial void OnDiscSeqChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Int16 _Active;
        partial void OnActiveChanging(global::System.Int16 value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BreakBy
        {
            get
            {
                return _BreakBy;
            }
            set
            {
                OnBreakByChanging(value);
                ReportPropertyChanging("BreakBy");
                _BreakBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BreakBy");
                OnBreakByChanged();
            }
        }
        private global::System.String _BreakBy;
        partial void OnBreakByChanging(global::System.String value);
        partial void OnBreakByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BudgetID
        {
            get
            {
                return _BudgetID;
            }
            set
            {
                OnBudgetIDChanging(value);
                ReportPropertyChanging("BudgetID");
                _BudgetID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BudgetID");
                OnBudgetIDChanged();
            }
        }
        private global::System.String _BudgetID;
        partial void OnBudgetIDChanging(global::System.String value);
        partial void OnBudgetIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Descr
        {
            get
            {
                return _Descr;
            }
            set
            {
                OnDescrChanging(value);
                ReportPropertyChanging("Descr");
                _Descr = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Descr");
                OnDescrChanged();
            }
        }
        private global::System.String _Descr;
        partial void OnDescrChanging(global::System.String value);
        partial void OnDescrChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DiscClass
        {
            get
            {
                return _DiscClass;
            }
            set
            {
                OnDiscClassChanging(value);
                ReportPropertyChanging("DiscClass");
                _DiscClass = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DiscClass");
                OnDiscClassChanged();
            }
        }
        private global::System.String _DiscClass;
        partial void OnDiscClassChanging(global::System.String value);
        partial void OnDiscClassChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DiscFor
        {
            get
            {
                return _DiscFor;
            }
            set
            {
                OnDiscForChanging(value);
                ReportPropertyChanging("DiscFor");
                _DiscFor = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DiscFor");
                OnDiscForChanged();
            }
        }
        private global::System.String _DiscFor;
        partial void OnDiscForChanging(global::System.String value);
        partial void OnDiscForChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private global::System.DateTime _EndDate;
        partial void OnEndDateChanging(global::System.DateTime value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Promo
        {
            get
            {
                return _Promo;
            }
            set
            {
                OnPromoChanging(value);
                ReportPropertyChanging("Promo");
                _Promo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Promo");
                OnPromoChanged();
            }
        }
        private global::System.Int16 _Promo;
        partial void OnPromoChanging(global::System.Int16 value);
        partial void OnPromoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private global::System.DateTime _StartDate;
        partial void OnStartDateChanging(global::System.DateTime value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Crtd_DateTime
        {
            get
            {
                return _Crtd_DateTime;
            }
            set
            {
                OnCrtd_DateTimeChanging(value);
                ReportPropertyChanging("Crtd_DateTime");
                _Crtd_DateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Crtd_DateTime");
                OnCrtd_DateTimeChanged();
            }
        }
        private global::System.DateTime _Crtd_DateTime;
        partial void OnCrtd_DateTimeChanging(global::System.DateTime value);
        partial void OnCrtd_DateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Crtd_Prog
        {
            get
            {
                return _Crtd_Prog;
            }
            set
            {
                OnCrtd_ProgChanging(value);
                ReportPropertyChanging("Crtd_Prog");
                _Crtd_Prog = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Crtd_Prog");
                OnCrtd_ProgChanged();
            }
        }
        private global::System.String _Crtd_Prog;
        partial void OnCrtd_ProgChanging(global::System.String value);
        partial void OnCrtd_ProgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Crtd_User
        {
            get
            {
                return _Crtd_User;
            }
            set
            {
                OnCrtd_UserChanging(value);
                ReportPropertyChanging("Crtd_User");
                _Crtd_User = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Crtd_User");
                OnCrtd_UserChanged();
            }
        }
        private global::System.String _Crtd_User;
        partial void OnCrtd_UserChanging(global::System.String value);
        partial void OnCrtd_UserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LUpd_DateTime
        {
            get
            {
                return _LUpd_DateTime;
            }
            set
            {
                OnLUpd_DateTimeChanging(value);
                ReportPropertyChanging("LUpd_DateTime");
                _LUpd_DateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LUpd_DateTime");
                OnLUpd_DateTimeChanged();
            }
        }
        private global::System.DateTime _LUpd_DateTime;
        partial void OnLUpd_DateTimeChanging(global::System.DateTime value);
        partial void OnLUpd_DateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LUpd_Prog
        {
            get
            {
                return _LUpd_Prog;
            }
            set
            {
                OnLUpd_ProgChanging(value);
                ReportPropertyChanging("LUpd_Prog");
                _LUpd_Prog = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LUpd_Prog");
                OnLUpd_ProgChanged();
            }
        }
        private global::System.String _LUpd_Prog;
        partial void OnLUpd_ProgChanging(global::System.String value);
        partial void OnLUpd_ProgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LUpd_User
        {
            get
            {
                return _LUpd_User;
            }
            set
            {
                OnLUpd_UserChanging(value);
                ReportPropertyChanging("LUpd_User");
                _LUpd_User = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LUpd_User");
                OnLUpd_UserChanged();
            }
        }
        private global::System.String _LUpd_User;
        partial void OnLUpd_UserChanging(global::System.String value);
        partial void OnLUpd_UserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] tstamp
        {
            get
            {
                return StructuralObject.GetValidValue(_tstamp);
            }
            set
            {
                OntstampChanging(value);
                ReportPropertyChanging("tstamp");
                _tstamp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("tstamp");
                OntstampChanged();
            }
        }
        private global::System.Byte[] _tstamp;
        partial void OntstampChanging(global::System.Byte[] value);
        partial void OntstampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProAplForItem
        {
            get
            {
                return _ProAplForItem;
            }
            set
            {
                OnProAplForItemChanging(value);
                ReportPropertyChanging("ProAplForItem");
                _ProAplForItem = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ProAplForItem");
                OnProAplForItemChanged();
            }
        }
        private global::System.String _ProAplForItem;
        partial void OnProAplForItemChanging(global::System.String value);
        partial void OnProAplForItemChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean AutoFreeItem
        {
            get
            {
                return _AutoFreeItem;
            }
            set
            {
                OnAutoFreeItemChanging(value);
                ReportPropertyChanging("AutoFreeItem");
                _AutoFreeItem = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AutoFreeItem");
                OnAutoFreeItemChanged();
            }
        }
        private global::System.Boolean _AutoFreeItem;
        partial void OnAutoFreeItemChanging(global::System.Boolean value);
        partial void OnAutoFreeItemChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean AllowEditDisc
        {
            get
            {
                return _AllowEditDisc;
            }
            set
            {
                OnAllowEditDiscChanging(value);
                ReportPropertyChanging("AllowEditDisc");
                _AllowEditDisc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AllowEditDisc");
                OnAllowEditDiscChanged();
            }
        }
        private global::System.Boolean _AllowEditDisc;
        partial void OnAllowEditDiscChanging(global::System.Boolean value);
        partial void OnAllowEditDiscChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime POStartDate
        {
            get
            {
                return _POStartDate;
            }
            set
            {
                OnPOStartDateChanging(value);
                ReportPropertyChanging("POStartDate");
                _POStartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("POStartDate");
                OnPOStartDateChanged();
            }
        }
        private global::System.DateTime _POStartDate;
        partial void OnPOStartDateChanging(global::System.DateTime value);
        partial void OnPOStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime POEndDate
        {
            get
            {
                return _POEndDate;
            }
            set
            {
                OnPOEndDateChanging(value);
                ReportPropertyChanging("POEndDate");
                _POEndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("POEndDate");
                OnPOEndDateChanged();
            }
        }
        private global::System.DateTime _POEndDate;
        partial void OnPOEndDateChanging(global::System.DateTime value);
        partial void OnPOEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean POUse
        {
            get
            {
                return _POUse;
            }
            set
            {
                OnPOUseChanging(value);
                ReportPropertyChanging("POUse");
                _POUse = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("POUse");
                OnPOUseChanged();
            }
        }
        private global::System.Boolean _POUse;
        partial void OnPOUseChanging(global::System.Boolean value);
        partial void OnPOUseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Crtd_Role
        {
            get
            {
                return _Crtd_Role;
            }
            set
            {
                OnCrtd_RoleChanging(value);
                ReportPropertyChanging("Crtd_Role");
                _Crtd_Role = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Crtd_Role");
                OnCrtd_RoleChanged();
            }
        }
        private global::System.String _Crtd_Role;
        partial void OnCrtd_RoleChanging(global::System.String value);
        partial void OnCrtd_RoleChanged();

        #endregion

    
    }

    #endregion

    #region ComplexTypes
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="OM21100Model", Name="OM21100_pgCompany_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class OM21100_pgCompany_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OM21100_pgCompany_Result object.
        /// </summary>
        /// <param name="cpnyID">Initial value of the CpnyID property.</param>
        /// <param name="discID">Initial value of the DiscID property.</param>
        /// <param name="discSeq">Initial value of the DiscSeq property.</param>
        public static OM21100_pgCompany_Result CreateOM21100_pgCompany_Result(global::System.String cpnyID, global::System.String discID, global::System.String discSeq)
        {
            OM21100_pgCompany_Result oM21100_pgCompany_Result = new OM21100_pgCompany_Result();
            oM21100_pgCompany_Result.CpnyID = cpnyID;
            oM21100_pgCompany_Result.DiscID = discID;
            oM21100_pgCompany_Result.DiscSeq = discSeq;
            return oM21100_pgCompany_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CpnyID
        {
            get
            {
                return _CpnyID;
            }
            set
            {
                OnCpnyIDChanging(value);
                ReportPropertyChanging("CpnyID");
                _CpnyID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CpnyID");
                OnCpnyIDChanged();
            }
        }
        private global::System.String _CpnyID;
        partial void OnCpnyIDChanging(global::System.String value);
        partial void OnCpnyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DiscID
        {
            get
            {
                return _DiscID;
            }
            set
            {
                OnDiscIDChanging(value);
                ReportPropertyChanging("DiscID");
                _DiscID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DiscID");
                OnDiscIDChanged();
            }
        }
        private global::System.String _DiscID;
        partial void OnDiscIDChanging(global::System.String value);
        partial void OnDiscIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DiscSeq
        {
            get
            {
                return _DiscSeq;
            }
            set
            {
                OnDiscSeqChanging(value);
                ReportPropertyChanging("DiscSeq");
                _DiscSeq = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DiscSeq");
                OnDiscSeqChanged();
            }
        }
        private global::System.String _DiscSeq;
        partial void OnDiscSeqChanging(global::System.String value);
        partial void OnDiscSeqChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="OM21100Model", Name="OM21100_pgDiscBreak_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class OM21100_pgDiscBreak_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OM21100_pgDiscBreak_Result object.
        /// </summary>
        /// <param name="breakAmt">Initial value of the BreakAmt property.</param>
        /// <param name="breakQty">Initial value of the BreakQty property.</param>
        /// <param name="crtd_DateTime">Initial value of the Crtd_DateTime property.</param>
        /// <param name="crtd_Prog">Initial value of the Crtd_Prog property.</param>
        /// <param name="crtd_User">Initial value of the Crtd_User property.</param>
        /// <param name="discAmt">Initial value of the DiscAmt property.</param>
        /// <param name="discID">Initial value of the DiscID property.</param>
        /// <param name="discSeq">Initial value of the DiscSeq property.</param>
        /// <param name="lUpd_DateTime">Initial value of the LUpd_DateTime property.</param>
        /// <param name="lUpd_Prog">Initial value of the LUpd_Prog property.</param>
        /// <param name="lUpd_User">Initial value of the LUpd_User property.</param>
        /// <param name="lineRef">Initial value of the LineRef property.</param>
        /// <param name="tstamp">Initial value of the tstamp property.</param>
        public static OM21100_pgDiscBreak_Result CreateOM21100_pgDiscBreak_Result(global::System.Double breakAmt, global::System.Double breakQty, global::System.DateTime crtd_DateTime, global::System.String crtd_Prog, global::System.String crtd_User, global::System.Double discAmt, global::System.String discID, global::System.String discSeq, global::System.DateTime lUpd_DateTime, global::System.String lUpd_Prog, global::System.String lUpd_User, global::System.String lineRef, global::System.Byte[] tstamp)
        {
            OM21100_pgDiscBreak_Result oM21100_pgDiscBreak_Result = new OM21100_pgDiscBreak_Result();
            oM21100_pgDiscBreak_Result.BreakAmt = breakAmt;
            oM21100_pgDiscBreak_Result.BreakQty = breakQty;
            oM21100_pgDiscBreak_Result.Crtd_DateTime = crtd_DateTime;
            oM21100_pgDiscBreak_Result.Crtd_Prog = crtd_Prog;
            oM21100_pgDiscBreak_Result.Crtd_User = crtd_User;
            oM21100_pgDiscBreak_Result.DiscAmt = discAmt;
            oM21100_pgDiscBreak_Result.DiscID = discID;
            oM21100_pgDiscBreak_Result.DiscSeq = discSeq;
            oM21100_pgDiscBreak_Result.LUpd_DateTime = lUpd_DateTime;
            oM21100_pgDiscBreak_Result.LUpd_Prog = lUpd_Prog;
            oM21100_pgDiscBreak_Result.LUpd_User = lUpd_User;
            oM21100_pgDiscBreak_Result.LineRef = lineRef;
            oM21100_pgDiscBreak_Result.tstamp = tstamp;
            return oM21100_pgDiscBreak_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double BreakAmt
        {
            get
            {
                return _BreakAmt;
            }
            set
            {
                OnBreakAmtChanging(value);
                ReportPropertyChanging("BreakAmt");
                _BreakAmt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BreakAmt");
                OnBreakAmtChanged();
            }
        }
        private global::System.Double _BreakAmt;
        partial void OnBreakAmtChanging(global::System.Double value);
        partial void OnBreakAmtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double BreakQty
        {
            get
            {
                return _BreakQty;
            }
            set
            {
                OnBreakQtyChanging(value);
                ReportPropertyChanging("BreakQty");
                _BreakQty = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BreakQty");
                OnBreakQtyChanged();
            }
        }
        private global::System.Double _BreakQty;
        partial void OnBreakQtyChanging(global::System.Double value);
        partial void OnBreakQtyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Crtd_DateTime
        {
            get
            {
                return _Crtd_DateTime;
            }
            set
            {
                OnCrtd_DateTimeChanging(value);
                ReportPropertyChanging("Crtd_DateTime");
                _Crtd_DateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Crtd_DateTime");
                OnCrtd_DateTimeChanged();
            }
        }
        private global::System.DateTime _Crtd_DateTime;
        partial void OnCrtd_DateTimeChanging(global::System.DateTime value);
        partial void OnCrtd_DateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Crtd_Prog
        {
            get
            {
                return _Crtd_Prog;
            }
            set
            {
                OnCrtd_ProgChanging(value);
                ReportPropertyChanging("Crtd_Prog");
                _Crtd_Prog = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Crtd_Prog");
                OnCrtd_ProgChanged();
            }
        }
        private global::System.String _Crtd_Prog;
        partial void OnCrtd_ProgChanging(global::System.String value);
        partial void OnCrtd_ProgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Crtd_User
        {
            get
            {
                return _Crtd_User;
            }
            set
            {
                OnCrtd_UserChanging(value);
                ReportPropertyChanging("Crtd_User");
                _Crtd_User = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Crtd_User");
                OnCrtd_UserChanged();
            }
        }
        private global::System.String _Crtd_User;
        partial void OnCrtd_UserChanging(global::System.String value);
        partial void OnCrtd_UserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Descr
        {
            get
            {
                return _Descr;
            }
            set
            {
                OnDescrChanging(value);
                ReportPropertyChanging("Descr");
                _Descr = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Descr");
                OnDescrChanged();
            }
        }
        private global::System.String _Descr;
        partial void OnDescrChanging(global::System.String value);
        partial void OnDescrChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double DiscAmt
        {
            get
            {
                return _DiscAmt;
            }
            set
            {
                OnDiscAmtChanging(value);
                ReportPropertyChanging("DiscAmt");
                _DiscAmt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DiscAmt");
                OnDiscAmtChanged();
            }
        }
        private global::System.Double _DiscAmt;
        partial void OnDiscAmtChanging(global::System.Double value);
        partial void OnDiscAmtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DiscID
        {
            get
            {
                return _DiscID;
            }
            set
            {
                OnDiscIDChanging(value);
                ReportPropertyChanging("DiscID");
                _DiscID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DiscID");
                OnDiscIDChanged();
            }
        }
        private global::System.String _DiscID;
        partial void OnDiscIDChanging(global::System.String value);
        partial void OnDiscIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DiscSeq
        {
            get
            {
                return _DiscSeq;
            }
            set
            {
                OnDiscSeqChanging(value);
                ReportPropertyChanging("DiscSeq");
                _DiscSeq = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DiscSeq");
                OnDiscSeqChanged();
            }
        }
        private global::System.String _DiscSeq;
        partial void OnDiscSeqChanging(global::System.String value);
        partial void OnDiscSeqChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LUpd_DateTime
        {
            get
            {
                return _LUpd_DateTime;
            }
            set
            {
                OnLUpd_DateTimeChanging(value);
                ReportPropertyChanging("LUpd_DateTime");
                _LUpd_DateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LUpd_DateTime");
                OnLUpd_DateTimeChanged();
            }
        }
        private global::System.DateTime _LUpd_DateTime;
        partial void OnLUpd_DateTimeChanging(global::System.DateTime value);
        partial void OnLUpd_DateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LUpd_Prog
        {
            get
            {
                return _LUpd_Prog;
            }
            set
            {
                OnLUpd_ProgChanging(value);
                ReportPropertyChanging("LUpd_Prog");
                _LUpd_Prog = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LUpd_Prog");
                OnLUpd_ProgChanged();
            }
        }
        private global::System.String _LUpd_Prog;
        partial void OnLUpd_ProgChanging(global::System.String value);
        partial void OnLUpd_ProgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LUpd_User
        {
            get
            {
                return _LUpd_User;
            }
            set
            {
                OnLUpd_UserChanging(value);
                ReportPropertyChanging("LUpd_User");
                _LUpd_User = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LUpd_User");
                OnLUpd_UserChanged();
            }
        }
        private global::System.String _LUpd_User;
        partial void OnLUpd_UserChanging(global::System.String value);
        partial void OnLUpd_UserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LineRef
        {
            get
            {
                return _LineRef;
            }
            set
            {
                OnLineRefChanging(value);
                ReportPropertyChanging("LineRef");
                _LineRef = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LineRef");
                OnLineRefChanged();
            }
        }
        private global::System.String _LineRef;
        partial void OnLineRefChanging(global::System.String value);
        partial void OnLineRefChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] tstamp
        {
            get
            {
                return StructuralObject.GetValidValue(_tstamp);
            }
            set
            {
                OntstampChanging(value);
                ReportPropertyChanging("tstamp");
                _tstamp = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("tstamp");
                OntstampChanged();
            }
        }
        private global::System.Byte[] _tstamp;
        partial void OntstampChanging(global::System.Byte[] value);
        partial void OntstampChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="OM21100Model", Name="OM21100_pgDiscBundle_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class OM21100_pgDiscBundle_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OM21100_pgDiscBundle_Result object.
        /// </summary>
        /// <param name="crtd_DateTime">Initial value of the Crtd_DateTime property.</param>
        /// <param name="crtd_Prog">Initial value of the Crtd_Prog property.</param>
        /// <param name="crtd_User">Initial value of the Crtd_User property.</param>
        /// <param name="discID">Initial value of the DiscID property.</param>
        /// <param name="discSeq">Initial value of the DiscSeq property.</param>
        /// <param name="lUpd_DateTime">Initial value of the LUpd_DateTime property.</param>
        /// <param name="lUpd_Prog">Initial value of the LUpd_Prog property.</param>
        /// <param name="lUpd_User">Initial value of the LUpd_User property.</param>
        /// <param name="tstamp">Initial value of the tstamp property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        /// <param name="bundleAmt">Initial value of the BundleAmt property.</param>
        /// <param name="bundleNbr">Initial value of the BundleNbr property.</param>
        /// <param name="bundleQty">Initial value of the BundleQty property.</param>
        /// <param name="invtID">Initial value of the InvtID property.</param>
        public static OM21100_pgDiscBundle_Result CreateOM21100_pgDiscBundle_Result(global::System.DateTime crtd_DateTime, global::System.String crtd_Prog, global::System.String crtd_User, global::System.String discID, global::System.String discSeq, global::System.DateTime lUpd_DateTime, global::System.String lUpd_Prog, global::System.String lUpd_User, global::System.Byte[] tstamp, global::System.Int16 active, global::System.Double bundleAmt, global::System.Int16 bundleNbr, global::System.Double bundleQty, global::System.String invtID)
        {
            OM21100_pgDiscBundle_Result oM21100_pgDiscBundle_Result = new OM21100_pgDiscBundle_Result();
            oM21100_pgDiscBundle_Result.Crtd_DateTime = crtd_DateTime;
            oM21100_pgDiscBundle_Result.Crtd_Prog = crtd_Prog;
            oM21100_pgDiscBundle_Result.Crtd_User = crtd_User;
            oM21100_pgDiscBundle_Result.DiscID = discID;
            oM21100_pgDiscBundle_Result.DiscSeq = discSeq;
            oM21100_pgDiscBundle_Result.LUpd_DateTime = lUpd_DateTime;
            oM21100_pgDiscBundle_Result.LUpd_Prog = lUpd_Prog;
            oM21100_pgDiscBundle_Result.LUpd_User = lUpd_User;
            oM21100_pgDiscBundle_Result.tstamp = tstamp;
            oM21100_pgDiscBundle_Result.Active = active;
            oM21100_pgDiscBundle_Result.BundleAmt = bundleAmt;
            oM21100_pgDiscBundle_Result.BundleNbr = bundleNbr;
            oM21100_pgDiscBundle_Result.BundleQty = bundleQty;
            oM21100_pgDiscBundle_Result.InvtID = invtID;
            return oM21100_pgDiscBundle_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Crtd_DateTime
        {
            get
            {
                return _Crtd_DateTime;
            }
            set
            {
                OnCrtd_DateTimeChanging(value);
                ReportPropertyChanging("Crtd_DateTime");
                _Crtd_DateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Crtd_DateTime");
                OnCrtd_DateTimeChanged();
            }
        }
        private global::System.DateTime _Crtd_DateTime;
        partial void OnCrtd_DateTimeChanging(global::System.DateTime value);
        partial void OnCrtd_DateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Crtd_Prog
        {
            get
            {
                return _Crtd_Prog;
            }
            set
            {
                OnCrtd_ProgChanging(value);
                ReportPropertyChanging("Crtd_Prog");
                _Crtd_Prog = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Crtd_Prog");
                OnCrtd_ProgChanged();
            }
        }
        private global::System.String _Crtd_Prog;
        partial void OnCrtd_ProgChanging(global::System.String value);
        partial void OnCrtd_ProgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Crtd_User
        {
            get
            {
                return _Crtd_User;
            }
            set
            {
                OnCrtd_UserChanging(value);
                ReportPropertyChanging("Crtd_User");
                _Crtd_User = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Crtd_User");
                OnCrtd_UserChanged();
            }
        }
        private global::System.String _Crtd_User;
        partial void OnCrtd_UserChanging(global::System.String value);
        partial void OnCrtd_UserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DiscID
        {
            get
            {
                return _DiscID;
            }
            set
            {
                OnDiscIDChanging(value);
                ReportPropertyChanging("DiscID");
                _DiscID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DiscID");
                OnDiscIDChanged();
            }
        }
        private global::System.String _DiscID;
        partial void OnDiscIDChanging(global::System.String value);
        partial void OnDiscIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DiscSeq
        {
            get
            {
                return _DiscSeq;
            }
            set
            {
                OnDiscSeqChanging(value);
                ReportPropertyChanging("DiscSeq");
                _DiscSeq = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DiscSeq");
                OnDiscSeqChanged();
            }
        }
        private global::System.String _DiscSeq;
        partial void OnDiscSeqChanging(global::System.String value);
        partial void OnDiscSeqChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LUpd_DateTime
        {
            get
            {
                return _LUpd_DateTime;
            }
            set
            {
                OnLUpd_DateTimeChanging(value);
                ReportPropertyChanging("LUpd_DateTime");
                _LUpd_DateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LUpd_DateTime");
                OnLUpd_DateTimeChanged();
            }
        }
        private global::System.DateTime _LUpd_DateTime;
        partial void OnLUpd_DateTimeChanging(global::System.DateTime value);
        partial void OnLUpd_DateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LUpd_Prog
        {
            get
            {
                return _LUpd_Prog;
            }
            set
            {
                OnLUpd_ProgChanging(value);
                ReportPropertyChanging("LUpd_Prog");
                _LUpd_Prog = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LUpd_Prog");
                OnLUpd_ProgChanged();
            }
        }
        private global::System.String _LUpd_Prog;
        partial void OnLUpd_ProgChanging(global::System.String value);
        partial void OnLUpd_ProgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LUpd_User
        {
            get
            {
                return _LUpd_User;
            }
            set
            {
                OnLUpd_UserChanging(value);
                ReportPropertyChanging("LUpd_User");
                _LUpd_User = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LUpd_User");
                OnLUpd_UserChanged();
            }
        }
        private global::System.String _LUpd_User;
        partial void OnLUpd_UserChanging(global::System.String value);
        partial void OnLUpd_UserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] tstamp
        {
            get
            {
                return StructuralObject.GetValidValue(_tstamp);
            }
            set
            {
                OntstampChanging(value);
                ReportPropertyChanging("tstamp");
                _tstamp = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("tstamp");
                OntstampChanged();
            }
        }
        private global::System.Byte[] _tstamp;
        partial void OntstampChanging(global::System.Byte[] value);
        partial void OntstampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Int16 _Active;
        partial void OnActiveChanging(global::System.Int16 value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double BundleAmt
        {
            get
            {
                return _BundleAmt;
            }
            set
            {
                OnBundleAmtChanging(value);
                ReportPropertyChanging("BundleAmt");
                _BundleAmt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BundleAmt");
                OnBundleAmtChanged();
            }
        }
        private global::System.Double _BundleAmt;
        partial void OnBundleAmtChanging(global::System.Double value);
        partial void OnBundleAmtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 BundleNbr
        {
            get
            {
                return _BundleNbr;
            }
            set
            {
                OnBundleNbrChanging(value);
                ReportPropertyChanging("BundleNbr");
                _BundleNbr = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BundleNbr");
                OnBundleNbrChanged();
            }
        }
        private global::System.Int16 _BundleNbr;
        partial void OnBundleNbrChanging(global::System.Int16 value);
        partial void OnBundleNbrChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BundleOrItem
        {
            get
            {
                return _BundleOrItem;
            }
            set
            {
                OnBundleOrItemChanging(value);
                ReportPropertyChanging("BundleOrItem");
                _BundleOrItem = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BundleOrItem");
                OnBundleOrItemChanged();
            }
        }
        private global::System.String _BundleOrItem;
        partial void OnBundleOrItemChanging(global::System.String value);
        partial void OnBundleOrItemChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double BundleQty
        {
            get
            {
                return _BundleQty;
            }
            set
            {
                OnBundleQtyChanging(value);
                ReportPropertyChanging("BundleQty");
                _BundleQty = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BundleQty");
                OnBundleQtyChanged();
            }
        }
        private global::System.Double _BundleQty;
        partial void OnBundleQtyChanging(global::System.Double value);
        partial void OnBundleQtyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DiscType
        {
            get
            {
                return _DiscType;
            }
            set
            {
                OnDiscTypeChanging(value);
                ReportPropertyChanging("DiscType");
                _DiscType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DiscType");
                OnDiscTypeChanged();
            }
        }
        private global::System.String _DiscType;
        partial void OnDiscTypeChanging(global::System.String value);
        partial void OnDiscTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String InvtID
        {
            get
            {
                return _InvtID;
            }
            set
            {
                OnInvtIDChanging(value);
                ReportPropertyChanging("InvtID");
                _InvtID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("InvtID");
                OnInvtIDChanged();
            }
        }
        private global::System.String _InvtID;
        partial void OnInvtIDChanging(global::System.String value);
        partial void OnInvtIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UnitDesc
        {
            get
            {
                return _UnitDesc;
            }
            set
            {
                OnUnitDescChanging(value);
                ReportPropertyChanging("UnitDesc");
                _UnitDesc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UnitDesc");
                OnUnitDescChanged();
            }
        }
        private global::System.String _UnitDesc;
        partial void OnUnitDescChanging(global::System.String value);
        partial void OnUnitDescChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="OM21100Model", Name="OM21100_pgDiscCust_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class OM21100_pgDiscCust_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OM21100_pgDiscCust_Result object.
        /// </summary>
        /// <param name="crtd_User">Initial value of the Crtd_User property.</param>
        /// <param name="discID">Initial value of the DiscID property.</param>
        /// <param name="discSeq">Initial value of the DiscSeq property.</param>
        /// <param name="lUpd_DateTime">Initial value of the LUpd_DateTime property.</param>
        /// <param name="lUpd_Prog">Initial value of the LUpd_Prog property.</param>
        /// <param name="lUpd_User">Initial value of the LUpd_User property.</param>
        /// <param name="tstamp">Initial value of the tstamp property.</param>
        /// <param name="crtd_DateTime">Initial value of the Crtd_DateTime property.</param>
        /// <param name="crtd_Prog">Initial value of the Crtd_Prog property.</param>
        /// <param name="custID">Initial value of the CustID property.</param>
        public static OM21100_pgDiscCust_Result CreateOM21100_pgDiscCust_Result(global::System.String crtd_User, global::System.String discID, global::System.String discSeq, global::System.DateTime lUpd_DateTime, global::System.String lUpd_Prog, global::System.String lUpd_User, global::System.Byte[] tstamp, global::System.DateTime crtd_DateTime, global::System.String crtd_Prog, global::System.String custID)
        {
            OM21100_pgDiscCust_Result oM21100_pgDiscCust_Result = new OM21100_pgDiscCust_Result();
            oM21100_pgDiscCust_Result.Crtd_User = crtd_User;
            oM21100_pgDiscCust_Result.DiscID = discID;
            oM21100_pgDiscCust_Result.DiscSeq = discSeq;
            oM21100_pgDiscCust_Result.LUpd_DateTime = lUpd_DateTime;
            oM21100_pgDiscCust_Result.LUpd_Prog = lUpd_Prog;
            oM21100_pgDiscCust_Result.LUpd_User = lUpd_User;
            oM21100_pgDiscCust_Result.tstamp = tstamp;
            oM21100_pgDiscCust_Result.Crtd_DateTime = crtd_DateTime;
            oM21100_pgDiscCust_Result.Crtd_Prog = crtd_Prog;
            oM21100_pgDiscCust_Result.CustID = custID;
            return oM21100_pgDiscCust_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Crtd_User
        {
            get
            {
                return _Crtd_User;
            }
            set
            {
                OnCrtd_UserChanging(value);
                ReportPropertyChanging("Crtd_User");
                _Crtd_User = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Crtd_User");
                OnCrtd_UserChanged();
            }
        }
        private global::System.String _Crtd_User;
        partial void OnCrtd_UserChanging(global::System.String value);
        partial void OnCrtd_UserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DiscID
        {
            get
            {
                return _DiscID;
            }
            set
            {
                OnDiscIDChanging(value);
                ReportPropertyChanging("DiscID");
                _DiscID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DiscID");
                OnDiscIDChanged();
            }
        }
        private global::System.String _DiscID;
        partial void OnDiscIDChanging(global::System.String value);
        partial void OnDiscIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DiscSeq
        {
            get
            {
                return _DiscSeq;
            }
            set
            {
                OnDiscSeqChanging(value);
                ReportPropertyChanging("DiscSeq");
                _DiscSeq = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DiscSeq");
                OnDiscSeqChanged();
            }
        }
        private global::System.String _DiscSeq;
        partial void OnDiscSeqChanging(global::System.String value);
        partial void OnDiscSeqChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LUpd_DateTime
        {
            get
            {
                return _LUpd_DateTime;
            }
            set
            {
                OnLUpd_DateTimeChanging(value);
                ReportPropertyChanging("LUpd_DateTime");
                _LUpd_DateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LUpd_DateTime");
                OnLUpd_DateTimeChanged();
            }
        }
        private global::System.DateTime _LUpd_DateTime;
        partial void OnLUpd_DateTimeChanging(global::System.DateTime value);
        partial void OnLUpd_DateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LUpd_Prog
        {
            get
            {
                return _LUpd_Prog;
            }
            set
            {
                OnLUpd_ProgChanging(value);
                ReportPropertyChanging("LUpd_Prog");
                _LUpd_Prog = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LUpd_Prog");
                OnLUpd_ProgChanged();
            }
        }
        private global::System.String _LUpd_Prog;
        partial void OnLUpd_ProgChanging(global::System.String value);
        partial void OnLUpd_ProgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LUpd_User
        {
            get
            {
                return _LUpd_User;
            }
            set
            {
                OnLUpd_UserChanging(value);
                ReportPropertyChanging("LUpd_User");
                _LUpd_User = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LUpd_User");
                OnLUpd_UserChanged();
            }
        }
        private global::System.String _LUpd_User;
        partial void OnLUpd_UserChanging(global::System.String value);
        partial void OnLUpd_UserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] tstamp
        {
            get
            {
                return StructuralObject.GetValidValue(_tstamp);
            }
            set
            {
                OntstampChanging(value);
                ReportPropertyChanging("tstamp");
                _tstamp = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("tstamp");
                OntstampChanged();
            }
        }
        private global::System.Byte[] _tstamp;
        partial void OntstampChanging(global::System.Byte[] value);
        partial void OntstampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Crtd_DateTime
        {
            get
            {
                return _Crtd_DateTime;
            }
            set
            {
                OnCrtd_DateTimeChanging(value);
                ReportPropertyChanging("Crtd_DateTime");
                _Crtd_DateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Crtd_DateTime");
                OnCrtd_DateTimeChanged();
            }
        }
        private global::System.DateTime _Crtd_DateTime;
        partial void OnCrtd_DateTimeChanging(global::System.DateTime value);
        partial void OnCrtd_DateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Crtd_Prog
        {
            get
            {
                return _Crtd_Prog;
            }
            set
            {
                OnCrtd_ProgChanging(value);
                ReportPropertyChanging("Crtd_Prog");
                _Crtd_Prog = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Crtd_Prog");
                OnCrtd_ProgChanged();
            }
        }
        private global::System.String _Crtd_Prog;
        partial void OnCrtd_ProgChanging(global::System.String value);
        partial void OnCrtd_ProgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CustID
        {
            get
            {
                return _CustID;
            }
            set
            {
                OnCustIDChanging(value);
                ReportPropertyChanging("CustID");
                _CustID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CustID");
                OnCustIDChanged();
            }
        }
        private global::System.String _CustID;
        partial void OnCustIDChanging(global::System.String value);
        partial void OnCustIDChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="OM21100Model", Name="OM21100_pgDiscCustClass_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class OM21100_pgDiscCustClass_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OM21100_pgDiscCustClass_Result object.
        /// </summary>
        /// <param name="crtd_Prog">Initial value of the Crtd_Prog property.</param>
        /// <param name="crtd_User">Initial value of the Crtd_User property.</param>
        /// <param name="discID">Initial value of the DiscID property.</param>
        /// <param name="discSeq">Initial value of the DiscSeq property.</param>
        /// <param name="lUpd_DateTime">Initial value of the LUpd_DateTime property.</param>
        /// <param name="lUpd_Prog">Initial value of the LUpd_Prog property.</param>
        /// <param name="lUpd_User">Initial value of the LUpd_User property.</param>
        /// <param name="classID">Initial value of the ClassID property.</param>
        /// <param name="crtd_DateTime">Initial value of the Crtd_DateTime property.</param>
        /// <param name="tstamp">Initial value of the tstamp property.</param>
        public static OM21100_pgDiscCustClass_Result CreateOM21100_pgDiscCustClass_Result(global::System.String crtd_Prog, global::System.String crtd_User, global::System.String discID, global::System.String discSeq, global::System.DateTime lUpd_DateTime, global::System.String lUpd_Prog, global::System.String lUpd_User, global::System.String classID, global::System.DateTime crtd_DateTime, global::System.Byte[] tstamp)
        {
            OM21100_pgDiscCustClass_Result oM21100_pgDiscCustClass_Result = new OM21100_pgDiscCustClass_Result();
            oM21100_pgDiscCustClass_Result.Crtd_Prog = crtd_Prog;
            oM21100_pgDiscCustClass_Result.Crtd_User = crtd_User;
            oM21100_pgDiscCustClass_Result.DiscID = discID;
            oM21100_pgDiscCustClass_Result.DiscSeq = discSeq;
            oM21100_pgDiscCustClass_Result.LUpd_DateTime = lUpd_DateTime;
            oM21100_pgDiscCustClass_Result.LUpd_Prog = lUpd_Prog;
            oM21100_pgDiscCustClass_Result.LUpd_User = lUpd_User;
            oM21100_pgDiscCustClass_Result.ClassID = classID;
            oM21100_pgDiscCustClass_Result.Crtd_DateTime = crtd_DateTime;
            oM21100_pgDiscCustClass_Result.tstamp = tstamp;
            return oM21100_pgDiscCustClass_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Crtd_Prog
        {
            get
            {
                return _Crtd_Prog;
            }
            set
            {
                OnCrtd_ProgChanging(value);
                ReportPropertyChanging("Crtd_Prog");
                _Crtd_Prog = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Crtd_Prog");
                OnCrtd_ProgChanged();
            }
        }
        private global::System.String _Crtd_Prog;
        partial void OnCrtd_ProgChanging(global::System.String value);
        partial void OnCrtd_ProgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Crtd_User
        {
            get
            {
                return _Crtd_User;
            }
            set
            {
                OnCrtd_UserChanging(value);
                ReportPropertyChanging("Crtd_User");
                _Crtd_User = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Crtd_User");
                OnCrtd_UserChanged();
            }
        }
        private global::System.String _Crtd_User;
        partial void OnCrtd_UserChanging(global::System.String value);
        partial void OnCrtd_UserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DiscID
        {
            get
            {
                return _DiscID;
            }
            set
            {
                OnDiscIDChanging(value);
                ReportPropertyChanging("DiscID");
                _DiscID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DiscID");
                OnDiscIDChanged();
            }
        }
        private global::System.String _DiscID;
        partial void OnDiscIDChanging(global::System.String value);
        partial void OnDiscIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DiscSeq
        {
            get
            {
                return _DiscSeq;
            }
            set
            {
                OnDiscSeqChanging(value);
                ReportPropertyChanging("DiscSeq");
                _DiscSeq = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DiscSeq");
                OnDiscSeqChanged();
            }
        }
        private global::System.String _DiscSeq;
        partial void OnDiscSeqChanging(global::System.String value);
        partial void OnDiscSeqChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LUpd_DateTime
        {
            get
            {
                return _LUpd_DateTime;
            }
            set
            {
                OnLUpd_DateTimeChanging(value);
                ReportPropertyChanging("LUpd_DateTime");
                _LUpd_DateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LUpd_DateTime");
                OnLUpd_DateTimeChanged();
            }
        }
        private global::System.DateTime _LUpd_DateTime;
        partial void OnLUpd_DateTimeChanging(global::System.DateTime value);
        partial void OnLUpd_DateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LUpd_Prog
        {
            get
            {
                return _LUpd_Prog;
            }
            set
            {
                OnLUpd_ProgChanging(value);
                ReportPropertyChanging("LUpd_Prog");
                _LUpd_Prog = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LUpd_Prog");
                OnLUpd_ProgChanged();
            }
        }
        private global::System.String _LUpd_Prog;
        partial void OnLUpd_ProgChanging(global::System.String value);
        partial void OnLUpd_ProgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LUpd_User
        {
            get
            {
                return _LUpd_User;
            }
            set
            {
                OnLUpd_UserChanging(value);
                ReportPropertyChanging("LUpd_User");
                _LUpd_User = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LUpd_User");
                OnLUpd_UserChanged();
            }
        }
        private global::System.String _LUpd_User;
        partial void OnLUpd_UserChanging(global::System.String value);
        partial void OnLUpd_UserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ClassID
        {
            get
            {
                return _ClassID;
            }
            set
            {
                OnClassIDChanging(value);
                ReportPropertyChanging("ClassID");
                _ClassID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ClassID");
                OnClassIDChanged();
            }
        }
        private global::System.String _ClassID;
        partial void OnClassIDChanging(global::System.String value);
        partial void OnClassIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Crtd_DateTime
        {
            get
            {
                return _Crtd_DateTime;
            }
            set
            {
                OnCrtd_DateTimeChanging(value);
                ReportPropertyChanging("Crtd_DateTime");
                _Crtd_DateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Crtd_DateTime");
                OnCrtd_DateTimeChanged();
            }
        }
        private global::System.DateTime _Crtd_DateTime;
        partial void OnCrtd_DateTimeChanging(global::System.DateTime value);
        partial void OnCrtd_DateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] tstamp
        {
            get
            {
                return StructuralObject.GetValidValue(_tstamp);
            }
            set
            {
                OntstampChanging(value);
                ReportPropertyChanging("tstamp");
                _tstamp = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("tstamp");
                OntstampChanged();
            }
        }
        private global::System.Byte[] _tstamp;
        partial void OntstampChanging(global::System.Byte[] value);
        partial void OntstampChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="OM21100Model", Name="OM21100_pgDiscItem_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class OM21100_pgDiscItem_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OM21100_pgDiscItem_Result object.
        /// </summary>
        /// <param name="crtd_DateTime">Initial value of the Crtd_DateTime property.</param>
        /// <param name="crtd_Prog">Initial value of the Crtd_Prog property.</param>
        /// <param name="crtd_User">Initial value of the Crtd_User property.</param>
        /// <param name="discID">Initial value of the DiscID property.</param>
        /// <param name="discSeq">Initial value of the DiscSeq property.</param>
        /// <param name="lUpd_DateTime">Initial value of the LUpd_DateTime property.</param>
        /// <param name="lUpd_Prog">Initial value of the LUpd_Prog property.</param>
        /// <param name="lUpd_User">Initial value of the LUpd_User property.</param>
        /// <param name="tstamp">Initial value of the tstamp property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        /// <param name="bundleAmt">Initial value of the BundleAmt property.</param>
        /// <param name="bundleNbr">Initial value of the BundleNbr property.</param>
        /// <param name="bundleQty">Initial value of the BundleQty property.</param>
        /// <param name="invtID">Initial value of the InvtID property.</param>
        public static OM21100_pgDiscItem_Result CreateOM21100_pgDiscItem_Result(global::System.DateTime crtd_DateTime, global::System.String crtd_Prog, global::System.String crtd_User, global::System.String discID, global::System.String discSeq, global::System.DateTime lUpd_DateTime, global::System.String lUpd_Prog, global::System.String lUpd_User, global::System.Byte[] tstamp, global::System.Int16 active, global::System.Double bundleAmt, global::System.Int16 bundleNbr, global::System.Double bundleQty, global::System.String invtID)
        {
            OM21100_pgDiscItem_Result oM21100_pgDiscItem_Result = new OM21100_pgDiscItem_Result();
            oM21100_pgDiscItem_Result.Crtd_DateTime = crtd_DateTime;
            oM21100_pgDiscItem_Result.Crtd_Prog = crtd_Prog;
            oM21100_pgDiscItem_Result.Crtd_User = crtd_User;
            oM21100_pgDiscItem_Result.DiscID = discID;
            oM21100_pgDiscItem_Result.DiscSeq = discSeq;
            oM21100_pgDiscItem_Result.LUpd_DateTime = lUpd_DateTime;
            oM21100_pgDiscItem_Result.LUpd_Prog = lUpd_Prog;
            oM21100_pgDiscItem_Result.LUpd_User = lUpd_User;
            oM21100_pgDiscItem_Result.tstamp = tstamp;
            oM21100_pgDiscItem_Result.Active = active;
            oM21100_pgDiscItem_Result.BundleAmt = bundleAmt;
            oM21100_pgDiscItem_Result.BundleNbr = bundleNbr;
            oM21100_pgDiscItem_Result.BundleQty = bundleQty;
            oM21100_pgDiscItem_Result.InvtID = invtID;
            return oM21100_pgDiscItem_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Crtd_DateTime
        {
            get
            {
                return _Crtd_DateTime;
            }
            set
            {
                OnCrtd_DateTimeChanging(value);
                ReportPropertyChanging("Crtd_DateTime");
                _Crtd_DateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Crtd_DateTime");
                OnCrtd_DateTimeChanged();
            }
        }
        private global::System.DateTime _Crtd_DateTime;
        partial void OnCrtd_DateTimeChanging(global::System.DateTime value);
        partial void OnCrtd_DateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Crtd_Prog
        {
            get
            {
                return _Crtd_Prog;
            }
            set
            {
                OnCrtd_ProgChanging(value);
                ReportPropertyChanging("Crtd_Prog");
                _Crtd_Prog = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Crtd_Prog");
                OnCrtd_ProgChanged();
            }
        }
        private global::System.String _Crtd_Prog;
        partial void OnCrtd_ProgChanging(global::System.String value);
        partial void OnCrtd_ProgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Crtd_User
        {
            get
            {
                return _Crtd_User;
            }
            set
            {
                OnCrtd_UserChanging(value);
                ReportPropertyChanging("Crtd_User");
                _Crtd_User = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Crtd_User");
                OnCrtd_UserChanged();
            }
        }
        private global::System.String _Crtd_User;
        partial void OnCrtd_UserChanging(global::System.String value);
        partial void OnCrtd_UserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DiscID
        {
            get
            {
                return _DiscID;
            }
            set
            {
                OnDiscIDChanging(value);
                ReportPropertyChanging("DiscID");
                _DiscID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DiscID");
                OnDiscIDChanged();
            }
        }
        private global::System.String _DiscID;
        partial void OnDiscIDChanging(global::System.String value);
        partial void OnDiscIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DiscSeq
        {
            get
            {
                return _DiscSeq;
            }
            set
            {
                OnDiscSeqChanging(value);
                ReportPropertyChanging("DiscSeq");
                _DiscSeq = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DiscSeq");
                OnDiscSeqChanged();
            }
        }
        private global::System.String _DiscSeq;
        partial void OnDiscSeqChanging(global::System.String value);
        partial void OnDiscSeqChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LUpd_DateTime
        {
            get
            {
                return _LUpd_DateTime;
            }
            set
            {
                OnLUpd_DateTimeChanging(value);
                ReportPropertyChanging("LUpd_DateTime");
                _LUpd_DateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LUpd_DateTime");
                OnLUpd_DateTimeChanged();
            }
        }
        private global::System.DateTime _LUpd_DateTime;
        partial void OnLUpd_DateTimeChanging(global::System.DateTime value);
        partial void OnLUpd_DateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LUpd_Prog
        {
            get
            {
                return _LUpd_Prog;
            }
            set
            {
                OnLUpd_ProgChanging(value);
                ReportPropertyChanging("LUpd_Prog");
                _LUpd_Prog = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LUpd_Prog");
                OnLUpd_ProgChanged();
            }
        }
        private global::System.String _LUpd_Prog;
        partial void OnLUpd_ProgChanging(global::System.String value);
        partial void OnLUpd_ProgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LUpd_User
        {
            get
            {
                return _LUpd_User;
            }
            set
            {
                OnLUpd_UserChanging(value);
                ReportPropertyChanging("LUpd_User");
                _LUpd_User = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LUpd_User");
                OnLUpd_UserChanged();
            }
        }
        private global::System.String _LUpd_User;
        partial void OnLUpd_UserChanging(global::System.String value);
        partial void OnLUpd_UserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] tstamp
        {
            get
            {
                return StructuralObject.GetValidValue(_tstamp);
            }
            set
            {
                OntstampChanging(value);
                ReportPropertyChanging("tstamp");
                _tstamp = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("tstamp");
                OntstampChanged();
            }
        }
        private global::System.Byte[] _tstamp;
        partial void OntstampChanging(global::System.Byte[] value);
        partial void OntstampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Int16 _Active;
        partial void OnActiveChanging(global::System.Int16 value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double BundleAmt
        {
            get
            {
                return _BundleAmt;
            }
            set
            {
                OnBundleAmtChanging(value);
                ReportPropertyChanging("BundleAmt");
                _BundleAmt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BundleAmt");
                OnBundleAmtChanged();
            }
        }
        private global::System.Double _BundleAmt;
        partial void OnBundleAmtChanging(global::System.Double value);
        partial void OnBundleAmtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 BundleNbr
        {
            get
            {
                return _BundleNbr;
            }
            set
            {
                OnBundleNbrChanging(value);
                ReportPropertyChanging("BundleNbr");
                _BundleNbr = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BundleNbr");
                OnBundleNbrChanged();
            }
        }
        private global::System.Int16 _BundleNbr;
        partial void OnBundleNbrChanging(global::System.Int16 value);
        partial void OnBundleNbrChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BundleOrItem
        {
            get
            {
                return _BundleOrItem;
            }
            set
            {
                OnBundleOrItemChanging(value);
                ReportPropertyChanging("BundleOrItem");
                _BundleOrItem = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BundleOrItem");
                OnBundleOrItemChanged();
            }
        }
        private global::System.String _BundleOrItem;
        partial void OnBundleOrItemChanging(global::System.String value);
        partial void OnBundleOrItemChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double BundleQty
        {
            get
            {
                return _BundleQty;
            }
            set
            {
                OnBundleQtyChanging(value);
                ReportPropertyChanging("BundleQty");
                _BundleQty = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BundleQty");
                OnBundleQtyChanged();
            }
        }
        private global::System.Double _BundleQty;
        partial void OnBundleQtyChanging(global::System.Double value);
        partial void OnBundleQtyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DiscType
        {
            get
            {
                return _DiscType;
            }
            set
            {
                OnDiscTypeChanging(value);
                ReportPropertyChanging("DiscType");
                _DiscType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DiscType");
                OnDiscTypeChanged();
            }
        }
        private global::System.String _DiscType;
        partial void OnDiscTypeChanging(global::System.String value);
        partial void OnDiscTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String InvtID
        {
            get
            {
                return _InvtID;
            }
            set
            {
                OnInvtIDChanging(value);
                ReportPropertyChanging("InvtID");
                _InvtID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("InvtID");
                OnInvtIDChanged();
            }
        }
        private global::System.String _InvtID;
        partial void OnInvtIDChanging(global::System.String value);
        partial void OnInvtIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UnitDesc
        {
            get
            {
                return _UnitDesc;
            }
            set
            {
                OnUnitDescChanging(value);
                ReportPropertyChanging("UnitDesc");
                _UnitDesc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UnitDesc");
                OnUnitDescChanged();
            }
        }
        private global::System.String _UnitDesc;
        partial void OnUnitDescChanging(global::System.String value);
        partial void OnUnitDescChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="OM21100Model", Name="OM21100_pgDiscItemClass_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class OM21100_pgDiscItemClass_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OM21100_pgDiscItemClass_Result object.
        /// </summary>
        /// <param name="discID">Initial value of the DiscID property.</param>
        /// <param name="discSeq">Initial value of the DiscSeq property.</param>
        /// <param name="lUpd_DateTime">Initial value of the LUpd_DateTime property.</param>
        /// <param name="lUpd_Prog">Initial value of the LUpd_Prog property.</param>
        /// <param name="lUpd_User">Initial value of the LUpd_User property.</param>
        /// <param name="tstamp">Initial value of the tstamp property.</param>
        /// <param name="crtd_DateTime">Initial value of the Crtd_DateTime property.</param>
        /// <param name="crtd_Prog">Initial value of the Crtd_Prog property.</param>
        /// <param name="crtd_User">Initial value of the Crtd_User property.</param>
        /// <param name="classID">Initial value of the ClassID property.</param>
        public static OM21100_pgDiscItemClass_Result CreateOM21100_pgDiscItemClass_Result(global::System.String discID, global::System.String discSeq, global::System.DateTime lUpd_DateTime, global::System.String lUpd_Prog, global::System.String lUpd_User, global::System.Byte[] tstamp, global::System.DateTime crtd_DateTime, global::System.String crtd_Prog, global::System.String crtd_User, global::System.String classID)
        {
            OM21100_pgDiscItemClass_Result oM21100_pgDiscItemClass_Result = new OM21100_pgDiscItemClass_Result();
            oM21100_pgDiscItemClass_Result.DiscID = discID;
            oM21100_pgDiscItemClass_Result.DiscSeq = discSeq;
            oM21100_pgDiscItemClass_Result.LUpd_DateTime = lUpd_DateTime;
            oM21100_pgDiscItemClass_Result.LUpd_Prog = lUpd_Prog;
            oM21100_pgDiscItemClass_Result.LUpd_User = lUpd_User;
            oM21100_pgDiscItemClass_Result.tstamp = tstamp;
            oM21100_pgDiscItemClass_Result.Crtd_DateTime = crtd_DateTime;
            oM21100_pgDiscItemClass_Result.Crtd_Prog = crtd_Prog;
            oM21100_pgDiscItemClass_Result.Crtd_User = crtd_User;
            oM21100_pgDiscItemClass_Result.ClassID = classID;
            return oM21100_pgDiscItemClass_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DiscID
        {
            get
            {
                return _DiscID;
            }
            set
            {
                OnDiscIDChanging(value);
                ReportPropertyChanging("DiscID");
                _DiscID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DiscID");
                OnDiscIDChanged();
            }
        }
        private global::System.String _DiscID;
        partial void OnDiscIDChanging(global::System.String value);
        partial void OnDiscIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DiscSeq
        {
            get
            {
                return _DiscSeq;
            }
            set
            {
                OnDiscSeqChanging(value);
                ReportPropertyChanging("DiscSeq");
                _DiscSeq = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DiscSeq");
                OnDiscSeqChanged();
            }
        }
        private global::System.String _DiscSeq;
        partial void OnDiscSeqChanging(global::System.String value);
        partial void OnDiscSeqChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LUpd_DateTime
        {
            get
            {
                return _LUpd_DateTime;
            }
            set
            {
                OnLUpd_DateTimeChanging(value);
                ReportPropertyChanging("LUpd_DateTime");
                _LUpd_DateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LUpd_DateTime");
                OnLUpd_DateTimeChanged();
            }
        }
        private global::System.DateTime _LUpd_DateTime;
        partial void OnLUpd_DateTimeChanging(global::System.DateTime value);
        partial void OnLUpd_DateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LUpd_Prog
        {
            get
            {
                return _LUpd_Prog;
            }
            set
            {
                OnLUpd_ProgChanging(value);
                ReportPropertyChanging("LUpd_Prog");
                _LUpd_Prog = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LUpd_Prog");
                OnLUpd_ProgChanged();
            }
        }
        private global::System.String _LUpd_Prog;
        partial void OnLUpd_ProgChanging(global::System.String value);
        partial void OnLUpd_ProgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LUpd_User
        {
            get
            {
                return _LUpd_User;
            }
            set
            {
                OnLUpd_UserChanging(value);
                ReportPropertyChanging("LUpd_User");
                _LUpd_User = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LUpd_User");
                OnLUpd_UserChanged();
            }
        }
        private global::System.String _LUpd_User;
        partial void OnLUpd_UserChanging(global::System.String value);
        partial void OnLUpd_UserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] tstamp
        {
            get
            {
                return StructuralObject.GetValidValue(_tstamp);
            }
            set
            {
                OntstampChanging(value);
                ReportPropertyChanging("tstamp");
                _tstamp = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("tstamp");
                OntstampChanged();
            }
        }
        private global::System.Byte[] _tstamp;
        partial void OntstampChanging(global::System.Byte[] value);
        partial void OntstampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Crtd_DateTime
        {
            get
            {
                return _Crtd_DateTime;
            }
            set
            {
                OnCrtd_DateTimeChanging(value);
                ReportPropertyChanging("Crtd_DateTime");
                _Crtd_DateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Crtd_DateTime");
                OnCrtd_DateTimeChanged();
            }
        }
        private global::System.DateTime _Crtd_DateTime;
        partial void OnCrtd_DateTimeChanging(global::System.DateTime value);
        partial void OnCrtd_DateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Crtd_Prog
        {
            get
            {
                return _Crtd_Prog;
            }
            set
            {
                OnCrtd_ProgChanging(value);
                ReportPropertyChanging("Crtd_Prog");
                _Crtd_Prog = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Crtd_Prog");
                OnCrtd_ProgChanged();
            }
        }
        private global::System.String _Crtd_Prog;
        partial void OnCrtd_ProgChanging(global::System.String value);
        partial void OnCrtd_ProgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Crtd_User
        {
            get
            {
                return _Crtd_User;
            }
            set
            {
                OnCrtd_UserChanging(value);
                ReportPropertyChanging("Crtd_User");
                _Crtd_User = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Crtd_User");
                OnCrtd_UserChanged();
            }
        }
        private global::System.String _Crtd_User;
        partial void OnCrtd_UserChanging(global::System.String value);
        partial void OnCrtd_UserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ClassID
        {
            get
            {
                return _ClassID;
            }
            set
            {
                OnClassIDChanging(value);
                ReportPropertyChanging("ClassID");
                _ClassID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ClassID");
                OnClassIDChanged();
            }
        }
        private global::System.String _ClassID;
        partial void OnClassIDChanging(global::System.String value);
        partial void OnClassIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UnitDesc
        {
            get
            {
                return _UnitDesc;
            }
            set
            {
                OnUnitDescChanging(value);
                ReportPropertyChanging("UnitDesc");
                _UnitDesc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UnitDesc");
                OnUnitDescChanged();
            }
        }
        private global::System.String _UnitDesc;
        partial void OnUnitDescChanging(global::System.String value);
        partial void OnUnitDescChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="OM21100Model", Name="OM21100_pgFreeItem_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class OM21100_pgFreeItem_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OM21100_pgFreeItem_Result object.
        /// </summary>
        /// <param name="discID">Initial value of the DiscID property.</param>
        /// <param name="discSeq">Initial value of the DiscSeq property.</param>
        /// <param name="lUpd_DateTime">Initial value of the LUpd_DateTime property.</param>
        /// <param name="lUpd_Prog">Initial value of the LUpd_Prog property.</param>
        /// <param name="lUpd_User">Initial value of the LUpd_User property.</param>
        /// <param name="tstamp">Initial value of the tstamp property.</param>
        /// <param name="crtd_DateTime">Initial value of the Crtd_DateTime property.</param>
        /// <param name="crtd_Prog">Initial value of the Crtd_Prog property.</param>
        /// <param name="crtd_User">Initial value of the Crtd_User property.</param>
        /// <param name="lineRef">Initial value of the LineRef property.</param>
        /// <param name="freeItemID">Initial value of the FreeItemID property.</param>
        /// <param name="freeItemQty">Initial value of the FreeItemQty property.</param>
        public static OM21100_pgFreeItem_Result CreateOM21100_pgFreeItem_Result(global::System.String discID, global::System.String discSeq, global::System.DateTime lUpd_DateTime, global::System.String lUpd_Prog, global::System.String lUpd_User, global::System.Byte[] tstamp, global::System.DateTime crtd_DateTime, global::System.String crtd_Prog, global::System.String crtd_User, global::System.String lineRef, global::System.String freeItemID, global::System.Double freeItemQty)
        {
            OM21100_pgFreeItem_Result oM21100_pgFreeItem_Result = new OM21100_pgFreeItem_Result();
            oM21100_pgFreeItem_Result.DiscID = discID;
            oM21100_pgFreeItem_Result.DiscSeq = discSeq;
            oM21100_pgFreeItem_Result.LUpd_DateTime = lUpd_DateTime;
            oM21100_pgFreeItem_Result.LUpd_Prog = lUpd_Prog;
            oM21100_pgFreeItem_Result.LUpd_User = lUpd_User;
            oM21100_pgFreeItem_Result.tstamp = tstamp;
            oM21100_pgFreeItem_Result.Crtd_DateTime = crtd_DateTime;
            oM21100_pgFreeItem_Result.Crtd_Prog = crtd_Prog;
            oM21100_pgFreeItem_Result.Crtd_User = crtd_User;
            oM21100_pgFreeItem_Result.LineRef = lineRef;
            oM21100_pgFreeItem_Result.FreeItemID = freeItemID;
            oM21100_pgFreeItem_Result.FreeItemQty = freeItemQty;
            return oM21100_pgFreeItem_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DiscID
        {
            get
            {
                return _DiscID;
            }
            set
            {
                OnDiscIDChanging(value);
                ReportPropertyChanging("DiscID");
                _DiscID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DiscID");
                OnDiscIDChanged();
            }
        }
        private global::System.String _DiscID;
        partial void OnDiscIDChanging(global::System.String value);
        partial void OnDiscIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DiscSeq
        {
            get
            {
                return _DiscSeq;
            }
            set
            {
                OnDiscSeqChanging(value);
                ReportPropertyChanging("DiscSeq");
                _DiscSeq = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DiscSeq");
                OnDiscSeqChanged();
            }
        }
        private global::System.String _DiscSeq;
        partial void OnDiscSeqChanging(global::System.String value);
        partial void OnDiscSeqChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LUpd_DateTime
        {
            get
            {
                return _LUpd_DateTime;
            }
            set
            {
                OnLUpd_DateTimeChanging(value);
                ReportPropertyChanging("LUpd_DateTime");
                _LUpd_DateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LUpd_DateTime");
                OnLUpd_DateTimeChanged();
            }
        }
        private global::System.DateTime _LUpd_DateTime;
        partial void OnLUpd_DateTimeChanging(global::System.DateTime value);
        partial void OnLUpd_DateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LUpd_Prog
        {
            get
            {
                return _LUpd_Prog;
            }
            set
            {
                OnLUpd_ProgChanging(value);
                ReportPropertyChanging("LUpd_Prog");
                _LUpd_Prog = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LUpd_Prog");
                OnLUpd_ProgChanged();
            }
        }
        private global::System.String _LUpd_Prog;
        partial void OnLUpd_ProgChanging(global::System.String value);
        partial void OnLUpd_ProgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LUpd_User
        {
            get
            {
                return _LUpd_User;
            }
            set
            {
                OnLUpd_UserChanging(value);
                ReportPropertyChanging("LUpd_User");
                _LUpd_User = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LUpd_User");
                OnLUpd_UserChanged();
            }
        }
        private global::System.String _LUpd_User;
        partial void OnLUpd_UserChanging(global::System.String value);
        partial void OnLUpd_UserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] tstamp
        {
            get
            {
                return StructuralObject.GetValidValue(_tstamp);
            }
            set
            {
                OntstampChanging(value);
                ReportPropertyChanging("tstamp");
                _tstamp = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("tstamp");
                OntstampChanged();
            }
        }
        private global::System.Byte[] _tstamp;
        partial void OntstampChanging(global::System.Byte[] value);
        partial void OntstampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Crtd_DateTime
        {
            get
            {
                return _Crtd_DateTime;
            }
            set
            {
                OnCrtd_DateTimeChanging(value);
                ReportPropertyChanging("Crtd_DateTime");
                _Crtd_DateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Crtd_DateTime");
                OnCrtd_DateTimeChanged();
            }
        }
        private global::System.DateTime _Crtd_DateTime;
        partial void OnCrtd_DateTimeChanging(global::System.DateTime value);
        partial void OnCrtd_DateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Crtd_Prog
        {
            get
            {
                return _Crtd_Prog;
            }
            set
            {
                OnCrtd_ProgChanging(value);
                ReportPropertyChanging("Crtd_Prog");
                _Crtd_Prog = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Crtd_Prog");
                OnCrtd_ProgChanged();
            }
        }
        private global::System.String _Crtd_Prog;
        partial void OnCrtd_ProgChanging(global::System.String value);
        partial void OnCrtd_ProgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Crtd_User
        {
            get
            {
                return _Crtd_User;
            }
            set
            {
                OnCrtd_UserChanging(value);
                ReportPropertyChanging("Crtd_User");
                _Crtd_User = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Crtd_User");
                OnCrtd_UserChanged();
            }
        }
        private global::System.String _Crtd_User;
        partial void OnCrtd_UserChanging(global::System.String value);
        partial void OnCrtd_UserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LineRef
        {
            get
            {
                return _LineRef;
            }
            set
            {
                OnLineRefChanging(value);
                ReportPropertyChanging("LineRef");
                _LineRef = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LineRef");
                OnLineRefChanged();
            }
        }
        private global::System.String _LineRef;
        partial void OnLineRefChanging(global::System.String value);
        partial void OnLineRefChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FreeITemSiteID
        {
            get
            {
                return _FreeITemSiteID;
            }
            set
            {
                OnFreeITemSiteIDChanging(value);
                ReportPropertyChanging("FreeITemSiteID");
                _FreeITemSiteID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FreeITemSiteID");
                OnFreeITemSiteIDChanged();
            }
        }
        private global::System.String _FreeITemSiteID;
        partial void OnFreeITemSiteIDChanging(global::System.String value);
        partial void OnFreeITemSiteIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FreeItemBudgetID
        {
            get
            {
                return _FreeItemBudgetID;
            }
            set
            {
                OnFreeItemBudgetIDChanging(value);
                ReportPropertyChanging("FreeItemBudgetID");
                _FreeItemBudgetID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FreeItemBudgetID");
                OnFreeItemBudgetIDChanged();
            }
        }
        private global::System.String _FreeItemBudgetID;
        partial void OnFreeItemBudgetIDChanging(global::System.String value);
        partial void OnFreeItemBudgetIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FreeItemID
        {
            get
            {
                return _FreeItemID;
            }
            set
            {
                OnFreeItemIDChanging(value);
                ReportPropertyChanging("FreeItemID");
                _FreeItemID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FreeItemID");
                OnFreeItemIDChanged();
            }
        }
        private global::System.String _FreeItemID;
        partial void OnFreeItemIDChanging(global::System.String value);
        partial void OnFreeItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double FreeItemQty
        {
            get
            {
                return _FreeItemQty;
            }
            set
            {
                OnFreeItemQtyChanging(value);
                ReportPropertyChanging("FreeItemQty");
                _FreeItemQty = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FreeItemQty");
                OnFreeItemQtyChanged();
            }
        }
        private global::System.Double _FreeItemQty;
        partial void OnFreeItemQtyChanging(global::System.Double value);
        partial void OnFreeItemQtyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UnitDescr
        {
            get
            {
                return _UnitDescr;
            }
            set
            {
                OnUnitDescrChanging(value);
                ReportPropertyChanging("UnitDescr");
                _UnitDescr = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UnitDescr");
                OnUnitDescrChanged();
            }
        }
        private global::System.String _UnitDescr;
        partial void OnUnitDescrChanging(global::System.String value);
        partial void OnUnitDescrChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="OM21100Model", Name="OM21100_ptCompany_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class OM21100_ptCompany_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OM21100_ptCompany_Result object.
        /// </summary>
        /// <param name="cpnyID">Initial value of the CpnyID property.</param>
        public static OM21100_ptCompany_Result CreateOM21100_ptCompany_Result(global::System.String cpnyID)
        {
            OM21100_ptCompany_Result oM21100_ptCompany_Result = new OM21100_ptCompany_Result();
            oM21100_ptCompany_Result.CpnyID = cpnyID;
            return oM21100_ptCompany_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CpnyID
        {
            get
            {
                return _CpnyID;
            }
            set
            {
                OnCpnyIDChanging(value);
                ReportPropertyChanging("CpnyID");
                _CpnyID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CpnyID");
                OnCpnyIDChanged();
            }
        }
        private global::System.String _CpnyID;
        partial void OnCpnyIDChanging(global::System.String value);
        partial void OnCpnyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CpnyName
        {
            get
            {
                return _CpnyName;
            }
            set
            {
                OnCpnyNameChanging(value);
                ReportPropertyChanging("CpnyName");
                _CpnyName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CpnyName");
                OnCpnyNameChanged();
            }
        }
        private global::System.String _CpnyName;
        partial void OnCpnyNameChanging(global::System.String value);
        partial void OnCpnyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Territory
        {
            get
            {
                return _Territory;
            }
            set
            {
                OnTerritoryChanging(value);
                ReportPropertyChanging("Territory");
                _Territory = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Territory");
                OnTerritoryChanged();
            }
        }
        private global::System.String _Territory;
        partial void OnTerritoryChanging(global::System.String value);
        partial void OnTerritoryChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="OM21100Model", Name="OM21100_ptTerritory_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class OM21100_ptTerritory_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OM21100_ptTerritory_Result object.
        /// </summary>
        /// <param name="territory">Initial value of the Territory property.</param>
        public static OM21100_ptTerritory_Result CreateOM21100_ptTerritory_Result(global::System.String territory)
        {
            OM21100_ptTerritory_Result oM21100_ptTerritory_Result = new OM21100_ptTerritory_Result();
            oM21100_ptTerritory_Result.Territory = territory;
            return oM21100_ptTerritory_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Territory
        {
            get
            {
                return _Territory;
            }
            set
            {
                OnTerritoryChanging(value);
                ReportPropertyChanging("Territory");
                _Territory = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Territory");
                OnTerritoryChanged();
            }
        }
        private global::System.String _Territory;
        partial void OnTerritoryChanging(global::System.String value);
        partial void OnTerritoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Descr
        {
            get
            {
                return _Descr;
            }
            set
            {
                OnDescrChanging(value);
                ReportPropertyChanging("Descr");
                _Descr = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Descr");
                OnDescrChanged();
            }
        }
        private global::System.String _Descr;
        partial void OnDescrChanging(global::System.String value);
        partial void OnDescrChanged();

        #endregion

    }

    #endregion

    
}
