//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
namespace OM21100
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class OM21100Entities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new OM21100Entities object using the connection string found in the 'OM21100Entities' section of the application configuration file.
        /// </summary>
        public OM21100Entities() : base("name=OM21100Entities", "OM21100Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new OM21100Entities object.
        /// </summary>
        public OM21100Entities(string connectionString) : base(connectionString, "OM21100Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new OM21100Entities object.
        /// </summary>
        public OM21100Entities(EntityConnection connection) : base(connection, "OM21100Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OM_Discount> OM_Discount
        {
            get
            {
                if ((_OM_Discount == null))
                {
                    _OM_Discount = base.CreateObjectSet<OM_Discount>("OM_Discount");
                }
                return _OM_Discount;
            }
        }
        private ObjectSet<OM_Discount> _OM_Discount;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OM_DiscCpny> OM_DiscCpny
        {
            get
            {
                if ((_OM_DiscCpny == null))
                {
                    _OM_DiscCpny = base.CreateObjectSet<OM_DiscCpny>("OM_DiscCpny");
                }
                return _OM_DiscCpny;
            }
        }
        private ObjectSet<OM_DiscCpny> _OM_DiscCpny;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OM_DiscCust> OM_DiscCust
        {
            get
            {
                if ((_OM_DiscCust == null))
                {
                    _OM_DiscCust = base.CreateObjectSet<OM_DiscCust>("OM_DiscCust");
                }
                return _OM_DiscCust;
            }
        }
        private ObjectSet<OM_DiscCust> _OM_DiscCust;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OM_DiscCustClass> OM_DiscCustClass
        {
            get
            {
                if ((_OM_DiscCustClass == null))
                {
                    _OM_DiscCustClass = base.CreateObjectSet<OM_DiscCustClass>("OM_DiscCustClass");
                }
                return _OM_DiscCustClass;
            }
        }
        private ObjectSet<OM_DiscCustClass> _OM_DiscCustClass;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OM_DiscItemClass> OM_DiscItemClass
        {
            get
            {
                if ((_OM_DiscItemClass == null))
                {
                    _OM_DiscItemClass = base.CreateObjectSet<OM_DiscItemClass>("OM_DiscItemClass");
                }
                return _OM_DiscItemClass;
            }
        }
        private ObjectSet<OM_DiscItemClass> _OM_DiscItemClass;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OM_OrdDisc> OM_OrdDisc
        {
            get
            {
                if ((_OM_OrdDisc == null))
                {
                    _OM_OrdDisc = base.CreateObjectSet<OM_OrdDisc>("OM_OrdDisc");
                }
                return _OM_OrdDisc;
            }
        }
        private ObjectSet<OM_OrdDisc> _OM_OrdDisc;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OM_DiscChannel> OM_DiscChannel
        {
            get
            {
                if ((_OM_DiscChannel == null))
                {
                    _OM_DiscChannel = base.CreateObjectSet<OM_DiscChannel>("OM_DiscChannel");
                }
                return _OM_DiscChannel;
            }
        }
        private ObjectSet<OM_DiscChannel> _OM_DiscChannel;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OM_DiscCustCate> OM_DiscCustCate
        {
            get
            {
                if ((_OM_DiscCustCate == null))
                {
                    _OM_DiscCustCate = base.CreateObjectSet<OM_DiscCustCate>("OM_DiscCustCate");
                }
                return _OM_DiscCustCate;
            }
        }
        private ObjectSet<OM_DiscCustCate> _OM_DiscCustCate;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<IN_Inventory> IN_Inventory
        {
            get
            {
                if ((_IN_Inventory == null))
                {
                    _IN_Inventory = base.CreateObjectSet<IN_Inventory>("IN_Inventory");
                }
                return _IN_Inventory;
            }
        }
        private ObjectSet<IN_Inventory> _IN_Inventory;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OM_DiscItem> OM_DiscItem
        {
            get
            {
                if ((_OM_DiscItem == null))
                {
                    _OM_DiscItem = base.CreateObjectSet<OM_DiscItem>("OM_DiscItem");
                }
                return _OM_DiscItem;
            }
        }
        private ObjectSet<OM_DiscItem> _OM_DiscItem;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OM_DiscBreak> OM_DiscBreak
        {
            get
            {
                if ((_OM_DiscBreak == null))
                {
                    _OM_DiscBreak = base.CreateObjectSet<OM_DiscBreak>("OM_DiscBreak");
                }
                return _OM_DiscBreak;
            }
        }
        private ObjectSet<OM_DiscBreak> _OM_DiscBreak;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OM_DiscSubBreakItem> OM_DiscSubBreakItem
        {
            get
            {
                if ((_OM_DiscSubBreakItem == null))
                {
                    _OM_DiscSubBreakItem = base.CreateObjectSet<OM_DiscSubBreakItem>("OM_DiscSubBreakItem");
                }
                return _OM_DiscSubBreakItem;
            }
        }
        private ObjectSet<OM_DiscSubBreakItem> _OM_DiscSubBreakItem;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OM_DiscFreeItem> OM_DiscFreeItem
        {
            get
            {
                if ((_OM_DiscFreeItem == null))
                {
                    _OM_DiscFreeItem = base.CreateObjectSet<OM_DiscFreeItem>("OM_DiscFreeItem");
                }
                return _OM_DiscFreeItem;
            }
        }
        private ObjectSet<OM_DiscFreeItem> _OM_DiscFreeItem;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OM_DiscSeq> OM_DiscSeq
        {
            get
            {
                if ((_OM_DiscSeq == null))
                {
                    _OM_DiscSeq = base.CreateObjectSet<OM_DiscSeq>("OM_DiscSeq");
                }
                return _OM_DiscSeq;
            }
        }
        private ObjectSet<OM_DiscSeq> _OM_DiscSeq;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OM_Discount EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOM_Discount(OM_Discount oM_Discount)
        {
            base.AddObject("OM_Discount", oM_Discount);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OM_DiscCpny EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOM_DiscCpny(OM_DiscCpny oM_DiscCpny)
        {
            base.AddObject("OM_DiscCpny", oM_DiscCpny);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OM_DiscCust EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOM_DiscCust(OM_DiscCust oM_DiscCust)
        {
            base.AddObject("OM_DiscCust", oM_DiscCust);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OM_DiscCustClass EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOM_DiscCustClass(OM_DiscCustClass oM_DiscCustClass)
        {
            base.AddObject("OM_DiscCustClass", oM_DiscCustClass);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OM_DiscItemClass EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOM_DiscItemClass(OM_DiscItemClass oM_DiscItemClass)
        {
            base.AddObject("OM_DiscItemClass", oM_DiscItemClass);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OM_OrdDisc EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOM_OrdDisc(OM_OrdDisc oM_OrdDisc)
        {
            base.AddObject("OM_OrdDisc", oM_OrdDisc);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OM_DiscChannel EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOM_DiscChannel(OM_DiscChannel oM_DiscChannel)
        {
            base.AddObject("OM_DiscChannel", oM_DiscChannel);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OM_DiscCustCate EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOM_DiscCustCate(OM_DiscCustCate oM_DiscCustCate)
        {
            base.AddObject("OM_DiscCustCate", oM_DiscCustCate);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the IN_Inventory EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToIN_Inventory(IN_Inventory iN_Inventory)
        {
            base.AddObject("IN_Inventory", iN_Inventory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OM_DiscItem EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOM_DiscItem(OM_DiscItem oM_DiscItem)
        {
            base.AddObject("OM_DiscItem", oM_DiscItem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OM_DiscBreak EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOM_DiscBreak(OM_DiscBreak oM_DiscBreak)
        {
            base.AddObject("OM_DiscBreak", oM_DiscBreak);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OM_DiscSubBreakItem EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOM_DiscSubBreakItem(OM_DiscSubBreakItem oM_DiscSubBreakItem)
        {
            base.AddObject("OM_DiscSubBreakItem", oM_DiscSubBreakItem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OM_DiscFreeItem EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOM_DiscFreeItem(OM_DiscFreeItem oM_DiscFreeItem)
        {
            base.AddObject("OM_DiscFreeItem", oM_DiscFreeItem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OM_DiscSeq EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOM_DiscSeq(OM_DiscSeq oM_DiscSeq)
        {
            base.AddObject("OM_DiscSeq", oM_DiscSeq);
        }

        #endregion

        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="discID">No Metadata Documentation available.</param>
        /// <param name="discSeq">No Metadata Documentation available.</param>
        public ObjectResult<OM21100_pgDiscItemClass_Result> OM21100_pgDiscItemClass(global::System.String discID, global::System.String discSeq)
        {
            ObjectParameter discIDParameter;
            if (discID != null)
            {
                discIDParameter = new ObjectParameter("DiscID", discID);
            }
            else
            {
                discIDParameter = new ObjectParameter("DiscID", typeof(global::System.String));
            }
    
            ObjectParameter discSeqParameter;
            if (discSeq != null)
            {
                discSeqParameter = new ObjectParameter("DiscSeq", discSeq);
            }
            else
            {
                discSeqParameter = new ObjectParameter("DiscSeq", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<OM21100_pgDiscItemClass_Result>("OM21100_pgDiscItemClass", discIDParameter, discSeqParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="discID">No Metadata Documentation available.</param>
        /// <param name="discSeq">No Metadata Documentation available.</param>
        /// <param name="branchID">No Metadata Documentation available.</param>
        /// <param name="userName">No Metadata Documentation available.</param>
        /// <param name="cpnyID">No Metadata Documentation available.</param>
        /// <param name="langID">No Metadata Documentation available.</param>
        public ObjectResult<OM21100_pgDiscCust_Result> OM21100_pgDiscCust(global::System.String discID, global::System.String discSeq, global::System.String branchID, global::System.String userName, global::System.String cpnyID, Nullable<global::System.Int16> langID)
        {
            ObjectParameter discIDParameter;
            if (discID != null)
            {
                discIDParameter = new ObjectParameter("DiscID", discID);
            }
            else
            {
                discIDParameter = new ObjectParameter("DiscID", typeof(global::System.String));
            }
    
            ObjectParameter discSeqParameter;
            if (discSeq != null)
            {
                discSeqParameter = new ObjectParameter("DiscSeq", discSeq);
            }
            else
            {
                discSeqParameter = new ObjectParameter("DiscSeq", typeof(global::System.String));
            }
    
            ObjectParameter branchIDParameter;
            if (branchID != null)
            {
                branchIDParameter = new ObjectParameter("BranchID", branchID);
            }
            else
            {
                branchIDParameter = new ObjectParameter("BranchID", typeof(global::System.String));
            }
    
            ObjectParameter userNameParameter;
            if (userName != null)
            {
                userNameParameter = new ObjectParameter("UserName", userName);
            }
            else
            {
                userNameParameter = new ObjectParameter("UserName", typeof(global::System.String));
            }
    
            ObjectParameter cpnyIDParameter;
            if (cpnyID != null)
            {
                cpnyIDParameter = new ObjectParameter("CpnyID", cpnyID);
            }
            else
            {
                cpnyIDParameter = new ObjectParameter("CpnyID", typeof(global::System.String));
            }
    
            ObjectParameter langIDParameter;
            if (langID.HasValue)
            {
                langIDParameter = new ObjectParameter("LangID", langID);
            }
            else
            {
                langIDParameter = new ObjectParameter("LangID", typeof(global::System.Int16));
            }
    
            return base.ExecuteFunction<OM21100_pgDiscCust_Result>("OM21100_pgDiscCust", discIDParameter, discSeqParameter, branchIDParameter, userNameParameter, cpnyIDParameter, langIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="discID">No Metadata Documentation available.</param>
        /// <param name="discSeq">No Metadata Documentation available.</param>
        public ObjectResult<OM21100_pgDiscBundle_Result> OM21100_pgDiscBundle(global::System.String discID, global::System.String discSeq)
        {
            ObjectParameter discIDParameter;
            if (discID != null)
            {
                discIDParameter = new ObjectParameter("DiscID", discID);
            }
            else
            {
                discIDParameter = new ObjectParameter("DiscID", typeof(global::System.String));
            }
    
            ObjectParameter discSeqParameter;
            if (discSeq != null)
            {
                discSeqParameter = new ObjectParameter("DiscSeq", discSeq);
            }
            else
            {
                discSeqParameter = new ObjectParameter("DiscSeq", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<OM21100_pgDiscBundle_Result>("OM21100_pgDiscBundle", discIDParameter, discSeqParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="discID">No Metadata Documentation available.</param>
        /// <param name="discSeq">No Metadata Documentation available.</param>
        public ObjectResult<OM21100_pgDiscCustClass_Result> OM21100_pgDiscCustClass(global::System.String discID, global::System.String discSeq)
        {
            ObjectParameter discIDParameter;
            if (discID != null)
            {
                discIDParameter = new ObjectParameter("DiscID", discID);
            }
            else
            {
                discIDParameter = new ObjectParameter("DiscID", typeof(global::System.String));
            }
    
            ObjectParameter discSeqParameter;
            if (discSeq != null)
            {
                discSeqParameter = new ObjectParameter("DiscSeq", discSeq);
            }
            else
            {
                discSeqParameter = new ObjectParameter("DiscSeq", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<OM21100_pgDiscCustClass_Result>("OM21100_pgDiscCustClass", discIDParameter, discSeqParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="discID">No Metadata Documentation available.</param>
        /// <param name="discSeq">No Metadata Documentation available.</param>
        /// <param name="userName">No Metadata Documentation available.</param>
        /// <param name="cpnyID">No Metadata Documentation available.</param>
        /// <param name="langID">No Metadata Documentation available.</param>
        public ObjectResult<OM21100_pgDiscItem_Result> OM21100_pgDiscItem(global::System.String discID, global::System.String discSeq, global::System.String userName, global::System.String cpnyID, Nullable<global::System.Int16> langID)
        {
            ObjectParameter discIDParameter;
            if (discID != null)
            {
                discIDParameter = new ObjectParameter("DiscID", discID);
            }
            else
            {
                discIDParameter = new ObjectParameter("DiscID", typeof(global::System.String));
            }
    
            ObjectParameter discSeqParameter;
            if (discSeq != null)
            {
                discSeqParameter = new ObjectParameter("DiscSeq", discSeq);
            }
            else
            {
                discSeqParameter = new ObjectParameter("DiscSeq", typeof(global::System.String));
            }
    
            ObjectParameter userNameParameter;
            if (userName != null)
            {
                userNameParameter = new ObjectParameter("UserName", userName);
            }
            else
            {
                userNameParameter = new ObjectParameter("UserName", typeof(global::System.String));
            }
    
            ObjectParameter cpnyIDParameter;
            if (cpnyID != null)
            {
                cpnyIDParameter = new ObjectParameter("CpnyID", cpnyID);
            }
            else
            {
                cpnyIDParameter = new ObjectParameter("CpnyID", typeof(global::System.String));
            }
    
            ObjectParameter langIDParameter;
            if (langID.HasValue)
            {
                langIDParameter = new ObjectParameter("LangID", langID);
            }
            else
            {
                langIDParameter = new ObjectParameter("LangID", typeof(global::System.Int16));
            }
    
            return base.ExecuteFunction<OM21100_pgDiscItem_Result>("OM21100_pgDiscItem", discIDParameter, discSeqParameter, userNameParameter, cpnyIDParameter, langIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="discID">No Metadata Documentation available.</param>
        /// <param name="discSeq">No Metadata Documentation available.</param>
        /// <param name="branchID">No Metadata Documentation available.</param>
        public ObjectResult<OM21100_pgCompany_Result> OM21100_pgCompany(global::System.String discID, global::System.String discSeq, global::System.String branchID)
        {
            ObjectParameter discIDParameter;
            if (discID != null)
            {
                discIDParameter = new ObjectParameter("DiscID", discID);
            }
            else
            {
                discIDParameter = new ObjectParameter("DiscID", typeof(global::System.String));
            }
    
            ObjectParameter discSeqParameter;
            if (discSeq != null)
            {
                discSeqParameter = new ObjectParameter("DiscSeq", discSeq);
            }
            else
            {
                discSeqParameter = new ObjectParameter("DiscSeq", typeof(global::System.String));
            }
    
            ObjectParameter branchIDParameter;
            if (branchID != null)
            {
                branchIDParameter = new ObjectParameter("BranchID", branchID);
            }
            else
            {
                branchIDParameter = new ObjectParameter("BranchID", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<OM21100_pgCompany_Result>("OM21100_pgCompany", discIDParameter, discSeqParameter, branchIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="discID">No Metadata Documentation available.</param>
        /// <param name="discSeq">No Metadata Documentation available.</param>
        /// <param name="userName">No Metadata Documentation available.</param>
        /// <param name="cpnyID">No Metadata Documentation available.</param>
        /// <param name="langID">No Metadata Documentation available.</param>
        public ObjectResult<OM21100_pgDiscBreak_Result> OM21100_pgDiscBreak(global::System.String discID, global::System.String discSeq, global::System.String userName, global::System.String cpnyID, Nullable<global::System.Int16> langID)
        {
            ObjectParameter discIDParameter;
            if (discID != null)
            {
                discIDParameter = new ObjectParameter("DiscID", discID);
            }
            else
            {
                discIDParameter = new ObjectParameter("DiscID", typeof(global::System.String));
            }
    
            ObjectParameter discSeqParameter;
            if (discSeq != null)
            {
                discSeqParameter = new ObjectParameter("DiscSeq", discSeq);
            }
            else
            {
                discSeqParameter = new ObjectParameter("DiscSeq", typeof(global::System.String));
            }
    
            ObjectParameter userNameParameter;
            if (userName != null)
            {
                userNameParameter = new ObjectParameter("UserName", userName);
            }
            else
            {
                userNameParameter = new ObjectParameter("UserName", typeof(global::System.String));
            }
    
            ObjectParameter cpnyIDParameter;
            if (cpnyID != null)
            {
                cpnyIDParameter = new ObjectParameter("CpnyID", cpnyID);
            }
            else
            {
                cpnyIDParameter = new ObjectParameter("CpnyID", typeof(global::System.String));
            }
    
            ObjectParameter langIDParameter;
            if (langID.HasValue)
            {
                langIDParameter = new ObjectParameter("LangID", langID);
            }
            else
            {
                langIDParameter = new ObjectParameter("LangID", typeof(global::System.Int16));
            }
    
            return base.ExecuteFunction<OM21100_pgDiscBreak_Result>("OM21100_pgDiscBreak", discIDParameter, discSeqParameter, userNameParameter, cpnyIDParameter, langIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="userID">No Metadata Documentation available.</param>
        public ObjectResult<OM21100_ptCompany_Result> OM21100_ptCompany(global::System.String userID)
        {
            ObjectParameter userIDParameter;
            if (userID != null)
            {
                userIDParameter = new ObjectParameter("UserID", userID);
            }
            else
            {
                userIDParameter = new ObjectParameter("UserID", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<OM21100_ptCompany_Result>("OM21100_ptCompany", userIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="userID">No Metadata Documentation available.</param>
        public ObjectResult<OM21100_ptTerritory_Result> OM21100_ptTerritory(global::System.String userID)
        {
            ObjectParameter userIDParameter;
            if (userID != null)
            {
                userIDParameter = new ObjectParameter("UserID", userID);
            }
            else
            {
                userIDParameter = new ObjectParameter("UserID", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<OM21100_ptTerritory_Result>("OM21100_ptTerritory", userIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="userID">No Metadata Documentation available.</param>
        /// <param name="cpnyID">No Metadata Documentation available.</param>
        /// <param name="langID">No Metadata Documentation available.</param>
        public ObjectResult<OM21100_ptInventory_Result> OM21100_ptInventory(global::System.String userID, global::System.String cpnyID, Nullable<global::System.Int16> langID)
        {
            ObjectParameter userIDParameter;
            if (userID != null)
            {
                userIDParameter = new ObjectParameter("UserID", userID);
            }
            else
            {
                userIDParameter = new ObjectParameter("UserID", typeof(global::System.String));
            }
    
            ObjectParameter cpnyIDParameter;
            if (cpnyID != null)
            {
                cpnyIDParameter = new ObjectParameter("CpnyID", cpnyID);
            }
            else
            {
                cpnyIDParameter = new ObjectParameter("CpnyID", typeof(global::System.String));
            }
    
            ObjectParameter langIDParameter;
            if (langID.HasValue)
            {
                langIDParameter = new ObjectParameter("LangID", langID);
            }
            else
            {
                langIDParameter = new ObjectParameter("LangID", typeof(global::System.Int16));
            }
    
            return base.ExecuteFunction<OM21100_ptInventory_Result>("OM21100_ptInventory", userIDParameter, cpnyIDParameter, langIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="userName">No Metadata Documentation available.</param>
        /// <param name="cpnyID">No Metadata Documentation available.</param>
        /// <param name="langID">No Metadata Documentation available.</param>
        public ObjectResult<OM21100_ptChannel_Result> OM21100_ptChannel(global::System.String userName, global::System.String cpnyID, Nullable<global::System.Int16> langID)
        {
            ObjectParameter userNameParameter;
            if (userName != null)
            {
                userNameParameter = new ObjectParameter("UserName", userName);
            }
            else
            {
                userNameParameter = new ObjectParameter("UserName", typeof(global::System.String));
            }
    
            ObjectParameter cpnyIDParameter;
            if (cpnyID != null)
            {
                cpnyIDParameter = new ObjectParameter("CpnyID", cpnyID);
            }
            else
            {
                cpnyIDParameter = new ObjectParameter("CpnyID", typeof(global::System.String));
            }
    
            ObjectParameter langIDParameter;
            if (langID.HasValue)
            {
                langIDParameter = new ObjectParameter("LangID", langID);
            }
            else
            {
                langIDParameter = new ObjectParameter("LangID", typeof(global::System.Int16));
            }
    
            return base.ExecuteFunction<OM21100_ptChannel_Result>("OM21100_ptChannel", userNameParameter, cpnyIDParameter, langIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="userName">No Metadata Documentation available.</param>
        /// <param name="cpnyID">No Metadata Documentation available.</param>
        /// <param name="langID">No Metadata Documentation available.</param>
        public ObjectResult<OM21100_ptCustClass_Result> OM21100_ptCustClass(global::System.String userName, global::System.String cpnyID, Nullable<global::System.Int16> langID)
        {
            ObjectParameter userNameParameter;
            if (userName != null)
            {
                userNameParameter = new ObjectParameter("UserName", userName);
            }
            else
            {
                userNameParameter = new ObjectParameter("UserName", typeof(global::System.String));
            }
    
            ObjectParameter cpnyIDParameter;
            if (cpnyID != null)
            {
                cpnyIDParameter = new ObjectParameter("CpnyID", cpnyID);
            }
            else
            {
                cpnyIDParameter = new ObjectParameter("CpnyID", typeof(global::System.String));
            }
    
            ObjectParameter langIDParameter;
            if (langID.HasValue)
            {
                langIDParameter = new ObjectParameter("LangID", langID);
            }
            else
            {
                langIDParameter = new ObjectParameter("LangID", typeof(global::System.Int16));
            }
    
            return base.ExecuteFunction<OM21100_ptCustClass_Result>("OM21100_ptCustClass", userNameParameter, cpnyIDParameter, langIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="userName">No Metadata Documentation available.</param>
        /// <param name="cpnyID">No Metadata Documentation available.</param>
        /// <param name="langID">No Metadata Documentation available.</param>
        public ObjectResult<OM21100_ptCustomer_Result> OM21100_ptCustomer(global::System.String userName, global::System.String cpnyID, Nullable<global::System.Int16> langID)
        {
            ObjectParameter userNameParameter;
            if (userName != null)
            {
                userNameParameter = new ObjectParameter("UserName", userName);
            }
            else
            {
                userNameParameter = new ObjectParameter("UserName", typeof(global::System.String));
            }
    
            ObjectParameter cpnyIDParameter;
            if (cpnyID != null)
            {
                cpnyIDParameter = new ObjectParameter("CpnyID", cpnyID);
            }
            else
            {
                cpnyIDParameter = new ObjectParameter("CpnyID", typeof(global::System.String));
            }
    
            ObjectParameter langIDParameter;
            if (langID.HasValue)
            {
                langIDParameter = new ObjectParameter("LangID", langID);
            }
            else
            {
                langIDParameter = new ObjectParameter("LangID", typeof(global::System.Int16));
            }
    
            return base.ExecuteFunction<OM21100_ptCustomer_Result>("OM21100_ptCustomer", userNameParameter, cpnyIDParameter, langIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="userID">No Metadata Documentation available.</param>
        /// <param name="cpnyID">No Metadata Documentation available.</param>
        /// <param name="langID">No Metadata Documentation available.</param>
        public ObjectResult<OM21100_pdSI_Hierarchy_Result> OM21100_pdSI_Hierarchy(global::System.String userID, global::System.String cpnyID, Nullable<global::System.Int16> langID)
        {
            ObjectParameter userIDParameter;
            if (userID != null)
            {
                userIDParameter = new ObjectParameter("UserID", userID);
            }
            else
            {
                userIDParameter = new ObjectParameter("UserID", typeof(global::System.String));
            }
    
            ObjectParameter cpnyIDParameter;
            if (cpnyID != null)
            {
                cpnyIDParameter = new ObjectParameter("CpnyID", cpnyID);
            }
            else
            {
                cpnyIDParameter = new ObjectParameter("CpnyID", typeof(global::System.String));
            }
    
            ObjectParameter langIDParameter;
            if (langID.HasValue)
            {
                langIDParameter = new ObjectParameter("LangID", langID);
            }
            else
            {
                langIDParameter = new ObjectParameter("LangID", typeof(global::System.Int16));
            }
    
            return base.ExecuteFunction<OM21100_pdSI_Hierarchy_Result>("OM21100_pdSI_Hierarchy", userIDParameter, cpnyIDParameter, langIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="discID">No Metadata Documentation available.</param>
        /// <param name="discSeq">No Metadata Documentation available.</param>
        /// <param name="userName">No Metadata Documentation available.</param>
        /// <param name="cpnyID">No Metadata Documentation available.</param>
        /// <param name="langID">No Metadata Documentation available.</param>
        public ObjectResult<OM21100_pgDiscChannel_Result> OM21100_pgDiscChannel(global::System.String discID, global::System.String discSeq, global::System.String userName, global::System.String cpnyID, Nullable<global::System.Int16> langID)
        {
            ObjectParameter discIDParameter;
            if (discID != null)
            {
                discIDParameter = new ObjectParameter("DiscID", discID);
            }
            else
            {
                discIDParameter = new ObjectParameter("DiscID", typeof(global::System.String));
            }
    
            ObjectParameter discSeqParameter;
            if (discSeq != null)
            {
                discSeqParameter = new ObjectParameter("DiscSeq", discSeq);
            }
            else
            {
                discSeqParameter = new ObjectParameter("DiscSeq", typeof(global::System.String));
            }
    
            ObjectParameter userNameParameter;
            if (userName != null)
            {
                userNameParameter = new ObjectParameter("UserName", userName);
            }
            else
            {
                userNameParameter = new ObjectParameter("UserName", typeof(global::System.String));
            }
    
            ObjectParameter cpnyIDParameter;
            if (cpnyID != null)
            {
                cpnyIDParameter = new ObjectParameter("CpnyID", cpnyID);
            }
            else
            {
                cpnyIDParameter = new ObjectParameter("CpnyID", typeof(global::System.String));
            }
    
            ObjectParameter langIDParameter;
            if (langID.HasValue)
            {
                langIDParameter = new ObjectParameter("LangID", langID);
            }
            else
            {
                langIDParameter = new ObjectParameter("LangID", typeof(global::System.Int16));
            }
    
            return base.ExecuteFunction<OM21100_pgDiscChannel_Result>("OM21100_pgDiscChannel", discIDParameter, discSeqParameter, userNameParameter, cpnyIDParameter, langIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="discID">No Metadata Documentation available.</param>
        /// <param name="discSeq">No Metadata Documentation available.</param>
        /// <param name="userName">No Metadata Documentation available.</param>
        /// <param name="cpnyID">No Metadata Documentation available.</param>
        /// <param name="langID">No Metadata Documentation available.</param>
        public ObjectResult<OM21100_pgDiscCustCate_Result> OM21100_pgDiscCustCate(global::System.String discID, global::System.String discSeq, global::System.String userName, global::System.String cpnyID, Nullable<global::System.Int16> langID)
        {
            ObjectParameter discIDParameter;
            if (discID != null)
            {
                discIDParameter = new ObjectParameter("DiscID", discID);
            }
            else
            {
                discIDParameter = new ObjectParameter("DiscID", typeof(global::System.String));
            }
    
            ObjectParameter discSeqParameter;
            if (discSeq != null)
            {
                discSeqParameter = new ObjectParameter("DiscSeq", discSeq);
            }
            else
            {
                discSeqParameter = new ObjectParameter("DiscSeq", typeof(global::System.String));
            }
    
            ObjectParameter userNameParameter;
            if (userName != null)
            {
                userNameParameter = new ObjectParameter("UserName", userName);
            }
            else
            {
                userNameParameter = new ObjectParameter("UserName", typeof(global::System.String));
            }
    
            ObjectParameter cpnyIDParameter;
            if (cpnyID != null)
            {
                cpnyIDParameter = new ObjectParameter("CpnyID", cpnyID);
            }
            else
            {
                cpnyIDParameter = new ObjectParameter("CpnyID", typeof(global::System.String));
            }
    
            ObjectParameter langIDParameter;
            if (langID.HasValue)
            {
                langIDParameter = new ObjectParameter("LangID", langID);
            }
            else
            {
                langIDParameter = new ObjectParameter("LangID", typeof(global::System.Int16));
            }
    
            return base.ExecuteFunction<OM21100_pgDiscCustCate_Result>("OM21100_pgDiscCustCate", discIDParameter, discSeqParameter, userNameParameter, cpnyIDParameter, langIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="userName">No Metadata Documentation available.</param>
        /// <param name="cpnyID">No Metadata Documentation available.</param>
        /// <param name="langID">No Metadata Documentation available.</param>
        public ObjectResult<OM21100_ptTreeNode_Result> OM21100_ptTreeNode(global::System.String userName, global::System.String cpnyID, Nullable<global::System.Int16> langID)
        {
            ObjectParameter userNameParameter;
            if (userName != null)
            {
                userNameParameter = new ObjectParameter("UserName", userName);
            }
            else
            {
                userNameParameter = new ObjectParameter("UserName", typeof(global::System.String));
            }
    
            ObjectParameter cpnyIDParameter;
            if (cpnyID != null)
            {
                cpnyIDParameter = new ObjectParameter("CpnyID", cpnyID);
            }
            else
            {
                cpnyIDParameter = new ObjectParameter("CpnyID", typeof(global::System.String));
            }
    
            ObjectParameter langIDParameter;
            if (langID.HasValue)
            {
                langIDParameter = new ObjectParameter("LangID", langID);
            }
            else
            {
                langIDParameter = new ObjectParameter("LangID", typeof(global::System.Int16));
            }
    
            return base.ExecuteFunction<OM21100_ptTreeNode_Result>("OM21100_ptTreeNode", userNameParameter, cpnyIDParameter, langIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="cpnyID">No Metadata Documentation available.</param>
        /// <param name="userName">No Metadata Documentation available.</param>
        /// <param name="langID">No Metadata Documentation available.</param>
        public ObjectResult<OM21100_ppIN_UnitConversion_Result> OM21100_ppIN_UnitConversion(global::System.String cpnyID, global::System.String userName, Nullable<global::System.Int16> langID)
        {
            ObjectParameter cpnyIDParameter;
            if (cpnyID != null)
            {
                cpnyIDParameter = new ObjectParameter("CpnyID", cpnyID);
            }
            else
            {
                cpnyIDParameter = new ObjectParameter("CpnyID", typeof(global::System.String));
            }
    
            ObjectParameter userNameParameter;
            if (userName != null)
            {
                userNameParameter = new ObjectParameter("UserName", userName);
            }
            else
            {
                userNameParameter = new ObjectParameter("UserName", typeof(global::System.String));
            }
    
            ObjectParameter langIDParameter;
            if (langID.HasValue)
            {
                langIDParameter = new ObjectParameter("LangID", langID);
            }
            else
            {
                langIDParameter = new ObjectParameter("LangID", typeof(global::System.Int16));
            }
    
            return base.ExecuteFunction<OM21100_ppIN_UnitConversion_Result>("OM21100_ppIN_UnitConversion", cpnyIDParameter, userNameParameter, langIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="cpnyID">No Metadata Documentation available.</param>
        /// <param name="userName">No Metadata Documentation available.</param>
        /// <param name="langID">No Metadata Documentation available.</param>
        public ObjectResult<OM21100_ppCompanyCheck_Result> OM21100_ppCompanyCheck(global::System.String cpnyID, global::System.String userName, Nullable<global::System.Int16> langID)
        {
            ObjectParameter cpnyIDParameter;
            if (cpnyID != null)
            {
                cpnyIDParameter = new ObjectParameter("CpnyID", cpnyID);
            }
            else
            {
                cpnyIDParameter = new ObjectParameter("CpnyID", typeof(global::System.String));
            }
    
            ObjectParameter userNameParameter;
            if (userName != null)
            {
                userNameParameter = new ObjectParameter("UserName", userName);
            }
            else
            {
                userNameParameter = new ObjectParameter("UserName", typeof(global::System.String));
            }
    
            ObjectParameter langIDParameter;
            if (langID.HasValue)
            {
                langIDParameter = new ObjectParameter("LangID", langID);
            }
            else
            {
                langIDParameter = new ObjectParameter("LangID", typeof(global::System.Int16));
            }
    
            return base.ExecuteFunction<OM21100_ppCompanyCheck_Result>("OM21100_ppCompanyCheck", cpnyIDParameter, userNameParameter, langIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="cpnyID">No Metadata Documentation available.</param>
        /// <param name="userName">No Metadata Documentation available.</param>
        /// <param name="langID">No Metadata Documentation available.</param>
        public ObjectResult<OM21100_ppOM_DiscSeq_Result> OM21100_ppOM_DiscSeq(global::System.String cpnyID, global::System.String userName, Nullable<global::System.Int16> langID)
        {
            ObjectParameter cpnyIDParameter;
            if (cpnyID != null)
            {
                cpnyIDParameter = new ObjectParameter("CpnyID", cpnyID);
            }
            else
            {
                cpnyIDParameter = new ObjectParameter("CpnyID", typeof(global::System.String));
            }
    
            ObjectParameter userNameParameter;
            if (userName != null)
            {
                userNameParameter = new ObjectParameter("UserName", userName);
            }
            else
            {
                userNameParameter = new ObjectParameter("UserName", typeof(global::System.String));
            }
    
            ObjectParameter langIDParameter;
            if (langID.HasValue)
            {
                langIDParameter = new ObjectParameter("LangID", langID);
            }
            else
            {
                langIDParameter = new ObjectParameter("LangID", typeof(global::System.Int16));
            }
    
            return base.ExecuteFunction<OM21100_ppOM_DiscSeq_Result>("OM21100_ppOM_DiscSeq", cpnyIDParameter, userNameParameter, langIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="userID">No Metadata Documentation available.</param>
        /// <param name="langID">No Metadata Documentation available.</param>
        public ObjectResult<OM21100_pcStatus_Result> OM21100_pcStatus(global::System.String userID, Nullable<global::System.Int16> langID)
        {
            ObjectParameter userIDParameter;
            if (userID != null)
            {
                userIDParameter = new ObjectParameter("UserID", userID);
            }
            else
            {
                userIDParameter = new ObjectParameter("UserID", typeof(global::System.String));
            }
    
            ObjectParameter langIDParameter;
            if (langID.HasValue)
            {
                langIDParameter = new ObjectParameter("LangID", langID);
            }
            else
            {
                langIDParameter = new ObjectParameter("LangID", typeof(global::System.Int16));
            }
    
            return base.ExecuteFunction<OM21100_pcStatus_Result>("OM21100_pcStatus", userIDParameter, langIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="cpnyID">No Metadata Documentation available.</param>
        /// <param name="userName">No Metadata Documentation available.</param>
        /// <param name="langID">No Metadata Documentation available.</param>
        public ObjectResult<OM21100_ppIN_Inventory_Result> OM21100_ppIN_Inventory(global::System.String cpnyID, global::System.String userName, Nullable<global::System.Int16> langID)
        {
            ObjectParameter cpnyIDParameter;
            if (cpnyID != null)
            {
                cpnyIDParameter = new ObjectParameter("CpnyID", cpnyID);
            }
            else
            {
                cpnyIDParameter = new ObjectParameter("CpnyID", typeof(global::System.String));
            }
    
            ObjectParameter userNameParameter;
            if (userName != null)
            {
                userNameParameter = new ObjectParameter("UserName", userName);
            }
            else
            {
                userNameParameter = new ObjectParameter("UserName", typeof(global::System.String));
            }
    
            ObjectParameter langIDParameter;
            if (langID.HasValue)
            {
                langIDParameter = new ObjectParameter("LangID", langID);
            }
            else
            {
                langIDParameter = new ObjectParameter("LangID", typeof(global::System.Int16));
            }
    
            return base.ExecuteFunction<OM21100_ppIN_Inventory_Result>("OM21100_ppIN_Inventory", cpnyIDParameter, userNameParameter, langIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="budgetID">No Metadata Documentation available.</param>
        public ObjectResult<OM20300_pgFreeItem_Result> OM20300_pgFreeItem(global::System.String budgetID)
        {
            ObjectParameter budgetIDParameter;
            if (budgetID != null)
            {
                budgetIDParameter = new ObjectParameter("BudgetID", budgetID);
            }
            else
            {
                budgetIDParameter = new ObjectParameter("BudgetID", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<OM20300_pgFreeItem_Result>("OM20300_pgFreeItem", budgetIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="userName">No Metadata Documentation available.</param>
        /// <param name="cpnyID">No Metadata Documentation available.</param>
        /// <param name="langID">No Metadata Documentation available.</param>
        public ObjectResult<OM21100_pdConfig_Result> OM21100_pdConfig(global::System.String userName, global::System.String cpnyID, Nullable<global::System.Int16> langID)
        {
            ObjectParameter userNameParameter;
            if (userName != null)
            {
                userNameParameter = new ObjectParameter("UserName", userName);
            }
            else
            {
                userNameParameter = new ObjectParameter("UserName", typeof(global::System.String));
            }
    
            ObjectParameter cpnyIDParameter;
            if (cpnyID != null)
            {
                cpnyIDParameter = new ObjectParameter("CpnyID", cpnyID);
            }
            else
            {
                cpnyIDParameter = new ObjectParameter("CpnyID", typeof(global::System.String));
            }
    
            ObjectParameter langIDParameter;
            if (langID.HasValue)
            {
                langIDParameter = new ObjectParameter("LangID", langID);
            }
            else
            {
                langIDParameter = new ObjectParameter("LangID", typeof(global::System.Int16));
            }
    
            return base.ExecuteFunction<OM21100_pdConfig_Result>("OM21100_pdConfig", userNameParameter, cpnyIDParameter, langIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="branchID">No Metadata Documentation available.</param>
        /// <param name="getType">No Metadata Documentation available.</param>
        public ObjectResult<global::System.String> INNumbering(global::System.String branchID, global::System.String getType)
        {
            ObjectParameter branchIDParameter;
            if (branchID != null)
            {
                branchIDParameter = new ObjectParameter("BranchID", branchID);
            }
            else
            {
                branchIDParameter = new ObjectParameter("BranchID", typeof(global::System.String));
            }
    
            ObjectParameter getTypeParameter;
            if (getType != null)
            {
                getTypeParameter = new ObjectParameter("GetType", getType);
            }
            else
            {
                getTypeParameter = new ObjectParameter("GetType", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<global::System.String>("INNumbering", branchIDParameter, getTypeParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="discID">No Metadata Documentation available.</param>
        /// <param name="discSeq">No Metadata Documentation available.</param>
        /// <param name="userName">No Metadata Documentation available.</param>
        /// <param name="cpnyID">No Metadata Documentation available.</param>
        /// <param name="langID">No Metadata Documentation available.</param>
        public ObjectResult<OM21100_pdGetDataShipment_Result> OM21100_pdGetDataShipment(global::System.String discID, global::System.String discSeq, global::System.String userName, global::System.String cpnyID, Nullable<global::System.Int16> langID)
        {
            ObjectParameter discIDParameter;
            if (discID != null)
            {
                discIDParameter = new ObjectParameter("DiscID", discID);
            }
            else
            {
                discIDParameter = new ObjectParameter("DiscID", typeof(global::System.String));
            }
    
            ObjectParameter discSeqParameter;
            if (discSeq != null)
            {
                discSeqParameter = new ObjectParameter("DiscSeq", discSeq);
            }
            else
            {
                discSeqParameter = new ObjectParameter("DiscSeq", typeof(global::System.String));
            }
    
            ObjectParameter userNameParameter;
            if (userName != null)
            {
                userNameParameter = new ObjectParameter("UserName", userName);
            }
            else
            {
                userNameParameter = new ObjectParameter("UserName", typeof(global::System.String));
            }
    
            ObjectParameter cpnyIDParameter;
            if (cpnyID != null)
            {
                cpnyIDParameter = new ObjectParameter("CpnyID", cpnyID);
            }
            else
            {
                cpnyIDParameter = new ObjectParameter("CpnyID", typeof(global::System.String));
            }
    
            ObjectParameter langIDParameter;
            if (langID.HasValue)
            {
                langIDParameter = new ObjectParameter("LangID", langID);
            }
            else
            {
                langIDParameter = new ObjectParameter("LangID", typeof(global::System.Int16));
            }
    
            return base.ExecuteFunction<OM21100_pdGetDataShipment_Result>("OM21100_pdGetDataShipment", discIDParameter, discSeqParameter, userNameParameter, cpnyIDParameter, langIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="siteID">No Metadata Documentation available.</param>
        /// <param name="branchID">No Metadata Documentation available.</param>
        /// <param name="discID">No Metadata Documentation available.</param>
        /// <param name="discSeq">No Metadata Documentation available.</param>
        /// <param name="userName">No Metadata Documentation available.</param>
        /// <param name="cpnyID">No Metadata Documentation available.</param>
        /// <param name="langID">No Metadata Documentation available.</param>
        public ObjectResult<OM21100_pdGetDataItemTrans_Result> OM21100_pdGetDataItemTrans(global::System.String siteID, global::System.String branchID, global::System.String discID, global::System.String discSeq, global::System.String userName, global::System.String cpnyID, Nullable<global::System.Int16> langID)
        {
            ObjectParameter siteIDParameter;
            if (siteID != null)
            {
                siteIDParameter = new ObjectParameter("SiteID", siteID);
            }
            else
            {
                siteIDParameter = new ObjectParameter("SiteID", typeof(global::System.String));
            }
    
            ObjectParameter branchIDParameter;
            if (branchID != null)
            {
                branchIDParameter = new ObjectParameter("BranchID", branchID);
            }
            else
            {
                branchIDParameter = new ObjectParameter("BranchID", typeof(global::System.String));
            }
    
            ObjectParameter discIDParameter;
            if (discID != null)
            {
                discIDParameter = new ObjectParameter("DiscID", discID);
            }
            else
            {
                discIDParameter = new ObjectParameter("DiscID", typeof(global::System.String));
            }
    
            ObjectParameter discSeqParameter;
            if (discSeq != null)
            {
                discSeqParameter = new ObjectParameter("DiscSeq", discSeq);
            }
            else
            {
                discSeqParameter = new ObjectParameter("DiscSeq", typeof(global::System.String));
            }
    
            ObjectParameter userNameParameter;
            if (userName != null)
            {
                userNameParameter = new ObjectParameter("UserName", userName);
            }
            else
            {
                userNameParameter = new ObjectParameter("UserName", typeof(global::System.String));
            }
    
            ObjectParameter cpnyIDParameter;
            if (cpnyID != null)
            {
                cpnyIDParameter = new ObjectParameter("CpnyID", cpnyID);
            }
            else
            {
                cpnyIDParameter = new ObjectParameter("CpnyID", typeof(global::System.String));
            }
    
            ObjectParameter langIDParameter;
            if (langID.HasValue)
            {
                langIDParameter = new ObjectParameter("LangID", langID);
            }
            else
            {
                langIDParameter = new ObjectParameter("LangID", typeof(global::System.Int16));
            }
    
            return base.ExecuteFunction<OM21100_pdGetDataItemTrans_Result>("OM21100_pdGetDataItemTrans", siteIDParameter, branchIDParameter, discIDParameter, discSeqParameter, userNameParameter, cpnyIDParameter, langIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="batNbr">No Metadata Documentation available.</param>
        /// <param name="branchID">No Metadata Documentation available.</param>
        /// <param name="refNbr">No Metadata Documentation available.</param>
        /// <param name="userName">No Metadata Documentation available.</param>
        /// <param name="cpnyID">No Metadata Documentation available.</param>
        /// <param name="langID">No Metadata Documentation available.</param>
        public ObjectResult<global::System.String> OM21100_pdGetLineRef(global::System.String batNbr, global::System.String branchID, global::System.String refNbr, global::System.String userName, global::System.String cpnyID, Nullable<global::System.Int16> langID)
        {
            ObjectParameter batNbrParameter;
            if (batNbr != null)
            {
                batNbrParameter = new ObjectParameter("BatNbr", batNbr);
            }
            else
            {
                batNbrParameter = new ObjectParameter("BatNbr", typeof(global::System.String));
            }
    
            ObjectParameter branchIDParameter;
            if (branchID != null)
            {
                branchIDParameter = new ObjectParameter("BranchID", branchID);
            }
            else
            {
                branchIDParameter = new ObjectParameter("BranchID", typeof(global::System.String));
            }
    
            ObjectParameter refNbrParameter;
            if (refNbr != null)
            {
                refNbrParameter = new ObjectParameter("RefNbr", refNbr);
            }
            else
            {
                refNbrParameter = new ObjectParameter("RefNbr", typeof(global::System.String));
            }
    
            ObjectParameter userNameParameter;
            if (userName != null)
            {
                userNameParameter = new ObjectParameter("UserName", userName);
            }
            else
            {
                userNameParameter = new ObjectParameter("UserName", typeof(global::System.String));
            }
    
            ObjectParameter cpnyIDParameter;
            if (cpnyID != null)
            {
                cpnyIDParameter = new ObjectParameter("CpnyID", cpnyID);
            }
            else
            {
                cpnyIDParameter = new ObjectParameter("CpnyID", typeof(global::System.String));
            }
    
            ObjectParameter langIDParameter;
            if (langID.HasValue)
            {
                langIDParameter = new ObjectParameter("LangID", langID);
            }
            else
            {
                langIDParameter = new ObjectParameter("LangID", typeof(global::System.Int16));
            }
    
            return base.ExecuteFunction<global::System.String>("OM21100_pdGetLineRef", batNbrParameter, branchIDParameter, refNbrParameter, userNameParameter, cpnyIDParameter, langIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="lstCpnyID">No Metadata Documentation available.</param>
        /// <param name="userName">No Metadata Documentation available.</param>
        /// <param name="cpnyID">No Metadata Documentation available.</param>
        /// <param name="langID">No Metadata Documentation available.</param>
        public ObjectResult<OM21100_pdGetcheckSite_Result> OM21100_pdGetcheckSite(global::System.String lstCpnyID, global::System.String userName, global::System.String cpnyID, Nullable<global::System.Int16> langID)
        {
            ObjectParameter lstCpnyIDParameter;
            if (lstCpnyID != null)
            {
                lstCpnyIDParameter = new ObjectParameter("lstCpnyID", lstCpnyID);
            }
            else
            {
                lstCpnyIDParameter = new ObjectParameter("lstCpnyID", typeof(global::System.String));
            }
    
            ObjectParameter userNameParameter;
            if (userName != null)
            {
                userNameParameter = new ObjectParameter("UserName", userName);
            }
            else
            {
                userNameParameter = new ObjectParameter("UserName", typeof(global::System.String));
            }
    
            ObjectParameter cpnyIDParameter;
            if (cpnyID != null)
            {
                cpnyIDParameter = new ObjectParameter("CpnyID", cpnyID);
            }
            else
            {
                cpnyIDParameter = new ObjectParameter("CpnyID", typeof(global::System.String));
            }
    
            ObjectParameter langIDParameter;
            if (langID.HasValue)
            {
                langIDParameter = new ObjectParameter("LangID", langID);
            }
            else
            {
                langIDParameter = new ObjectParameter("LangID", typeof(global::System.Int16));
            }
    
            return base.ExecuteFunction<OM21100_pdGetcheckSite_Result>("OM21100_pdGetcheckSite", lstCpnyIDParameter, userNameParameter, cpnyIDParameter, langIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="discID">No Metadata Documentation available.</param>
        /// <param name="discSeq">No Metadata Documentation available.</param>
        /// <param name="userName">No Metadata Documentation available.</param>
        /// <param name="cpnyID">No Metadata Documentation available.</param>
        /// <param name="langID">No Metadata Documentation available.</param>
        public int OM21100_pdUpdataDiscSeqAfter(global::System.String discID, global::System.String discSeq, global::System.String userName, global::System.String cpnyID, Nullable<global::System.Int16> langID)
        {
            ObjectParameter discIDParameter;
            if (discID != null)
            {
                discIDParameter = new ObjectParameter("DiscID", discID);
            }
            else
            {
                discIDParameter = new ObjectParameter("DiscID", typeof(global::System.String));
            }
    
            ObjectParameter discSeqParameter;
            if (discSeq != null)
            {
                discSeqParameter = new ObjectParameter("DiscSeq", discSeq);
            }
            else
            {
                discSeqParameter = new ObjectParameter("DiscSeq", typeof(global::System.String));
            }
    
            ObjectParameter userNameParameter;
            if (userName != null)
            {
                userNameParameter = new ObjectParameter("UserName", userName);
            }
            else
            {
                userNameParameter = new ObjectParameter("UserName", typeof(global::System.String));
            }
    
            ObjectParameter cpnyIDParameter;
            if (cpnyID != null)
            {
                cpnyIDParameter = new ObjectParameter("CpnyID", cpnyID);
            }
            else
            {
                cpnyIDParameter = new ObjectParameter("CpnyID", typeof(global::System.String));
            }
    
            ObjectParameter langIDParameter;
            if (langID.HasValue)
            {
                langIDParameter = new ObjectParameter("LangID", langID);
            }
            else
            {
                langIDParameter = new ObjectParameter("LangID", typeof(global::System.Int16));
            }
    
            return base.ExecuteFunction("OM21100_pdUpdataDiscSeqAfter", discIDParameter, discSeqParameter, userNameParameter, cpnyIDParameter, langIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="lstInvtID">No Metadata Documentation available.</param>
        /// <param name="siteID">No Metadata Documentation available.</param>
        /// <param name="branchID">No Metadata Documentation available.</param>
        /// <param name="userName">No Metadata Documentation available.</param>
        /// <param name="cpnyID">No Metadata Documentation available.</param>
        /// <param name="langID">No Metadata Documentation available.</param>
        public ObjectResult<OM21100_pdGetcheckQty_Result> OM21100_pdGetcheckQty(global::System.String lstInvtID, global::System.String siteID, global::System.String branchID, global::System.String userName, global::System.String cpnyID, Nullable<global::System.Int16> langID)
        {
            ObjectParameter lstInvtIDParameter;
            if (lstInvtID != null)
            {
                lstInvtIDParameter = new ObjectParameter("lstInvtID", lstInvtID);
            }
            else
            {
                lstInvtIDParameter = new ObjectParameter("lstInvtID", typeof(global::System.String));
            }
    
            ObjectParameter siteIDParameter;
            if (siteID != null)
            {
                siteIDParameter = new ObjectParameter("SiteID", siteID);
            }
            else
            {
                siteIDParameter = new ObjectParameter("SiteID", typeof(global::System.String));
            }
    
            ObjectParameter branchIDParameter;
            if (branchID != null)
            {
                branchIDParameter = new ObjectParameter("BranchID", branchID);
            }
            else
            {
                branchIDParameter = new ObjectParameter("BranchID", typeof(global::System.String));
            }
    
            ObjectParameter userNameParameter;
            if (userName != null)
            {
                userNameParameter = new ObjectParameter("UserName", userName);
            }
            else
            {
                userNameParameter = new ObjectParameter("UserName", typeof(global::System.String));
            }
    
            ObjectParameter cpnyIDParameter;
            if (cpnyID != null)
            {
                cpnyIDParameter = new ObjectParameter("CpnyID", cpnyID);
            }
            else
            {
                cpnyIDParameter = new ObjectParameter("CpnyID", typeof(global::System.String));
            }
    
            ObjectParameter langIDParameter;
            if (langID.HasValue)
            {
                langIDParameter = new ObjectParameter("LangID", langID);
            }
            else
            {
                langIDParameter = new ObjectParameter("LangID", typeof(global::System.Int16));
            }
    
            return base.ExecuteFunction<OM21100_pdGetcheckQty_Result>("OM21100_pdGetcheckQty", lstInvtIDParameter, siteIDParameter, branchIDParameter, userNameParameter, cpnyIDParameter, langIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="siteID">No Metadata Documentation available.</param>
        /// <param name="discID">No Metadata Documentation available.</param>
        /// <param name="discSeq">No Metadata Documentation available.</param>
        /// <param name="branchID">No Metadata Documentation available.</param>
        /// <param name="userName">No Metadata Documentation available.</param>
        /// <param name="cpnyID">No Metadata Documentation available.</param>
        /// <param name="langID">No Metadata Documentation available.</param>
        public ObjectResult<OM21100_pdGetcheckQtyEditStatus_Result> OM21100_pdGetcheckQtyEditStatus(global::System.String siteID, global::System.String discID, global::System.String discSeq, global::System.String branchID, global::System.String userName, global::System.String cpnyID, Nullable<global::System.Int16> langID)
        {
            ObjectParameter siteIDParameter;
            if (siteID != null)
            {
                siteIDParameter = new ObjectParameter("SiteID", siteID);
            }
            else
            {
                siteIDParameter = new ObjectParameter("SiteID", typeof(global::System.String));
            }
    
            ObjectParameter discIDParameter;
            if (discID != null)
            {
                discIDParameter = new ObjectParameter("DiscID", discID);
            }
            else
            {
                discIDParameter = new ObjectParameter("DiscID", typeof(global::System.String));
            }
    
            ObjectParameter discSeqParameter;
            if (discSeq != null)
            {
                discSeqParameter = new ObjectParameter("DiscSeq", discSeq);
            }
            else
            {
                discSeqParameter = new ObjectParameter("DiscSeq", typeof(global::System.String));
            }
    
            ObjectParameter branchIDParameter;
            if (branchID != null)
            {
                branchIDParameter = new ObjectParameter("BranchID", branchID);
            }
            else
            {
                branchIDParameter = new ObjectParameter("BranchID", typeof(global::System.String));
            }
    
            ObjectParameter userNameParameter;
            if (userName != null)
            {
                userNameParameter = new ObjectParameter("UserName", userName);
            }
            else
            {
                userNameParameter = new ObjectParameter("UserName", typeof(global::System.String));
            }
    
            ObjectParameter cpnyIDParameter;
            if (cpnyID != null)
            {
                cpnyIDParameter = new ObjectParameter("CpnyID", cpnyID);
            }
            else
            {
                cpnyIDParameter = new ObjectParameter("CpnyID", typeof(global::System.String));
            }
    
            ObjectParameter langIDParameter;
            if (langID.HasValue)
            {
                langIDParameter = new ObjectParameter("LangID", langID);
            }
            else
            {
                langIDParameter = new ObjectParameter("LangID", typeof(global::System.Int16));
            }
    
            return base.ExecuteFunction<OM21100_pdGetcheckQtyEditStatus_Result>("OM21100_pdGetcheckQtyEditStatus", siteIDParameter, discIDParameter, discSeqParameter, branchIDParameter, userNameParameter, cpnyIDParameter, langIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="discID">No Metadata Documentation available.</param>
        /// <param name="discSeq">No Metadata Documentation available.</param>
        /// <param name="userName">No Metadata Documentation available.</param>
        /// <param name="cpnyID">No Metadata Documentation available.</param>
        /// <param name="langID">No Metadata Documentation available.</param>
        public ObjectResult<OM21100_pdCheckOrderDisc_Result> OM21100_pdCheckOrderDisc(global::System.String discID, global::System.String discSeq, global::System.String userName, global::System.String cpnyID, Nullable<global::System.Int16> langID)
        {
            ObjectParameter discIDParameter;
            if (discID != null)
            {
                discIDParameter = new ObjectParameter("DiscID", discID);
            }
            else
            {
                discIDParameter = new ObjectParameter("DiscID", typeof(global::System.String));
            }
    
            ObjectParameter discSeqParameter;
            if (discSeq != null)
            {
                discSeqParameter = new ObjectParameter("DiscSeq", discSeq);
            }
            else
            {
                discSeqParameter = new ObjectParameter("DiscSeq", typeof(global::System.String));
            }
    
            ObjectParameter userNameParameter;
            if (userName != null)
            {
                userNameParameter = new ObjectParameter("UserName", userName);
            }
            else
            {
                userNameParameter = new ObjectParameter("UserName", typeof(global::System.String));
            }
    
            ObjectParameter cpnyIDParameter;
            if (cpnyID != null)
            {
                cpnyIDParameter = new ObjectParameter("CpnyID", cpnyID);
            }
            else
            {
                cpnyIDParameter = new ObjectParameter("CpnyID", typeof(global::System.String));
            }
    
            ObjectParameter langIDParameter;
            if (langID.HasValue)
            {
                langIDParameter = new ObjectParameter("LangID", langID);
            }
            else
            {
                langIDParameter = new ObjectParameter("LangID", typeof(global::System.Int16));
            }
    
            return base.ExecuteFunction<OM21100_pdCheckOrderDisc_Result>("OM21100_pdCheckOrderDisc", discIDParameter, discSeqParameter, userNameParameter, cpnyIDParameter, langIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="userName">No Metadata Documentation available.</param>
        /// <param name="cpnyID">No Metadata Documentation available.</param>
        /// <param name="langID">No Metadata Documentation available.</param>
        /// <param name="discID">No Metadata Documentation available.</param>
        /// <param name="discSeq">No Metadata Documentation available.</param>
        /// <param name="lineRef">No Metadata Documentation available.</param>
        public ObjectResult<OM21100_pgFreeItem_Result> OM21100_pgFreeItem(global::System.String userName, global::System.String cpnyID, Nullable<global::System.Int16> langID, global::System.String discID, global::System.String discSeq, global::System.String lineRef)
        {
            ObjectParameter userNameParameter;
            if (userName != null)
            {
                userNameParameter = new ObjectParameter("UserName", userName);
            }
            else
            {
                userNameParameter = new ObjectParameter("UserName", typeof(global::System.String));
            }
    
            ObjectParameter cpnyIDParameter;
            if (cpnyID != null)
            {
                cpnyIDParameter = new ObjectParameter("CpnyID", cpnyID);
            }
            else
            {
                cpnyIDParameter = new ObjectParameter("CpnyID", typeof(global::System.String));
            }
    
            ObjectParameter langIDParameter;
            if (langID.HasValue)
            {
                langIDParameter = new ObjectParameter("LangID", langID);
            }
            else
            {
                langIDParameter = new ObjectParameter("LangID", typeof(global::System.Int16));
            }
    
            ObjectParameter discIDParameter;
            if (discID != null)
            {
                discIDParameter = new ObjectParameter("DiscID", discID);
            }
            else
            {
                discIDParameter = new ObjectParameter("DiscID", typeof(global::System.String));
            }
    
            ObjectParameter discSeqParameter;
            if (discSeq != null)
            {
                discSeqParameter = new ObjectParameter("DiscSeq", discSeq);
            }
            else
            {
                discSeqParameter = new ObjectParameter("DiscSeq", typeof(global::System.String));
            }
    
            ObjectParameter lineRefParameter;
            if (lineRef != null)
            {
                lineRefParameter = new ObjectParameter("LineRef", lineRef);
            }
            else
            {
                lineRefParameter = new ObjectParameter("LineRef", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<OM21100_pgFreeItem_Result>("OM21100_pgFreeItem", userNameParameter, cpnyIDParameter, langIDParameter, discIDParameter, discSeqParameter, lineRefParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="statusOld">No Metadata Documentation available.</param>
        /// <param name="discID">No Metadata Documentation available.</param>
        /// <param name="discSeq">No Metadata Documentation available.</param>
        /// <param name="userName">No Metadata Documentation available.</param>
        /// <param name="cpnyID">No Metadata Documentation available.</param>
        /// <param name="langID">No Metadata Documentation available.</param>
        public int OM21100_pdUpdataErro(global::System.String statusOld, global::System.String discID, global::System.String discSeq, global::System.String userName, global::System.String cpnyID, Nullable<global::System.Int16> langID)
        {
            ObjectParameter statusOldParameter;
            if (statusOld != null)
            {
                statusOldParameter = new ObjectParameter("StatusOld", statusOld);
            }
            else
            {
                statusOldParameter = new ObjectParameter("StatusOld", typeof(global::System.String));
            }
    
            ObjectParameter discIDParameter;
            if (discID != null)
            {
                discIDParameter = new ObjectParameter("DiscID", discID);
            }
            else
            {
                discIDParameter = new ObjectParameter("DiscID", typeof(global::System.String));
            }
    
            ObjectParameter discSeqParameter;
            if (discSeq != null)
            {
                discSeqParameter = new ObjectParameter("DiscSeq", discSeq);
            }
            else
            {
                discSeqParameter = new ObjectParameter("DiscSeq", typeof(global::System.String));
            }
    
            ObjectParameter userNameParameter;
            if (userName != null)
            {
                userNameParameter = new ObjectParameter("UserName", userName);
            }
            else
            {
                userNameParameter = new ObjectParameter("UserName", typeof(global::System.String));
            }
    
            ObjectParameter cpnyIDParameter;
            if (cpnyID != null)
            {
                cpnyIDParameter = new ObjectParameter("CpnyID", cpnyID);
            }
            else
            {
                cpnyIDParameter = new ObjectParameter("CpnyID", typeof(global::System.String));
            }
    
            ObjectParameter langIDParameter;
            if (langID.HasValue)
            {
                langIDParameter = new ObjectParameter("LangID", langID);
            }
            else
            {
                langIDParameter = new ObjectParameter("LangID", typeof(global::System.Int16));
            }
    
            return base.ExecuteFunction("OM21100_pdUpdataErro", statusOldParameter, discIDParameter, discSeqParameter, userNameParameter, cpnyIDParameter, langIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="discID">No Metadata Documentation available.</param>
        /// <param name="discSeq">No Metadata Documentation available.</param>
        /// <param name="userName">No Metadata Documentation available.</param>
        /// <param name="cpnyID">No Metadata Documentation available.</param>
        /// <param name="langID">No Metadata Documentation available.</param>
        public int OM21100_pdDelDataErroRealse(global::System.String discID, global::System.String discSeq, global::System.String userName, global::System.String cpnyID, Nullable<global::System.Int16> langID)
        {
            ObjectParameter discIDParameter;
            if (discID != null)
            {
                discIDParameter = new ObjectParameter("DiscID", discID);
            }
            else
            {
                discIDParameter = new ObjectParameter("DiscID", typeof(global::System.String));
            }
    
            ObjectParameter discSeqParameter;
            if (discSeq != null)
            {
                discSeqParameter = new ObjectParameter("DiscSeq", discSeq);
            }
            else
            {
                discSeqParameter = new ObjectParameter("DiscSeq", typeof(global::System.String));
            }
    
            ObjectParameter userNameParameter;
            if (userName != null)
            {
                userNameParameter = new ObjectParameter("UserName", userName);
            }
            else
            {
                userNameParameter = new ObjectParameter("UserName", typeof(global::System.String));
            }
    
            ObjectParameter cpnyIDParameter;
            if (cpnyID != null)
            {
                cpnyIDParameter = new ObjectParameter("CpnyID", cpnyID);
            }
            else
            {
                cpnyIDParameter = new ObjectParameter("CpnyID", typeof(global::System.String));
            }
    
            ObjectParameter langIDParameter;
            if (langID.HasValue)
            {
                langIDParameter = new ObjectParameter("LangID", langID);
            }
            else
            {
                langIDParameter = new ObjectParameter("LangID", typeof(global::System.Int16));
            }
    
            return base.ExecuteFunction("OM21100_pdDelDataErroRealse", discIDParameter, discSeqParameter, userNameParameter, cpnyIDParameter, langIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="userName">No Metadata Documentation available.</param>
        /// <param name="cpnyID">No Metadata Documentation available.</param>
        /// <param name="langID">No Metadata Documentation available.</param>
        /// <param name="listCpnyID">No Metadata Documentation available.</param>
        public ObjectResult<OM21100_ptTreeNodeCustomer_Result> OM21100_ptTreeNodeCustomer(global::System.String userName, global::System.String cpnyID, Nullable<global::System.Int16> langID, global::System.String listCpnyID)
        {
            ObjectParameter userNameParameter;
            if (userName != null)
            {
                userNameParameter = new ObjectParameter("UserName", userName);
            }
            else
            {
                userNameParameter = new ObjectParameter("UserName", typeof(global::System.String));
            }
    
            ObjectParameter cpnyIDParameter;
            if (cpnyID != null)
            {
                cpnyIDParameter = new ObjectParameter("CpnyID", cpnyID);
            }
            else
            {
                cpnyIDParameter = new ObjectParameter("CpnyID", typeof(global::System.String));
            }
    
            ObjectParameter langIDParameter;
            if (langID.HasValue)
            {
                langIDParameter = new ObjectParameter("LangID", langID);
            }
            else
            {
                langIDParameter = new ObjectParameter("LangID", typeof(global::System.Int16));
            }
    
            ObjectParameter listCpnyIDParameter;
            if (listCpnyID != null)
            {
                listCpnyIDParameter = new ObjectParameter("ListCpnyID", listCpnyID);
            }
            else
            {
                listCpnyIDParameter = new ObjectParameter("ListCpnyID", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<OM21100_ptTreeNodeCustomer_Result>("OM21100_ptTreeNodeCustomer", userNameParameter, cpnyIDParameter, langIDParameter, listCpnyIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="userName">No Metadata Documentation available.</param>
        /// <param name="cpnyID">No Metadata Documentation available.</param>
        /// <param name="langID">No Metadata Documentation available.</param>
        /// <param name="discID">No Metadata Documentation available.</param>
        /// <param name="discSeq">No Metadata Documentation available.</param>
        public ObjectResult<OM21100_pgDiscSubBreakItem_Result> OM21100_pgDiscSubBreakItem(global::System.String userName, global::System.String cpnyID, Nullable<global::System.Int16> langID, global::System.String discID, global::System.String discSeq)
        {
            ObjectParameter userNameParameter;
            if (userName != null)
            {
                userNameParameter = new ObjectParameter("UserName", userName);
            }
            else
            {
                userNameParameter = new ObjectParameter("UserName", typeof(global::System.String));
            }
    
            ObjectParameter cpnyIDParameter;
            if (cpnyID != null)
            {
                cpnyIDParameter = new ObjectParameter("CpnyID", cpnyID);
            }
            else
            {
                cpnyIDParameter = new ObjectParameter("CpnyID", typeof(global::System.String));
            }
    
            ObjectParameter langIDParameter;
            if (langID.HasValue)
            {
                langIDParameter = new ObjectParameter("LangID", langID);
            }
            else
            {
                langIDParameter = new ObjectParameter("LangID", typeof(global::System.Int16));
            }
    
            ObjectParameter discIDParameter;
            if (discID != null)
            {
                discIDParameter = new ObjectParameter("DiscID", discID);
            }
            else
            {
                discIDParameter = new ObjectParameter("DiscID", typeof(global::System.String));
            }
    
            ObjectParameter discSeqParameter;
            if (discSeq != null)
            {
                discSeqParameter = new ObjectParameter("DiscSeq", discSeq);
            }
            else
            {
                discSeqParameter = new ObjectParameter("DiscSeq", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<OM21100_pgDiscSubBreakItem_Result>("OM21100_pgDiscSubBreakItem", userNameParameter, cpnyIDParameter, langIDParameter, discIDParameter, discSeqParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="discID">No Metadata Documentation available.</param>
        /// <param name="discSeq">No Metadata Documentation available.</param>
        /// <param name="discType">No Metadata Documentation available.</param>
        /// <param name="priorityPromo">No Metadata Documentation available.</param>
        /// <param name="lstInvtID">No Metadata Documentation available.</param>
        /// <param name="lstItemClass">No Metadata Documentation available.</param>
        public ObjectResult<OM21100_ppCheckdDuplicatePriorityPromo_Result> OM21100_ppCheckdDuplicatePriorityPromo(global::System.String discID, global::System.String discSeq, global::System.String discType, Nullable<global::System.Int32> priorityPromo, global::System.String lstInvtID, global::System.String lstItemClass)
        {
            ObjectParameter discIDParameter;
            if (discID != null)
            {
                discIDParameter = new ObjectParameter("DiscID", discID);
            }
            else
            {
                discIDParameter = new ObjectParameter("DiscID", typeof(global::System.String));
            }
    
            ObjectParameter discSeqParameter;
            if (discSeq != null)
            {
                discSeqParameter = new ObjectParameter("DiscSeq", discSeq);
            }
            else
            {
                discSeqParameter = new ObjectParameter("DiscSeq", typeof(global::System.String));
            }
    
            ObjectParameter discTypeParameter;
            if (discType != null)
            {
                discTypeParameter = new ObjectParameter("DiscType", discType);
            }
            else
            {
                discTypeParameter = new ObjectParameter("DiscType", typeof(global::System.String));
            }
    
            ObjectParameter priorityPromoParameter;
            if (priorityPromo.HasValue)
            {
                priorityPromoParameter = new ObjectParameter("PriorityPromo", priorityPromo);
            }
            else
            {
                priorityPromoParameter = new ObjectParameter("PriorityPromo", typeof(global::System.Int32));
            }
    
            ObjectParameter lstInvtIDParameter;
            if (lstInvtID != null)
            {
                lstInvtIDParameter = new ObjectParameter("LstInvtID", lstInvtID);
            }
            else
            {
                lstInvtIDParameter = new ObjectParameter("LstInvtID", typeof(global::System.String));
            }
    
            ObjectParameter lstItemClassParameter;
            if (lstItemClass != null)
            {
                lstItemClassParameter = new ObjectParameter("LstItemClass", lstItemClass);
            }
            else
            {
                lstItemClassParameter = new ObjectParameter("LstItemClass", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<OM21100_ppCheckdDuplicatePriorityPromo_Result>("OM21100_ppCheckdDuplicatePriorityPromo", discIDParameter, discSeqParameter, discTypeParameter, priorityPromoParameter, lstInvtIDParameter, lstItemClassParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="cpnyID">No Metadata Documentation available.</param>
        /// <param name="userName">No Metadata Documentation available.</param>
        /// <param name="langID">No Metadata Documentation available.</param>
        /// <param name="discID">No Metadata Documentation available.</param>
        public ObjectResult<OM21100_pgPromotionsCopy_Result> OM21100_pgPromotionsCopy(global::System.String cpnyID, global::System.String userName, Nullable<global::System.Int16> langID, global::System.String discID)
        {
            ObjectParameter cpnyIDParameter;
            if (cpnyID != null)
            {
                cpnyIDParameter = new ObjectParameter("CpnyID", cpnyID);
            }
            else
            {
                cpnyIDParameter = new ObjectParameter("CpnyID", typeof(global::System.String));
            }
    
            ObjectParameter userNameParameter;
            if (userName != null)
            {
                userNameParameter = new ObjectParameter("UserName", userName);
            }
            else
            {
                userNameParameter = new ObjectParameter("UserName", typeof(global::System.String));
            }
    
            ObjectParameter langIDParameter;
            if (langID.HasValue)
            {
                langIDParameter = new ObjectParameter("LangID", langID);
            }
            else
            {
                langIDParameter = new ObjectParameter("LangID", typeof(global::System.Int16));
            }
    
            ObjectParameter discIDParameter;
            if (discID != null)
            {
                discIDParameter = new ObjectParameter("DiscID", discID);
            }
            else
            {
                discIDParameter = new ObjectParameter("DiscID", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<OM21100_pgPromotionsCopy_Result>("OM21100_pgPromotionsCopy", cpnyIDParameter, userNameParameter, langIDParameter, discIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="cpnyID">No Metadata Documentation available.</param>
        /// <param name="userName">No Metadata Documentation available.</param>
        /// <param name="langID">No Metadata Documentation available.</param>
        /// <param name="discIDOld">No Metadata Documentation available.</param>
        /// <param name="discSeqOld">No Metadata Documentation available.</param>
        /// <param name="discIDNew">No Metadata Documentation available.</param>
        /// <param name="discSeqNew">No Metadata Documentation available.</param>
        public int OM21100_ppPromotionsCopy(global::System.String cpnyID, global::System.String userName, Nullable<global::System.Int16> langID, global::System.String discIDOld, global::System.String discSeqOld, global::System.String discIDNew, global::System.String discSeqNew)
        {
            ObjectParameter cpnyIDParameter;
            if (cpnyID != null)
            {
                cpnyIDParameter = new ObjectParameter("CpnyID", cpnyID);
            }
            else
            {
                cpnyIDParameter = new ObjectParameter("CpnyID", typeof(global::System.String));
            }
    
            ObjectParameter userNameParameter;
            if (userName != null)
            {
                userNameParameter = new ObjectParameter("UserName", userName);
            }
            else
            {
                userNameParameter = new ObjectParameter("UserName", typeof(global::System.String));
            }
    
            ObjectParameter langIDParameter;
            if (langID.HasValue)
            {
                langIDParameter = new ObjectParameter("LangID", langID);
            }
            else
            {
                langIDParameter = new ObjectParameter("LangID", typeof(global::System.Int16));
            }
    
            ObjectParameter discIDOldParameter;
            if (discIDOld != null)
            {
                discIDOldParameter = new ObjectParameter("DiscIDOld", discIDOld);
            }
            else
            {
                discIDOldParameter = new ObjectParameter("DiscIDOld", typeof(global::System.String));
            }
    
            ObjectParameter discSeqOldParameter;
            if (discSeqOld != null)
            {
                discSeqOldParameter = new ObjectParameter("DiscSeqOld", discSeqOld);
            }
            else
            {
                discSeqOldParameter = new ObjectParameter("DiscSeqOld", typeof(global::System.String));
            }
    
            ObjectParameter discIDNewParameter;
            if (discIDNew != null)
            {
                discIDNewParameter = new ObjectParameter("DiscIDNew", discIDNew);
            }
            else
            {
                discIDNewParameter = new ObjectParameter("DiscIDNew", typeof(global::System.String));
            }
    
            ObjectParameter discSeqNewParameter;
            if (discSeqNew != null)
            {
                discSeqNewParameter = new ObjectParameter("DiscSeqNew", discSeqNew);
            }
            else
            {
                discSeqNewParameter = new ObjectParameter("DiscSeqNew", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("OM21100_ppPromotionsCopy", cpnyIDParameter, userNameParameter, langIDParameter, discIDOldParameter, discSeqOldParameter, discIDNewParameter, discSeqNewParameter);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OM21100Model", Name="IN_Inventory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class IN_Inventory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new IN_Inventory object.
        /// </summary>
        /// <param name="invtID">Initial value of the InvtID property.</param>
        /// <param name="exported">Initial value of the Exported property.</param>
        /// <param name="iRSftyStkDays">Initial value of the IRSftyStkDays property.</param>
        /// <param name="iRSftyStkPct">Initial value of the IRSftyStkPct property.</param>
        /// <param name="iRSftyStkQty">Initial value of the IRSftyStkQty property.</param>
        /// <param name="iROverStkQty">Initial value of the IROverStkQty property.</param>
        /// <param name="lastCost">Initial value of the LastCost property.</param>
        /// <param name="lossRate00">Initial value of the LossRate00 property.</param>
        /// <param name="lossRate01">Initial value of the LossRate01 property.</param>
        /// <param name="lossRate02">Initial value of the LossRate02 property.</param>
        /// <param name="lossRate03">Initial value of the LossRate03 property.</param>
        /// <param name="lotSerFxdLen">Initial value of the LotSerFxdLen property.</param>
        /// <param name="lotSerNumLen">Initial value of the LotSerNumLen property.</param>
        /// <param name="nodeLevel">Initial value of the NodeLevel property.</param>
        /// <param name="parentRecordID">Initial value of the ParentRecordID property.</param>
        /// <param name="pOFee">Initial value of the POFee property.</param>
        /// <param name="pOPrice">Initial value of the POPrice property.</param>
        /// <param name="prePayPct">Initial value of the PrePayPct property.</param>
        /// <param name="shelfLife">Initial value of the ShelfLife property.</param>
        /// <param name="sOFee">Initial value of the SOFee property.</param>
        /// <param name="sOPrice">Initial value of the SOPrice property.</param>
        /// <param name="stkItem">Initial value of the StkItem property.</param>
        /// <param name="stkVol">Initial value of the StkVol property.</param>
        /// <param name="stkWt">Initial value of the StkWt property.</param>
        /// <param name="warrantyDays">Initial value of the WarrantyDays property.</param>
        /// <param name="crtd_DateTime">Initial value of the Crtd_DateTime property.</param>
        /// <param name="lUpd_DateTime">Initial value of the LUpd_DateTime property.</param>
        /// <param name="tstamp">Initial value of the tstamp property.</param>
        /// <param name="approveStatus">Initial value of the ApproveStatus property.</param>
        /// <param name="category">Initial value of the Category property.</param>
        /// <param name="brand">Initial value of the Brand property.</param>
        /// <param name="proGroup">Initial value of the ProGroup property.</param>
        /// <param name="proType">Initial value of the ProType property.</param>
        /// <param name="kitType">Initial value of the KitType property.</param>
        /// <param name="giftPoint">Initial value of the GiftPoint property.</param>
        public static IN_Inventory CreateIN_Inventory(global::System.String invtID, global::System.Int16 exported, global::System.Double iRSftyStkDays, global::System.Double iRSftyStkPct, global::System.Double iRSftyStkQty, global::System.Double iROverStkQty, global::System.Double lastCost, global::System.Double lossRate00, global::System.Double lossRate01, global::System.Double lossRate02, global::System.Double lossRate03, global::System.Int16 lotSerFxdLen, global::System.Int16 lotSerNumLen, global::System.Int16 nodeLevel, global::System.Int32 parentRecordID, global::System.Double pOFee, global::System.Double pOPrice, global::System.Double prePayPct, global::System.Int16 shelfLife, global::System.Double sOFee, global::System.Double sOPrice, global::System.Int16 stkItem, global::System.Double stkVol, global::System.Double stkWt, global::System.Int16 warrantyDays, global::System.DateTime crtd_DateTime, global::System.DateTime lUpd_DateTime, global::System.Byte[] tstamp, global::System.String approveStatus, global::System.String category, global::System.String brand, global::System.String proGroup, global::System.String proType, global::System.Boolean kitType, global::System.Double giftPoint)
        {
            IN_Inventory iN_Inventory = new IN_Inventory();
            iN_Inventory.InvtID = invtID;
            iN_Inventory.Exported = exported;
            iN_Inventory.IRSftyStkDays = iRSftyStkDays;
            iN_Inventory.IRSftyStkPct = iRSftyStkPct;
            iN_Inventory.IRSftyStkQty = iRSftyStkQty;
            iN_Inventory.IROverStkQty = iROverStkQty;
            iN_Inventory.LastCost = lastCost;
            iN_Inventory.LossRate00 = lossRate00;
            iN_Inventory.LossRate01 = lossRate01;
            iN_Inventory.LossRate02 = lossRate02;
            iN_Inventory.LossRate03 = lossRate03;
            iN_Inventory.LotSerFxdLen = lotSerFxdLen;
            iN_Inventory.LotSerNumLen = lotSerNumLen;
            iN_Inventory.NodeLevel = nodeLevel;
            iN_Inventory.ParentRecordID = parentRecordID;
            iN_Inventory.POFee = pOFee;
            iN_Inventory.POPrice = pOPrice;
            iN_Inventory.PrePayPct = prePayPct;
            iN_Inventory.ShelfLife = shelfLife;
            iN_Inventory.SOFee = sOFee;
            iN_Inventory.SOPrice = sOPrice;
            iN_Inventory.StkItem = stkItem;
            iN_Inventory.StkVol = stkVol;
            iN_Inventory.StkWt = stkWt;
            iN_Inventory.WarrantyDays = warrantyDays;
            iN_Inventory.Crtd_DateTime = crtd_DateTime;
            iN_Inventory.LUpd_DateTime = lUpd_DateTime;
            iN_Inventory.tstamp = tstamp;
            iN_Inventory.ApproveStatus = approveStatus;
            iN_Inventory.Category = category;
            iN_Inventory.Brand = brand;
            iN_Inventory.ProGroup = proGroup;
            iN_Inventory.ProType = proType;
            iN_Inventory.KitType = kitType;
            iN_Inventory.GiftPoint = giftPoint;
            return iN_Inventory;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String InvtID
        {
            get
            {
                return _InvtID;
            }
            set
            {
                if (_InvtID != value)
                {
                    OnInvtIDChanging(value);
                    ReportPropertyChanging("InvtID");
                    _InvtID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("InvtID");
                    OnInvtIDChanged();
                }
            }
        }
        private global::System.String _InvtID;
        partial void OnInvtIDChanging(global::System.String value);
        partial void OnInvtIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BarCode
        {
            get
            {
                return _BarCode;
            }
            set
            {
                OnBarCodeChanging(value);
                ReportPropertyChanging("BarCode");
                _BarCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BarCode");
                OnBarCodeChanged();
            }
        }
        private global::System.String _BarCode;
        partial void OnBarCodeChanging(global::System.String value);
        partial void OnBarCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Buyer
        {
            get
            {
                return _Buyer;
            }
            set
            {
                OnBuyerChanging(value);
                ReportPropertyChanging("Buyer");
                _Buyer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Buyer");
                OnBuyerChanged();
            }
        }
        private global::System.String _Buyer;
        partial void OnBuyerChanging(global::System.String value);
        partial void OnBuyerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClassID
        {
            get
            {
                return _ClassID;
            }
            set
            {
                OnClassIDChanging(value);
                ReportPropertyChanging("ClassID");
                _ClassID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ClassID");
                OnClassIDChanged();
            }
        }
        private global::System.String _ClassID;
        partial void OnClassIDChanging(global::System.String value);
        partial void OnClassIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Color
        {
            get
            {
                return _Color;
            }
            set
            {
                OnColorChanging(value);
                ReportPropertyChanging("Color");
                _Color = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Color");
                OnColorChanged();
            }
        }
        private global::System.String _Color;
        partial void OnColorChanging(global::System.String value);
        partial void OnColorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Descr
        {
            get
            {
                return _Descr;
            }
            set
            {
                OnDescrChanging(value);
                ReportPropertyChanging("Descr");
                _Descr = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Descr");
                OnDescrChanged();
            }
        }
        private global::System.String _Descr;
        partial void OnDescrChanging(global::System.String value);
        partial void OnDescrChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Descr1
        {
            get
            {
                return _Descr1;
            }
            set
            {
                OnDescr1Changing(value);
                ReportPropertyChanging("Descr1");
                _Descr1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Descr1");
                OnDescr1Changed();
            }
        }
        private global::System.String _Descr1;
        partial void OnDescr1Changing(global::System.String value);
        partial void OnDescr1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DfltPOUnit
        {
            get
            {
                return _DfltPOUnit;
            }
            set
            {
                OnDfltPOUnitChanging(value);
                ReportPropertyChanging("DfltPOUnit");
                _DfltPOUnit = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DfltPOUnit");
                OnDfltPOUnitChanged();
            }
        }
        private global::System.String _DfltPOUnit;
        partial void OnDfltPOUnitChanging(global::System.String value);
        partial void OnDfltPOUnitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DfltSite
        {
            get
            {
                return _DfltSite;
            }
            set
            {
                OnDfltSiteChanging(value);
                ReportPropertyChanging("DfltSite");
                _DfltSite = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DfltSite");
                OnDfltSiteChanged();
            }
        }
        private global::System.String _DfltSite;
        partial void OnDfltSiteChanging(global::System.String value);
        partial void OnDfltSiteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DfltSOUnit
        {
            get
            {
                return _DfltSOUnit;
            }
            set
            {
                OnDfltSOUnitChanging(value);
                ReportPropertyChanging("DfltSOUnit");
                _DfltSOUnit = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DfltSOUnit");
                OnDfltSOUnitChanged();
            }
        }
        private global::System.String _DfltSOUnit;
        partial void OnDfltSOUnitChanging(global::System.String value);
        partial void OnDfltSOUnitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Exported
        {
            get
            {
                return _Exported;
            }
            set
            {
                OnExportedChanging(value);
                ReportPropertyChanging("Exported");
                _Exported = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Exported");
                OnExportedChanged();
            }
        }
        private global::System.Int16 _Exported;
        partial void OnExportedChanging(global::System.Int16 value);
        partial void OnExportedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InvtType
        {
            get
            {
                return _InvtType;
            }
            set
            {
                OnInvtTypeChanging(value);
                ReportPropertyChanging("InvtType");
                _InvtType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("InvtType");
                OnInvtTypeChanged();
            }
        }
        private global::System.String _InvtType;
        partial void OnInvtTypeChanging(global::System.String value);
        partial void OnInvtTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double IRSftyStkDays
        {
            get
            {
                return _IRSftyStkDays;
            }
            set
            {
                OnIRSftyStkDaysChanging(value);
                ReportPropertyChanging("IRSftyStkDays");
                _IRSftyStkDays = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IRSftyStkDays");
                OnIRSftyStkDaysChanged();
            }
        }
        private global::System.Double _IRSftyStkDays;
        partial void OnIRSftyStkDaysChanging(global::System.Double value);
        partial void OnIRSftyStkDaysChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double IRSftyStkPct
        {
            get
            {
                return _IRSftyStkPct;
            }
            set
            {
                OnIRSftyStkPctChanging(value);
                ReportPropertyChanging("IRSftyStkPct");
                _IRSftyStkPct = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IRSftyStkPct");
                OnIRSftyStkPctChanged();
            }
        }
        private global::System.Double _IRSftyStkPct;
        partial void OnIRSftyStkPctChanging(global::System.Double value);
        partial void OnIRSftyStkPctChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double IRSftyStkQty
        {
            get
            {
                return _IRSftyStkQty;
            }
            set
            {
                OnIRSftyStkQtyChanging(value);
                ReportPropertyChanging("IRSftyStkQty");
                _IRSftyStkQty = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IRSftyStkQty");
                OnIRSftyStkQtyChanged();
            }
        }
        private global::System.Double _IRSftyStkQty;
        partial void OnIRSftyStkQtyChanging(global::System.Double value);
        partial void OnIRSftyStkQtyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double IROverStkQty
        {
            get
            {
                return _IROverStkQty;
            }
            set
            {
                OnIROverStkQtyChanging(value);
                ReportPropertyChanging("IROverStkQty");
                _IROverStkQty = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IROverStkQty");
                OnIROverStkQtyChanged();
            }
        }
        private global::System.Double _IROverStkQty;
        partial void OnIROverStkQtyChanging(global::System.Double value);
        partial void OnIROverStkQtyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double LastCost
        {
            get
            {
                return _LastCost;
            }
            set
            {
                OnLastCostChanging(value);
                ReportPropertyChanging("LastCost");
                _LastCost = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastCost");
                OnLastCostChanged();
            }
        }
        private global::System.Double _LastCost;
        partial void OnLastCostChanging(global::System.Double value);
        partial void OnLastCostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double LossRate00
        {
            get
            {
                return _LossRate00;
            }
            set
            {
                OnLossRate00Changing(value);
                ReportPropertyChanging("LossRate00");
                _LossRate00 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LossRate00");
                OnLossRate00Changed();
            }
        }
        private global::System.Double _LossRate00;
        partial void OnLossRate00Changing(global::System.Double value);
        partial void OnLossRate00Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double LossRate01
        {
            get
            {
                return _LossRate01;
            }
            set
            {
                OnLossRate01Changing(value);
                ReportPropertyChanging("LossRate01");
                _LossRate01 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LossRate01");
                OnLossRate01Changed();
            }
        }
        private global::System.Double _LossRate01;
        partial void OnLossRate01Changing(global::System.Double value);
        partial void OnLossRate01Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double LossRate02
        {
            get
            {
                return _LossRate02;
            }
            set
            {
                OnLossRate02Changing(value);
                ReportPropertyChanging("LossRate02");
                _LossRate02 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LossRate02");
                OnLossRate02Changed();
            }
        }
        private global::System.Double _LossRate02;
        partial void OnLossRate02Changing(global::System.Double value);
        partial void OnLossRate02Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double LossRate03
        {
            get
            {
                return _LossRate03;
            }
            set
            {
                OnLossRate03Changing(value);
                ReportPropertyChanging("LossRate03");
                _LossRate03 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LossRate03");
                OnLossRate03Changed();
            }
        }
        private global::System.Double _LossRate03;
        partial void OnLossRate03Changing(global::System.Double value);
        partial void OnLossRate03Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 LotSerFxdLen
        {
            get
            {
                return _LotSerFxdLen;
            }
            set
            {
                OnLotSerFxdLenChanging(value);
                ReportPropertyChanging("LotSerFxdLen");
                _LotSerFxdLen = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LotSerFxdLen");
                OnLotSerFxdLenChanged();
            }
        }
        private global::System.Int16 _LotSerFxdLen;
        partial void OnLotSerFxdLenChanging(global::System.Int16 value);
        partial void OnLotSerFxdLenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LotSerFxdTyp
        {
            get
            {
                return _LotSerFxdTyp;
            }
            set
            {
                OnLotSerFxdTypChanging(value);
                ReportPropertyChanging("LotSerFxdTyp");
                _LotSerFxdTyp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LotSerFxdTyp");
                OnLotSerFxdTypChanged();
            }
        }
        private global::System.String _LotSerFxdTyp;
        partial void OnLotSerFxdTypChanging(global::System.String value);
        partial void OnLotSerFxdTypChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LotSerFxdVal
        {
            get
            {
                return _LotSerFxdVal;
            }
            set
            {
                OnLotSerFxdValChanging(value);
                ReportPropertyChanging("LotSerFxdVal");
                _LotSerFxdVal = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LotSerFxdVal");
                OnLotSerFxdValChanged();
            }
        }
        private global::System.String _LotSerFxdVal;
        partial void OnLotSerFxdValChanging(global::System.String value);
        partial void OnLotSerFxdValChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LotSerIssMthd
        {
            get
            {
                return _LotSerIssMthd;
            }
            set
            {
                OnLotSerIssMthdChanging(value);
                ReportPropertyChanging("LotSerIssMthd");
                _LotSerIssMthd = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LotSerIssMthd");
                OnLotSerIssMthdChanged();
            }
        }
        private global::System.String _LotSerIssMthd;
        partial void OnLotSerIssMthdChanging(global::System.String value);
        partial void OnLotSerIssMthdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 LotSerNumLen
        {
            get
            {
                return _LotSerNumLen;
            }
            set
            {
                OnLotSerNumLenChanging(value);
                ReportPropertyChanging("LotSerNumLen");
                _LotSerNumLen = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LotSerNumLen");
                OnLotSerNumLenChanged();
            }
        }
        private global::System.Int16 _LotSerNumLen;
        partial void OnLotSerNumLenChanging(global::System.Int16 value);
        partial void OnLotSerNumLenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LotSerNumVal
        {
            get
            {
                return _LotSerNumVal;
            }
            set
            {
                OnLotSerNumValChanging(value);
                ReportPropertyChanging("LotSerNumVal");
                _LotSerNumVal = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LotSerNumVal");
                OnLotSerNumValChanged();
            }
        }
        private global::System.String _LotSerNumVal;
        partial void OnLotSerNumValChanging(global::System.String value);
        partial void OnLotSerNumValChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LotSerTrack
        {
            get
            {
                return _LotSerTrack;
            }
            set
            {
                OnLotSerTrackChanging(value);
                ReportPropertyChanging("LotSerTrack");
                _LotSerTrack = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LotSerTrack");
                OnLotSerTrackChanged();
            }
        }
        private global::System.String _LotSerTrack;
        partial void OnLotSerTrackChanging(global::System.String value);
        partial void OnLotSerTrackChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MaterialType
        {
            get
            {
                return _MaterialType;
            }
            set
            {
                OnMaterialTypeChanging(value);
                ReportPropertyChanging("MaterialType");
                _MaterialType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MaterialType");
                OnMaterialTypeChanged();
            }
        }
        private global::System.String _MaterialType;
        partial void OnMaterialTypeChanging(global::System.String value);
        partial void OnMaterialTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NodeID
        {
            get
            {
                return _NodeID;
            }
            set
            {
                OnNodeIDChanging(value);
                ReportPropertyChanging("NodeID");
                _NodeID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NodeID");
                OnNodeIDChanged();
            }
        }
        private global::System.String _NodeID;
        partial void OnNodeIDChanging(global::System.String value);
        partial void OnNodeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 NodeLevel
        {
            get
            {
                return _NodeLevel;
            }
            set
            {
                OnNodeLevelChanging(value);
                ReportPropertyChanging("NodeLevel");
                _NodeLevel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NodeLevel");
                OnNodeLevelChanged();
            }
        }
        private global::System.Int16 _NodeLevel;
        partial void OnNodeLevelChanging(global::System.Int16 value);
        partial void OnNodeLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ParentRecordID
        {
            get
            {
                return _ParentRecordID;
            }
            set
            {
                OnParentRecordIDChanging(value);
                ReportPropertyChanging("ParentRecordID");
                _ParentRecordID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentRecordID");
                OnParentRecordIDChanged();
            }
        }
        private global::System.Int32 _ParentRecordID;
        partial void OnParentRecordIDChanging(global::System.Int32 value);
        partial void OnParentRecordIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Picture
        {
            get
            {
                return _Picture;
            }
            set
            {
                OnPictureChanging(value);
                ReportPropertyChanging("Picture");
                _Picture = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Picture");
                OnPictureChanged();
            }
        }
        private global::System.String _Picture;
        partial void OnPictureChanging(global::System.String value);
        partial void OnPictureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double POFee
        {
            get
            {
                return _POFee;
            }
            set
            {
                OnPOFeeChanging(value);
                ReportPropertyChanging("POFee");
                _POFee = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("POFee");
                OnPOFeeChanged();
            }
        }
        private global::System.Double _POFee;
        partial void OnPOFeeChanging(global::System.Double value);
        partial void OnPOFeeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double POPrice
        {
            get
            {
                return _POPrice;
            }
            set
            {
                OnPOPriceChanging(value);
                ReportPropertyChanging("POPrice");
                _POPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("POPrice");
                OnPOPriceChanged();
            }
        }
        private global::System.Double _POPrice;
        partial void OnPOPriceChanging(global::System.Double value);
        partial void OnPOPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double PrePayPct
        {
            get
            {
                return _PrePayPct;
            }
            set
            {
                OnPrePayPctChanging(value);
                ReportPropertyChanging("PrePayPct");
                _PrePayPct = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PrePayPct");
                OnPrePayPctChanged();
            }
        }
        private global::System.Double _PrePayPct;
        partial void OnPrePayPctChanging(global::System.Double value);
        partial void OnPrePayPctChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PriceClassID
        {
            get
            {
                return _PriceClassID;
            }
            set
            {
                OnPriceClassIDChanging(value);
                ReportPropertyChanging("PriceClassID");
                _PriceClassID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PriceClassID");
                OnPriceClassIDChanged();
            }
        }
        private global::System.String _PriceClassID;
        partial void OnPriceClassIDChanging(global::System.String value);
        partial void OnPriceClassIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SerAssign
        {
            get
            {
                return _SerAssign;
            }
            set
            {
                OnSerAssignChanging(value);
                ReportPropertyChanging("SerAssign");
                _SerAssign = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SerAssign");
                OnSerAssignChanged();
            }
        }
        private global::System.String _SerAssign;
        partial void OnSerAssignChanging(global::System.String value);
        partial void OnSerAssignChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 ShelfLife
        {
            get
            {
                return _ShelfLife;
            }
            set
            {
                OnShelfLifeChanging(value);
                ReportPropertyChanging("ShelfLife");
                _ShelfLife = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ShelfLife");
                OnShelfLifeChanged();
            }
        }
        private global::System.Int16 _ShelfLife;
        partial void OnShelfLifeChanging(global::System.Int16 value);
        partial void OnShelfLifeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Size
        {
            get
            {
                return _Size;
            }
            set
            {
                OnSizeChanging(value);
                ReportPropertyChanging("Size");
                _Size = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Size");
                OnSizeChanged();
            }
        }
        private global::System.String _Size;
        partial void OnSizeChanging(global::System.String value);
        partial void OnSizeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double SOFee
        {
            get
            {
                return _SOFee;
            }
            set
            {
                OnSOFeeChanging(value);
                ReportPropertyChanging("SOFee");
                _SOFee = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SOFee");
                OnSOFeeChanged();
            }
        }
        private global::System.Double _SOFee;
        partial void OnSOFeeChanging(global::System.Double value);
        partial void OnSOFeeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double SOPrice
        {
            get
            {
                return _SOPrice;
            }
            set
            {
                OnSOPriceChanging(value);
                ReportPropertyChanging("SOPrice");
                _SOPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SOPrice");
                OnSOPriceChanged();
            }
        }
        private global::System.Double _SOPrice;
        partial void OnSOPriceChanging(global::System.Double value);
        partial void OnSOPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Source
        {
            get
            {
                return _Source;
            }
            set
            {
                OnSourceChanging(value);
                ReportPropertyChanging("Source");
                _Source = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Source");
                OnSourceChanged();
            }
        }
        private global::System.String _Source;
        partial void OnSourceChanging(global::System.String value);
        partial void OnSourceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 StkItem
        {
            get
            {
                return _StkItem;
            }
            set
            {
                OnStkItemChanging(value);
                ReportPropertyChanging("StkItem");
                _StkItem = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StkItem");
                OnStkItemChanged();
            }
        }
        private global::System.Int16 _StkItem;
        partial void OnStkItemChanging(global::System.Int16 value);
        partial void OnStkItemChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StkUnit
        {
            get
            {
                return _StkUnit;
            }
            set
            {
                OnStkUnitChanging(value);
                ReportPropertyChanging("StkUnit");
                _StkUnit = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StkUnit");
                OnStkUnitChanged();
            }
        }
        private global::System.String _StkUnit;
        partial void OnStkUnitChanging(global::System.String value);
        partial void OnStkUnitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double StkVol
        {
            get
            {
                return _StkVol;
            }
            set
            {
                OnStkVolChanging(value);
                ReportPropertyChanging("StkVol");
                _StkVol = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StkVol");
                OnStkVolChanged();
            }
        }
        private global::System.Double _StkVol;
        partial void OnStkVolChanging(global::System.Double value);
        partial void OnStkVolChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double StkWt
        {
            get
            {
                return _StkWt;
            }
            set
            {
                OnStkWtChanging(value);
                ReportPropertyChanging("StkWt");
                _StkWt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StkWt");
                OnStkWtChanged();
            }
        }
        private global::System.Double _StkWt;
        partial void OnStkWtChanging(global::System.Double value);
        partial void OnStkWtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StkWtUnit
        {
            get
            {
                return _StkWtUnit;
            }
            set
            {
                OnStkWtUnitChanging(value);
                ReportPropertyChanging("StkWtUnit");
                _StkWtUnit = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StkWtUnit");
                OnStkWtUnitChanged();
            }
        }
        private global::System.String _StkWtUnit;
        partial void OnStkWtUnitChanging(global::System.String value);
        partial void OnStkWtUnitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Style
        {
            get
            {
                return _Style;
            }
            set
            {
                OnStyleChanging(value);
                ReportPropertyChanging("Style");
                _Style = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Style");
                OnStyleChanged();
            }
        }
        private global::System.String _Style;
        partial void OnStyleChanging(global::System.String value);
        partial void OnStyleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TaxCat
        {
            get
            {
                return _TaxCat;
            }
            set
            {
                OnTaxCatChanging(value);
                ReportPropertyChanging("TaxCat");
                _TaxCat = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TaxCat");
                OnTaxCatChanged();
            }
        }
        private global::System.String _TaxCat;
        partial void OnTaxCatChanging(global::System.String value);
        partial void OnTaxCatChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ValMthd
        {
            get
            {
                return _ValMthd;
            }
            set
            {
                OnValMthdChanging(value);
                ReportPropertyChanging("ValMthd");
                _ValMthd = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ValMthd");
                OnValMthdChanged();
            }
        }
        private global::System.String _ValMthd;
        partial void OnValMthdChanging(global::System.String value);
        partial void OnValMthdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VendID1
        {
            get
            {
                return _VendID1;
            }
            set
            {
                OnVendID1Changing(value);
                ReportPropertyChanging("VendID1");
                _VendID1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("VendID1");
                OnVendID1Changed();
            }
        }
        private global::System.String _VendID1;
        partial void OnVendID1Changing(global::System.String value);
        partial void OnVendID1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VendID2
        {
            get
            {
                return _VendID2;
            }
            set
            {
                OnVendID2Changing(value);
                ReportPropertyChanging("VendID2");
                _VendID2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("VendID2");
                OnVendID2Changed();
            }
        }
        private global::System.String _VendID2;
        partial void OnVendID2Changing(global::System.String value);
        partial void OnVendID2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 WarrantyDays
        {
            get
            {
                return _WarrantyDays;
            }
            set
            {
                OnWarrantyDaysChanging(value);
                ReportPropertyChanging("WarrantyDays");
                _WarrantyDays = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WarrantyDays");
                OnWarrantyDaysChanged();
            }
        }
        private global::System.Int16 _WarrantyDays;
        partial void OnWarrantyDaysChanging(global::System.Int16 value);
        partial void OnWarrantyDaysChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Public
        {
            get
            {
                return _Public;
            }
            set
            {
                OnPublicChanging(value);
                ReportPropertyChanging("Public");
                _Public = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Public");
                OnPublicChanged();
            }
        }
        private Nullable<global::System.Boolean> _Public;
        partial void OnPublicChanging(Nullable<global::System.Boolean> value);
        partial void OnPublicChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Crtd_DateTime
        {
            get
            {
                return _Crtd_DateTime;
            }
            set
            {
                OnCrtd_DateTimeChanging(value);
                ReportPropertyChanging("Crtd_DateTime");
                _Crtd_DateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Crtd_DateTime");
                OnCrtd_DateTimeChanged();
            }
        }
        private global::System.DateTime _Crtd_DateTime;
        partial void OnCrtd_DateTimeChanging(global::System.DateTime value);
        partial void OnCrtd_DateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Crtd_Prog
        {
            get
            {
                return _Crtd_Prog;
            }
            set
            {
                OnCrtd_ProgChanging(value);
                ReportPropertyChanging("Crtd_Prog");
                _Crtd_Prog = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Crtd_Prog");
                OnCrtd_ProgChanged();
            }
        }
        private global::System.String _Crtd_Prog;
        partial void OnCrtd_ProgChanging(global::System.String value);
        partial void OnCrtd_ProgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Crtd_User
        {
            get
            {
                return _Crtd_User;
            }
            set
            {
                OnCrtd_UserChanging(value);
                ReportPropertyChanging("Crtd_User");
                _Crtd_User = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Crtd_User");
                OnCrtd_UserChanged();
            }
        }
        private global::System.String _Crtd_User;
        partial void OnCrtd_UserChanging(global::System.String value);
        partial void OnCrtd_UserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LUpd_DateTime
        {
            get
            {
                return _LUpd_DateTime;
            }
            set
            {
                OnLUpd_DateTimeChanging(value);
                ReportPropertyChanging("LUpd_DateTime");
                _LUpd_DateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LUpd_DateTime");
                OnLUpd_DateTimeChanged();
            }
        }
        private global::System.DateTime _LUpd_DateTime;
        partial void OnLUpd_DateTimeChanging(global::System.DateTime value);
        partial void OnLUpd_DateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LUpd_Prog
        {
            get
            {
                return _LUpd_Prog;
            }
            set
            {
                OnLUpd_ProgChanging(value);
                ReportPropertyChanging("LUpd_Prog");
                _LUpd_Prog = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LUpd_Prog");
                OnLUpd_ProgChanged();
            }
        }
        private global::System.String _LUpd_Prog;
        partial void OnLUpd_ProgChanging(global::System.String value);
        partial void OnLUpd_ProgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LUpd_User
        {
            get
            {
                return _LUpd_User;
            }
            set
            {
                OnLUpd_UserChanging(value);
                ReportPropertyChanging("LUpd_User");
                _LUpd_User = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LUpd_User");
                OnLUpd_UserChanged();
            }
        }
        private global::System.String _LUpd_User;
        partial void OnLUpd_UserChanging(global::System.String value);
        partial void OnLUpd_UserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] tstamp
        {
            get
            {
                return StructuralObject.GetValidValue(_tstamp);
            }
            set
            {
                OntstampChanging(value);
                ReportPropertyChanging("tstamp");
                _tstamp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("tstamp");
                OntstampChanged();
            }
        }
        private global::System.Byte[] _tstamp;
        partial void OntstampChanging(global::System.Byte[] value);
        partial void OntstampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ApproveStatus
        {
            get
            {
                return _ApproveStatus;
            }
            set
            {
                OnApproveStatusChanging(value);
                ReportPropertyChanging("ApproveStatus");
                _ApproveStatus = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ApproveStatus");
                OnApproveStatusChanged();
            }
        }
        private global::System.String _ApproveStatus;
        partial void OnApproveStatusChanging(global::System.String value);
        partial void OnApproveStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Media
        {
            get
            {
                return _Media;
            }
            set
            {
                OnMediaChanging(value);
                ReportPropertyChanging("Media");
                _Media = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Media");
                OnMediaChanged();
            }
        }
        private global::System.String _Media;
        partial void OnMediaChanging(global::System.String value);
        partial void OnMediaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> LotSerRcptAuto
        {
            get
            {
                return _LotSerRcptAuto;
            }
            set
            {
                OnLotSerRcptAutoChanging(value);
                ReportPropertyChanging("LotSerRcptAuto");
                _LotSerRcptAuto = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LotSerRcptAuto");
                OnLotSerRcptAutoChanged();
            }
        }
        private Nullable<global::System.Boolean> _LotSerRcptAuto;
        partial void OnLotSerRcptAutoChanging(Nullable<global::System.Boolean> value);
        partial void OnLotSerRcptAutoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Category
        {
            get
            {
                return _Category;
            }
            set
            {
                OnCategoryChanging(value);
                ReportPropertyChanging("Category");
                _Category = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Category");
                OnCategoryChanged();
            }
        }
        private global::System.String _Category;
        partial void OnCategoryChanging(global::System.String value);
        partial void OnCategoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Brand
        {
            get
            {
                return _Brand;
            }
            set
            {
                OnBrandChanging(value);
                ReportPropertyChanging("Brand");
                _Brand = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Brand");
                OnBrandChanged();
            }
        }
        private global::System.String _Brand;
        partial void OnBrandChanging(global::System.String value);
        partial void OnBrandChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProGroup
        {
            get
            {
                return _ProGroup;
            }
            set
            {
                OnProGroupChanging(value);
                ReportPropertyChanging("ProGroup");
                _ProGroup = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ProGroup");
                OnProGroupChanged();
            }
        }
        private global::System.String _ProGroup;
        partial void OnProGroupChanging(global::System.String value);
        partial void OnProGroupChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProType
        {
            get
            {
                return _ProType;
            }
            set
            {
                OnProTypeChanging(value);
                ReportPropertyChanging("ProType");
                _ProType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ProType");
                OnProTypeChanged();
            }
        }
        private global::System.String _ProType;
        partial void OnProTypeChanging(global::System.String value);
        partial void OnProTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ImageModifiedDate
        {
            get
            {
                return _ImageModifiedDate;
            }
            set
            {
                OnImageModifiedDateChanging(value);
                ReportPropertyChanging("ImageModifiedDate");
                _ImageModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ImageModifiedDate");
                OnImageModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ImageModifiedDate;
        partial void OnImageModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnImageModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> VideoModifiedDate
        {
            get
            {
                return _VideoModifiedDate;
            }
            set
            {
                OnVideoModifiedDateChanging(value);
                ReportPropertyChanging("VideoModifiedDate");
                _VideoModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VideoModifiedDate");
                OnVideoModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _VideoModifiedDate;
        partial void OnVideoModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnVideoModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> CnvFact
        {
            get
            {
                return _CnvFact;
            }
            set
            {
                OnCnvFactChanging(value);
                ReportPropertyChanging("CnvFact");
                _CnvFact = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CnvFact");
                OnCnvFactChanged();
            }
        }
        private Nullable<global::System.Double> _CnvFact;
        partial void OnCnvFactChanging(Nullable<global::System.Double> value);
        partial void OnCnvFactChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean KitType
        {
            get
            {
                return _KitType;
            }
            set
            {
                OnKitTypeChanging(value);
                ReportPropertyChanging("KitType");
                _KitType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("KitType");
                OnKitTypeChanged();
            }
        }
        private global::System.Boolean _KitType;
        partial void OnKitTypeChanging(global::System.Boolean value);
        partial void OnKitTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double GiftPoint
        {
            get
            {
                return _GiftPoint;
            }
            set
            {
                OnGiftPointChanging(value);
                ReportPropertyChanging("GiftPoint");
                _GiftPoint = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GiftPoint");
                OnGiftPointChanged();
            }
        }
        private global::System.Double _GiftPoint;
        partial void OnGiftPointChanging(global::System.Double value);
        partial void OnGiftPointChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OM21100Model", Name="OM_DiscBreak")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OM_DiscBreak : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OM_DiscBreak object.
        /// </summary>
        /// <param name="discID">Initial value of the DiscID property.</param>
        /// <param name="discSeq">Initial value of the DiscSeq property.</param>
        /// <param name="lineRef">Initial value of the LineRef property.</param>
        /// <param name="breakAmt">Initial value of the BreakAmt property.</param>
        /// <param name="breakQty">Initial value of the BreakQty property.</param>
        /// <param name="discAmt">Initial value of the DiscAmt property.</param>
        /// <param name="crtd_DateTime">Initial value of the Crtd_DateTime property.</param>
        /// <param name="crtd_Prog">Initial value of the Crtd_Prog property.</param>
        /// <param name="crtd_User">Initial value of the Crtd_User property.</param>
        /// <param name="lUpd_DateTime">Initial value of the LUpd_DateTime property.</param>
        /// <param name="lUpd_Prog">Initial value of the LUpd_Prog property.</param>
        /// <param name="lUpd_User">Initial value of the LUpd_User property.</param>
        /// <param name="tstamp">Initial value of the tstamp property.</param>
        /// <param name="maxLot">Initial value of the MaxLot property.</param>
        /// <param name="breakQtyUpper">Initial value of the BreakQtyUpper property.</param>
        /// <param name="breakAmtUpper">Initial value of the BreakAmtUpper property.</param>
        /// <param name="subBreakAmt">Initial value of the SubBreakAmt property.</param>
        /// <param name="subBreakQty">Initial value of the SubBreakQty property.</param>
        /// <param name="subBreakQtyUpper">Initial value of the SubBreakQtyUpper property.</param>
        /// <param name="subBreakAmtUpper">Initial value of the SubBreakAmtUpper property.</param>
        /// <param name="discAmtBonus">Initial value of the DiscAmtBonus property.</param>
        public static OM_DiscBreak CreateOM_DiscBreak(global::System.String discID, global::System.String discSeq, global::System.String lineRef, global::System.Double breakAmt, global::System.Double breakQty, global::System.Double discAmt, global::System.DateTime crtd_DateTime, global::System.String crtd_Prog, global::System.String crtd_User, global::System.DateTime lUpd_DateTime, global::System.String lUpd_Prog, global::System.String lUpd_User, global::System.Byte[] tstamp, global::System.Double maxLot, global::System.Double breakQtyUpper, global::System.Double breakAmtUpper, global::System.Double subBreakAmt, global::System.Double subBreakQty, global::System.Double subBreakQtyUpper, global::System.Double subBreakAmtUpper, global::System.Double discAmtBonus)
        {
            OM_DiscBreak oM_DiscBreak = new OM_DiscBreak();
            oM_DiscBreak.DiscID = discID;
            oM_DiscBreak.DiscSeq = discSeq;
            oM_DiscBreak.LineRef = lineRef;
            oM_DiscBreak.BreakAmt = breakAmt;
            oM_DiscBreak.BreakQty = breakQty;
            oM_DiscBreak.DiscAmt = discAmt;
            oM_DiscBreak.Crtd_DateTime = crtd_DateTime;
            oM_DiscBreak.Crtd_Prog = crtd_Prog;
            oM_DiscBreak.Crtd_User = crtd_User;
            oM_DiscBreak.LUpd_DateTime = lUpd_DateTime;
            oM_DiscBreak.LUpd_Prog = lUpd_Prog;
            oM_DiscBreak.LUpd_User = lUpd_User;
            oM_DiscBreak.tstamp = tstamp;
            oM_DiscBreak.MaxLot = maxLot;
            oM_DiscBreak.BreakQtyUpper = breakQtyUpper;
            oM_DiscBreak.BreakAmtUpper = breakAmtUpper;
            oM_DiscBreak.SubBreakAmt = subBreakAmt;
            oM_DiscBreak.SubBreakQty = subBreakQty;
            oM_DiscBreak.SubBreakQtyUpper = subBreakQtyUpper;
            oM_DiscBreak.SubBreakAmtUpper = subBreakAmtUpper;
            oM_DiscBreak.DiscAmtBonus = discAmtBonus;
            return oM_DiscBreak;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DiscID
        {
            get
            {
                return _DiscID;
            }
            set
            {
                if (_DiscID != value)
                {
                    OnDiscIDChanging(value);
                    ReportPropertyChanging("DiscID");
                    _DiscID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("DiscID");
                    OnDiscIDChanged();
                }
            }
        }
        private global::System.String _DiscID;
        partial void OnDiscIDChanging(global::System.String value);
        partial void OnDiscIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DiscSeq
        {
            get
            {
                return _DiscSeq;
            }
            set
            {
                if (_DiscSeq != value)
                {
                    OnDiscSeqChanging(value);
                    ReportPropertyChanging("DiscSeq");
                    _DiscSeq = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("DiscSeq");
                    OnDiscSeqChanged();
                }
            }
        }
        private global::System.String _DiscSeq;
        partial void OnDiscSeqChanging(global::System.String value);
        partial void OnDiscSeqChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LineRef
        {
            get
            {
                return _LineRef;
            }
            set
            {
                if (_LineRef != value)
                {
                    OnLineRefChanging(value);
                    ReportPropertyChanging("LineRef");
                    _LineRef = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("LineRef");
                    OnLineRefChanged();
                }
            }
        }
        private global::System.String _LineRef;
        partial void OnLineRefChanging(global::System.String value);
        partial void OnLineRefChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double BreakAmt
        {
            get
            {
                return _BreakAmt;
            }
            set
            {
                OnBreakAmtChanging(value);
                ReportPropertyChanging("BreakAmt");
                _BreakAmt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BreakAmt");
                OnBreakAmtChanged();
            }
        }
        private global::System.Double _BreakAmt;
        partial void OnBreakAmtChanging(global::System.Double value);
        partial void OnBreakAmtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double BreakQty
        {
            get
            {
                return _BreakQty;
            }
            set
            {
                OnBreakQtyChanging(value);
                ReportPropertyChanging("BreakQty");
                _BreakQty = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BreakQty");
                OnBreakQtyChanged();
            }
        }
        private global::System.Double _BreakQty;
        partial void OnBreakQtyChanging(global::System.Double value);
        partial void OnBreakQtyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double DiscAmt
        {
            get
            {
                return _DiscAmt;
            }
            set
            {
                OnDiscAmtChanging(value);
                ReportPropertyChanging("DiscAmt");
                _DiscAmt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DiscAmt");
                OnDiscAmtChanged();
            }
        }
        private global::System.Double _DiscAmt;
        partial void OnDiscAmtChanging(global::System.Double value);
        partial void OnDiscAmtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Crtd_DateTime
        {
            get
            {
                return _Crtd_DateTime;
            }
            set
            {
                OnCrtd_DateTimeChanging(value);
                ReportPropertyChanging("Crtd_DateTime");
                _Crtd_DateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Crtd_DateTime");
                OnCrtd_DateTimeChanged();
            }
        }
        private global::System.DateTime _Crtd_DateTime;
        partial void OnCrtd_DateTimeChanging(global::System.DateTime value);
        partial void OnCrtd_DateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Crtd_Prog
        {
            get
            {
                return _Crtd_Prog;
            }
            set
            {
                OnCrtd_ProgChanging(value);
                ReportPropertyChanging("Crtd_Prog");
                _Crtd_Prog = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Crtd_Prog");
                OnCrtd_ProgChanged();
            }
        }
        private global::System.String _Crtd_Prog;
        partial void OnCrtd_ProgChanging(global::System.String value);
        partial void OnCrtd_ProgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Crtd_User
        {
            get
            {
                return _Crtd_User;
            }
            set
            {
                OnCrtd_UserChanging(value);
                ReportPropertyChanging("Crtd_User");
                _Crtd_User = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Crtd_User");
                OnCrtd_UserChanged();
            }
        }
        private global::System.String _Crtd_User;
        partial void OnCrtd_UserChanging(global::System.String value);
        partial void OnCrtd_UserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LUpd_DateTime
        {
            get
            {
                return _LUpd_DateTime;
            }
            set
            {
                OnLUpd_DateTimeChanging(value);
                ReportPropertyChanging("LUpd_DateTime");
                _LUpd_DateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LUpd_DateTime");
                OnLUpd_DateTimeChanged();
            }
        }
        private global::System.DateTime _LUpd_DateTime;
        partial void OnLUpd_DateTimeChanging(global::System.DateTime value);
        partial void OnLUpd_DateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LUpd_Prog
        {
            get
            {
                return _LUpd_Prog;
            }
            set
            {
                OnLUpd_ProgChanging(value);
                ReportPropertyChanging("LUpd_Prog");
                _LUpd_Prog = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LUpd_Prog");
                OnLUpd_ProgChanged();
            }
        }
        private global::System.String _LUpd_Prog;
        partial void OnLUpd_ProgChanging(global::System.String value);
        partial void OnLUpd_ProgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LUpd_User
        {
            get
            {
                return _LUpd_User;
            }
            set
            {
                OnLUpd_UserChanging(value);
                ReportPropertyChanging("LUpd_User");
                _LUpd_User = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LUpd_User");
                OnLUpd_UserChanged();
            }
        }
        private global::System.String _LUpd_User;
        partial void OnLUpd_UserChanging(global::System.String value);
        partial void OnLUpd_UserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] tstamp
        {
            get
            {
                return StructuralObject.GetValidValue(_tstamp);
            }
            set
            {
                OntstampChanging(value);
                ReportPropertyChanging("tstamp");
                _tstamp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("tstamp");
                OntstampChanged();
            }
        }
        private global::System.Byte[] _tstamp;
        partial void OntstampChanging(global::System.Byte[] value);
        partial void OntstampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Descr
        {
            get
            {
                return _Descr;
            }
            set
            {
                OnDescrChanging(value);
                ReportPropertyChanging("Descr");
                _Descr = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Descr");
                OnDescrChanged();
            }
        }
        private global::System.String _Descr;
        partial void OnDescrChanging(global::System.String value);
        partial void OnDescrChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double MaxLot
        {
            get
            {
                return _MaxLot;
            }
            set
            {
                OnMaxLotChanging(value);
                ReportPropertyChanging("MaxLot");
                _MaxLot = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaxLot");
                OnMaxLotChanged();
            }
        }
        private global::System.Double _MaxLot;
        partial void OnMaxLotChanging(global::System.Double value);
        partial void OnMaxLotChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double BreakQtyUpper
        {
            get
            {
                return _BreakQtyUpper;
            }
            set
            {
                OnBreakQtyUpperChanging(value);
                ReportPropertyChanging("BreakQtyUpper");
                _BreakQtyUpper = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BreakQtyUpper");
                OnBreakQtyUpperChanged();
            }
        }
        private global::System.Double _BreakQtyUpper;
        partial void OnBreakQtyUpperChanging(global::System.Double value);
        partial void OnBreakQtyUpperChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double BreakAmtUpper
        {
            get
            {
                return _BreakAmtUpper;
            }
            set
            {
                OnBreakAmtUpperChanging(value);
                ReportPropertyChanging("BreakAmtUpper");
                _BreakAmtUpper = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BreakAmtUpper");
                OnBreakAmtUpperChanged();
            }
        }
        private global::System.Double _BreakAmtUpper;
        partial void OnBreakAmtUpperChanging(global::System.Double value);
        partial void OnBreakAmtUpperChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double SubBreakAmt
        {
            get
            {
                return _SubBreakAmt;
            }
            set
            {
                OnSubBreakAmtChanging(value);
                ReportPropertyChanging("SubBreakAmt");
                _SubBreakAmt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubBreakAmt");
                OnSubBreakAmtChanged();
            }
        }
        private global::System.Double _SubBreakAmt;
        partial void OnSubBreakAmtChanging(global::System.Double value);
        partial void OnSubBreakAmtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double SubBreakQty
        {
            get
            {
                return _SubBreakQty;
            }
            set
            {
                OnSubBreakQtyChanging(value);
                ReportPropertyChanging("SubBreakQty");
                _SubBreakQty = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubBreakQty");
                OnSubBreakQtyChanged();
            }
        }
        private global::System.Double _SubBreakQty;
        partial void OnSubBreakQtyChanging(global::System.Double value);
        partial void OnSubBreakQtyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double SubBreakQtyUpper
        {
            get
            {
                return _SubBreakQtyUpper;
            }
            set
            {
                OnSubBreakQtyUpperChanging(value);
                ReportPropertyChanging("SubBreakQtyUpper");
                _SubBreakQtyUpper = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubBreakQtyUpper");
                OnSubBreakQtyUpperChanged();
            }
        }
        private global::System.Double _SubBreakQtyUpper;
        partial void OnSubBreakQtyUpperChanging(global::System.Double value);
        partial void OnSubBreakQtyUpperChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double SubBreakAmtUpper
        {
            get
            {
                return _SubBreakAmtUpper;
            }
            set
            {
                OnSubBreakAmtUpperChanging(value);
                ReportPropertyChanging("SubBreakAmtUpper");
                _SubBreakAmtUpper = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubBreakAmtUpper");
                OnSubBreakAmtUpperChanged();
            }
        }
        private global::System.Double _SubBreakAmtUpper;
        partial void OnSubBreakAmtUpperChanging(global::System.Double value);
        partial void OnSubBreakAmtUpperChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double DiscAmtBonus
        {
            get
            {
                return _DiscAmtBonus;
            }
            set
            {
                OnDiscAmtBonusChanging(value);
                ReportPropertyChanging("DiscAmtBonus");
                _DiscAmtBonus = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DiscAmtBonus");
                OnDiscAmtBonusChanged();
            }
        }
        private global::System.Double _DiscAmtBonus;
        partial void OnDiscAmtBonusChanging(global::System.Double value);
        partial void OnDiscAmtBonusChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OM21100Model", Name="OM_DiscChannel")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OM_DiscChannel : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OM_DiscChannel object.
        /// </summary>
        /// <param name="discID">Initial value of the DiscID property.</param>
        /// <param name="discSeq">Initial value of the DiscSeq property.</param>
        /// <param name="channelID">Initial value of the ChannelID property.</param>
        /// <param name="crtd_DateTime">Initial value of the Crtd_DateTime property.</param>
        /// <param name="crtd_Prog">Initial value of the Crtd_Prog property.</param>
        /// <param name="crtd_User">Initial value of the Crtd_User property.</param>
        /// <param name="lUpd_DateTime">Initial value of the LUpd_DateTime property.</param>
        /// <param name="lUpd_Prog">Initial value of the LUpd_Prog property.</param>
        /// <param name="lUpd_User">Initial value of the LUpd_User property.</param>
        /// <param name="tstamp">Initial value of the tstamp property.</param>
        public static OM_DiscChannel CreateOM_DiscChannel(global::System.String discID, global::System.String discSeq, global::System.String channelID, global::System.DateTime crtd_DateTime, global::System.String crtd_Prog, global::System.String crtd_User, global::System.DateTime lUpd_DateTime, global::System.String lUpd_Prog, global::System.String lUpd_User, global::System.Byte[] tstamp)
        {
            OM_DiscChannel oM_DiscChannel = new OM_DiscChannel();
            oM_DiscChannel.DiscID = discID;
            oM_DiscChannel.DiscSeq = discSeq;
            oM_DiscChannel.ChannelID = channelID;
            oM_DiscChannel.Crtd_DateTime = crtd_DateTime;
            oM_DiscChannel.Crtd_Prog = crtd_Prog;
            oM_DiscChannel.Crtd_User = crtd_User;
            oM_DiscChannel.LUpd_DateTime = lUpd_DateTime;
            oM_DiscChannel.LUpd_Prog = lUpd_Prog;
            oM_DiscChannel.LUpd_User = lUpd_User;
            oM_DiscChannel.tstamp = tstamp;
            return oM_DiscChannel;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DiscID
        {
            get
            {
                return _DiscID;
            }
            set
            {
                if (_DiscID != value)
                {
                    OnDiscIDChanging(value);
                    ReportPropertyChanging("DiscID");
                    _DiscID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("DiscID");
                    OnDiscIDChanged();
                }
            }
        }
        private global::System.String _DiscID;
        partial void OnDiscIDChanging(global::System.String value);
        partial void OnDiscIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DiscSeq
        {
            get
            {
                return _DiscSeq;
            }
            set
            {
                if (_DiscSeq != value)
                {
                    OnDiscSeqChanging(value);
                    ReportPropertyChanging("DiscSeq");
                    _DiscSeq = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("DiscSeq");
                    OnDiscSeqChanged();
                }
            }
        }
        private global::System.String _DiscSeq;
        partial void OnDiscSeqChanging(global::System.String value);
        partial void OnDiscSeqChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ChannelID
        {
            get
            {
                return _ChannelID;
            }
            set
            {
                if (_ChannelID != value)
                {
                    OnChannelIDChanging(value);
                    ReportPropertyChanging("ChannelID");
                    _ChannelID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ChannelID");
                    OnChannelIDChanged();
                }
            }
        }
        private global::System.String _ChannelID;
        partial void OnChannelIDChanging(global::System.String value);
        partial void OnChannelIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Crtd_DateTime
        {
            get
            {
                return _Crtd_DateTime;
            }
            set
            {
                OnCrtd_DateTimeChanging(value);
                ReportPropertyChanging("Crtd_DateTime");
                _Crtd_DateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Crtd_DateTime");
                OnCrtd_DateTimeChanged();
            }
        }
        private global::System.DateTime _Crtd_DateTime;
        partial void OnCrtd_DateTimeChanging(global::System.DateTime value);
        partial void OnCrtd_DateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Crtd_Prog
        {
            get
            {
                return _Crtd_Prog;
            }
            set
            {
                OnCrtd_ProgChanging(value);
                ReportPropertyChanging("Crtd_Prog");
                _Crtd_Prog = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Crtd_Prog");
                OnCrtd_ProgChanged();
            }
        }
        private global::System.String _Crtd_Prog;
        partial void OnCrtd_ProgChanging(global::System.String value);
        partial void OnCrtd_ProgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Crtd_User
        {
            get
            {
                return _Crtd_User;
            }
            set
            {
                OnCrtd_UserChanging(value);
                ReportPropertyChanging("Crtd_User");
                _Crtd_User = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Crtd_User");
                OnCrtd_UserChanged();
            }
        }
        private global::System.String _Crtd_User;
        partial void OnCrtd_UserChanging(global::System.String value);
        partial void OnCrtd_UserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LUpd_DateTime
        {
            get
            {
                return _LUpd_DateTime;
            }
            set
            {
                OnLUpd_DateTimeChanging(value);
                ReportPropertyChanging("LUpd_DateTime");
                _LUpd_DateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LUpd_DateTime");
                OnLUpd_DateTimeChanged();
            }
        }
        private global::System.DateTime _LUpd_DateTime;
        partial void OnLUpd_DateTimeChanging(global::System.DateTime value);
        partial void OnLUpd_DateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LUpd_Prog
        {
            get
            {
                return _LUpd_Prog;
            }
            set
            {
                OnLUpd_ProgChanging(value);
                ReportPropertyChanging("LUpd_Prog");
                _LUpd_Prog = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LUpd_Prog");
                OnLUpd_ProgChanged();
            }
        }
        private global::System.String _LUpd_Prog;
        partial void OnLUpd_ProgChanging(global::System.String value);
        partial void OnLUpd_ProgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LUpd_User
        {
            get
            {
                return _LUpd_User;
            }
            set
            {
                OnLUpd_UserChanging(value);
                ReportPropertyChanging("LUpd_User");
                _LUpd_User = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LUpd_User");
                OnLUpd_UserChanged();
            }
        }
        private global::System.String _LUpd_User;
        partial void OnLUpd_UserChanging(global::System.String value);
        partial void OnLUpd_UserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] tstamp
        {
            get
            {
                return StructuralObject.GetValidValue(_tstamp);
            }
            set
            {
                OntstampChanging(value);
                ReportPropertyChanging("tstamp");
                _tstamp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("tstamp");
                OntstampChanged();
            }
        }
        private global::System.Byte[] _tstamp;
        partial void OntstampChanging(global::System.Byte[] value);
        partial void OntstampChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OM21100Model", Name="OM_DiscCpny")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OM_DiscCpny : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OM_DiscCpny object.
        /// </summary>
        /// <param name="discID">Initial value of the DiscID property.</param>
        /// <param name="discSeq">Initial value of the DiscSeq property.</param>
        /// <param name="cpnyID">Initial value of the CpnyID property.</param>
        public static OM_DiscCpny CreateOM_DiscCpny(global::System.String discID, global::System.String discSeq, global::System.String cpnyID)
        {
            OM_DiscCpny oM_DiscCpny = new OM_DiscCpny();
            oM_DiscCpny.DiscID = discID;
            oM_DiscCpny.DiscSeq = discSeq;
            oM_DiscCpny.CpnyID = cpnyID;
            return oM_DiscCpny;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DiscID
        {
            get
            {
                return _DiscID;
            }
            set
            {
                if (_DiscID != value)
                {
                    OnDiscIDChanging(value);
                    ReportPropertyChanging("DiscID");
                    _DiscID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("DiscID");
                    OnDiscIDChanged();
                }
            }
        }
        private global::System.String _DiscID;
        partial void OnDiscIDChanging(global::System.String value);
        partial void OnDiscIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DiscSeq
        {
            get
            {
                return _DiscSeq;
            }
            set
            {
                if (_DiscSeq != value)
                {
                    OnDiscSeqChanging(value);
                    ReportPropertyChanging("DiscSeq");
                    _DiscSeq = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("DiscSeq");
                    OnDiscSeqChanged();
                }
            }
        }
        private global::System.String _DiscSeq;
        partial void OnDiscSeqChanging(global::System.String value);
        partial void OnDiscSeqChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CpnyID
        {
            get
            {
                return _CpnyID;
            }
            set
            {
                if (_CpnyID != value)
                {
                    OnCpnyIDChanging(value);
                    ReportPropertyChanging("CpnyID");
                    _CpnyID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CpnyID");
                    OnCpnyIDChanged();
                }
            }
        }
        private global::System.String _CpnyID;
        partial void OnCpnyIDChanging(global::System.String value);
        partial void OnCpnyIDChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OM21100Model", Name="OM_DiscCust")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OM_DiscCust : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OM_DiscCust object.
        /// </summary>
        /// <param name="discID">Initial value of the DiscID property.</param>
        /// <param name="discSeq">Initial value of the DiscSeq property.</param>
        /// <param name="custID">Initial value of the CustID property.</param>
        /// <param name="crtd_DateTime">Initial value of the Crtd_DateTime property.</param>
        /// <param name="crtd_Prog">Initial value of the Crtd_Prog property.</param>
        /// <param name="crtd_User">Initial value of the Crtd_User property.</param>
        /// <param name="lUpd_DateTime">Initial value of the LUpd_DateTime property.</param>
        /// <param name="lUpd_Prog">Initial value of the LUpd_Prog property.</param>
        /// <param name="lUpd_User">Initial value of the LUpd_User property.</param>
        /// <param name="tstamp">Initial value of the tstamp property.</param>
        /// <param name="branchID">Initial value of the BranchID property.</param>
        public static OM_DiscCust CreateOM_DiscCust(global::System.String discID, global::System.String discSeq, global::System.String custID, global::System.DateTime crtd_DateTime, global::System.String crtd_Prog, global::System.String crtd_User, global::System.DateTime lUpd_DateTime, global::System.String lUpd_Prog, global::System.String lUpd_User, global::System.Byte[] tstamp, global::System.String branchID)
        {
            OM_DiscCust oM_DiscCust = new OM_DiscCust();
            oM_DiscCust.DiscID = discID;
            oM_DiscCust.DiscSeq = discSeq;
            oM_DiscCust.CustID = custID;
            oM_DiscCust.Crtd_DateTime = crtd_DateTime;
            oM_DiscCust.Crtd_Prog = crtd_Prog;
            oM_DiscCust.Crtd_User = crtd_User;
            oM_DiscCust.LUpd_DateTime = lUpd_DateTime;
            oM_DiscCust.LUpd_Prog = lUpd_Prog;
            oM_DiscCust.LUpd_User = lUpd_User;
            oM_DiscCust.tstamp = tstamp;
            oM_DiscCust.BranchID = branchID;
            return oM_DiscCust;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DiscID
        {
            get
            {
                return _DiscID;
            }
            set
            {
                if (_DiscID != value)
                {
                    OnDiscIDChanging(value);
                    ReportPropertyChanging("DiscID");
                    _DiscID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("DiscID");
                    OnDiscIDChanged();
                }
            }
        }
        private global::System.String _DiscID;
        partial void OnDiscIDChanging(global::System.String value);
        partial void OnDiscIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DiscSeq
        {
            get
            {
                return _DiscSeq;
            }
            set
            {
                if (_DiscSeq != value)
                {
                    OnDiscSeqChanging(value);
                    ReportPropertyChanging("DiscSeq");
                    _DiscSeq = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("DiscSeq");
                    OnDiscSeqChanged();
                }
            }
        }
        private global::System.String _DiscSeq;
        partial void OnDiscSeqChanging(global::System.String value);
        partial void OnDiscSeqChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CustID
        {
            get
            {
                return _CustID;
            }
            set
            {
                if (_CustID != value)
                {
                    OnCustIDChanging(value);
                    ReportPropertyChanging("CustID");
                    _CustID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CustID");
                    OnCustIDChanged();
                }
            }
        }
        private global::System.String _CustID;
        partial void OnCustIDChanging(global::System.String value);
        partial void OnCustIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Crtd_DateTime
        {
            get
            {
                return _Crtd_DateTime;
            }
            set
            {
                OnCrtd_DateTimeChanging(value);
                ReportPropertyChanging("Crtd_DateTime");
                _Crtd_DateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Crtd_DateTime");
                OnCrtd_DateTimeChanged();
            }
        }
        private global::System.DateTime _Crtd_DateTime;
        partial void OnCrtd_DateTimeChanging(global::System.DateTime value);
        partial void OnCrtd_DateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Crtd_Prog
        {
            get
            {
                return _Crtd_Prog;
            }
            set
            {
                OnCrtd_ProgChanging(value);
                ReportPropertyChanging("Crtd_Prog");
                _Crtd_Prog = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Crtd_Prog");
                OnCrtd_ProgChanged();
            }
        }
        private global::System.String _Crtd_Prog;
        partial void OnCrtd_ProgChanging(global::System.String value);
        partial void OnCrtd_ProgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Crtd_User
        {
            get
            {
                return _Crtd_User;
            }
            set
            {
                OnCrtd_UserChanging(value);
                ReportPropertyChanging("Crtd_User");
                _Crtd_User = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Crtd_User");
                OnCrtd_UserChanged();
            }
        }
        private global::System.String _Crtd_User;
        partial void OnCrtd_UserChanging(global::System.String value);
        partial void OnCrtd_UserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LUpd_DateTime
        {
            get
            {
                return _LUpd_DateTime;
            }
            set
            {
                OnLUpd_DateTimeChanging(value);
                ReportPropertyChanging("LUpd_DateTime");
                _LUpd_DateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LUpd_DateTime");
                OnLUpd_DateTimeChanged();
            }
        }
        private global::System.DateTime _LUpd_DateTime;
        partial void OnLUpd_DateTimeChanging(global::System.DateTime value);
        partial void OnLUpd_DateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LUpd_Prog
        {
            get
            {
                return _LUpd_Prog;
            }
            set
            {
                OnLUpd_ProgChanging(value);
                ReportPropertyChanging("LUpd_Prog");
                _LUpd_Prog = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LUpd_Prog");
                OnLUpd_ProgChanged();
            }
        }
        private global::System.String _LUpd_Prog;
        partial void OnLUpd_ProgChanging(global::System.String value);
        partial void OnLUpd_ProgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LUpd_User
        {
            get
            {
                return _LUpd_User;
            }
            set
            {
                OnLUpd_UserChanging(value);
                ReportPropertyChanging("LUpd_User");
                _LUpd_User = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LUpd_User");
                OnLUpd_UserChanged();
            }
        }
        private global::System.String _LUpd_User;
        partial void OnLUpd_UserChanging(global::System.String value);
        partial void OnLUpd_UserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] tstamp
        {
            get
            {
                return StructuralObject.GetValidValue(_tstamp);
            }
            set
            {
                OntstampChanging(value);
                ReportPropertyChanging("tstamp");
                _tstamp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("tstamp");
                OntstampChanged();
            }
        }
        private global::System.Byte[] _tstamp;
        partial void OntstampChanging(global::System.Byte[] value);
        partial void OntstampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BranchID
        {
            get
            {
                return _BranchID;
            }
            set
            {
                if (_BranchID != value)
                {
                    OnBranchIDChanging(value);
                    ReportPropertyChanging("BranchID");
                    _BranchID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("BranchID");
                    OnBranchIDChanged();
                }
            }
        }
        private global::System.String _BranchID;
        partial void OnBranchIDChanging(global::System.String value);
        partial void OnBranchIDChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OM21100Model", Name="OM_DiscCustCate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OM_DiscCustCate : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OM_DiscCustCate object.
        /// </summary>
        /// <param name="discID">Initial value of the DiscID property.</param>
        /// <param name="discSeq">Initial value of the DiscSeq property.</param>
        /// <param name="custCateID">Initial value of the CustCateID property.</param>
        /// <param name="crtd_DateTime">Initial value of the Crtd_DateTime property.</param>
        /// <param name="crtd_Prog">Initial value of the Crtd_Prog property.</param>
        /// <param name="crtd_User">Initial value of the Crtd_User property.</param>
        /// <param name="lUpd_DateTime">Initial value of the LUpd_DateTime property.</param>
        /// <param name="lUpd_Prog">Initial value of the LUpd_Prog property.</param>
        /// <param name="lUpd_User">Initial value of the LUpd_User property.</param>
        /// <param name="tstamp">Initial value of the tstamp property.</param>
        public static OM_DiscCustCate CreateOM_DiscCustCate(global::System.String discID, global::System.String discSeq, global::System.String custCateID, global::System.DateTime crtd_DateTime, global::System.String crtd_Prog, global::System.String crtd_User, global::System.DateTime lUpd_DateTime, global::System.String lUpd_Prog, global::System.String lUpd_User, global::System.Byte[] tstamp)
        {
            OM_DiscCustCate oM_DiscCustCate = new OM_DiscCustCate();
            oM_DiscCustCate.DiscID = discID;
            oM_DiscCustCate.DiscSeq = discSeq;
            oM_DiscCustCate.CustCateID = custCateID;
            oM_DiscCustCate.Crtd_DateTime = crtd_DateTime;
            oM_DiscCustCate.Crtd_Prog = crtd_Prog;
            oM_DiscCustCate.Crtd_User = crtd_User;
            oM_DiscCustCate.LUpd_DateTime = lUpd_DateTime;
            oM_DiscCustCate.LUpd_Prog = lUpd_Prog;
            oM_DiscCustCate.LUpd_User = lUpd_User;
            oM_DiscCustCate.tstamp = tstamp;
            return oM_DiscCustCate;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DiscID
        {
            get
            {
                return _DiscID;
            }
            set
            {
                if (_DiscID != value)
                {
                    OnDiscIDChanging(value);
                    ReportPropertyChanging("DiscID");
                    _DiscID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("DiscID");
                    OnDiscIDChanged();
                }
            }
        }
        private global::System.String _DiscID;
        partial void OnDiscIDChanging(global::System.String value);
        partial void OnDiscIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DiscSeq
        {
            get
            {
                return _DiscSeq;
            }
            set
            {
                if (_DiscSeq != value)
                {
                    OnDiscSeqChanging(value);
                    ReportPropertyChanging("DiscSeq");
                    _DiscSeq = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("DiscSeq");
                    OnDiscSeqChanged();
                }
            }
        }
        private global::System.String _DiscSeq;
        partial void OnDiscSeqChanging(global::System.String value);
        partial void OnDiscSeqChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CustCateID
        {
            get
            {
                return _CustCateID;
            }
            set
            {
                if (_CustCateID != value)
                {
                    OnCustCateIDChanging(value);
                    ReportPropertyChanging("CustCateID");
                    _CustCateID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CustCateID");
                    OnCustCateIDChanged();
                }
            }
        }
        private global::System.String _CustCateID;
        partial void OnCustCateIDChanging(global::System.String value);
        partial void OnCustCateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Crtd_DateTime
        {
            get
            {
                return _Crtd_DateTime;
            }
            set
            {
                OnCrtd_DateTimeChanging(value);
                ReportPropertyChanging("Crtd_DateTime");
                _Crtd_DateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Crtd_DateTime");
                OnCrtd_DateTimeChanged();
            }
        }
        private global::System.DateTime _Crtd_DateTime;
        partial void OnCrtd_DateTimeChanging(global::System.DateTime value);
        partial void OnCrtd_DateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Crtd_Prog
        {
            get
            {
                return _Crtd_Prog;
            }
            set
            {
                OnCrtd_ProgChanging(value);
                ReportPropertyChanging("Crtd_Prog");
                _Crtd_Prog = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Crtd_Prog");
                OnCrtd_ProgChanged();
            }
        }
        private global::System.String _Crtd_Prog;
        partial void OnCrtd_ProgChanging(global::System.String value);
        partial void OnCrtd_ProgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Crtd_User
        {
            get
            {
                return _Crtd_User;
            }
            set
            {
                OnCrtd_UserChanging(value);
                ReportPropertyChanging("Crtd_User");
                _Crtd_User = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Crtd_User");
                OnCrtd_UserChanged();
            }
        }
        private global::System.String _Crtd_User;
        partial void OnCrtd_UserChanging(global::System.String value);
        partial void OnCrtd_UserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LUpd_DateTime
        {
            get
            {
                return _LUpd_DateTime;
            }
            set
            {
                OnLUpd_DateTimeChanging(value);
                ReportPropertyChanging("LUpd_DateTime");
                _LUpd_DateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LUpd_DateTime");
                OnLUpd_DateTimeChanged();
            }
        }
        private global::System.DateTime _LUpd_DateTime;
        partial void OnLUpd_DateTimeChanging(global::System.DateTime value);
        partial void OnLUpd_DateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LUpd_Prog
        {
            get
            {
                return _LUpd_Prog;
            }
            set
            {
                OnLUpd_ProgChanging(value);
                ReportPropertyChanging("LUpd_Prog");
                _LUpd_Prog = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LUpd_Prog");
                OnLUpd_ProgChanged();
            }
        }
        private global::System.String _LUpd_Prog;
        partial void OnLUpd_ProgChanging(global::System.String value);
        partial void OnLUpd_ProgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LUpd_User
        {
            get
            {
                return _LUpd_User;
            }
            set
            {
                OnLUpd_UserChanging(value);
                ReportPropertyChanging("LUpd_User");
                _LUpd_User = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LUpd_User");
                OnLUpd_UserChanged();
            }
        }
        private global::System.String _LUpd_User;
        partial void OnLUpd_UserChanging(global::System.String value);
        partial void OnLUpd_UserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] tstamp
        {
            get
            {
                return StructuralObject.GetValidValue(_tstamp);
            }
            set
            {
                OntstampChanging(value);
                ReportPropertyChanging("tstamp");
                _tstamp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("tstamp");
                OntstampChanged();
            }
        }
        private global::System.Byte[] _tstamp;
        partial void OntstampChanging(global::System.Byte[] value);
        partial void OntstampChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OM21100Model", Name="OM_DiscCustClass")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OM_DiscCustClass : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OM_DiscCustClass object.
        /// </summary>
        /// <param name="discID">Initial value of the DiscID property.</param>
        /// <param name="discSeq">Initial value of the DiscSeq property.</param>
        /// <param name="classID">Initial value of the ClassID property.</param>
        /// <param name="crtd_DateTime">Initial value of the Crtd_DateTime property.</param>
        /// <param name="crtd_Prog">Initial value of the Crtd_Prog property.</param>
        /// <param name="crtd_User">Initial value of the Crtd_User property.</param>
        /// <param name="lUpd_DateTime">Initial value of the LUpd_DateTime property.</param>
        /// <param name="lUpd_Prog">Initial value of the LUpd_Prog property.</param>
        /// <param name="lUpd_User">Initial value of the LUpd_User property.</param>
        /// <param name="tstamp">Initial value of the tstamp property.</param>
        public static OM_DiscCustClass CreateOM_DiscCustClass(global::System.String discID, global::System.String discSeq, global::System.String classID, global::System.DateTime crtd_DateTime, global::System.String crtd_Prog, global::System.String crtd_User, global::System.DateTime lUpd_DateTime, global::System.String lUpd_Prog, global::System.String lUpd_User, global::System.Byte[] tstamp)
        {
            OM_DiscCustClass oM_DiscCustClass = new OM_DiscCustClass();
            oM_DiscCustClass.DiscID = discID;
            oM_DiscCustClass.DiscSeq = discSeq;
            oM_DiscCustClass.ClassID = classID;
            oM_DiscCustClass.Crtd_DateTime = crtd_DateTime;
            oM_DiscCustClass.Crtd_Prog = crtd_Prog;
            oM_DiscCustClass.Crtd_User = crtd_User;
            oM_DiscCustClass.LUpd_DateTime = lUpd_DateTime;
            oM_DiscCustClass.LUpd_Prog = lUpd_Prog;
            oM_DiscCustClass.LUpd_User = lUpd_User;
            oM_DiscCustClass.tstamp = tstamp;
            return oM_DiscCustClass;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DiscID
        {
            get
            {
                return _DiscID;
            }
            set
            {
                if (_DiscID != value)
                {
                    OnDiscIDChanging(value);
                    ReportPropertyChanging("DiscID");
                    _DiscID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("DiscID");
                    OnDiscIDChanged();
                }
            }
        }
        private global::System.String _DiscID;
        partial void OnDiscIDChanging(global::System.String value);
        partial void OnDiscIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DiscSeq
        {
            get
            {
                return _DiscSeq;
            }
            set
            {
                if (_DiscSeq != value)
                {
                    OnDiscSeqChanging(value);
                    ReportPropertyChanging("DiscSeq");
                    _DiscSeq = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("DiscSeq");
                    OnDiscSeqChanged();
                }
            }
        }
        private global::System.String _DiscSeq;
        partial void OnDiscSeqChanging(global::System.String value);
        partial void OnDiscSeqChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ClassID
        {
            get
            {
                return _ClassID;
            }
            set
            {
                if (_ClassID != value)
                {
                    OnClassIDChanging(value);
                    ReportPropertyChanging("ClassID");
                    _ClassID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ClassID");
                    OnClassIDChanged();
                }
            }
        }
        private global::System.String _ClassID;
        partial void OnClassIDChanging(global::System.String value);
        partial void OnClassIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Crtd_DateTime
        {
            get
            {
                return _Crtd_DateTime;
            }
            set
            {
                OnCrtd_DateTimeChanging(value);
                ReportPropertyChanging("Crtd_DateTime");
                _Crtd_DateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Crtd_DateTime");
                OnCrtd_DateTimeChanged();
            }
        }
        private global::System.DateTime _Crtd_DateTime;
        partial void OnCrtd_DateTimeChanging(global::System.DateTime value);
        partial void OnCrtd_DateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Crtd_Prog
        {
            get
            {
                return _Crtd_Prog;
            }
            set
            {
                OnCrtd_ProgChanging(value);
                ReportPropertyChanging("Crtd_Prog");
                _Crtd_Prog = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Crtd_Prog");
                OnCrtd_ProgChanged();
            }
        }
        private global::System.String _Crtd_Prog;
        partial void OnCrtd_ProgChanging(global::System.String value);
        partial void OnCrtd_ProgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Crtd_User
        {
            get
            {
                return _Crtd_User;
            }
            set
            {
                OnCrtd_UserChanging(value);
                ReportPropertyChanging("Crtd_User");
                _Crtd_User = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Crtd_User");
                OnCrtd_UserChanged();
            }
        }
        private global::System.String _Crtd_User;
        partial void OnCrtd_UserChanging(global::System.String value);
        partial void OnCrtd_UserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LUpd_DateTime
        {
            get
            {
                return _LUpd_DateTime;
            }
            set
            {
                OnLUpd_DateTimeChanging(value);
                ReportPropertyChanging("LUpd_DateTime");
                _LUpd_DateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LUpd_DateTime");
                OnLUpd_DateTimeChanged();
            }
        }
        private global::System.DateTime _LUpd_DateTime;
        partial void OnLUpd_DateTimeChanging(global::System.DateTime value);
        partial void OnLUpd_DateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LUpd_Prog
        {
            get
            {
                return _LUpd_Prog;
            }
            set
            {
                OnLUpd_ProgChanging(value);
                ReportPropertyChanging("LUpd_Prog");
                _LUpd_Prog = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LUpd_Prog");
                OnLUpd_ProgChanged();
            }
        }
        private global::System.String _LUpd_Prog;
        partial void OnLUpd_ProgChanging(global::System.String value);
        partial void OnLUpd_ProgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LUpd_User
        {
            get
            {
                return _LUpd_User;
            }
            set
            {
                OnLUpd_UserChanging(value);
                ReportPropertyChanging("LUpd_User");
                _LUpd_User = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LUpd_User");
                OnLUpd_UserChanged();
            }
        }
        private global::System.String _LUpd_User;
        partial void OnLUpd_UserChanging(global::System.String value);
        partial void OnLUpd_UserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] tstamp
        {
            get
            {
                return StructuralObject.GetValidValue(_tstamp);
            }
            set
            {
                OntstampChanging(value);
                ReportPropertyChanging("tstamp");
                _tstamp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("tstamp");
                OntstampChanged();
            }
        }
        private global::System.Byte[] _tstamp;
        partial void OntstampChanging(global::System.Byte[] value);
        partial void OntstampChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OM21100Model", Name="OM_DiscFreeItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OM_DiscFreeItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OM_DiscFreeItem object.
        /// </summary>
        /// <param name="discID">Initial value of the DiscID property.</param>
        /// <param name="discSeq">Initial value of the DiscSeq property.</param>
        /// <param name="lineRef">Initial value of the LineRef property.</param>
        /// <param name="freeItemID">Initial value of the FreeItemID property.</param>
        /// <param name="freeItemQty">Initial value of the FreeItemQty property.</param>
        /// <param name="crtd_DateTime">Initial value of the Crtd_DateTime property.</param>
        /// <param name="crtd_Prog">Initial value of the Crtd_Prog property.</param>
        /// <param name="crtd_User">Initial value of the Crtd_User property.</param>
        /// <param name="lUpd_DateTime">Initial value of the LUpd_DateTime property.</param>
        /// <param name="lUpd_Prog">Initial value of the LUpd_Prog property.</param>
        /// <param name="lUpd_User">Initial value of the LUpd_User property.</param>
        /// <param name="tstamp">Initial value of the tstamp property.</param>
        /// <param name="priority">Initial value of the Priority property.</param>
        /// <param name="price">Initial value of the Price property.</param>
        public static OM_DiscFreeItem CreateOM_DiscFreeItem(global::System.String discID, global::System.String discSeq, global::System.String lineRef, global::System.String freeItemID, global::System.Double freeItemQty, global::System.DateTime crtd_DateTime, global::System.String crtd_Prog, global::System.String crtd_User, global::System.DateTime lUpd_DateTime, global::System.String lUpd_Prog, global::System.String lUpd_User, global::System.Byte[] tstamp, global::System.Int32 priority, global::System.Double price)
        {
            OM_DiscFreeItem oM_DiscFreeItem = new OM_DiscFreeItem();
            oM_DiscFreeItem.DiscID = discID;
            oM_DiscFreeItem.DiscSeq = discSeq;
            oM_DiscFreeItem.LineRef = lineRef;
            oM_DiscFreeItem.FreeItemID = freeItemID;
            oM_DiscFreeItem.FreeItemQty = freeItemQty;
            oM_DiscFreeItem.Crtd_DateTime = crtd_DateTime;
            oM_DiscFreeItem.Crtd_Prog = crtd_Prog;
            oM_DiscFreeItem.Crtd_User = crtd_User;
            oM_DiscFreeItem.LUpd_DateTime = lUpd_DateTime;
            oM_DiscFreeItem.LUpd_Prog = lUpd_Prog;
            oM_DiscFreeItem.LUpd_User = lUpd_User;
            oM_DiscFreeItem.tstamp = tstamp;
            oM_DiscFreeItem.Priority = priority;
            oM_DiscFreeItem.Price = price;
            return oM_DiscFreeItem;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DiscID
        {
            get
            {
                return _DiscID;
            }
            set
            {
                if (_DiscID != value)
                {
                    OnDiscIDChanging(value);
                    ReportPropertyChanging("DiscID");
                    _DiscID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("DiscID");
                    OnDiscIDChanged();
                }
            }
        }
        private global::System.String _DiscID;
        partial void OnDiscIDChanging(global::System.String value);
        partial void OnDiscIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DiscSeq
        {
            get
            {
                return _DiscSeq;
            }
            set
            {
                if (_DiscSeq != value)
                {
                    OnDiscSeqChanging(value);
                    ReportPropertyChanging("DiscSeq");
                    _DiscSeq = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("DiscSeq");
                    OnDiscSeqChanged();
                }
            }
        }
        private global::System.String _DiscSeq;
        partial void OnDiscSeqChanging(global::System.String value);
        partial void OnDiscSeqChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LineRef
        {
            get
            {
                return _LineRef;
            }
            set
            {
                if (_LineRef != value)
                {
                    OnLineRefChanging(value);
                    ReportPropertyChanging("LineRef");
                    _LineRef = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("LineRef");
                    OnLineRefChanged();
                }
            }
        }
        private global::System.String _LineRef;
        partial void OnLineRefChanging(global::System.String value);
        partial void OnLineRefChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FreeItemID
        {
            get
            {
                return _FreeItemID;
            }
            set
            {
                if (_FreeItemID != value)
                {
                    OnFreeItemIDChanging(value);
                    ReportPropertyChanging("FreeItemID");
                    _FreeItemID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("FreeItemID");
                    OnFreeItemIDChanged();
                }
            }
        }
        private global::System.String _FreeItemID;
        partial void OnFreeItemIDChanging(global::System.String value);
        partial void OnFreeItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FreeItemBudgetID
        {
            get
            {
                return _FreeItemBudgetID;
            }
            set
            {
                OnFreeItemBudgetIDChanging(value);
                ReportPropertyChanging("FreeItemBudgetID");
                _FreeItemBudgetID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FreeItemBudgetID");
                OnFreeItemBudgetIDChanged();
            }
        }
        private global::System.String _FreeItemBudgetID;
        partial void OnFreeItemBudgetIDChanging(global::System.String value);
        partial void OnFreeItemBudgetIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double FreeItemQty
        {
            get
            {
                return _FreeItemQty;
            }
            set
            {
                OnFreeItemQtyChanging(value);
                ReportPropertyChanging("FreeItemQty");
                _FreeItemQty = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FreeItemQty");
                OnFreeItemQtyChanged();
            }
        }
        private global::System.Double _FreeItemQty;
        partial void OnFreeItemQtyChanging(global::System.Double value);
        partial void OnFreeItemQtyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FreeITemSiteID
        {
            get
            {
                return _FreeITemSiteID;
            }
            set
            {
                OnFreeITemSiteIDChanging(value);
                ReportPropertyChanging("FreeITemSiteID");
                _FreeITemSiteID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FreeITemSiteID");
                OnFreeITemSiteIDChanged();
            }
        }
        private global::System.String _FreeITemSiteID;
        partial void OnFreeITemSiteIDChanging(global::System.String value);
        partial void OnFreeITemSiteIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UnitDescr
        {
            get
            {
                return _UnitDescr;
            }
            set
            {
                OnUnitDescrChanging(value);
                ReportPropertyChanging("UnitDescr");
                _UnitDescr = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UnitDescr");
                OnUnitDescrChanged();
            }
        }
        private global::System.String _UnitDescr;
        partial void OnUnitDescrChanging(global::System.String value);
        partial void OnUnitDescrChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Crtd_DateTime
        {
            get
            {
                return _Crtd_DateTime;
            }
            set
            {
                OnCrtd_DateTimeChanging(value);
                ReportPropertyChanging("Crtd_DateTime");
                _Crtd_DateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Crtd_DateTime");
                OnCrtd_DateTimeChanged();
            }
        }
        private global::System.DateTime _Crtd_DateTime;
        partial void OnCrtd_DateTimeChanging(global::System.DateTime value);
        partial void OnCrtd_DateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Crtd_Prog
        {
            get
            {
                return _Crtd_Prog;
            }
            set
            {
                OnCrtd_ProgChanging(value);
                ReportPropertyChanging("Crtd_Prog");
                _Crtd_Prog = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Crtd_Prog");
                OnCrtd_ProgChanged();
            }
        }
        private global::System.String _Crtd_Prog;
        partial void OnCrtd_ProgChanging(global::System.String value);
        partial void OnCrtd_ProgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Crtd_User
        {
            get
            {
                return _Crtd_User;
            }
            set
            {
                OnCrtd_UserChanging(value);
                ReportPropertyChanging("Crtd_User");
                _Crtd_User = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Crtd_User");
                OnCrtd_UserChanged();
            }
        }
        private global::System.String _Crtd_User;
        partial void OnCrtd_UserChanging(global::System.String value);
        partial void OnCrtd_UserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LUpd_DateTime
        {
            get
            {
                return _LUpd_DateTime;
            }
            set
            {
                OnLUpd_DateTimeChanging(value);
                ReportPropertyChanging("LUpd_DateTime");
                _LUpd_DateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LUpd_DateTime");
                OnLUpd_DateTimeChanged();
            }
        }
        private global::System.DateTime _LUpd_DateTime;
        partial void OnLUpd_DateTimeChanging(global::System.DateTime value);
        partial void OnLUpd_DateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LUpd_Prog
        {
            get
            {
                return _LUpd_Prog;
            }
            set
            {
                OnLUpd_ProgChanging(value);
                ReportPropertyChanging("LUpd_Prog");
                _LUpd_Prog = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LUpd_Prog");
                OnLUpd_ProgChanged();
            }
        }
        private global::System.String _LUpd_Prog;
        partial void OnLUpd_ProgChanging(global::System.String value);
        partial void OnLUpd_ProgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LUpd_User
        {
            get
            {
                return _LUpd_User;
            }
            set
            {
                OnLUpd_UserChanging(value);
                ReportPropertyChanging("LUpd_User");
                _LUpd_User = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LUpd_User");
                OnLUpd_UserChanged();
            }
        }
        private global::System.String _LUpd_User;
        partial void OnLUpd_UserChanging(global::System.String value);
        partial void OnLUpd_UserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] tstamp
        {
            get
            {
                return StructuralObject.GetValidValue(_tstamp);
            }
            set
            {
                OntstampChanging(value);
                ReportPropertyChanging("tstamp");
                _tstamp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("tstamp");
                OntstampChanged();
            }
        }
        private global::System.Byte[] _tstamp;
        partial void OntstampChanging(global::System.Byte[] value);
        partial void OntstampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GroupItem
        {
            get
            {
                return _GroupItem;
            }
            set
            {
                OnGroupItemChanging(value);
                ReportPropertyChanging("GroupItem");
                _GroupItem = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GroupItem");
                OnGroupItemChanged();
            }
        }
        private global::System.String _GroupItem;
        partial void OnGroupItemChanging(global::System.String value);
        partial void OnGroupItemChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TypeUnit
        {
            get
            {
                return _TypeUnit;
            }
            set
            {
                OnTypeUnitChanging(value);
                ReportPropertyChanging("TypeUnit");
                _TypeUnit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TypeUnit");
                OnTypeUnitChanged();
            }
        }
        private Nullable<global::System.Int32> _TypeUnit;
        partial void OnTypeUnitChanging(Nullable<global::System.Int32> value);
        partial void OnTypeUnitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Priority
        {
            get
            {
                return _Priority;
            }
            set
            {
                OnPriorityChanging(value);
                ReportPropertyChanging("Priority");
                _Priority = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Priority");
                OnPriorityChanged();
            }
        }
        private global::System.Int32 _Priority;
        partial void OnPriorityChanging(global::System.Int32 value);
        partial void OnPriorityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.Double _Price;
        partial void OnPriceChanging(global::System.Double value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FreeITemSiteWhseLoc
        {
            get
            {
                return _FreeITemSiteWhseLoc;
            }
            set
            {
                OnFreeITemSiteWhseLocChanging(value);
                ReportPropertyChanging("FreeITemSiteWhseLoc");
                _FreeITemSiteWhseLoc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FreeITemSiteWhseLoc");
                OnFreeITemSiteWhseLocChanged();
            }
        }
        private global::System.String _FreeITemSiteWhseLoc;
        partial void OnFreeITemSiteWhseLocChanging(global::System.String value);
        partial void OnFreeITemSiteWhseLocChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OM21100Model", Name="OM_DiscItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OM_DiscItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OM_DiscItem object.
        /// </summary>
        /// <param name="discID">Initial value of the DiscID property.</param>
        /// <param name="discSeq">Initial value of the DiscSeq property.</param>
        /// <param name="invtID">Initial value of the InvtID property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        /// <param name="bundleAmt">Initial value of the BundleAmt property.</param>
        /// <param name="bundleNbr">Initial value of the BundleNbr property.</param>
        /// <param name="bundleQty">Initial value of the BundleQty property.</param>
        /// <param name="crtd_DateTime">Initial value of the Crtd_DateTime property.</param>
        /// <param name="crtd_Prog">Initial value of the Crtd_Prog property.</param>
        /// <param name="crtd_User">Initial value of the Crtd_User property.</param>
        /// <param name="lUpd_DateTime">Initial value of the LUpd_DateTime property.</param>
        /// <param name="lUpd_Prog">Initial value of the LUpd_Prog property.</param>
        /// <param name="lUpd_User">Initial value of the LUpd_User property.</param>
        /// <param name="tstamp">Initial value of the tstamp property.</param>
        /// <param name="qtyType">Initial value of the QtyType property.</param>
        /// <param name="requiredValue">Initial value of the RequiredValue property.</param>
        /// <param name="priorityInvt">Initial value of the PriorityInvt property.</param>
        /// <param name="coefficientCnv">Initial value of the CoefficientCnv property.</param>
        public static OM_DiscItem CreateOM_DiscItem(global::System.String discID, global::System.String discSeq, global::System.String invtID, global::System.Int16 active, global::System.Double bundleAmt, global::System.Int16 bundleNbr, global::System.Double bundleQty, global::System.DateTime crtd_DateTime, global::System.String crtd_Prog, global::System.String crtd_User, global::System.DateTime lUpd_DateTime, global::System.String lUpd_Prog, global::System.String lUpd_User, global::System.Byte[] tstamp, global::System.String qtyType, global::System.Int32 requiredValue, global::System.Int32 priorityInvt, global::System.Int32 coefficientCnv)
        {
            OM_DiscItem oM_DiscItem = new OM_DiscItem();
            oM_DiscItem.DiscID = discID;
            oM_DiscItem.DiscSeq = discSeq;
            oM_DiscItem.InvtID = invtID;
            oM_DiscItem.Active = active;
            oM_DiscItem.BundleAmt = bundleAmt;
            oM_DiscItem.BundleNbr = bundleNbr;
            oM_DiscItem.BundleQty = bundleQty;
            oM_DiscItem.Crtd_DateTime = crtd_DateTime;
            oM_DiscItem.Crtd_Prog = crtd_Prog;
            oM_DiscItem.Crtd_User = crtd_User;
            oM_DiscItem.LUpd_DateTime = lUpd_DateTime;
            oM_DiscItem.LUpd_Prog = lUpd_Prog;
            oM_DiscItem.LUpd_User = lUpd_User;
            oM_DiscItem.tstamp = tstamp;
            oM_DiscItem.QtyType = qtyType;
            oM_DiscItem.RequiredValue = requiredValue;
            oM_DiscItem.PriorityInvt = priorityInvt;
            oM_DiscItem.CoefficientCnv = coefficientCnv;
            return oM_DiscItem;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DiscID
        {
            get
            {
                return _DiscID;
            }
            set
            {
                if (_DiscID != value)
                {
                    OnDiscIDChanging(value);
                    ReportPropertyChanging("DiscID");
                    _DiscID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("DiscID");
                    OnDiscIDChanged();
                }
            }
        }
        private global::System.String _DiscID;
        partial void OnDiscIDChanging(global::System.String value);
        partial void OnDiscIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DiscSeq
        {
            get
            {
                return _DiscSeq;
            }
            set
            {
                if (_DiscSeq != value)
                {
                    OnDiscSeqChanging(value);
                    ReportPropertyChanging("DiscSeq");
                    _DiscSeq = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("DiscSeq");
                    OnDiscSeqChanged();
                }
            }
        }
        private global::System.String _DiscSeq;
        partial void OnDiscSeqChanging(global::System.String value);
        partial void OnDiscSeqChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String InvtID
        {
            get
            {
                return _InvtID;
            }
            set
            {
                if (_InvtID != value)
                {
                    OnInvtIDChanging(value);
                    ReportPropertyChanging("InvtID");
                    _InvtID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("InvtID");
                    OnInvtIDChanged();
                }
            }
        }
        private global::System.String _InvtID;
        partial void OnInvtIDChanging(global::System.String value);
        partial void OnInvtIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Int16 _Active;
        partial void OnActiveChanging(global::System.Int16 value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double BundleAmt
        {
            get
            {
                return _BundleAmt;
            }
            set
            {
                OnBundleAmtChanging(value);
                ReportPropertyChanging("BundleAmt");
                _BundleAmt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BundleAmt");
                OnBundleAmtChanged();
            }
        }
        private global::System.Double _BundleAmt;
        partial void OnBundleAmtChanging(global::System.Double value);
        partial void OnBundleAmtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 BundleNbr
        {
            get
            {
                return _BundleNbr;
            }
            set
            {
                OnBundleNbrChanging(value);
                ReportPropertyChanging("BundleNbr");
                _BundleNbr = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BundleNbr");
                OnBundleNbrChanged();
            }
        }
        private global::System.Int16 _BundleNbr;
        partial void OnBundleNbrChanging(global::System.Int16 value);
        partial void OnBundleNbrChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BundleOrItem
        {
            get
            {
                return _BundleOrItem;
            }
            set
            {
                OnBundleOrItemChanging(value);
                ReportPropertyChanging("BundleOrItem");
                _BundleOrItem = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BundleOrItem");
                OnBundleOrItemChanged();
            }
        }
        private global::System.String _BundleOrItem;
        partial void OnBundleOrItemChanging(global::System.String value);
        partial void OnBundleOrItemChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double BundleQty
        {
            get
            {
                return _BundleQty;
            }
            set
            {
                OnBundleQtyChanging(value);
                ReportPropertyChanging("BundleQty");
                _BundleQty = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BundleQty");
                OnBundleQtyChanged();
            }
        }
        private global::System.Double _BundleQty;
        partial void OnBundleQtyChanging(global::System.Double value);
        partial void OnBundleQtyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DiscType
        {
            get
            {
                return _DiscType;
            }
            set
            {
                OnDiscTypeChanging(value);
                ReportPropertyChanging("DiscType");
                _DiscType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DiscType");
                OnDiscTypeChanged();
            }
        }
        private global::System.String _DiscType;
        partial void OnDiscTypeChanging(global::System.String value);
        partial void OnDiscTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UnitDesc
        {
            get
            {
                return _UnitDesc;
            }
            set
            {
                OnUnitDescChanging(value);
                ReportPropertyChanging("UnitDesc");
                _UnitDesc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UnitDesc");
                OnUnitDescChanged();
            }
        }
        private global::System.String _UnitDesc;
        partial void OnUnitDescChanging(global::System.String value);
        partial void OnUnitDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Crtd_DateTime
        {
            get
            {
                return _Crtd_DateTime;
            }
            set
            {
                OnCrtd_DateTimeChanging(value);
                ReportPropertyChanging("Crtd_DateTime");
                _Crtd_DateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Crtd_DateTime");
                OnCrtd_DateTimeChanged();
            }
        }
        private global::System.DateTime _Crtd_DateTime;
        partial void OnCrtd_DateTimeChanging(global::System.DateTime value);
        partial void OnCrtd_DateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Crtd_Prog
        {
            get
            {
                return _Crtd_Prog;
            }
            set
            {
                OnCrtd_ProgChanging(value);
                ReportPropertyChanging("Crtd_Prog");
                _Crtd_Prog = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Crtd_Prog");
                OnCrtd_ProgChanged();
            }
        }
        private global::System.String _Crtd_Prog;
        partial void OnCrtd_ProgChanging(global::System.String value);
        partial void OnCrtd_ProgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Crtd_User
        {
            get
            {
                return _Crtd_User;
            }
            set
            {
                OnCrtd_UserChanging(value);
                ReportPropertyChanging("Crtd_User");
                _Crtd_User = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Crtd_User");
                OnCrtd_UserChanged();
            }
        }
        private global::System.String _Crtd_User;
        partial void OnCrtd_UserChanging(global::System.String value);
        partial void OnCrtd_UserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LUpd_DateTime
        {
            get
            {
                return _LUpd_DateTime;
            }
            set
            {
                OnLUpd_DateTimeChanging(value);
                ReportPropertyChanging("LUpd_DateTime");
                _LUpd_DateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LUpd_DateTime");
                OnLUpd_DateTimeChanged();
            }
        }
        private global::System.DateTime _LUpd_DateTime;
        partial void OnLUpd_DateTimeChanging(global::System.DateTime value);
        partial void OnLUpd_DateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LUpd_Prog
        {
            get
            {
                return _LUpd_Prog;
            }
            set
            {
                OnLUpd_ProgChanging(value);
                ReportPropertyChanging("LUpd_Prog");
                _LUpd_Prog = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LUpd_Prog");
                OnLUpd_ProgChanged();
            }
        }
        private global::System.String _LUpd_Prog;
        partial void OnLUpd_ProgChanging(global::System.String value);
        partial void OnLUpd_ProgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LUpd_User
        {
            get
            {
                return _LUpd_User;
            }
            set
            {
                OnLUpd_UserChanging(value);
                ReportPropertyChanging("LUpd_User");
                _LUpd_User = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LUpd_User");
                OnLUpd_UserChanged();
            }
        }
        private global::System.String _LUpd_User;
        partial void OnLUpd_UserChanging(global::System.String value);
        partial void OnLUpd_UserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] tstamp
        {
            get
            {
                return StructuralObject.GetValidValue(_tstamp);
            }
            set
            {
                OntstampChanging(value);
                ReportPropertyChanging("tstamp");
                _tstamp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("tstamp");
                OntstampChanged();
            }
        }
        private global::System.Byte[] _tstamp;
        partial void OntstampChanging(global::System.Byte[] value);
        partial void OntstampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String QtyType
        {
            get
            {
                return _QtyType;
            }
            set
            {
                OnQtyTypeChanging(value);
                ReportPropertyChanging("QtyType");
                _QtyType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("QtyType");
                OnQtyTypeChanged();
            }
        }
        private global::System.String _QtyType;
        partial void OnQtyTypeChanging(global::System.String value);
        partial void OnQtyTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RequiredValue
        {
            get
            {
                return _RequiredValue;
            }
            set
            {
                OnRequiredValueChanging(value);
                ReportPropertyChanging("RequiredValue");
                _RequiredValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RequiredValue");
                OnRequiredValueChanged();
            }
        }
        private global::System.Int32 _RequiredValue;
        partial void OnRequiredValueChanging(global::System.Int32 value);
        partial void OnRequiredValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> QtyStockAdvance
        {
            get
            {
                return _QtyStockAdvance;
            }
            set
            {
                OnQtyStockAdvanceChanging(value);
                ReportPropertyChanging("QtyStockAdvance");
                _QtyStockAdvance = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("QtyStockAdvance");
                OnQtyStockAdvanceChanged();
            }
        }
        private Nullable<global::System.Double> _QtyStockAdvance;
        partial void OnQtyStockAdvanceChanging(Nullable<global::System.Double> value);
        partial void OnQtyStockAdvanceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> QtyLimit
        {
            get
            {
                return _QtyLimit;
            }
            set
            {
                OnQtyLimitChanging(value);
                ReportPropertyChanging("QtyLimit");
                _QtyLimit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("QtyLimit");
                OnQtyLimitChanged();
            }
        }
        private Nullable<global::System.Double> _QtyLimit;
        partial void OnQtyLimitChanging(Nullable<global::System.Double> value);
        partial void OnQtyLimitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> PerStockAdvance
        {
            get
            {
                return _PerStockAdvance;
            }
            set
            {
                OnPerStockAdvanceChanging(value);
                ReportPropertyChanging("PerStockAdvance");
                _PerStockAdvance = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PerStockAdvance");
                OnPerStockAdvanceChanged();
            }
        }
        private Nullable<global::System.Double> _PerStockAdvance;
        partial void OnPerStockAdvanceChanging(Nullable<global::System.Double> value);
        partial void OnPerStockAdvanceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PriorityInvt
        {
            get
            {
                return _PriorityInvt;
            }
            set
            {
                OnPriorityInvtChanging(value);
                ReportPropertyChanging("PriorityInvt");
                _PriorityInvt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PriorityInvt");
                OnPriorityInvtChanged();
            }
        }
        private global::System.Int32 _PriorityInvt;
        partial void OnPriorityInvtChanging(global::System.Int32 value);
        partial void OnPriorityInvtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CoefficientCnv
        {
            get
            {
                return _CoefficientCnv;
            }
            set
            {
                OnCoefficientCnvChanging(value);
                ReportPropertyChanging("CoefficientCnv");
                _CoefficientCnv = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CoefficientCnv");
                OnCoefficientCnvChanged();
            }
        }
        private global::System.Int32 _CoefficientCnv;
        partial void OnCoefficientCnvChanging(global::System.Int32 value);
        partial void OnCoefficientCnvChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OM21100Model", Name="OM_DiscItemClass")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OM_DiscItemClass : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OM_DiscItemClass object.
        /// </summary>
        /// <param name="discID">Initial value of the DiscID property.</param>
        /// <param name="discSeq">Initial value of the DiscSeq property.</param>
        /// <param name="classID">Initial value of the ClassID property.</param>
        /// <param name="crtd_DateTime">Initial value of the Crtd_DateTime property.</param>
        /// <param name="crtd_Prog">Initial value of the Crtd_Prog property.</param>
        /// <param name="crtd_User">Initial value of the Crtd_User property.</param>
        /// <param name="lUpd_DateTime">Initial value of the LUpd_DateTime property.</param>
        /// <param name="lUpd_Prog">Initial value of the LUpd_Prog property.</param>
        /// <param name="lUpd_User">Initial value of the LUpd_User property.</param>
        /// <param name="tstamp">Initial value of the tstamp property.</param>
        public static OM_DiscItemClass CreateOM_DiscItemClass(global::System.String discID, global::System.String discSeq, global::System.String classID, global::System.DateTime crtd_DateTime, global::System.String crtd_Prog, global::System.String crtd_User, global::System.DateTime lUpd_DateTime, global::System.String lUpd_Prog, global::System.String lUpd_User, global::System.Byte[] tstamp)
        {
            OM_DiscItemClass oM_DiscItemClass = new OM_DiscItemClass();
            oM_DiscItemClass.DiscID = discID;
            oM_DiscItemClass.DiscSeq = discSeq;
            oM_DiscItemClass.ClassID = classID;
            oM_DiscItemClass.Crtd_DateTime = crtd_DateTime;
            oM_DiscItemClass.Crtd_Prog = crtd_Prog;
            oM_DiscItemClass.Crtd_User = crtd_User;
            oM_DiscItemClass.LUpd_DateTime = lUpd_DateTime;
            oM_DiscItemClass.LUpd_Prog = lUpd_Prog;
            oM_DiscItemClass.LUpd_User = lUpd_User;
            oM_DiscItemClass.tstamp = tstamp;
            return oM_DiscItemClass;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DiscID
        {
            get
            {
                return _DiscID;
            }
            set
            {
                if (_DiscID != value)
                {
                    OnDiscIDChanging(value);
                    ReportPropertyChanging("DiscID");
                    _DiscID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("DiscID");
                    OnDiscIDChanged();
                }
            }
        }
        private global::System.String _DiscID;
        partial void OnDiscIDChanging(global::System.String value);
        partial void OnDiscIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DiscSeq
        {
            get
            {
                return _DiscSeq;
            }
            set
            {
                if (_DiscSeq != value)
                {
                    OnDiscSeqChanging(value);
                    ReportPropertyChanging("DiscSeq");
                    _DiscSeq = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("DiscSeq");
                    OnDiscSeqChanged();
                }
            }
        }
        private global::System.String _DiscSeq;
        partial void OnDiscSeqChanging(global::System.String value);
        partial void OnDiscSeqChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ClassID
        {
            get
            {
                return _ClassID;
            }
            set
            {
                if (_ClassID != value)
                {
                    OnClassIDChanging(value);
                    ReportPropertyChanging("ClassID");
                    _ClassID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ClassID");
                    OnClassIDChanged();
                }
            }
        }
        private global::System.String _ClassID;
        partial void OnClassIDChanging(global::System.String value);
        partial void OnClassIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Crtd_DateTime
        {
            get
            {
                return _Crtd_DateTime;
            }
            set
            {
                OnCrtd_DateTimeChanging(value);
                ReportPropertyChanging("Crtd_DateTime");
                _Crtd_DateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Crtd_DateTime");
                OnCrtd_DateTimeChanged();
            }
        }
        private global::System.DateTime _Crtd_DateTime;
        partial void OnCrtd_DateTimeChanging(global::System.DateTime value);
        partial void OnCrtd_DateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Crtd_Prog
        {
            get
            {
                return _Crtd_Prog;
            }
            set
            {
                OnCrtd_ProgChanging(value);
                ReportPropertyChanging("Crtd_Prog");
                _Crtd_Prog = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Crtd_Prog");
                OnCrtd_ProgChanged();
            }
        }
        private global::System.String _Crtd_Prog;
        partial void OnCrtd_ProgChanging(global::System.String value);
        partial void OnCrtd_ProgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Crtd_User
        {
            get
            {
                return _Crtd_User;
            }
            set
            {
                OnCrtd_UserChanging(value);
                ReportPropertyChanging("Crtd_User");
                _Crtd_User = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Crtd_User");
                OnCrtd_UserChanged();
            }
        }
        private global::System.String _Crtd_User;
        partial void OnCrtd_UserChanging(global::System.String value);
        partial void OnCrtd_UserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LUpd_DateTime
        {
            get
            {
                return _LUpd_DateTime;
            }
            set
            {
                OnLUpd_DateTimeChanging(value);
                ReportPropertyChanging("LUpd_DateTime");
                _LUpd_DateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LUpd_DateTime");
                OnLUpd_DateTimeChanged();
            }
        }
        private global::System.DateTime _LUpd_DateTime;
        partial void OnLUpd_DateTimeChanging(global::System.DateTime value);
        partial void OnLUpd_DateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LUpd_Prog
        {
            get
            {
                return _LUpd_Prog;
            }
            set
            {
                OnLUpd_ProgChanging(value);
                ReportPropertyChanging("LUpd_Prog");
                _LUpd_Prog = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LUpd_Prog");
                OnLUpd_ProgChanged();
            }
        }
        private global::System.String _LUpd_Prog;
        partial void OnLUpd_ProgChanging(global::System.String value);
        partial void OnLUpd_ProgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LUpd_User
        {
            get
            {
                return _LUpd_User;
            }
            set
            {
                OnLUpd_UserChanging(value);
                ReportPropertyChanging("LUpd_User");
                _LUpd_User = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LUpd_User");
                OnLUpd_UserChanged();
            }
        }
        private global::System.String _LUpd_User;
        partial void OnLUpd_UserChanging(global::System.String value);
        partial void OnLUpd_UserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] tstamp
        {
            get
            {
                return StructuralObject.GetValidValue(_tstamp);
            }
            set
            {
                OntstampChanging(value);
                ReportPropertyChanging("tstamp");
                _tstamp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("tstamp");
                OntstampChanged();
            }
        }
        private global::System.Byte[] _tstamp;
        partial void OntstampChanging(global::System.Byte[] value);
        partial void OntstampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UnitDesc
        {
            get
            {
                return _UnitDesc;
            }
            set
            {
                OnUnitDescChanging(value);
                ReportPropertyChanging("UnitDesc");
                _UnitDesc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UnitDesc");
                OnUnitDescChanged();
            }
        }
        private global::System.String _UnitDesc;
        partial void OnUnitDescChanging(global::System.String value);
        partial void OnUnitDescChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OM21100Model", Name="OM_Discount")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OM_Discount : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OM_Discount object.
        /// </summary>
        /// <param name="discID">Initial value of the DiscID property.</param>
        /// <param name="crtd_DateTime">Initial value of the Crtd_DateTime property.</param>
        /// <param name="crtd_Prog">Initial value of the Crtd_Prog property.</param>
        /// <param name="crtd_User">Initial value of the Crtd_User property.</param>
        /// <param name="lUpd_DateTime">Initial value of the LUpd_DateTime property.</param>
        /// <param name="lUpd_Prog">Initial value of the LUpd_Prog property.</param>
        /// <param name="lUpd_User">Initial value of the LUpd_User property.</param>
        /// <param name="tstamp">Initial value of the tstamp property.</param>
        /// <param name="accumulate">Initial value of the Accumulate property.</param>
        public static OM_Discount CreateOM_Discount(global::System.String discID, global::System.DateTime crtd_DateTime, global::System.String crtd_Prog, global::System.String crtd_User, global::System.DateTime lUpd_DateTime, global::System.String lUpd_Prog, global::System.String lUpd_User, global::System.Byte[] tstamp, global::System.Boolean accumulate)
        {
            OM_Discount oM_Discount = new OM_Discount();
            oM_Discount.DiscID = discID;
            oM_Discount.Crtd_DateTime = crtd_DateTime;
            oM_Discount.Crtd_Prog = crtd_Prog;
            oM_Discount.Crtd_User = crtd_User;
            oM_Discount.LUpd_DateTime = lUpd_DateTime;
            oM_Discount.LUpd_Prog = lUpd_Prog;
            oM_Discount.LUpd_User = lUpd_User;
            oM_Discount.tstamp = tstamp;
            oM_Discount.Accumulate = accumulate;
            return oM_Discount;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DiscID
        {
            get
            {
                return _DiscID;
            }
            set
            {
                if (_DiscID != value)
                {
                    OnDiscIDChanging(value);
                    ReportPropertyChanging("DiscID");
                    _DiscID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("DiscID");
                    OnDiscIDChanged();
                }
            }
        }
        private global::System.String _DiscID;
        partial void OnDiscIDChanging(global::System.String value);
        partial void OnDiscIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Descr
        {
            get
            {
                return _Descr;
            }
            set
            {
                OnDescrChanging(value);
                ReportPropertyChanging("Descr");
                _Descr = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Descr");
                OnDescrChanged();
            }
        }
        private global::System.String _Descr;
        partial void OnDescrChanging(global::System.String value);
        partial void OnDescrChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DiscClass
        {
            get
            {
                return _DiscClass;
            }
            set
            {
                OnDiscClassChanging(value);
                ReportPropertyChanging("DiscClass");
                _DiscClass = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DiscClass");
                OnDiscClassChanged();
            }
        }
        private global::System.String _DiscClass;
        partial void OnDiscClassChanging(global::System.String value);
        partial void OnDiscClassChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DiscType
        {
            get
            {
                return _DiscType;
            }
            set
            {
                OnDiscTypeChanging(value);
                ReportPropertyChanging("DiscType");
                _DiscType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DiscType");
                OnDiscTypeChanged();
            }
        }
        private global::System.String _DiscType;
        partial void OnDiscTypeChanging(global::System.String value);
        partial void OnDiscTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Crtd_DateTime
        {
            get
            {
                return _Crtd_DateTime;
            }
            set
            {
                OnCrtd_DateTimeChanging(value);
                ReportPropertyChanging("Crtd_DateTime");
                _Crtd_DateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Crtd_DateTime");
                OnCrtd_DateTimeChanged();
            }
        }
        private global::System.DateTime _Crtd_DateTime;
        partial void OnCrtd_DateTimeChanging(global::System.DateTime value);
        partial void OnCrtd_DateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Crtd_Prog
        {
            get
            {
                return _Crtd_Prog;
            }
            set
            {
                OnCrtd_ProgChanging(value);
                ReportPropertyChanging("Crtd_Prog");
                _Crtd_Prog = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Crtd_Prog");
                OnCrtd_ProgChanged();
            }
        }
        private global::System.String _Crtd_Prog;
        partial void OnCrtd_ProgChanging(global::System.String value);
        partial void OnCrtd_ProgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Crtd_User
        {
            get
            {
                return _Crtd_User;
            }
            set
            {
                OnCrtd_UserChanging(value);
                ReportPropertyChanging("Crtd_User");
                _Crtd_User = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Crtd_User");
                OnCrtd_UserChanged();
            }
        }
        private global::System.String _Crtd_User;
        partial void OnCrtd_UserChanging(global::System.String value);
        partial void OnCrtd_UserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LUpd_DateTime
        {
            get
            {
                return _LUpd_DateTime;
            }
            set
            {
                OnLUpd_DateTimeChanging(value);
                ReportPropertyChanging("LUpd_DateTime");
                _LUpd_DateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LUpd_DateTime");
                OnLUpd_DateTimeChanged();
            }
        }
        private global::System.DateTime _LUpd_DateTime;
        partial void OnLUpd_DateTimeChanging(global::System.DateTime value);
        partial void OnLUpd_DateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LUpd_Prog
        {
            get
            {
                return _LUpd_Prog;
            }
            set
            {
                OnLUpd_ProgChanging(value);
                ReportPropertyChanging("LUpd_Prog");
                _LUpd_Prog = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LUpd_Prog");
                OnLUpd_ProgChanged();
            }
        }
        private global::System.String _LUpd_Prog;
        partial void OnLUpd_ProgChanging(global::System.String value);
        partial void OnLUpd_ProgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LUpd_User
        {
            get
            {
                return _LUpd_User;
            }
            set
            {
                OnLUpd_UserChanging(value);
                ReportPropertyChanging("LUpd_User");
                _LUpd_User = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LUpd_User");
                OnLUpd_UserChanged();
            }
        }
        private global::System.String _LUpd_User;
        partial void OnLUpd_UserChanging(global::System.String value);
        partial void OnLUpd_UserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] tstamp
        {
            get
            {
                return StructuralObject.GetValidValue(_tstamp);
            }
            set
            {
                OntstampChanging(value);
                ReportPropertyChanging("tstamp");
                _tstamp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("tstamp");
                OntstampChanged();
            }
        }
        private global::System.Byte[] _tstamp;
        partial void OntstampChanging(global::System.Byte[] value);
        partial void OntstampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Crtd_Role
        {
            get
            {
                return _Crtd_Role;
            }
            set
            {
                OnCrtd_RoleChanging(value);
                ReportPropertyChanging("Crtd_Role");
                _Crtd_Role = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Crtd_Role");
                OnCrtd_RoleChanged();
            }
        }
        private global::System.String _Crtd_Role;
        partial void OnCrtd_RoleChanging(global::System.String value);
        partial void OnCrtd_RoleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Accumulate
        {
            get
            {
                return _Accumulate;
            }
            set
            {
                OnAccumulateChanging(value);
                ReportPropertyChanging("Accumulate");
                _Accumulate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Accumulate");
                OnAccumulateChanged();
            }
        }
        private global::System.Boolean _Accumulate;
        partial void OnAccumulateChanging(global::System.Boolean value);
        partial void OnAccumulateChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OM21100Model", Name="OM_DiscSeq")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OM_DiscSeq : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OM_DiscSeq object.
        /// </summary>
        /// <param name="discID">Initial value of the DiscID property.</param>
        /// <param name="discSeq">Initial value of the DiscSeq property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        /// <param name="endDate">Initial value of the EndDate property.</param>
        /// <param name="promo">Initial value of the Promo property.</param>
        /// <param name="startDate">Initial value of the StartDate property.</param>
        /// <param name="crtd_DateTime">Initial value of the Crtd_DateTime property.</param>
        /// <param name="crtd_Prog">Initial value of the Crtd_Prog property.</param>
        /// <param name="crtd_User">Initial value of the Crtd_User property.</param>
        /// <param name="lUpd_DateTime">Initial value of the LUpd_DateTime property.</param>
        /// <param name="lUpd_Prog">Initial value of the LUpd_Prog property.</param>
        /// <param name="lUpd_User">Initial value of the LUpd_User property.</param>
        /// <param name="tstamp">Initial value of the tstamp property.</param>
        /// <param name="proAplForItem">Initial value of the ProAplForItem property.</param>
        /// <param name="autoFreeItem">Initial value of the AutoFreeItem property.</param>
        /// <param name="allowEditDisc">Initial value of the AllowEditDisc property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="pOStartDate">Initial value of the POStartDate property.</param>
        /// <param name="pOEndDate">Initial value of the POEndDate property.</param>
        /// <param name="pOUse">Initial value of the POUse property.</param>
        /// <param name="exactQty">Initial value of the ExactQty property.</param>
        /// <param name="excludeOtherDisc">Initial value of the ExcludeOtherDisc property.</param>
        /// <param name="pctDiscountByLevel">Initial value of the PctDiscountByLevel property.</param>
        /// <param name="requiredType">Initial value of the RequiredType property.</param>
        /// <param name="isRequiredQty">Initial value of the IsRequiredQty property.</param>
        /// <param name="choiceType">Initial value of the ChoiceType property.</param>
        /// <param name="prorateAmtType">Initial value of the ProrateAmtType property.</param>
        /// <param name="priorityPromo">Initial value of the PriorityPromo property.</param>
        /// <param name="excludePromo">Initial value of the ExcludePromo property.</param>
        /// <param name="isDeductQtyAmt">Initial value of the IsDeductQtyAmt property.</param>
        /// <param name="subBreakType">Initial value of the SubBreakType property.</param>
        /// <param name="breakBoundType">Initial value of the BreakBoundType property.</param>
        /// <param name="convertDiscAmtToFreeItem">Initial value of the ConvertDiscAmtToFreeItem property.</param>
        /// <param name="discSeqSolomon">Initial value of the DiscSeqSolomon property.</param>
        /// <param name="invtIDSolomon">Initial value of the InvtIDSolomon property.</param>
        /// <param name="discPrice">Initial value of the DiscPrice property.</param>
        public static OM_DiscSeq CreateOM_DiscSeq(global::System.String discID, global::System.String discSeq, global::System.Int16 active, global::System.DateTime endDate, global::System.Int16 promo, global::System.DateTime startDate, global::System.DateTime crtd_DateTime, global::System.String crtd_Prog, global::System.String crtd_User, global::System.DateTime lUpd_DateTime, global::System.String lUpd_Prog, global::System.String lUpd_User, global::System.Byte[] tstamp, global::System.String proAplForItem, global::System.Boolean autoFreeItem, global::System.Boolean allowEditDisc, global::System.String status, global::System.DateTime pOStartDate, global::System.DateTime pOEndDate, global::System.Boolean pOUse, global::System.Boolean exactQty, global::System.Boolean excludeOtherDisc, global::System.Boolean pctDiscountByLevel, global::System.String requiredType, global::System.Boolean isRequiredQty, global::System.String choiceType, global::System.String prorateAmtType, global::System.Int32 priorityPromo, global::System.String excludePromo, global::System.Boolean isDeductQtyAmt, global::System.String subBreakType, global::System.String breakBoundType, global::System.Boolean convertDiscAmtToFreeItem, global::System.String discSeqSolomon, global::System.String invtIDSolomon, global::System.Boolean discPrice)
        {
            OM_DiscSeq oM_DiscSeq = new OM_DiscSeq();
            oM_DiscSeq.DiscID = discID;
            oM_DiscSeq.DiscSeq = discSeq;
            oM_DiscSeq.Active = active;
            oM_DiscSeq.EndDate = endDate;
            oM_DiscSeq.Promo = promo;
            oM_DiscSeq.StartDate = startDate;
            oM_DiscSeq.Crtd_DateTime = crtd_DateTime;
            oM_DiscSeq.Crtd_Prog = crtd_Prog;
            oM_DiscSeq.Crtd_User = crtd_User;
            oM_DiscSeq.LUpd_DateTime = lUpd_DateTime;
            oM_DiscSeq.LUpd_Prog = lUpd_Prog;
            oM_DiscSeq.LUpd_User = lUpd_User;
            oM_DiscSeq.tstamp = tstamp;
            oM_DiscSeq.ProAplForItem = proAplForItem;
            oM_DiscSeq.AutoFreeItem = autoFreeItem;
            oM_DiscSeq.AllowEditDisc = allowEditDisc;
            oM_DiscSeq.Status = status;
            oM_DiscSeq.POStartDate = pOStartDate;
            oM_DiscSeq.POEndDate = pOEndDate;
            oM_DiscSeq.POUse = pOUse;
            oM_DiscSeq.ExactQty = exactQty;
            oM_DiscSeq.ExcludeOtherDisc = excludeOtherDisc;
            oM_DiscSeq.PctDiscountByLevel = pctDiscountByLevel;
            oM_DiscSeq.RequiredType = requiredType;
            oM_DiscSeq.IsRequiredQty = isRequiredQty;
            oM_DiscSeq.ChoiceType = choiceType;
            oM_DiscSeq.ProrateAmtType = prorateAmtType;
            oM_DiscSeq.PriorityPromo = priorityPromo;
            oM_DiscSeq.ExcludePromo = excludePromo;
            oM_DiscSeq.IsDeductQtyAmt = isDeductQtyAmt;
            oM_DiscSeq.SubBreakType = subBreakType;
            oM_DiscSeq.BreakBoundType = breakBoundType;
            oM_DiscSeq.ConvertDiscAmtToFreeItem = convertDiscAmtToFreeItem;
            oM_DiscSeq.DiscSeqSolomon = discSeqSolomon;
            oM_DiscSeq.InvtIDSolomon = invtIDSolomon;
            oM_DiscSeq.DiscPrice = discPrice;
            return oM_DiscSeq;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DiscID
        {
            get
            {
                return _DiscID;
            }
            set
            {
                if (_DiscID != value)
                {
                    OnDiscIDChanging(value);
                    ReportPropertyChanging("DiscID");
                    _DiscID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("DiscID");
                    OnDiscIDChanged();
                }
            }
        }
        private global::System.String _DiscID;
        partial void OnDiscIDChanging(global::System.String value);
        partial void OnDiscIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DiscSeq
        {
            get
            {
                return _DiscSeq;
            }
            set
            {
                if (_DiscSeq != value)
                {
                    OnDiscSeqChanging(value);
                    ReportPropertyChanging("DiscSeq");
                    _DiscSeq = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("DiscSeq");
                    OnDiscSeqChanged();
                }
            }
        }
        private global::System.String _DiscSeq;
        partial void OnDiscSeqChanging(global::System.String value);
        partial void OnDiscSeqChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Int16 _Active;
        partial void OnActiveChanging(global::System.Int16 value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BreakBy
        {
            get
            {
                return _BreakBy;
            }
            set
            {
                OnBreakByChanging(value);
                ReportPropertyChanging("BreakBy");
                _BreakBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BreakBy");
                OnBreakByChanged();
            }
        }
        private global::System.String _BreakBy;
        partial void OnBreakByChanging(global::System.String value);
        partial void OnBreakByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BudgetID
        {
            get
            {
                return _BudgetID;
            }
            set
            {
                OnBudgetIDChanging(value);
                ReportPropertyChanging("BudgetID");
                _BudgetID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BudgetID");
                OnBudgetIDChanged();
            }
        }
        private global::System.String _BudgetID;
        partial void OnBudgetIDChanging(global::System.String value);
        partial void OnBudgetIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Descr
        {
            get
            {
                return _Descr;
            }
            set
            {
                OnDescrChanging(value);
                ReportPropertyChanging("Descr");
                _Descr = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Descr");
                OnDescrChanged();
            }
        }
        private global::System.String _Descr;
        partial void OnDescrChanging(global::System.String value);
        partial void OnDescrChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DiscClass
        {
            get
            {
                return _DiscClass;
            }
            set
            {
                OnDiscClassChanging(value);
                ReportPropertyChanging("DiscClass");
                _DiscClass = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DiscClass");
                OnDiscClassChanged();
            }
        }
        private global::System.String _DiscClass;
        partial void OnDiscClassChanging(global::System.String value);
        partial void OnDiscClassChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DiscFor
        {
            get
            {
                return _DiscFor;
            }
            set
            {
                OnDiscForChanging(value);
                ReportPropertyChanging("DiscFor");
                _DiscFor = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DiscFor");
                OnDiscForChanged();
            }
        }
        private global::System.String _DiscFor;
        partial void OnDiscForChanging(global::System.String value);
        partial void OnDiscForChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private global::System.DateTime _EndDate;
        partial void OnEndDateChanging(global::System.DateTime value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Promo
        {
            get
            {
                return _Promo;
            }
            set
            {
                OnPromoChanging(value);
                ReportPropertyChanging("Promo");
                _Promo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Promo");
                OnPromoChanged();
            }
        }
        private global::System.Int16 _Promo;
        partial void OnPromoChanging(global::System.Int16 value);
        partial void OnPromoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private global::System.DateTime _StartDate;
        partial void OnStartDateChanging(global::System.DateTime value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Crtd_DateTime
        {
            get
            {
                return _Crtd_DateTime;
            }
            set
            {
                OnCrtd_DateTimeChanging(value);
                ReportPropertyChanging("Crtd_DateTime");
                _Crtd_DateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Crtd_DateTime");
                OnCrtd_DateTimeChanged();
            }
        }
        private global::System.DateTime _Crtd_DateTime;
        partial void OnCrtd_DateTimeChanging(global::System.DateTime value);
        partial void OnCrtd_DateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Crtd_Prog
        {
            get
            {
                return _Crtd_Prog;
            }
            set
            {
                OnCrtd_ProgChanging(value);
                ReportPropertyChanging("Crtd_Prog");
                _Crtd_Prog = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Crtd_Prog");
                OnCrtd_ProgChanged();
            }
        }
        private global::System.String _Crtd_Prog;
        partial void OnCrtd_ProgChanging(global::System.String value);
        partial void OnCrtd_ProgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Crtd_User
        {
            get
            {
                return _Crtd_User;
            }
            set
            {
                OnCrtd_UserChanging(value);
                ReportPropertyChanging("Crtd_User");
                _Crtd_User = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Crtd_User");
                OnCrtd_UserChanged();
            }
        }
        private global::System.String _Crtd_User;
        partial void OnCrtd_UserChanging(global::System.String value);
        partial void OnCrtd_UserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LUpd_DateTime
        {
            get
            {
                return _LUpd_DateTime;
            }
            set
            {
                OnLUpd_DateTimeChanging(value);
                ReportPropertyChanging("LUpd_DateTime");
                _LUpd_DateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LUpd_DateTime");
                OnLUpd_DateTimeChanged();
            }
        }
        private global::System.DateTime _LUpd_DateTime;
        partial void OnLUpd_DateTimeChanging(global::System.DateTime value);
        partial void OnLUpd_DateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LUpd_Prog
        {
            get
            {
                return _LUpd_Prog;
            }
            set
            {
                OnLUpd_ProgChanging(value);
                ReportPropertyChanging("LUpd_Prog");
                _LUpd_Prog = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LUpd_Prog");
                OnLUpd_ProgChanged();
            }
        }
        private global::System.String _LUpd_Prog;
        partial void OnLUpd_ProgChanging(global::System.String value);
        partial void OnLUpd_ProgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LUpd_User
        {
            get
            {
                return _LUpd_User;
            }
            set
            {
                OnLUpd_UserChanging(value);
                ReportPropertyChanging("LUpd_User");
                _LUpd_User = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LUpd_User");
                OnLUpd_UserChanged();
            }
        }
        private global::System.String _LUpd_User;
        partial void OnLUpd_UserChanging(global::System.String value);
        partial void OnLUpd_UserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] tstamp
        {
            get
            {
                return StructuralObject.GetValidValue(_tstamp);
            }
            set
            {
                OntstampChanging(value);
                ReportPropertyChanging("tstamp");
                _tstamp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("tstamp");
                OntstampChanged();
            }
        }
        private global::System.Byte[] _tstamp;
        partial void OntstampChanging(global::System.Byte[] value);
        partial void OntstampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProAplForItem
        {
            get
            {
                return _ProAplForItem;
            }
            set
            {
                OnProAplForItemChanging(value);
                ReportPropertyChanging("ProAplForItem");
                _ProAplForItem = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ProAplForItem");
                OnProAplForItemChanged();
            }
        }
        private global::System.String _ProAplForItem;
        partial void OnProAplForItemChanging(global::System.String value);
        partial void OnProAplForItemChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean AutoFreeItem
        {
            get
            {
                return _AutoFreeItem;
            }
            set
            {
                OnAutoFreeItemChanging(value);
                ReportPropertyChanging("AutoFreeItem");
                _AutoFreeItem = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AutoFreeItem");
                OnAutoFreeItemChanged();
            }
        }
        private global::System.Boolean _AutoFreeItem;
        partial void OnAutoFreeItemChanging(global::System.Boolean value);
        partial void OnAutoFreeItemChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean AllowEditDisc
        {
            get
            {
                return _AllowEditDisc;
            }
            set
            {
                OnAllowEditDiscChanging(value);
                ReportPropertyChanging("AllowEditDisc");
                _AllowEditDisc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AllowEditDisc");
                OnAllowEditDiscChanged();
            }
        }
        private global::System.Boolean _AllowEditDisc;
        partial void OnAllowEditDiscChanging(global::System.Boolean value);
        partial void OnAllowEditDiscChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime POStartDate
        {
            get
            {
                return _POStartDate;
            }
            set
            {
                OnPOStartDateChanging(value);
                ReportPropertyChanging("POStartDate");
                _POStartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("POStartDate");
                OnPOStartDateChanged();
            }
        }
        private global::System.DateTime _POStartDate;
        partial void OnPOStartDateChanging(global::System.DateTime value);
        partial void OnPOStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime POEndDate
        {
            get
            {
                return _POEndDate;
            }
            set
            {
                OnPOEndDateChanging(value);
                ReportPropertyChanging("POEndDate");
                _POEndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("POEndDate");
                OnPOEndDateChanged();
            }
        }
        private global::System.DateTime _POEndDate;
        partial void OnPOEndDateChanging(global::System.DateTime value);
        partial void OnPOEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean POUse
        {
            get
            {
                return _POUse;
            }
            set
            {
                OnPOUseChanging(value);
                ReportPropertyChanging("POUse");
                _POUse = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("POUse");
                OnPOUseChanged();
            }
        }
        private global::System.Boolean _POUse;
        partial void OnPOUseChanging(global::System.Boolean value);
        partial void OnPOUseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Crtd_Role
        {
            get
            {
                return _Crtd_Role;
            }
            set
            {
                OnCrtd_RoleChanging(value);
                ReportPropertyChanging("Crtd_Role");
                _Crtd_Role = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Crtd_Role");
                OnCrtd_RoleChanged();
            }
        }
        private global::System.String _Crtd_Role;
        partial void OnCrtd_RoleChanging(global::System.String value);
        partial void OnCrtd_RoleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Profile
        {
            get
            {
                return _Profile;
            }
            set
            {
                OnProfileChanging(value);
                ReportPropertyChanging("Profile");
                _Profile = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Profile");
                OnProfileChanged();
            }
        }
        private global::System.String _Profile;
        partial void OnProfileChanging(global::System.String value);
        partial void OnProfileChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ExactQty
        {
            get
            {
                return _ExactQty;
            }
            set
            {
                OnExactQtyChanging(value);
                ReportPropertyChanging("ExactQty");
                _ExactQty = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExactQty");
                OnExactQtyChanged();
            }
        }
        private global::System.Boolean _ExactQty;
        partial void OnExactQtyChanging(global::System.Boolean value);
        partial void OnExactQtyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ExcludeOtherDisc
        {
            get
            {
                return _ExcludeOtherDisc;
            }
            set
            {
                OnExcludeOtherDiscChanging(value);
                ReportPropertyChanging("ExcludeOtherDisc");
                _ExcludeOtherDisc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExcludeOtherDisc");
                OnExcludeOtherDiscChanged();
            }
        }
        private global::System.Boolean _ExcludeOtherDisc;
        partial void OnExcludeOtherDiscChanging(global::System.Boolean value);
        partial void OnExcludeOtherDiscChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean PctDiscountByLevel
        {
            get
            {
                return _PctDiscountByLevel;
            }
            set
            {
                OnPctDiscountByLevelChanging(value);
                ReportPropertyChanging("PctDiscountByLevel");
                _PctDiscountByLevel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PctDiscountByLevel");
                OnPctDiscountByLevelChanged();
            }
        }
        private global::System.Boolean _PctDiscountByLevel;
        partial void OnPctDiscountByLevelChanging(global::System.Boolean value);
        partial void OnPctDiscountByLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RequiredType
        {
            get
            {
                return _RequiredType;
            }
            set
            {
                OnRequiredTypeChanging(value);
                ReportPropertyChanging("RequiredType");
                _RequiredType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RequiredType");
                OnRequiredTypeChanged();
            }
        }
        private global::System.String _RequiredType;
        partial void OnRequiredTypeChanging(global::System.String value);
        partial void OnRequiredTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsRequiredQty
        {
            get
            {
                return _IsRequiredQty;
            }
            set
            {
                OnIsRequiredQtyChanging(value);
                ReportPropertyChanging("IsRequiredQty");
                _IsRequiredQty = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsRequiredQty");
                OnIsRequiredQtyChanged();
            }
        }
        private global::System.Boolean _IsRequiredQty;
        partial void OnIsRequiredQtyChanging(global::System.Boolean value);
        partial void OnIsRequiredQtyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> DonateGroupProduct
        {
            get
            {
                return _DonateGroupProduct;
            }
            set
            {
                OnDonateGroupProductChanging(value);
                ReportPropertyChanging("DonateGroupProduct");
                _DonateGroupProduct = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DonateGroupProduct");
                OnDonateGroupProductChanged();
            }
        }
        private Nullable<global::System.Boolean> _DonateGroupProduct;
        partial void OnDonateGroupProductChanging(Nullable<global::System.Boolean> value);
        partial void OnDonateGroupProductChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> StockPromotion
        {
            get
            {
                return _StockPromotion;
            }
            set
            {
                OnStockPromotionChanging(value);
                ReportPropertyChanging("StockPromotion");
                _StockPromotion = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StockPromotion");
                OnStockPromotionChanged();
            }
        }
        private Nullable<global::System.Boolean> _StockPromotion;
        partial void OnStockPromotionChanging(Nullable<global::System.Boolean> value);
        partial void OnStockPromotionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ChoiceType
        {
            get
            {
                return _ChoiceType;
            }
            set
            {
                OnChoiceTypeChanging(value);
                ReportPropertyChanging("ChoiceType");
                _ChoiceType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ChoiceType");
                OnChoiceTypeChanged();
            }
        }
        private global::System.String _ChoiceType;
        partial void OnChoiceTypeChanging(global::System.String value);
        partial void OnChoiceTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProrateAmtType
        {
            get
            {
                return _ProrateAmtType;
            }
            set
            {
                OnProrateAmtTypeChanging(value);
                ReportPropertyChanging("ProrateAmtType");
                _ProrateAmtType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ProrateAmtType");
                OnProrateAmtTypeChanged();
            }
        }
        private global::System.String _ProrateAmtType;
        partial void OnProrateAmtTypeChanging(global::System.String value);
        partial void OnProrateAmtTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PriorityPromo
        {
            get
            {
                return _PriorityPromo;
            }
            set
            {
                OnPriorityPromoChanging(value);
                ReportPropertyChanging("PriorityPromo");
                _PriorityPromo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PriorityPromo");
                OnPriorityPromoChanged();
            }
        }
        private global::System.Int32 _PriorityPromo;
        partial void OnPriorityPromoChanging(global::System.Int32 value);
        partial void OnPriorityPromoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ExcludePromo
        {
            get
            {
                return _ExcludePromo;
            }
            set
            {
                OnExcludePromoChanging(value);
                ReportPropertyChanging("ExcludePromo");
                _ExcludePromo = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ExcludePromo");
                OnExcludePromoChanged();
            }
        }
        private global::System.String _ExcludePromo;
        partial void OnExcludePromoChanging(global::System.String value);
        partial void OnExcludePromoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeductQtyAmt
        {
            get
            {
                return _IsDeductQtyAmt;
            }
            set
            {
                OnIsDeductQtyAmtChanging(value);
                ReportPropertyChanging("IsDeductQtyAmt");
                _IsDeductQtyAmt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeductQtyAmt");
                OnIsDeductQtyAmtChanged();
            }
        }
        private global::System.Boolean _IsDeductQtyAmt;
        partial void OnIsDeductQtyAmtChanging(global::System.Boolean value);
        partial void OnIsDeductQtyAmtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SubBreakType
        {
            get
            {
                return _SubBreakType;
            }
            set
            {
                OnSubBreakTypeChanging(value);
                ReportPropertyChanging("SubBreakType");
                _SubBreakType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SubBreakType");
                OnSubBreakTypeChanged();
            }
        }
        private global::System.String _SubBreakType;
        partial void OnSubBreakTypeChanging(global::System.String value);
        partial void OnSubBreakTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BreakBoundType
        {
            get
            {
                return _BreakBoundType;
            }
            set
            {
                OnBreakBoundTypeChanging(value);
                ReportPropertyChanging("BreakBoundType");
                _BreakBoundType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BreakBoundType");
                OnBreakBoundTypeChanged();
            }
        }
        private global::System.String _BreakBoundType;
        partial void OnBreakBoundTypeChanging(global::System.String value);
        partial void OnBreakBoundTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ConvertDiscAmtToFreeItem
        {
            get
            {
                return _ConvertDiscAmtToFreeItem;
            }
            set
            {
                OnConvertDiscAmtToFreeItemChanging(value);
                ReportPropertyChanging("ConvertDiscAmtToFreeItem");
                _ConvertDiscAmtToFreeItem = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ConvertDiscAmtToFreeItem");
                OnConvertDiscAmtToFreeItemChanged();
            }
        }
        private global::System.Boolean _ConvertDiscAmtToFreeItem;
        partial void OnConvertDiscAmtToFreeItemChanging(global::System.Boolean value);
        partial void OnConvertDiscAmtToFreeItemChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DiscSeqSolomon
        {
            get
            {
                return _DiscSeqSolomon;
            }
            set
            {
                OnDiscSeqSolomonChanging(value);
                ReportPropertyChanging("DiscSeqSolomon");
                _DiscSeqSolomon = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DiscSeqSolomon");
                OnDiscSeqSolomonChanged();
            }
        }
        private global::System.String _DiscSeqSolomon;
        partial void OnDiscSeqSolomonChanging(global::System.String value);
        partial void OnDiscSeqSolomonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String InvtIDSolomon
        {
            get
            {
                return _InvtIDSolomon;
            }
            set
            {
                OnInvtIDSolomonChanging(value);
                ReportPropertyChanging("InvtIDSolomon");
                _InvtIDSolomon = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("InvtIDSolomon");
                OnInvtIDSolomonChanged();
            }
        }
        private global::System.String _InvtIDSolomon;
        partial void OnInvtIDSolomonChanging(global::System.String value);
        partial void OnInvtIDSolomonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean DiscPrice
        {
            get
            {
                return _DiscPrice;
            }
            set
            {
                OnDiscPriceChanging(value);
                ReportPropertyChanging("DiscPrice");
                _DiscPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DiscPrice");
                OnDiscPriceChanged();
            }
        }
        private global::System.Boolean _DiscPrice;
        partial void OnDiscPriceChanging(global::System.Boolean value);
        partial void OnDiscPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SolomonSite
        {
            get
            {
                return _SolomonSite;
            }
            set
            {
                OnSolomonSiteChanging(value);
                ReportPropertyChanging("SolomonSite");
                _SolomonSite = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SolomonSite");
                OnSolomonSiteChanged();
            }
        }
        private global::System.String _SolomonSite;
        partial void OnSolomonSiteChanging(global::System.String value);
        partial void OnSolomonSiteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> RegistrationOfIndustryAndTrade
        {
            get
            {
                return _RegistrationOfIndustryAndTrade;
            }
            set
            {
                OnRegistrationOfIndustryAndTradeChanging(value);
                ReportPropertyChanging("RegistrationOfIndustryAndTrade");
                _RegistrationOfIndustryAndTrade = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RegistrationOfIndustryAndTrade");
                OnRegistrationOfIndustryAndTradeChanged();
            }
        }
        private Nullable<global::System.Boolean> _RegistrationOfIndustryAndTrade;
        partial void OnRegistrationOfIndustryAndTradeChanging(Nullable<global::System.Boolean> value);
        partial void OnRegistrationOfIndustryAndTradeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsGetFreeItem
        {
            get
            {
                return _IsGetFreeItem;
            }
            set
            {
                OnIsGetFreeItemChanging(value);
                ReportPropertyChanging("IsGetFreeItem");
                _IsGetFreeItem = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsGetFreeItem");
                OnIsGetFreeItemChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsGetFreeItem;
        partial void OnIsGetFreeItemChanging(Nullable<global::System.Boolean> value);
        partial void OnIsGetFreeItemChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OM21100Model", Name="OM_DiscSubBreakItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OM_DiscSubBreakItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OM_DiscSubBreakItem object.
        /// </summary>
        /// <param name="discID">Initial value of the DiscID property.</param>
        /// <param name="discSeq">Initial value of the DiscSeq property.</param>
        /// <param name="invtID">Initial value of the InvtID property.</param>
        /// <param name="unitDesc">Initial value of the UnitDesc property.</param>
        /// <param name="crtd_DateTime">Initial value of the Crtd_DateTime property.</param>
        /// <param name="crtd_Prog">Initial value of the Crtd_Prog property.</param>
        /// <param name="crtd_User">Initial value of the Crtd_User property.</param>
        /// <param name="lUpd_DateTime">Initial value of the LUpd_DateTime property.</param>
        /// <param name="lUpd_Prog">Initial value of the LUpd_Prog property.</param>
        /// <param name="lUpd_User">Initial value of the LUpd_User property.</param>
        /// <param name="tstamp">Initial value of the tstamp property.</param>
        public static OM_DiscSubBreakItem CreateOM_DiscSubBreakItem(global::System.String discID, global::System.String discSeq, global::System.String invtID, global::System.String unitDesc, global::System.DateTime crtd_DateTime, global::System.String crtd_Prog, global::System.String crtd_User, global::System.DateTime lUpd_DateTime, global::System.String lUpd_Prog, global::System.String lUpd_User, global::System.Byte[] tstamp)
        {
            OM_DiscSubBreakItem oM_DiscSubBreakItem = new OM_DiscSubBreakItem();
            oM_DiscSubBreakItem.DiscID = discID;
            oM_DiscSubBreakItem.DiscSeq = discSeq;
            oM_DiscSubBreakItem.InvtID = invtID;
            oM_DiscSubBreakItem.UnitDesc = unitDesc;
            oM_DiscSubBreakItem.Crtd_DateTime = crtd_DateTime;
            oM_DiscSubBreakItem.Crtd_Prog = crtd_Prog;
            oM_DiscSubBreakItem.Crtd_User = crtd_User;
            oM_DiscSubBreakItem.LUpd_DateTime = lUpd_DateTime;
            oM_DiscSubBreakItem.LUpd_Prog = lUpd_Prog;
            oM_DiscSubBreakItem.LUpd_User = lUpd_User;
            oM_DiscSubBreakItem.tstamp = tstamp;
            return oM_DiscSubBreakItem;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DiscID
        {
            get
            {
                return _DiscID;
            }
            set
            {
                if (_DiscID != value)
                {
                    OnDiscIDChanging(value);
                    ReportPropertyChanging("DiscID");
                    _DiscID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("DiscID");
                    OnDiscIDChanged();
                }
            }
        }
        private global::System.String _DiscID;
        partial void OnDiscIDChanging(global::System.String value);
        partial void OnDiscIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DiscSeq
        {
            get
            {
                return _DiscSeq;
            }
            set
            {
                if (_DiscSeq != value)
                {
                    OnDiscSeqChanging(value);
                    ReportPropertyChanging("DiscSeq");
                    _DiscSeq = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("DiscSeq");
                    OnDiscSeqChanged();
                }
            }
        }
        private global::System.String _DiscSeq;
        partial void OnDiscSeqChanging(global::System.String value);
        partial void OnDiscSeqChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String InvtID
        {
            get
            {
                return _InvtID;
            }
            set
            {
                if (_InvtID != value)
                {
                    OnInvtIDChanging(value);
                    ReportPropertyChanging("InvtID");
                    _InvtID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("InvtID");
                    OnInvtIDChanged();
                }
            }
        }
        private global::System.String _InvtID;
        partial void OnInvtIDChanging(global::System.String value);
        partial void OnInvtIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UnitDesc
        {
            get
            {
                return _UnitDesc;
            }
            set
            {
                OnUnitDescChanging(value);
                ReportPropertyChanging("UnitDesc");
                _UnitDesc = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UnitDesc");
                OnUnitDescChanged();
            }
        }
        private global::System.String _UnitDesc;
        partial void OnUnitDescChanging(global::System.String value);
        partial void OnUnitDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Crtd_DateTime
        {
            get
            {
                return _Crtd_DateTime;
            }
            set
            {
                OnCrtd_DateTimeChanging(value);
                ReportPropertyChanging("Crtd_DateTime");
                _Crtd_DateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Crtd_DateTime");
                OnCrtd_DateTimeChanged();
            }
        }
        private global::System.DateTime _Crtd_DateTime;
        partial void OnCrtd_DateTimeChanging(global::System.DateTime value);
        partial void OnCrtd_DateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Crtd_Prog
        {
            get
            {
                return _Crtd_Prog;
            }
            set
            {
                OnCrtd_ProgChanging(value);
                ReportPropertyChanging("Crtd_Prog");
                _Crtd_Prog = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Crtd_Prog");
                OnCrtd_ProgChanged();
            }
        }
        private global::System.String _Crtd_Prog;
        partial void OnCrtd_ProgChanging(global::System.String value);
        partial void OnCrtd_ProgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Crtd_User
        {
            get
            {
                return _Crtd_User;
            }
            set
            {
                OnCrtd_UserChanging(value);
                ReportPropertyChanging("Crtd_User");
                _Crtd_User = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Crtd_User");
                OnCrtd_UserChanged();
            }
        }
        private global::System.String _Crtd_User;
        partial void OnCrtd_UserChanging(global::System.String value);
        partial void OnCrtd_UserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LUpd_DateTime
        {
            get
            {
                return _LUpd_DateTime;
            }
            set
            {
                OnLUpd_DateTimeChanging(value);
                ReportPropertyChanging("LUpd_DateTime");
                _LUpd_DateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LUpd_DateTime");
                OnLUpd_DateTimeChanged();
            }
        }
        private global::System.DateTime _LUpd_DateTime;
        partial void OnLUpd_DateTimeChanging(global::System.DateTime value);
        partial void OnLUpd_DateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LUpd_Prog
        {
            get
            {
                return _LUpd_Prog;
            }
            set
            {
                OnLUpd_ProgChanging(value);
                ReportPropertyChanging("LUpd_Prog");
                _LUpd_Prog = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LUpd_Prog");
                OnLUpd_ProgChanged();
            }
        }
        private global::System.String _LUpd_Prog;
        partial void OnLUpd_ProgChanging(global::System.String value);
        partial void OnLUpd_ProgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LUpd_User
        {
            get
            {
                return _LUpd_User;
            }
            set
            {
                OnLUpd_UserChanging(value);
                ReportPropertyChanging("LUpd_User");
                _LUpd_User = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LUpd_User");
                OnLUpd_UserChanged();
            }
        }
        private global::System.String _LUpd_User;
        partial void OnLUpd_UserChanging(global::System.String value);
        partial void OnLUpd_UserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] tstamp
        {
            get
            {
                return StructuralObject.GetValidValue(_tstamp);
            }
            set
            {
                OntstampChanging(value);
                ReportPropertyChanging("tstamp");
                _tstamp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("tstamp");
                OntstampChanged();
            }
        }
        private global::System.Byte[] _tstamp;
        partial void OntstampChanging(global::System.Byte[] value);
        partial void OntstampChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OM21100Model", Name="OM_OrdDisc")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OM_OrdDisc : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OM_OrdDisc object.
        /// </summary>
        /// <param name="branchID">Initial value of the BranchID property.</param>
        /// <param name="discID">Initial value of the DiscID property.</param>
        /// <param name="discSeq">Initial value of the DiscSeq property.</param>
        /// <param name="orderNbr">Initial value of the OrderNbr property.</param>
        /// <param name="lineRef">Initial value of the LineRef property.</param>
        /// <param name="discAmt">Initial value of the DiscAmt property.</param>
        /// <param name="disctblAmt">Initial value of the DisctblAmt property.</param>
        /// <param name="disctblQty">Initial value of the DisctblQty property.</param>
        /// <param name="freeItemQty">Initial value of the FreeItemQty property.</param>
        /// <param name="origFreeItemQty">Initial value of the OrigFreeItemQty property.</param>
        /// <param name="crtd_DateTime">Initial value of the Crtd_DateTime property.</param>
        /// <param name="crtd_Prog">Initial value of the Crtd_Prog property.</param>
        /// <param name="crtd_User">Initial value of the Crtd_User property.</param>
        /// <param name="lUpd_DateTime">Initial value of the LUpd_DateTime property.</param>
        /// <param name="lUpd_Prog">Initial value of the LUpd_Prog property.</param>
        /// <param name="lUpd_User">Initial value of the LUpd_User property.</param>
        /// <param name="tstamp">Initial value of the tstamp property.</param>
        /// <param name="groupRefLineRef">Initial value of the GroupRefLineRef property.</param>
        public static OM_OrdDisc CreateOM_OrdDisc(global::System.String branchID, global::System.String discID, global::System.String discSeq, global::System.String orderNbr, global::System.String lineRef, global::System.Double discAmt, global::System.Double disctblAmt, global::System.Double disctblQty, global::System.Double freeItemQty, global::System.Double origFreeItemQty, global::System.DateTime crtd_DateTime, global::System.String crtd_Prog, global::System.String crtd_User, global::System.DateTime lUpd_DateTime, global::System.String lUpd_Prog, global::System.String lUpd_User, global::System.Byte[] tstamp, global::System.String groupRefLineRef)
        {
            OM_OrdDisc oM_OrdDisc = new OM_OrdDisc();
            oM_OrdDisc.BranchID = branchID;
            oM_OrdDisc.DiscID = discID;
            oM_OrdDisc.DiscSeq = discSeq;
            oM_OrdDisc.OrderNbr = orderNbr;
            oM_OrdDisc.LineRef = lineRef;
            oM_OrdDisc.DiscAmt = discAmt;
            oM_OrdDisc.DisctblAmt = disctblAmt;
            oM_OrdDisc.DisctblQty = disctblQty;
            oM_OrdDisc.FreeItemQty = freeItemQty;
            oM_OrdDisc.OrigFreeItemQty = origFreeItemQty;
            oM_OrdDisc.Crtd_DateTime = crtd_DateTime;
            oM_OrdDisc.Crtd_Prog = crtd_Prog;
            oM_OrdDisc.Crtd_User = crtd_User;
            oM_OrdDisc.LUpd_DateTime = lUpd_DateTime;
            oM_OrdDisc.LUpd_Prog = lUpd_Prog;
            oM_OrdDisc.LUpd_User = lUpd_User;
            oM_OrdDisc.tstamp = tstamp;
            oM_OrdDisc.GroupRefLineRef = groupRefLineRef;
            return oM_OrdDisc;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BranchID
        {
            get
            {
                return _BranchID;
            }
            set
            {
                if (_BranchID != value)
                {
                    OnBranchIDChanging(value);
                    ReportPropertyChanging("BranchID");
                    _BranchID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("BranchID");
                    OnBranchIDChanged();
                }
            }
        }
        private global::System.String _BranchID;
        partial void OnBranchIDChanging(global::System.String value);
        partial void OnBranchIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DiscID
        {
            get
            {
                return _DiscID;
            }
            set
            {
                if (_DiscID != value)
                {
                    OnDiscIDChanging(value);
                    ReportPropertyChanging("DiscID");
                    _DiscID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("DiscID");
                    OnDiscIDChanged();
                }
            }
        }
        private global::System.String _DiscID;
        partial void OnDiscIDChanging(global::System.String value);
        partial void OnDiscIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DiscSeq
        {
            get
            {
                return _DiscSeq;
            }
            set
            {
                if (_DiscSeq != value)
                {
                    OnDiscSeqChanging(value);
                    ReportPropertyChanging("DiscSeq");
                    _DiscSeq = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("DiscSeq");
                    OnDiscSeqChanged();
                }
            }
        }
        private global::System.String _DiscSeq;
        partial void OnDiscSeqChanging(global::System.String value);
        partial void OnDiscSeqChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OrderNbr
        {
            get
            {
                return _OrderNbr;
            }
            set
            {
                if (_OrderNbr != value)
                {
                    OnOrderNbrChanging(value);
                    ReportPropertyChanging("OrderNbr");
                    _OrderNbr = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("OrderNbr");
                    OnOrderNbrChanged();
                }
            }
        }
        private global::System.String _OrderNbr;
        partial void OnOrderNbrChanging(global::System.String value);
        partial void OnOrderNbrChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LineRef
        {
            get
            {
                return _LineRef;
            }
            set
            {
                if (_LineRef != value)
                {
                    OnLineRefChanging(value);
                    ReportPropertyChanging("LineRef");
                    _LineRef = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("LineRef");
                    OnLineRefChanged();
                }
            }
        }
        private global::System.String _LineRef;
        partial void OnLineRefChanging(global::System.String value);
        partial void OnLineRefChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BreakBy
        {
            get
            {
                return _BreakBy;
            }
            set
            {
                OnBreakByChanging(value);
                ReportPropertyChanging("BreakBy");
                _BreakBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BreakBy");
                OnBreakByChanged();
            }
        }
        private global::System.String _BreakBy;
        partial void OnBreakByChanging(global::System.String value);
        partial void OnBreakByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BudgetID
        {
            get
            {
                return _BudgetID;
            }
            set
            {
                OnBudgetIDChanging(value);
                ReportPropertyChanging("BudgetID");
                _BudgetID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BudgetID");
                OnBudgetIDChanged();
            }
        }
        private global::System.String _BudgetID;
        partial void OnBudgetIDChanging(global::System.String value);
        partial void OnBudgetIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double DiscAmt
        {
            get
            {
                return _DiscAmt;
            }
            set
            {
                OnDiscAmtChanging(value);
                ReportPropertyChanging("DiscAmt");
                _DiscAmt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DiscAmt");
                OnDiscAmtChanged();
            }
        }
        private global::System.Double _DiscAmt;
        partial void OnDiscAmtChanging(global::System.Double value);
        partial void OnDiscAmtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DiscFor
        {
            get
            {
                return _DiscFor;
            }
            set
            {
                OnDiscForChanging(value);
                ReportPropertyChanging("DiscFor");
                _DiscFor = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DiscFor");
                OnDiscForChanged();
            }
        }
        private global::System.String _DiscFor;
        partial void OnDiscForChanging(global::System.String value);
        partial void OnDiscForChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double DisctblAmt
        {
            get
            {
                return _DisctblAmt;
            }
            set
            {
                OnDisctblAmtChanging(value);
                ReportPropertyChanging("DisctblAmt");
                _DisctblAmt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DisctblAmt");
                OnDisctblAmtChanged();
            }
        }
        private global::System.Double _DisctblAmt;
        partial void OnDisctblAmtChanging(global::System.Double value);
        partial void OnDisctblAmtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double DisctblQty
        {
            get
            {
                return _DisctblQty;
            }
            set
            {
                OnDisctblQtyChanging(value);
                ReportPropertyChanging("DisctblQty");
                _DisctblQty = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DisctblQty");
                OnDisctblQtyChanged();
            }
        }
        private global::System.Double _DisctblQty;
        partial void OnDisctblQtyChanging(global::System.Double value);
        partial void OnDisctblQtyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DiscType
        {
            get
            {
                return _DiscType;
            }
            set
            {
                OnDiscTypeChanging(value);
                ReportPropertyChanging("DiscType");
                _DiscType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DiscType");
                OnDiscTypeChanged();
            }
        }
        private global::System.String _DiscType;
        partial void OnDiscTypeChanging(global::System.String value);
        partial void OnDiscTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DiscUOM
        {
            get
            {
                return _DiscUOM;
            }
            set
            {
                OnDiscUOMChanging(value);
                ReportPropertyChanging("DiscUOM");
                _DiscUOM = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DiscUOM");
                OnDiscUOMChanged();
            }
        }
        private global::System.String _DiscUOM;
        partial void OnDiscUOMChanging(global::System.String value);
        partial void OnDiscUOMChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FreeItemBudgetID
        {
            get
            {
                return _FreeItemBudgetID;
            }
            set
            {
                OnFreeItemBudgetIDChanging(value);
                ReportPropertyChanging("FreeItemBudgetID");
                _FreeItemBudgetID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FreeItemBudgetID");
                OnFreeItemBudgetIDChanged();
            }
        }
        private global::System.String _FreeItemBudgetID;
        partial void OnFreeItemBudgetIDChanging(global::System.String value);
        partial void OnFreeItemBudgetIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FreeItemID
        {
            get
            {
                return _FreeItemID;
            }
            set
            {
                OnFreeItemIDChanging(value);
                ReportPropertyChanging("FreeItemID");
                _FreeItemID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FreeItemID");
                OnFreeItemIDChanged();
            }
        }
        private global::System.String _FreeItemID;
        partial void OnFreeItemIDChanging(global::System.String value);
        partial void OnFreeItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double FreeItemQty
        {
            get
            {
                return _FreeItemQty;
            }
            set
            {
                OnFreeItemQtyChanging(value);
                ReportPropertyChanging("FreeItemQty");
                _FreeItemQty = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FreeItemQty");
                OnFreeItemQtyChanged();
            }
        }
        private global::System.Double _FreeItemQty;
        partial void OnFreeItemQtyChanging(global::System.Double value);
        partial void OnFreeItemQtyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double OrigFreeItemQty
        {
            get
            {
                return _OrigFreeItemQty;
            }
            set
            {
                OnOrigFreeItemQtyChanging(value);
                ReportPropertyChanging("OrigFreeItemQty");
                _OrigFreeItemQty = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrigFreeItemQty");
                OnOrigFreeItemQtyChanged();
            }
        }
        private global::System.Double _OrigFreeItemQty;
        partial void OnOrigFreeItemQtyChanging(global::System.Double value);
        partial void OnOrigFreeItemQtyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SlsPerID
        {
            get
            {
                return _SlsPerID;
            }
            set
            {
                OnSlsPerIDChanging(value);
                ReportPropertyChanging("SlsPerID");
                _SlsPerID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SlsPerID");
                OnSlsPerIDChanged();
            }
        }
        private global::System.String _SlsPerID;
        partial void OnSlsPerIDChanging(global::System.String value);
        partial void OnSlsPerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SOLineRef
        {
            get
            {
                return _SOLineRef;
            }
            set
            {
                OnSOLineRefChanging(value);
                ReportPropertyChanging("SOLineRef");
                _SOLineRef = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SOLineRef");
                OnSOLineRefChanged();
            }
        }
        private global::System.String _SOLineRef;
        partial void OnSOLineRefChanging(global::System.String value);
        partial void OnSOLineRefChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserOperationLog
        {
            get
            {
                return _UserOperationLog;
            }
            set
            {
                OnUserOperationLogChanging(value);
                ReportPropertyChanging("UserOperationLog");
                _UserOperationLog = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserOperationLog");
                OnUserOperationLogChanged();
            }
        }
        private global::System.String _UserOperationLog;
        partial void OnUserOperationLogChanging(global::System.String value);
        partial void OnUserOperationLogChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Crtd_DateTime
        {
            get
            {
                return _Crtd_DateTime;
            }
            set
            {
                OnCrtd_DateTimeChanging(value);
                ReportPropertyChanging("Crtd_DateTime");
                _Crtd_DateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Crtd_DateTime");
                OnCrtd_DateTimeChanged();
            }
        }
        private global::System.DateTime _Crtd_DateTime;
        partial void OnCrtd_DateTimeChanging(global::System.DateTime value);
        partial void OnCrtd_DateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Crtd_Prog
        {
            get
            {
                return _Crtd_Prog;
            }
            set
            {
                OnCrtd_ProgChanging(value);
                ReportPropertyChanging("Crtd_Prog");
                _Crtd_Prog = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Crtd_Prog");
                OnCrtd_ProgChanged();
            }
        }
        private global::System.String _Crtd_Prog;
        partial void OnCrtd_ProgChanging(global::System.String value);
        partial void OnCrtd_ProgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Crtd_User
        {
            get
            {
                return _Crtd_User;
            }
            set
            {
                OnCrtd_UserChanging(value);
                ReportPropertyChanging("Crtd_User");
                _Crtd_User = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Crtd_User");
                OnCrtd_UserChanged();
            }
        }
        private global::System.String _Crtd_User;
        partial void OnCrtd_UserChanging(global::System.String value);
        partial void OnCrtd_UserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LUpd_DateTime
        {
            get
            {
                return _LUpd_DateTime;
            }
            set
            {
                OnLUpd_DateTimeChanging(value);
                ReportPropertyChanging("LUpd_DateTime");
                _LUpd_DateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LUpd_DateTime");
                OnLUpd_DateTimeChanged();
            }
        }
        private global::System.DateTime _LUpd_DateTime;
        partial void OnLUpd_DateTimeChanging(global::System.DateTime value);
        partial void OnLUpd_DateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LUpd_Prog
        {
            get
            {
                return _LUpd_Prog;
            }
            set
            {
                OnLUpd_ProgChanging(value);
                ReportPropertyChanging("LUpd_Prog");
                _LUpd_Prog = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LUpd_Prog");
                OnLUpd_ProgChanged();
            }
        }
        private global::System.String _LUpd_Prog;
        partial void OnLUpd_ProgChanging(global::System.String value);
        partial void OnLUpd_ProgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LUpd_User
        {
            get
            {
                return _LUpd_User;
            }
            set
            {
                OnLUpd_UserChanging(value);
                ReportPropertyChanging("LUpd_User");
                _LUpd_User = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LUpd_User");
                OnLUpd_UserChanged();
            }
        }
        private global::System.String _LUpd_User;
        partial void OnLUpd_UserChanging(global::System.String value);
        partial void OnLUpd_UserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] tstamp
        {
            get
            {
                return StructuralObject.GetValidValue(_tstamp);
            }
            set
            {
                OntstampChanging(value);
                ReportPropertyChanging("tstamp");
                _tstamp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("tstamp");
                OntstampChanged();
            }
        }
        private global::System.Byte[] _tstamp;
        partial void OntstampChanging(global::System.Byte[] value);
        partial void OntstampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DiscBreakLineRef
        {
            get
            {
                return _DiscBreakLineRef;
            }
            set
            {
                OnDiscBreakLineRefChanging(value);
                ReportPropertyChanging("DiscBreakLineRef");
                _DiscBreakLineRef = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DiscBreakLineRef");
                OnDiscBreakLineRefChanged();
            }
        }
        private global::System.String _DiscBreakLineRef;
        partial void OnDiscBreakLineRefChanging(global::System.String value);
        partial void OnDiscBreakLineRefChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RefLineRef
        {
            get
            {
                return _RefLineRef;
            }
            set
            {
                OnRefLineRefChanging(value);
                ReportPropertyChanging("RefLineRef");
                _RefLineRef = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RefLineRef");
                OnRefLineRefChanged();
            }
        }
        private global::System.String _RefLineRef;
        partial void OnRefLineRefChanging(global::System.String value);
        partial void OnRefLineRefChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String GroupRefLineRef
        {
            get
            {
                return _GroupRefLineRef;
            }
            set
            {
                OnGroupRefLineRefChanging(value);
                ReportPropertyChanging("GroupRefLineRef");
                _GroupRefLineRef = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("GroupRefLineRef");
                OnGroupRefLineRefChanged();
            }
        }
        private global::System.String _GroupRefLineRef;
        partial void OnGroupRefLineRefChanging(global::System.String value);
        partial void OnGroupRefLineRefChanged();

        #endregion

    
    }

    #endregion

    #region ComplexTypes
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="OM21100Model", Name="OM20300_pgFreeItem_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class OM20300_pgFreeItem_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OM20300_pgFreeItem_Result object.
        /// </summary>
        /// <param name="budgetID">Initial value of the BudgetID property.</param>
        /// <param name="freeItemID">Initial value of the FreeItemID property.</param>
        /// <param name="unitDesc">Initial value of the UnitDesc property.</param>
        /// <param name="qtyAmtAlloc">Initial value of the QtyAmtAlloc property.</param>
        /// <param name="qtyAmtAvail">Initial value of the QtyAmtAvail property.</param>
        /// <param name="qtyAmtSpent">Initial value of the QtyAmtSpent property.</param>
        public static OM20300_pgFreeItem_Result CreateOM20300_pgFreeItem_Result(global::System.String budgetID, global::System.String freeItemID, global::System.String unitDesc, global::System.Double qtyAmtAlloc, global::System.Double qtyAmtAvail, global::System.Double qtyAmtSpent)
        {
            OM20300_pgFreeItem_Result oM20300_pgFreeItem_Result = new OM20300_pgFreeItem_Result();
            oM20300_pgFreeItem_Result.BudgetID = budgetID;
            oM20300_pgFreeItem_Result.FreeItemID = freeItemID;
            oM20300_pgFreeItem_Result.UnitDesc = unitDesc;
            oM20300_pgFreeItem_Result.QtyAmtAlloc = qtyAmtAlloc;
            oM20300_pgFreeItem_Result.QtyAmtAvail = qtyAmtAvail;
            oM20300_pgFreeItem_Result.QtyAmtSpent = qtyAmtSpent;
            return oM20300_pgFreeItem_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BudgetID
        {
            get
            {
                return _BudgetID;
            }
            set
            {
                OnBudgetIDChanging(value);
                ReportPropertyChanging("BudgetID");
                _BudgetID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BudgetID");
                OnBudgetIDChanged();
            }
        }
        private global::System.String _BudgetID;
        partial void OnBudgetIDChanging(global::System.String value);
        partial void OnBudgetIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FreeItemID
        {
            get
            {
                return _FreeItemID;
            }
            set
            {
                OnFreeItemIDChanging(value);
                ReportPropertyChanging("FreeItemID");
                _FreeItemID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FreeItemID");
                OnFreeItemIDChanged();
            }
        }
        private global::System.String _FreeItemID;
        partial void OnFreeItemIDChanging(global::System.String value);
        partial void OnFreeItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UnitDesc
        {
            get
            {
                return _UnitDesc;
            }
            set
            {
                OnUnitDescChanging(value);
                ReportPropertyChanging("UnitDesc");
                _UnitDesc = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UnitDesc");
                OnUnitDescChanged();
            }
        }
        private global::System.String _UnitDesc;
        partial void OnUnitDescChanging(global::System.String value);
        partial void OnUnitDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double QtyAmtAlloc
        {
            get
            {
                return _QtyAmtAlloc;
            }
            set
            {
                OnQtyAmtAllocChanging(value);
                ReportPropertyChanging("QtyAmtAlloc");
                _QtyAmtAlloc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("QtyAmtAlloc");
                OnQtyAmtAllocChanged();
            }
        }
        private global::System.Double _QtyAmtAlloc;
        partial void OnQtyAmtAllocChanging(global::System.Double value);
        partial void OnQtyAmtAllocChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double QtyAmtAvail
        {
            get
            {
                return _QtyAmtAvail;
            }
            set
            {
                OnQtyAmtAvailChanging(value);
                ReportPropertyChanging("QtyAmtAvail");
                _QtyAmtAvail = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("QtyAmtAvail");
                OnQtyAmtAvailChanged();
            }
        }
        private global::System.Double _QtyAmtAvail;
        partial void OnQtyAmtAvailChanging(global::System.Double value);
        partial void OnQtyAmtAvailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double QtyAmtSpent
        {
            get
            {
                return _QtyAmtSpent;
            }
            set
            {
                OnQtyAmtSpentChanging(value);
                ReportPropertyChanging("QtyAmtSpent");
                _QtyAmtSpent = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("QtyAmtSpent");
                OnQtyAmtSpentChanged();
            }
        }
        private global::System.Double _QtyAmtSpent;
        partial void OnQtyAmtSpentChanging(global::System.Double value);
        partial void OnQtyAmtSpentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Descr
        {
            get
            {
                return _Descr;
            }
            set
            {
                OnDescrChanging(value);
                ReportPropertyChanging("Descr");
                _Descr = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Descr");
                OnDescrChanged();
            }
        }
        private global::System.String _Descr;
        partial void OnDescrChanging(global::System.String value);
        partial void OnDescrChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String tstamp
        {
            get
            {
                return _tstamp;
            }
            set
            {
                OntstampChanging(value);
                ReportPropertyChanging("tstamp");
                _tstamp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("tstamp");
                OntstampChanged();
            }
        }
        private global::System.String _tstamp;
        partial void OntstampChanging(global::System.String value);
        partial void OntstampChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="OM21100Model", Name="OM21100_pcStatus_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class OM21100_pcStatus_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OM21100_pcStatus_Result object.
        /// </summary>
        /// <param name="code">Initial value of the Code property.</param>
        public static OM21100_pcStatus_Result CreateOM21100_pcStatus_Result(global::System.String code)
        {
            OM21100_pcStatus_Result oM21100_pcStatus_Result = new OM21100_pcStatus_Result();
            oM21100_pcStatus_Result.Code = code;
            return oM21100_pcStatus_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Descr
        {
            get
            {
                return _Descr;
            }
            set
            {
                OnDescrChanging(value);
                ReportPropertyChanging("Descr");
                _Descr = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Descr");
                OnDescrChanged();
            }
        }
        private global::System.String _Descr;
        partial void OnDescrChanging(global::System.String value);
        partial void OnDescrChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="OM21100Model", Name="OM21100_pdCheckOrderDisc_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class OM21100_pdCheckOrderDisc_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OM21100_pdCheckOrderDisc_Result object.
        /// </summary>
        /// <param name="invtID">Initial value of the InvtID property.</param>
        /// <param name="batNbr">Initial value of the BatNbr property.</param>
        public static OM21100_pdCheckOrderDisc_Result CreateOM21100_pdCheckOrderDisc_Result(global::System.String invtID, global::System.String batNbr)
        {
            OM21100_pdCheckOrderDisc_Result oM21100_pdCheckOrderDisc_Result = new OM21100_pdCheckOrderDisc_Result();
            oM21100_pdCheckOrderDisc_Result.InvtID = invtID;
            oM21100_pdCheckOrderDisc_Result.BatNbr = batNbr;
            return oM21100_pdCheckOrderDisc_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String InvtID
        {
            get
            {
                return _InvtID;
            }
            set
            {
                OnInvtIDChanging(value);
                ReportPropertyChanging("InvtID");
                _InvtID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("InvtID");
                OnInvtIDChanged();
            }
        }
        private global::System.String _InvtID;
        partial void OnInvtIDChanging(global::System.String value);
        partial void OnInvtIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BatNbr
        {
            get
            {
                return _BatNbr;
            }
            set
            {
                OnBatNbrChanging(value);
                ReportPropertyChanging("BatNbr");
                _BatNbr = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BatNbr");
                OnBatNbrChanged();
            }
        }
        private global::System.String _BatNbr;
        partial void OnBatNbrChanging(global::System.String value);
        partial void OnBatNbrChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="OM21100Model", Name="OM21100_pdConfig_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class OM21100_pdConfig_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OM21100_pdConfig_Result object.
        /// </summary>
        /// <param name="defaultStatus">Initial value of the DefaultStatus property.</param>
        public static OM21100_pdConfig_Result CreateOM21100_pdConfig_Result(global::System.String defaultStatus)
        {
            OM21100_pdConfig_Result oM21100_pdConfig_Result = new OM21100_pdConfig_Result();
            oM21100_pdConfig_Result.DefaultStatus = defaultStatus;
            return oM21100_pdConfig_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> AllowImport
        {
            get
            {
                return _AllowImport;
            }
            set
            {
                OnAllowImportChanging(value);
                ReportPropertyChanging("AllowImport");
                _AllowImport = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AllowImport");
                OnAllowImportChanged();
            }
        }
        private Nullable<global::System.Boolean> _AllowImport;
        partial void OnAllowImportChanging(Nullable<global::System.Boolean> value);
        partial void OnAllowImportChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> AllowExport
        {
            get
            {
                return _AllowExport;
            }
            set
            {
                OnAllowExportChanging(value);
                ReportPropertyChanging("AllowExport");
                _AllowExport = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AllowExport");
                OnAllowExportChanged();
            }
        }
        private Nullable<global::System.Boolean> _AllowExport;
        partial void OnAllowExportChanging(Nullable<global::System.Boolean> value);
        partial void OnAllowExportChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> AllowAddDiscount
        {
            get
            {
                return _AllowAddDiscount;
            }
            set
            {
                OnAllowAddDiscountChanging(value);
                ReportPropertyChanging("AllowAddDiscount");
                _AllowAddDiscount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AllowAddDiscount");
                OnAllowAddDiscountChanged();
            }
        }
        private Nullable<global::System.Boolean> _AllowAddDiscount;
        partial void OnAllowAddDiscountChanging(Nullable<global::System.Boolean> value);
        partial void OnAllowAddDiscountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> ShowRequiredType
        {
            get
            {
                return _ShowRequiredType;
            }
            set
            {
                OnShowRequiredTypeChanging(value);
                ReportPropertyChanging("ShowRequiredType");
                _ShowRequiredType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ShowRequiredType");
                OnShowRequiredTypeChanged();
            }
        }
        private Nullable<global::System.Boolean> _ShowRequiredType;
        partial void OnShowRequiredTypeChanging(Nullable<global::System.Boolean> value);
        partial void OnShowRequiredTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> AllowAddSameKind
        {
            get
            {
                return _AllowAddSameKind;
            }
            set
            {
                OnAllowAddSameKindChanging(value);
                ReportPropertyChanging("AllowAddSameKind");
                _AllowAddSameKind = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AllowAddSameKind");
                OnAllowAddSameKindChanged();
            }
        }
        private Nullable<global::System.Boolean> _AllowAddSameKind;
        partial void OnAllowAddSameKindChanging(Nullable<global::System.Boolean> value);
        partial void OnAllowAddSameKindChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DefaultStatus
        {
            get
            {
                return _DefaultStatus;
            }
            set
            {
                OnDefaultStatusChanging(value);
                ReportPropertyChanging("DefaultStatus");
                _DefaultStatus = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DefaultStatus");
                OnDefaultStatusChanged();
            }
        }
        private global::System.String _DefaultStatus;
        partial void OnDefaultStatusChanging(global::System.String value);
        partial void OnDefaultStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> HideQtyType
        {
            get
            {
                return _HideQtyType;
            }
            set
            {
                OnHideQtyTypeChanging(value);
                ReportPropertyChanging("HideQtyType");
                _HideQtyType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HideQtyType");
                OnHideQtyTypeChanged();
            }
        }
        private Nullable<global::System.Boolean> _HideQtyType;
        partial void OnHideQtyTypeChanging(Nullable<global::System.Boolean> value);
        partial void OnHideQtyTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> HidechkPctDiscountByLevel
        {
            get
            {
                return _HidechkPctDiscountByLevel;
            }
            set
            {
                OnHidechkPctDiscountByLevelChanging(value);
                ReportPropertyChanging("HidechkPctDiscountByLevel");
                _HidechkPctDiscountByLevel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HidechkPctDiscountByLevel");
                OnHidechkPctDiscountByLevelChanged();
            }
        }
        private Nullable<global::System.Boolean> _HidechkPctDiscountByLevel;
        partial void OnHidechkPctDiscountByLevelChanging(Nullable<global::System.Boolean> value);
        partial void OnHidechkPctDiscountByLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> HidechkStockPromotion
        {
            get
            {
                return _HidechkStockPromotion;
            }
            set
            {
                OnHidechkStockPromotionChanging(value);
                ReportPropertyChanging("HidechkStockPromotion");
                _HidechkStockPromotion = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HidechkStockPromotion");
                OnHidechkStockPromotionChanged();
            }
        }
        private Nullable<global::System.Boolean> _HidechkStockPromotion;
        partial void OnHidechkStockPromotionChanging(Nullable<global::System.Boolean> value);
        partial void OnHidechkStockPromotionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> HideCoefficientCnv
        {
            get
            {
                return _HideCoefficientCnv;
            }
            set
            {
                OnHideCoefficientCnvChanging(value);
                ReportPropertyChanging("HideCoefficientCnv");
                _HideCoefficientCnv = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HideCoefficientCnv");
                OnHideCoefficientCnvChanged();
            }
        }
        private Nullable<global::System.Boolean> _HideCoefficientCnv;
        partial void OnHideCoefficientCnvChanging(Nullable<global::System.Boolean> value);
        partial void OnHideCoefficientCnvChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> HideExcludePromo
        {
            get
            {
                return _HideExcludePromo;
            }
            set
            {
                OnHideExcludePromoChanging(value);
                ReportPropertyChanging("HideExcludePromo");
                _HideExcludePromo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HideExcludePromo");
                OnHideExcludePromoChanged();
            }
        }
        private Nullable<global::System.Boolean> _HideExcludePromo;
        partial void OnHideExcludePromoChanging(Nullable<global::System.Boolean> value);
        partial void OnHideExcludePromoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> HidePriorityPromo
        {
            get
            {
                return _HidePriorityPromo;
            }
            set
            {
                OnHidePriorityPromoChanging(value);
                ReportPropertyChanging("HidePriorityPromo");
                _HidePriorityPromo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HidePriorityPromo");
                OnHidePriorityPromoChanged();
            }
        }
        private Nullable<global::System.Boolean> _HidePriorityPromo;
        partial void OnHidePriorityPromoChanging(Nullable<global::System.Boolean> value);
        partial void OnHidePriorityPromoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> HideIsDeductQtyAmt
        {
            get
            {
                return _HideIsDeductQtyAmt;
            }
            set
            {
                OnHideIsDeductQtyAmtChanging(value);
                ReportPropertyChanging("HideIsDeductQtyAmt");
                _HideIsDeductQtyAmt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HideIsDeductQtyAmt");
                OnHideIsDeductQtyAmtChanged();
            }
        }
        private Nullable<global::System.Boolean> _HideIsDeductQtyAmt;
        partial void OnHideIsDeductQtyAmtChanging(Nullable<global::System.Boolean> value);
        partial void OnHideIsDeductQtyAmtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> HideSubBreakType
        {
            get
            {
                return _HideSubBreakType;
            }
            set
            {
                OnHideSubBreakTypeChanging(value);
                ReportPropertyChanging("HideSubBreakType");
                _HideSubBreakType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HideSubBreakType");
                OnHideSubBreakTypeChanged();
            }
        }
        private Nullable<global::System.Boolean> _HideSubBreakType;
        partial void OnHideSubBreakTypeChanging(Nullable<global::System.Boolean> value);
        partial void OnHideSubBreakTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> HideBreakBoundType
        {
            get
            {
                return _HideBreakBoundType;
            }
            set
            {
                OnHideBreakBoundTypeChanging(value);
                ReportPropertyChanging("HideBreakBoundType");
                _HideBreakBoundType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HideBreakBoundType");
                OnHideBreakBoundTypeChanged();
            }
        }
        private Nullable<global::System.Boolean> _HideBreakBoundType;
        partial void OnHideBreakBoundTypeChanging(Nullable<global::System.Boolean> value);
        partial void OnHideBreakBoundTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> HideConvertDiscAmtToFreeItem
        {
            get
            {
                return _HideConvertDiscAmtToFreeItem;
            }
            set
            {
                OnHideConvertDiscAmtToFreeItemChanging(value);
                ReportPropertyChanging("HideConvertDiscAmtToFreeItem");
                _HideConvertDiscAmtToFreeItem = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HideConvertDiscAmtToFreeItem");
                OnHideConvertDiscAmtToFreeItemChanged();
            }
        }
        private Nullable<global::System.Boolean> _HideConvertDiscAmtToFreeItem;
        partial void OnHideConvertDiscAmtToFreeItemChanging(Nullable<global::System.Boolean> value);
        partial void OnHideConvertDiscAmtToFreeItemChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> HideDiscAmtBonus
        {
            get
            {
                return _HideDiscAmtBonus;
            }
            set
            {
                OnHideDiscAmtBonusChanging(value);
                ReportPropertyChanging("HideDiscAmtBonus");
                _HideDiscAmtBonus = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HideDiscAmtBonus");
                OnHideDiscAmtBonusChanged();
            }
        }
        private Nullable<global::System.Boolean> _HideDiscAmtBonus;
        partial void OnHideDiscAmtBonusChanging(Nullable<global::System.Boolean> value);
        partial void OnHideDiscAmtBonusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> HideDiscSeqSolomon
        {
            get
            {
                return _HideDiscSeqSolomon;
            }
            set
            {
                OnHideDiscSeqSolomonChanging(value);
                ReportPropertyChanging("HideDiscSeqSolomon");
                _HideDiscSeqSolomon = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HideDiscSeqSolomon");
                OnHideDiscSeqSolomonChanged();
            }
        }
        private Nullable<global::System.Boolean> _HideDiscSeqSolomon;
        partial void OnHideDiscSeqSolomonChanging(Nullable<global::System.Boolean> value);
        partial void OnHideDiscSeqSolomonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> HideInvtIDSolomon
        {
            get
            {
                return _HideInvtIDSolomon;
            }
            set
            {
                OnHideInvtIDSolomonChanging(value);
                ReportPropertyChanging("HideInvtIDSolomon");
                _HideInvtIDSolomon = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HideInvtIDSolomon");
                OnHideInvtIDSolomonChanged();
            }
        }
        private Nullable<global::System.Boolean> _HideInvtIDSolomon;
        partial void OnHideInvtIDSolomonChanging(Nullable<global::System.Boolean> value);
        partial void OnHideInvtIDSolomonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> HideDiscPrice
        {
            get
            {
                return _HideDiscPrice;
            }
            set
            {
                OnHideDiscPriceChanging(value);
                ReportPropertyChanging("HideDiscPrice");
                _HideDiscPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HideDiscPrice");
                OnHideDiscPriceChanged();
            }
        }
        private Nullable<global::System.Boolean> _HideDiscPrice;
        partial void OnHideDiscPriceChanging(Nullable<global::System.Boolean> value);
        partial void OnHideDiscPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> HideCopy
        {
            get
            {
                return _HideCopy;
            }
            set
            {
                OnHideCopyChanging(value);
                ReportPropertyChanging("HideCopy");
                _HideCopy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HideCopy");
                OnHideCopyChanged();
            }
        }
        private Nullable<global::System.Boolean> _HideCopy;
        partial void OnHideCopyChanging(Nullable<global::System.Boolean> value);
        partial void OnHideCopyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> HideSite
        {
            get
            {
                return _HideSite;
            }
            set
            {
                OnHideSiteChanging(value);
                ReportPropertyChanging("HideSite");
                _HideSite = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HideSite");
                OnHideSiteChanged();
            }
        }
        private Nullable<global::System.Boolean> _HideSite;
        partial void OnHideSiteChanging(Nullable<global::System.Boolean> value);
        partial void OnHideSiteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> HideSiteSolomon
        {
            get
            {
                return _HideSiteSolomon;
            }
            set
            {
                OnHideSiteSolomonChanging(value);
                ReportPropertyChanging("HideSiteSolomon");
                _HideSiteSolomon = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HideSiteSolomon");
                OnHideSiteSolomonChanged();
            }
        }
        private Nullable<global::System.Boolean> _HideSiteSolomon;
        partial void OnHideSiteSolomonChanging(Nullable<global::System.Boolean> value);
        partial void OnHideSiteSolomonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> HideReIndustryAndTrade
        {
            get
            {
                return _HideReIndustryAndTrade;
            }
            set
            {
                OnHideReIndustryAndTradeChanging(value);
                ReportPropertyChanging("HideReIndustryAndTrade");
                _HideReIndustryAndTrade = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HideReIndustryAndTrade");
                OnHideReIndustryAndTradeChanged();
            }
        }
        private Nullable<global::System.Boolean> _HideReIndustryAndTrade;
        partial void OnHideReIndustryAndTradeChanging(Nullable<global::System.Boolean> value);
        partial void OnHideReIndustryAndTradeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> HideGetFreeItem
        {
            get
            {
                return _HideGetFreeItem;
            }
            set
            {
                OnHideGetFreeItemChanging(value);
                ReportPropertyChanging("HideGetFreeItem");
                _HideGetFreeItem = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HideGetFreeItem");
                OnHideGetFreeItemChanged();
            }
        }
        private Nullable<global::System.Boolean> _HideGetFreeItem;
        partial void OnHideGetFreeItemChanging(Nullable<global::System.Boolean> value);
        partial void OnHideGetFreeItemChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="OM21100Model", Name="OM21100_pdGetcheckQty_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class OM21100_pdGetcheckQty_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OM21100_pdGetcheckQty_Result object.
        /// </summary>
        /// <param name="invtID">Initial value of the InvtID property.</param>
        public static OM21100_pdGetcheckQty_Result CreateOM21100_pdGetcheckQty_Result(global::System.String invtID)
        {
            OM21100_pdGetcheckQty_Result oM21100_pdGetcheckQty_Result = new OM21100_pdGetcheckQty_Result();
            oM21100_pdGetcheckQty_Result.InvtID = invtID;
            return oM21100_pdGetcheckQty_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String InvtID
        {
            get
            {
                return _InvtID;
            }
            set
            {
                OnInvtIDChanging(value);
                ReportPropertyChanging("InvtID");
                _InvtID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("InvtID");
                OnInvtIDChanged();
            }
        }
        private global::System.String _InvtID;
        partial void OnInvtIDChanging(global::System.String value);
        partial void OnInvtIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> CheckQty
        {
            get
            {
                return _CheckQty;
            }
            set
            {
                OnCheckQtyChanging(value);
                ReportPropertyChanging("CheckQty");
                _CheckQty = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CheckQty");
                OnCheckQtyChanged();
            }
        }
        private Nullable<global::System.Boolean> _CheckQty;
        partial void OnCheckQtyChanging(Nullable<global::System.Boolean> value);
        partial void OnCheckQtyChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="OM21100Model", Name="OM21100_pdGetcheckQtyEditStatus_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class OM21100_pdGetcheckQtyEditStatus_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OM21100_pdGetcheckQtyEditStatus_Result object.
        /// </summary>
        /// <param name="invtID">Initial value of the InvtID property.</param>
        public static OM21100_pdGetcheckQtyEditStatus_Result CreateOM21100_pdGetcheckQtyEditStatus_Result(global::System.String invtID)
        {
            OM21100_pdGetcheckQtyEditStatus_Result oM21100_pdGetcheckQtyEditStatus_Result = new OM21100_pdGetcheckQtyEditStatus_Result();
            oM21100_pdGetcheckQtyEditStatus_Result.InvtID = invtID;
            return oM21100_pdGetcheckQtyEditStatus_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String InvtID
        {
            get
            {
                return _InvtID;
            }
            set
            {
                OnInvtIDChanging(value);
                ReportPropertyChanging("InvtID");
                _InvtID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("InvtID");
                OnInvtIDChanged();
            }
        }
        private global::System.String _InvtID;
        partial void OnInvtIDChanging(global::System.String value);
        partial void OnInvtIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> CheckQty
        {
            get
            {
                return _CheckQty;
            }
            set
            {
                OnCheckQtyChanging(value);
                ReportPropertyChanging("CheckQty");
                _CheckQty = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CheckQty");
                OnCheckQtyChanged();
            }
        }
        private Nullable<global::System.Boolean> _CheckQty;
        partial void OnCheckQtyChanging(Nullable<global::System.Boolean> value);
        partial void OnCheckQtyChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="OM21100Model", Name="OM21100_pdGetcheckSite_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class OM21100_pdGetcheckSite_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OM21100_pdGetcheckSite_Result object.
        /// </summary>
        /// <param name="branchID">Initial value of the BranchID property.</param>
        /// <param name="toBranchID">Initial value of the ToBranchID property.</param>
        public static OM21100_pdGetcheckSite_Result CreateOM21100_pdGetcheckSite_Result(global::System.String branchID, global::System.String toBranchID)
        {
            OM21100_pdGetcheckSite_Result oM21100_pdGetcheckSite_Result = new OM21100_pdGetcheckSite_Result();
            oM21100_pdGetcheckSite_Result.BranchID = branchID;
            oM21100_pdGetcheckSite_Result.ToBranchID = toBranchID;
            return oM21100_pdGetcheckSite_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BranchID
        {
            get
            {
                return _BranchID;
            }
            set
            {
                OnBranchIDChanging(value);
                ReportPropertyChanging("BranchID");
                _BranchID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BranchID");
                OnBranchIDChanged();
            }
        }
        private global::System.String _BranchID;
        partial void OnBranchIDChanging(global::System.String value);
        partial void OnBranchIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SiteID
        {
            get
            {
                return _SiteID;
            }
            set
            {
                OnSiteIDChanging(value);
                ReportPropertyChanging("SiteID");
                _SiteID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SiteID");
                OnSiteIDChanged();
            }
        }
        private global::System.String _SiteID;
        partial void OnSiteIDChanging(global::System.String value);
        partial void OnSiteIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ToBranchID
        {
            get
            {
                return _ToBranchID;
            }
            set
            {
                OnToBranchIDChanging(value);
                ReportPropertyChanging("ToBranchID");
                _ToBranchID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ToBranchID");
                OnToBranchIDChanged();
            }
        }
        private global::System.String _ToBranchID;
        partial void OnToBranchIDChanging(global::System.String value);
        partial void OnToBranchIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ToSiteID
        {
            get
            {
                return _ToSiteID;
            }
            set
            {
                OnToSiteIDChanging(value);
                ReportPropertyChanging("ToSiteID");
                _ToSiteID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ToSiteID");
                OnToSiteIDChanged();
            }
        }
        private global::System.String _ToSiteID;
        partial void OnToSiteIDChanging(global::System.String value);
        partial void OnToSiteIDChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="OM21100Model", Name="OM21100_pdGetDataItemTrans_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class OM21100_pdGetDataItemTrans_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OM21100_pdGetDataItemTrans_Result object.
        /// </summary>
        /// <param name="invtID">Initial value of the InvtID property.</param>
        /// <param name="cnvFact">Initial value of the CnvFact property.</param>
        /// <param name="costID">Initial value of the CostID property.</param>
        /// <param name="extCost">Initial value of the ExtCost property.</param>
        /// <param name="invtMult">Initial value of the InvtMult property.</param>
        /// <param name="jrnlType">Initial value of the JrnlType property.</param>
        /// <param name="objID">Initial value of the ObjID property.</param>
        /// <param name="qty">Initial value of the Qty property.</param>
        /// <param name="rlsed">Initial value of the Rlsed property.</param>
        /// <param name="shipperID">Initial value of the ShipperID property.</param>
        /// <param name="shipperLineRef">Initial value of the ShipperLineRef property.</param>
        /// <param name="slsperID">Initial value of the SlsperID property.</param>
        /// <param name="toSiteID">Initial value of the ToSiteID property.</param>
        /// <param name="tranAmt">Initial value of the TranAmt property.</param>
        /// <param name="tranFee">Initial value of the TranFee property.</param>
        /// <param name="tranType">Initial value of the TranType property.</param>
        /// <param name="unitCost">Initial value of the UnitCost property.</param>
        /// <param name="unitMultDiv">Initial value of the UnitMultDiv property.</param>
        /// <param name="unitPrice">Initial value of the UnitPrice property.</param>
        /// <param name="price">Initial value of the Price property.</param>
        public static OM21100_pdGetDataItemTrans_Result CreateOM21100_pdGetDataItemTrans_Result(global::System.String invtID, global::System.Double cnvFact, global::System.String costID, global::System.Double extCost, global::System.Int16 invtMult, global::System.String jrnlType, global::System.String objID, global::System.Double qty, global::System.Int16 rlsed, global::System.String shipperID, global::System.String shipperLineRef, global::System.String slsperID, global::System.String toSiteID, global::System.Double tranAmt, global::System.Double tranFee, global::System.String tranType, global::System.Double unitCost, global::System.String unitMultDiv, global::System.Double unitPrice, global::System.Double price)
        {
            OM21100_pdGetDataItemTrans_Result oM21100_pdGetDataItemTrans_Result = new OM21100_pdGetDataItemTrans_Result();
            oM21100_pdGetDataItemTrans_Result.InvtID = invtID;
            oM21100_pdGetDataItemTrans_Result.CnvFact = cnvFact;
            oM21100_pdGetDataItemTrans_Result.CostID = costID;
            oM21100_pdGetDataItemTrans_Result.ExtCost = extCost;
            oM21100_pdGetDataItemTrans_Result.InvtMult = invtMult;
            oM21100_pdGetDataItemTrans_Result.JrnlType = jrnlType;
            oM21100_pdGetDataItemTrans_Result.ObjID = objID;
            oM21100_pdGetDataItemTrans_Result.Qty = qty;
            oM21100_pdGetDataItemTrans_Result.Rlsed = rlsed;
            oM21100_pdGetDataItemTrans_Result.ShipperID = shipperID;
            oM21100_pdGetDataItemTrans_Result.ShipperLineRef = shipperLineRef;
            oM21100_pdGetDataItemTrans_Result.SlsperID = slsperID;
            oM21100_pdGetDataItemTrans_Result.ToSiteID = toSiteID;
            oM21100_pdGetDataItemTrans_Result.TranAmt = tranAmt;
            oM21100_pdGetDataItemTrans_Result.TranFee = tranFee;
            oM21100_pdGetDataItemTrans_Result.TranType = tranType;
            oM21100_pdGetDataItemTrans_Result.UnitCost = unitCost;
            oM21100_pdGetDataItemTrans_Result.UnitMultDiv = unitMultDiv;
            oM21100_pdGetDataItemTrans_Result.UnitPrice = unitPrice;
            oM21100_pdGetDataItemTrans_Result.Price = price;
            return oM21100_pdGetDataItemTrans_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String InvtID
        {
            get
            {
                return _InvtID;
            }
            set
            {
                OnInvtIDChanging(value);
                ReportPropertyChanging("InvtID");
                _InvtID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("InvtID");
                OnInvtIDChanged();
            }
        }
        private global::System.String _InvtID;
        partial void OnInvtIDChanging(global::System.String value);
        partial void OnInvtIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double CnvFact
        {
            get
            {
                return _CnvFact;
            }
            set
            {
                OnCnvFactChanging(value);
                ReportPropertyChanging("CnvFact");
                _CnvFact = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CnvFact");
                OnCnvFactChanged();
            }
        }
        private global::System.Double _CnvFact;
        partial void OnCnvFactChanging(global::System.Double value);
        partial void OnCnvFactChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CostID
        {
            get
            {
                return _CostID;
            }
            set
            {
                OnCostIDChanging(value);
                ReportPropertyChanging("CostID");
                _CostID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CostID");
                OnCostIDChanged();
            }
        }
        private global::System.String _CostID;
        partial void OnCostIDChanging(global::System.String value);
        partial void OnCostIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double ExtCost
        {
            get
            {
                return _ExtCost;
            }
            set
            {
                OnExtCostChanging(value);
                ReportPropertyChanging("ExtCost");
                _ExtCost = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExtCost");
                OnExtCostChanged();
            }
        }
        private global::System.Double _ExtCost;
        partial void OnExtCostChanging(global::System.Double value);
        partial void OnExtCostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 InvtMult
        {
            get
            {
                return _InvtMult;
            }
            set
            {
                OnInvtMultChanging(value);
                ReportPropertyChanging("InvtMult");
                _InvtMult = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvtMult");
                OnInvtMultChanged();
            }
        }
        private global::System.Int16 _InvtMult;
        partial void OnInvtMultChanging(global::System.Int16 value);
        partial void OnInvtMultChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String JrnlType
        {
            get
            {
                return _JrnlType;
            }
            set
            {
                OnJrnlTypeChanging(value);
                ReportPropertyChanging("JrnlType");
                _JrnlType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("JrnlType");
                OnJrnlTypeChanged();
            }
        }
        private global::System.String _JrnlType;
        partial void OnJrnlTypeChanging(global::System.String value);
        partial void OnJrnlTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ObjID
        {
            get
            {
                return _ObjID;
            }
            set
            {
                OnObjIDChanging(value);
                ReportPropertyChanging("ObjID");
                _ObjID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ObjID");
                OnObjIDChanged();
            }
        }
        private global::System.String _ObjID;
        partial void OnObjIDChanging(global::System.String value);
        partial void OnObjIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Qty
        {
            get
            {
                return _Qty;
            }
            set
            {
                OnQtyChanging(value);
                ReportPropertyChanging("Qty");
                _Qty = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Qty");
                OnQtyChanged();
            }
        }
        private global::System.Double _Qty;
        partial void OnQtyChanging(global::System.Double value);
        partial void OnQtyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Rlsed
        {
            get
            {
                return _Rlsed;
            }
            set
            {
                OnRlsedChanging(value);
                ReportPropertyChanging("Rlsed");
                _Rlsed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Rlsed");
                OnRlsedChanged();
            }
        }
        private global::System.Int16 _Rlsed;
        partial void OnRlsedChanging(global::System.Int16 value);
        partial void OnRlsedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ShipperID
        {
            get
            {
                return _ShipperID;
            }
            set
            {
                OnShipperIDChanging(value);
                ReportPropertyChanging("ShipperID");
                _ShipperID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ShipperID");
                OnShipperIDChanged();
            }
        }
        private global::System.String _ShipperID;
        partial void OnShipperIDChanging(global::System.String value);
        partial void OnShipperIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ShipperLineRef
        {
            get
            {
                return _ShipperLineRef;
            }
            set
            {
                OnShipperLineRefChanging(value);
                ReportPropertyChanging("ShipperLineRef");
                _ShipperLineRef = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ShipperLineRef");
                OnShipperLineRefChanged();
            }
        }
        private global::System.String _ShipperLineRef;
        partial void OnShipperLineRefChanging(global::System.String value);
        partial void OnShipperLineRefChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SlsperID
        {
            get
            {
                return _SlsperID;
            }
            set
            {
                OnSlsperIDChanging(value);
                ReportPropertyChanging("SlsperID");
                _SlsperID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SlsperID");
                OnSlsperIDChanged();
            }
        }
        private global::System.String _SlsperID;
        partial void OnSlsperIDChanging(global::System.String value);
        partial void OnSlsperIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ToSiteID
        {
            get
            {
                return _ToSiteID;
            }
            set
            {
                OnToSiteIDChanging(value);
                ReportPropertyChanging("ToSiteID");
                _ToSiteID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ToSiteID");
                OnToSiteIDChanged();
            }
        }
        private global::System.String _ToSiteID;
        partial void OnToSiteIDChanging(global::System.String value);
        partial void OnToSiteIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double TranAmt
        {
            get
            {
                return _TranAmt;
            }
            set
            {
                OnTranAmtChanging(value);
                ReportPropertyChanging("TranAmt");
                _TranAmt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TranAmt");
                OnTranAmtChanged();
            }
        }
        private global::System.Double _TranAmt;
        partial void OnTranAmtChanging(global::System.Double value);
        partial void OnTranAmtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double TranFee
        {
            get
            {
                return _TranFee;
            }
            set
            {
                OnTranFeeChanging(value);
                ReportPropertyChanging("TranFee");
                _TranFee = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TranFee");
                OnTranFeeChanged();
            }
        }
        private global::System.Double _TranFee;
        partial void OnTranFeeChanging(global::System.Double value);
        partial void OnTranFeeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TranDesc
        {
            get
            {
                return _TranDesc;
            }
            set
            {
                OnTranDescChanging(value);
                ReportPropertyChanging("TranDesc");
                _TranDesc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TranDesc");
                OnTranDescChanged();
            }
        }
        private global::System.String _TranDesc;
        partial void OnTranDescChanging(global::System.String value);
        partial void OnTranDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TranType
        {
            get
            {
                return _TranType;
            }
            set
            {
                OnTranTypeChanging(value);
                ReportPropertyChanging("TranType");
                _TranType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TranType");
                OnTranTypeChanged();
            }
        }
        private global::System.String _TranType;
        partial void OnTranTypeChanging(global::System.String value);
        partial void OnTranTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double UnitCost
        {
            get
            {
                return _UnitCost;
            }
            set
            {
                OnUnitCostChanging(value);
                ReportPropertyChanging("UnitCost");
                _UnitCost = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UnitCost");
                OnUnitCostChanged();
            }
        }
        private global::System.Double _UnitCost;
        partial void OnUnitCostChanging(global::System.Double value);
        partial void OnUnitCostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UnitDesc
        {
            get
            {
                return _UnitDesc;
            }
            set
            {
                OnUnitDescChanging(value);
                ReportPropertyChanging("UnitDesc");
                _UnitDesc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UnitDesc");
                OnUnitDescChanged();
            }
        }
        private global::System.String _UnitDesc;
        partial void OnUnitDescChanging(global::System.String value);
        partial void OnUnitDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UnitMultDiv
        {
            get
            {
                return _UnitMultDiv;
            }
            set
            {
                OnUnitMultDivChanging(value);
                ReportPropertyChanging("UnitMultDiv");
                _UnitMultDiv = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UnitMultDiv");
                OnUnitMultDivChanged();
            }
        }
        private global::System.String _UnitMultDiv;
        partial void OnUnitMultDivChanging(global::System.String value);
        partial void OnUnitMultDivChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double UnitPrice
        {
            get
            {
                return _UnitPrice;
            }
            set
            {
                OnUnitPriceChanging(value);
                ReportPropertyChanging("UnitPrice");
                _UnitPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UnitPrice");
                OnUnitPriceChanged();
            }
        }
        private global::System.Double _UnitPrice;
        partial void OnUnitPriceChanging(global::System.Double value);
        partial void OnUnitPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.Double _Price;
        partial void OnPriceChanging(global::System.Double value);
        partial void OnPriceChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="OM21100Model", Name="OM21100_pdGetDataShipment_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class OM21100_pdGetDataShipment_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OM21100_pdGetDataShipment_Result object.
        /// </summary>
        /// <param name="branchID">Initial value of the BranchID property.</param>
        /// <param name="toBranchID">Initial value of the ToBranchID property.</param>
        /// <param name="reasonCD">Initial value of the ReasonCD property.</param>
        public static OM21100_pdGetDataShipment_Result CreateOM21100_pdGetDataShipment_Result(global::System.String branchID, global::System.String toBranchID, global::System.String reasonCD)
        {
            OM21100_pdGetDataShipment_Result oM21100_pdGetDataShipment_Result = new OM21100_pdGetDataShipment_Result();
            oM21100_pdGetDataShipment_Result.BranchID = branchID;
            oM21100_pdGetDataShipment_Result.ToBranchID = toBranchID;
            oM21100_pdGetDataShipment_Result.ReasonCD = reasonCD;
            return oM21100_pdGetDataShipment_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BranchID
        {
            get
            {
                return _BranchID;
            }
            set
            {
                OnBranchIDChanging(value);
                ReportPropertyChanging("BranchID");
                _BranchID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BranchID");
                OnBranchIDChanged();
            }
        }
        private global::System.String _BranchID;
        partial void OnBranchIDChanging(global::System.String value);
        partial void OnBranchIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SiteID
        {
            get
            {
                return _SiteID;
            }
            set
            {
                OnSiteIDChanging(value);
                ReportPropertyChanging("SiteID");
                _SiteID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SiteID");
                OnSiteIDChanged();
            }
        }
        private global::System.String _SiteID;
        partial void OnSiteIDChanging(global::System.String value);
        partial void OnSiteIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ToBranchID
        {
            get
            {
                return _ToBranchID;
            }
            set
            {
                OnToBranchIDChanging(value);
                ReportPropertyChanging("ToBranchID");
                _ToBranchID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ToBranchID");
                OnToBranchIDChanged();
            }
        }
        private global::System.String _ToBranchID;
        partial void OnToBranchIDChanging(global::System.String value);
        partial void OnToBranchIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ToSiteID
        {
            get
            {
                return _ToSiteID;
            }
            set
            {
                OnToSiteIDChanging(value);
                ReportPropertyChanging("ToSiteID");
                _ToSiteID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ToSiteID");
                OnToSiteIDChanged();
            }
        }
        private global::System.String _ToSiteID;
        partial void OnToSiteIDChanging(global::System.String value);
        partial void OnToSiteIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Descr
        {
            get
            {
                return _Descr;
            }
            set
            {
                OnDescrChanging(value);
                ReportPropertyChanging("Descr");
                _Descr = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Descr");
                OnDescrChanged();
            }
        }
        private global::System.String _Descr;
        partial void OnDescrChanging(global::System.String value);
        partial void OnDescrChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ReasonCD
        {
            get
            {
                return _ReasonCD;
            }
            set
            {
                OnReasonCDChanging(value);
                ReportPropertyChanging("ReasonCD");
                _ReasonCD = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ReasonCD");
                OnReasonCDChanged();
            }
        }
        private global::System.String _ReasonCD;
        partial void OnReasonCDChanging(global::System.String value);
        partial void OnReasonCDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ShipViaID
        {
            get
            {
                return _ShipViaID;
            }
            set
            {
                OnShipViaIDChanging(value);
                ReportPropertyChanging("ShipViaID");
                _ShipViaID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ShipViaID");
                OnShipViaIDChanged();
            }
        }
        private global::System.String _ShipViaID;
        partial void OnShipViaIDChanging(global::System.String value);
        partial void OnShipViaIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ExpectedDate
        {
            get
            {
                return _ExpectedDate;
            }
            set
            {
                OnExpectedDateChanging(value);
                ReportPropertyChanging("ExpectedDate");
                _ExpectedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExpectedDate");
                OnExpectedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ExpectedDate;
        partial void OnExpectedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnExpectedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> TranDate
        {
            get
            {
                return _TranDate;
            }
            set
            {
                OnTranDateChanging(value);
                ReportPropertyChanging("TranDate");
                _TranDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TranDate");
                OnTranDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _TranDate;
        partial void OnTranDateChanging(Nullable<global::System.DateTime> value);
        partial void OnTranDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> RcptDate
        {
            get
            {
                return _RcptDate;
            }
            set
            {
                OnRcptDateChanging(value);
                ReportPropertyChanging("RcptDate");
                _RcptDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RcptDate");
                OnRcptDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _RcptDate;
        partial void OnRcptDateChanging(Nullable<global::System.DateTime> value);
        partial void OnRcptDateChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="OM21100Model", Name="OM21100_pdSI_Hierarchy_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class OM21100_pdSI_Hierarchy_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OM21100_pdSI_Hierarchy_Result object.
        /// </summary>
        /// <param name="nodeID">Initial value of the NodeID property.</param>
        /// <param name="nodeLevel">Initial value of the NodeLevel property.</param>
        /// <param name="parentRecordID">Initial value of the ParentRecordID property.</param>
        /// <param name="recordID">Initial value of the RecordID property.</param>
        public static OM21100_pdSI_Hierarchy_Result CreateOM21100_pdSI_Hierarchy_Result(global::System.String nodeID, global::System.Int16 nodeLevel, global::System.Int32 parentRecordID, global::System.Int32 recordID)
        {
            OM21100_pdSI_Hierarchy_Result oM21100_pdSI_Hierarchy_Result = new OM21100_pdSI_Hierarchy_Result();
            oM21100_pdSI_Hierarchy_Result.NodeID = nodeID;
            oM21100_pdSI_Hierarchy_Result.NodeLevel = nodeLevel;
            oM21100_pdSI_Hierarchy_Result.ParentRecordID = parentRecordID;
            oM21100_pdSI_Hierarchy_Result.RecordID = recordID;
            return oM21100_pdSI_Hierarchy_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NodeID
        {
            get
            {
                return _NodeID;
            }
            set
            {
                OnNodeIDChanging(value);
                ReportPropertyChanging("NodeID");
                _NodeID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NodeID");
                OnNodeIDChanged();
            }
        }
        private global::System.String _NodeID;
        partial void OnNodeIDChanging(global::System.String value);
        partial void OnNodeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 NodeLevel
        {
            get
            {
                return _NodeLevel;
            }
            set
            {
                OnNodeLevelChanging(value);
                ReportPropertyChanging("NodeLevel");
                _NodeLevel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NodeLevel");
                OnNodeLevelChanged();
            }
        }
        private global::System.Int16 _NodeLevel;
        partial void OnNodeLevelChanging(global::System.Int16 value);
        partial void OnNodeLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ParentRecordID
        {
            get
            {
                return _ParentRecordID;
            }
            set
            {
                OnParentRecordIDChanging(value);
                ReportPropertyChanging("ParentRecordID");
                _ParentRecordID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentRecordID");
                OnParentRecordIDChanged();
            }
        }
        private global::System.Int32 _ParentRecordID;
        partial void OnParentRecordIDChanging(global::System.Int32 value);
        partial void OnParentRecordIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Descr
        {
            get
            {
                return _Descr;
            }
            set
            {
                OnDescrChanging(value);
                ReportPropertyChanging("Descr");
                _Descr = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Descr");
                OnDescrChanged();
            }
        }
        private global::System.String _Descr;
        partial void OnDescrChanging(global::System.String value);
        partial void OnDescrChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RecordID
        {
            get
            {
                return _RecordID;
            }
            set
            {
                OnRecordIDChanging(value);
                ReportPropertyChanging("RecordID");
                _RecordID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RecordID");
                OnRecordIDChanged();
            }
        }
        private global::System.Int32 _RecordID;
        partial void OnRecordIDChanging(global::System.Int32 value);
        partial void OnRecordIDChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="OM21100Model", Name="OM21100_pgCompany_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class OM21100_pgCompany_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OM21100_pgCompany_Result object.
        /// </summary>
        /// <param name="cpnyID">Initial value of the CpnyID property.</param>
        /// <param name="discID">Initial value of the DiscID property.</param>
        /// <param name="discSeq">Initial value of the DiscSeq property.</param>
        public static OM21100_pgCompany_Result CreateOM21100_pgCompany_Result(global::System.String cpnyID, global::System.String discID, global::System.String discSeq)
        {
            OM21100_pgCompany_Result oM21100_pgCompany_Result = new OM21100_pgCompany_Result();
            oM21100_pgCompany_Result.CpnyID = cpnyID;
            oM21100_pgCompany_Result.DiscID = discID;
            oM21100_pgCompany_Result.DiscSeq = discSeq;
            return oM21100_pgCompany_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CpnyID
        {
            get
            {
                return _CpnyID;
            }
            set
            {
                OnCpnyIDChanging(value);
                ReportPropertyChanging("CpnyID");
                _CpnyID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CpnyID");
                OnCpnyIDChanged();
            }
        }
        private global::System.String _CpnyID;
        partial void OnCpnyIDChanging(global::System.String value);
        partial void OnCpnyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DiscID
        {
            get
            {
                return _DiscID;
            }
            set
            {
                OnDiscIDChanging(value);
                ReportPropertyChanging("DiscID");
                _DiscID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DiscID");
                OnDiscIDChanged();
            }
        }
        private global::System.String _DiscID;
        partial void OnDiscIDChanging(global::System.String value);
        partial void OnDiscIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DiscSeq
        {
            get
            {
                return _DiscSeq;
            }
            set
            {
                OnDiscSeqChanging(value);
                ReportPropertyChanging("DiscSeq");
                _DiscSeq = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DiscSeq");
                OnDiscSeqChanged();
            }
        }
        private global::System.String _DiscSeq;
        partial void OnDiscSeqChanging(global::System.String value);
        partial void OnDiscSeqChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="OM21100Model", Name="OM21100_pgDiscBreak_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class OM21100_pgDiscBreak_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OM21100_pgDiscBreak_Result object.
        /// </summary>
        /// <param name="breakAmt">Initial value of the BreakAmt property.</param>
        /// <param name="breakQty">Initial value of the BreakQty property.</param>
        /// <param name="discAmt">Initial value of the DiscAmt property.</param>
        /// <param name="discID">Initial value of the DiscID property.</param>
        /// <param name="discSeq">Initial value of the DiscSeq property.</param>
        /// <param name="lineRef">Initial value of the LineRef property.</param>
        /// <param name="tstamp">Initial value of the tstamp property.</param>
        /// <param name="maxLot">Initial value of the MaxLot property.</param>
        /// <param name="breakQtyUpper">Initial value of the BreakQtyUpper property.</param>
        /// <param name="breakAmtUpper">Initial value of the BreakAmtUpper property.</param>
        /// <param name="subBreakAmt">Initial value of the SubBreakAmt property.</param>
        /// <param name="subBreakQty">Initial value of the SubBreakQty property.</param>
        /// <param name="subBreakQtyUpper">Initial value of the SubBreakQtyUpper property.</param>
        /// <param name="subBreakAmtUpper">Initial value of the SubBreakAmtUpper property.</param>
        /// <param name="discAmtBonus">Initial value of the DiscAmtBonus property.</param>
        public static OM21100_pgDiscBreak_Result CreateOM21100_pgDiscBreak_Result(global::System.Double breakAmt, global::System.Double breakQty, global::System.Double discAmt, global::System.String discID, global::System.String discSeq, global::System.String lineRef, global::System.Byte[] tstamp, global::System.Double maxLot, global::System.Double breakQtyUpper, global::System.Double breakAmtUpper, global::System.Double subBreakAmt, global::System.Double subBreakQty, global::System.Double subBreakQtyUpper, global::System.Double subBreakAmtUpper, global::System.Double discAmtBonus)
        {
            OM21100_pgDiscBreak_Result oM21100_pgDiscBreak_Result = new OM21100_pgDiscBreak_Result();
            oM21100_pgDiscBreak_Result.BreakAmt = breakAmt;
            oM21100_pgDiscBreak_Result.BreakQty = breakQty;
            oM21100_pgDiscBreak_Result.DiscAmt = discAmt;
            oM21100_pgDiscBreak_Result.DiscID = discID;
            oM21100_pgDiscBreak_Result.DiscSeq = discSeq;
            oM21100_pgDiscBreak_Result.LineRef = lineRef;
            oM21100_pgDiscBreak_Result.tstamp = tstamp;
            oM21100_pgDiscBreak_Result.MaxLot = maxLot;
            oM21100_pgDiscBreak_Result.BreakQtyUpper = breakQtyUpper;
            oM21100_pgDiscBreak_Result.BreakAmtUpper = breakAmtUpper;
            oM21100_pgDiscBreak_Result.SubBreakAmt = subBreakAmt;
            oM21100_pgDiscBreak_Result.SubBreakQty = subBreakQty;
            oM21100_pgDiscBreak_Result.SubBreakQtyUpper = subBreakQtyUpper;
            oM21100_pgDiscBreak_Result.SubBreakAmtUpper = subBreakAmtUpper;
            oM21100_pgDiscBreak_Result.DiscAmtBonus = discAmtBonus;
            return oM21100_pgDiscBreak_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double BreakAmt
        {
            get
            {
                return _BreakAmt;
            }
            set
            {
                OnBreakAmtChanging(value);
                ReportPropertyChanging("BreakAmt");
                _BreakAmt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BreakAmt");
                OnBreakAmtChanged();
            }
        }
        private global::System.Double _BreakAmt;
        partial void OnBreakAmtChanging(global::System.Double value);
        partial void OnBreakAmtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double BreakQty
        {
            get
            {
                return _BreakQty;
            }
            set
            {
                OnBreakQtyChanging(value);
                ReportPropertyChanging("BreakQty");
                _BreakQty = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BreakQty");
                OnBreakQtyChanged();
            }
        }
        private global::System.Double _BreakQty;
        partial void OnBreakQtyChanging(global::System.Double value);
        partial void OnBreakQtyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Descr
        {
            get
            {
                return _Descr;
            }
            set
            {
                OnDescrChanging(value);
                ReportPropertyChanging("Descr");
                _Descr = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Descr");
                OnDescrChanged();
            }
        }
        private global::System.String _Descr;
        partial void OnDescrChanging(global::System.String value);
        partial void OnDescrChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double DiscAmt
        {
            get
            {
                return _DiscAmt;
            }
            set
            {
                OnDiscAmtChanging(value);
                ReportPropertyChanging("DiscAmt");
                _DiscAmt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DiscAmt");
                OnDiscAmtChanged();
            }
        }
        private global::System.Double _DiscAmt;
        partial void OnDiscAmtChanging(global::System.Double value);
        partial void OnDiscAmtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DiscID
        {
            get
            {
                return _DiscID;
            }
            set
            {
                OnDiscIDChanging(value);
                ReportPropertyChanging("DiscID");
                _DiscID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DiscID");
                OnDiscIDChanged();
            }
        }
        private global::System.String _DiscID;
        partial void OnDiscIDChanging(global::System.String value);
        partial void OnDiscIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DiscSeq
        {
            get
            {
                return _DiscSeq;
            }
            set
            {
                OnDiscSeqChanging(value);
                ReportPropertyChanging("DiscSeq");
                _DiscSeq = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DiscSeq");
                OnDiscSeqChanged();
            }
        }
        private global::System.String _DiscSeq;
        partial void OnDiscSeqChanging(global::System.String value);
        partial void OnDiscSeqChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LineRef
        {
            get
            {
                return _LineRef;
            }
            set
            {
                OnLineRefChanging(value);
                ReportPropertyChanging("LineRef");
                _LineRef = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LineRef");
                OnLineRefChanged();
            }
        }
        private global::System.String _LineRef;
        partial void OnLineRefChanging(global::System.String value);
        partial void OnLineRefChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] tstamp
        {
            get
            {
                return StructuralObject.GetValidValue(_tstamp);
            }
            set
            {
                OntstampChanging(value);
                ReportPropertyChanging("tstamp");
                _tstamp = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("tstamp");
                OntstampChanged();
            }
        }
        private global::System.Byte[] _tstamp;
        partial void OntstampChanging(global::System.Byte[] value);
        partial void OntstampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double MaxLot
        {
            get
            {
                return _MaxLot;
            }
            set
            {
                OnMaxLotChanging(value);
                ReportPropertyChanging("MaxLot");
                _MaxLot = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaxLot");
                OnMaxLotChanged();
            }
        }
        private global::System.Double _MaxLot;
        partial void OnMaxLotChanging(global::System.Double value);
        partial void OnMaxLotChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double BreakQtyUpper
        {
            get
            {
                return _BreakQtyUpper;
            }
            set
            {
                OnBreakQtyUpperChanging(value);
                ReportPropertyChanging("BreakQtyUpper");
                _BreakQtyUpper = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BreakQtyUpper");
                OnBreakQtyUpperChanged();
            }
        }
        private global::System.Double _BreakQtyUpper;
        partial void OnBreakQtyUpperChanging(global::System.Double value);
        partial void OnBreakQtyUpperChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double BreakAmtUpper
        {
            get
            {
                return _BreakAmtUpper;
            }
            set
            {
                OnBreakAmtUpperChanging(value);
                ReportPropertyChanging("BreakAmtUpper");
                _BreakAmtUpper = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BreakAmtUpper");
                OnBreakAmtUpperChanged();
            }
        }
        private global::System.Double _BreakAmtUpper;
        partial void OnBreakAmtUpperChanging(global::System.Double value);
        partial void OnBreakAmtUpperChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double SubBreakAmt
        {
            get
            {
                return _SubBreakAmt;
            }
            set
            {
                OnSubBreakAmtChanging(value);
                ReportPropertyChanging("SubBreakAmt");
                _SubBreakAmt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubBreakAmt");
                OnSubBreakAmtChanged();
            }
        }
        private global::System.Double _SubBreakAmt;
        partial void OnSubBreakAmtChanging(global::System.Double value);
        partial void OnSubBreakAmtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double SubBreakQty
        {
            get
            {
                return _SubBreakQty;
            }
            set
            {
                OnSubBreakQtyChanging(value);
                ReportPropertyChanging("SubBreakQty");
                _SubBreakQty = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubBreakQty");
                OnSubBreakQtyChanged();
            }
        }
        private global::System.Double _SubBreakQty;
        partial void OnSubBreakQtyChanging(global::System.Double value);
        partial void OnSubBreakQtyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double SubBreakQtyUpper
        {
            get
            {
                return _SubBreakQtyUpper;
            }
            set
            {
                OnSubBreakQtyUpperChanging(value);
                ReportPropertyChanging("SubBreakQtyUpper");
                _SubBreakQtyUpper = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubBreakQtyUpper");
                OnSubBreakQtyUpperChanged();
            }
        }
        private global::System.Double _SubBreakQtyUpper;
        partial void OnSubBreakQtyUpperChanging(global::System.Double value);
        partial void OnSubBreakQtyUpperChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double SubBreakAmtUpper
        {
            get
            {
                return _SubBreakAmtUpper;
            }
            set
            {
                OnSubBreakAmtUpperChanging(value);
                ReportPropertyChanging("SubBreakAmtUpper");
                _SubBreakAmtUpper = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubBreakAmtUpper");
                OnSubBreakAmtUpperChanged();
            }
        }
        private global::System.Double _SubBreakAmtUpper;
        partial void OnSubBreakAmtUpperChanging(global::System.Double value);
        partial void OnSubBreakAmtUpperChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double DiscAmtBonus
        {
            get
            {
                return _DiscAmtBonus;
            }
            set
            {
                OnDiscAmtBonusChanging(value);
                ReportPropertyChanging("DiscAmtBonus");
                _DiscAmtBonus = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DiscAmtBonus");
                OnDiscAmtBonusChanged();
            }
        }
        private global::System.Double _DiscAmtBonus;
        partial void OnDiscAmtBonusChanging(global::System.Double value);
        partial void OnDiscAmtBonusChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="OM21100Model", Name="OM21100_pgDiscBundle_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class OM21100_pgDiscBundle_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OM21100_pgDiscBundle_Result object.
        /// </summary>
        /// <param name="crtd_DateTime">Initial value of the Crtd_DateTime property.</param>
        /// <param name="crtd_Prog">Initial value of the Crtd_Prog property.</param>
        /// <param name="crtd_User">Initial value of the Crtd_User property.</param>
        /// <param name="discID">Initial value of the DiscID property.</param>
        /// <param name="discSeq">Initial value of the DiscSeq property.</param>
        /// <param name="lUpd_DateTime">Initial value of the LUpd_DateTime property.</param>
        /// <param name="lUpd_Prog">Initial value of the LUpd_Prog property.</param>
        /// <param name="lUpd_User">Initial value of the LUpd_User property.</param>
        /// <param name="tstamp">Initial value of the tstamp property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        /// <param name="bundleAmt">Initial value of the BundleAmt property.</param>
        /// <param name="bundleNbr">Initial value of the BundleNbr property.</param>
        /// <param name="bundleQty">Initial value of the BundleQty property.</param>
        /// <param name="invtID">Initial value of the InvtID property.</param>
        public static OM21100_pgDiscBundle_Result CreateOM21100_pgDiscBundle_Result(global::System.DateTime crtd_DateTime, global::System.String crtd_Prog, global::System.String crtd_User, global::System.String discID, global::System.String discSeq, global::System.DateTime lUpd_DateTime, global::System.String lUpd_Prog, global::System.String lUpd_User, global::System.Byte[] tstamp, global::System.Int16 active, global::System.Double bundleAmt, global::System.Int16 bundleNbr, global::System.Double bundleQty, global::System.String invtID)
        {
            OM21100_pgDiscBundle_Result oM21100_pgDiscBundle_Result = new OM21100_pgDiscBundle_Result();
            oM21100_pgDiscBundle_Result.Crtd_DateTime = crtd_DateTime;
            oM21100_pgDiscBundle_Result.Crtd_Prog = crtd_Prog;
            oM21100_pgDiscBundle_Result.Crtd_User = crtd_User;
            oM21100_pgDiscBundle_Result.DiscID = discID;
            oM21100_pgDiscBundle_Result.DiscSeq = discSeq;
            oM21100_pgDiscBundle_Result.LUpd_DateTime = lUpd_DateTime;
            oM21100_pgDiscBundle_Result.LUpd_Prog = lUpd_Prog;
            oM21100_pgDiscBundle_Result.LUpd_User = lUpd_User;
            oM21100_pgDiscBundle_Result.tstamp = tstamp;
            oM21100_pgDiscBundle_Result.Active = active;
            oM21100_pgDiscBundle_Result.BundleAmt = bundleAmt;
            oM21100_pgDiscBundle_Result.BundleNbr = bundleNbr;
            oM21100_pgDiscBundle_Result.BundleQty = bundleQty;
            oM21100_pgDiscBundle_Result.InvtID = invtID;
            return oM21100_pgDiscBundle_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Crtd_DateTime
        {
            get
            {
                return _Crtd_DateTime;
            }
            set
            {
                OnCrtd_DateTimeChanging(value);
                ReportPropertyChanging("Crtd_DateTime");
                _Crtd_DateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Crtd_DateTime");
                OnCrtd_DateTimeChanged();
            }
        }
        private global::System.DateTime _Crtd_DateTime;
        partial void OnCrtd_DateTimeChanging(global::System.DateTime value);
        partial void OnCrtd_DateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Crtd_Prog
        {
            get
            {
                return _Crtd_Prog;
            }
            set
            {
                OnCrtd_ProgChanging(value);
                ReportPropertyChanging("Crtd_Prog");
                _Crtd_Prog = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Crtd_Prog");
                OnCrtd_ProgChanged();
            }
        }
        private global::System.String _Crtd_Prog;
        partial void OnCrtd_ProgChanging(global::System.String value);
        partial void OnCrtd_ProgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Crtd_User
        {
            get
            {
                return _Crtd_User;
            }
            set
            {
                OnCrtd_UserChanging(value);
                ReportPropertyChanging("Crtd_User");
                _Crtd_User = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Crtd_User");
                OnCrtd_UserChanged();
            }
        }
        private global::System.String _Crtd_User;
        partial void OnCrtd_UserChanging(global::System.String value);
        partial void OnCrtd_UserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DiscID
        {
            get
            {
                return _DiscID;
            }
            set
            {
                OnDiscIDChanging(value);
                ReportPropertyChanging("DiscID");
                _DiscID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DiscID");
                OnDiscIDChanged();
            }
        }
        private global::System.String _DiscID;
        partial void OnDiscIDChanging(global::System.String value);
        partial void OnDiscIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DiscSeq
        {
            get
            {
                return _DiscSeq;
            }
            set
            {
                OnDiscSeqChanging(value);
                ReportPropertyChanging("DiscSeq");
                _DiscSeq = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DiscSeq");
                OnDiscSeqChanged();
            }
        }
        private global::System.String _DiscSeq;
        partial void OnDiscSeqChanging(global::System.String value);
        partial void OnDiscSeqChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LUpd_DateTime
        {
            get
            {
                return _LUpd_DateTime;
            }
            set
            {
                OnLUpd_DateTimeChanging(value);
                ReportPropertyChanging("LUpd_DateTime");
                _LUpd_DateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LUpd_DateTime");
                OnLUpd_DateTimeChanged();
            }
        }
        private global::System.DateTime _LUpd_DateTime;
        partial void OnLUpd_DateTimeChanging(global::System.DateTime value);
        partial void OnLUpd_DateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LUpd_Prog
        {
            get
            {
                return _LUpd_Prog;
            }
            set
            {
                OnLUpd_ProgChanging(value);
                ReportPropertyChanging("LUpd_Prog");
                _LUpd_Prog = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LUpd_Prog");
                OnLUpd_ProgChanged();
            }
        }
        private global::System.String _LUpd_Prog;
        partial void OnLUpd_ProgChanging(global::System.String value);
        partial void OnLUpd_ProgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LUpd_User
        {
            get
            {
                return _LUpd_User;
            }
            set
            {
                OnLUpd_UserChanging(value);
                ReportPropertyChanging("LUpd_User");
                _LUpd_User = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LUpd_User");
                OnLUpd_UserChanged();
            }
        }
        private global::System.String _LUpd_User;
        partial void OnLUpd_UserChanging(global::System.String value);
        partial void OnLUpd_UserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] tstamp
        {
            get
            {
                return StructuralObject.GetValidValue(_tstamp);
            }
            set
            {
                OntstampChanging(value);
                ReportPropertyChanging("tstamp");
                _tstamp = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("tstamp");
                OntstampChanged();
            }
        }
        private global::System.Byte[] _tstamp;
        partial void OntstampChanging(global::System.Byte[] value);
        partial void OntstampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Int16 _Active;
        partial void OnActiveChanging(global::System.Int16 value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double BundleAmt
        {
            get
            {
                return _BundleAmt;
            }
            set
            {
                OnBundleAmtChanging(value);
                ReportPropertyChanging("BundleAmt");
                _BundleAmt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BundleAmt");
                OnBundleAmtChanged();
            }
        }
        private global::System.Double _BundleAmt;
        partial void OnBundleAmtChanging(global::System.Double value);
        partial void OnBundleAmtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 BundleNbr
        {
            get
            {
                return _BundleNbr;
            }
            set
            {
                OnBundleNbrChanging(value);
                ReportPropertyChanging("BundleNbr");
                _BundleNbr = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BundleNbr");
                OnBundleNbrChanged();
            }
        }
        private global::System.Int16 _BundleNbr;
        partial void OnBundleNbrChanging(global::System.Int16 value);
        partial void OnBundleNbrChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BundleOrItem
        {
            get
            {
                return _BundleOrItem;
            }
            set
            {
                OnBundleOrItemChanging(value);
                ReportPropertyChanging("BundleOrItem");
                _BundleOrItem = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BundleOrItem");
                OnBundleOrItemChanged();
            }
        }
        private global::System.String _BundleOrItem;
        partial void OnBundleOrItemChanging(global::System.String value);
        partial void OnBundleOrItemChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double BundleQty
        {
            get
            {
                return _BundleQty;
            }
            set
            {
                OnBundleQtyChanging(value);
                ReportPropertyChanging("BundleQty");
                _BundleQty = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BundleQty");
                OnBundleQtyChanged();
            }
        }
        private global::System.Double _BundleQty;
        partial void OnBundleQtyChanging(global::System.Double value);
        partial void OnBundleQtyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DiscType
        {
            get
            {
                return _DiscType;
            }
            set
            {
                OnDiscTypeChanging(value);
                ReportPropertyChanging("DiscType");
                _DiscType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DiscType");
                OnDiscTypeChanged();
            }
        }
        private global::System.String _DiscType;
        partial void OnDiscTypeChanging(global::System.String value);
        partial void OnDiscTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String InvtID
        {
            get
            {
                return _InvtID;
            }
            set
            {
                OnInvtIDChanging(value);
                ReportPropertyChanging("InvtID");
                _InvtID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("InvtID");
                OnInvtIDChanged();
            }
        }
        private global::System.String _InvtID;
        partial void OnInvtIDChanging(global::System.String value);
        partial void OnInvtIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UnitDesc
        {
            get
            {
                return _UnitDesc;
            }
            set
            {
                OnUnitDescChanging(value);
                ReportPropertyChanging("UnitDesc");
                _UnitDesc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UnitDesc");
                OnUnitDescChanged();
            }
        }
        private global::System.String _UnitDesc;
        partial void OnUnitDescChanging(global::System.String value);
        partial void OnUnitDescChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="OM21100Model", Name="OM21100_pgDiscChannel_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class OM21100_pgDiscChannel_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OM21100_pgDiscChannel_Result object.
        /// </summary>
        /// <param name="discID">Initial value of the DiscID property.</param>
        /// <param name="discSeq">Initial value of the DiscSeq property.</param>
        /// <param name="channelID">Initial value of the ChannelID property.</param>
        /// <param name="descr">Initial value of the Descr property.</param>
        /// <param name="tstamp">Initial value of the tstamp property.</param>
        public static OM21100_pgDiscChannel_Result CreateOM21100_pgDiscChannel_Result(global::System.String discID, global::System.String discSeq, global::System.String channelID, global::System.String descr, global::System.Byte[] tstamp)
        {
            OM21100_pgDiscChannel_Result oM21100_pgDiscChannel_Result = new OM21100_pgDiscChannel_Result();
            oM21100_pgDiscChannel_Result.DiscID = discID;
            oM21100_pgDiscChannel_Result.DiscSeq = discSeq;
            oM21100_pgDiscChannel_Result.ChannelID = channelID;
            oM21100_pgDiscChannel_Result.Descr = descr;
            oM21100_pgDiscChannel_Result.tstamp = tstamp;
            return oM21100_pgDiscChannel_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DiscID
        {
            get
            {
                return _DiscID;
            }
            set
            {
                OnDiscIDChanging(value);
                ReportPropertyChanging("DiscID");
                _DiscID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DiscID");
                OnDiscIDChanged();
            }
        }
        private global::System.String _DiscID;
        partial void OnDiscIDChanging(global::System.String value);
        partial void OnDiscIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DiscSeq
        {
            get
            {
                return _DiscSeq;
            }
            set
            {
                OnDiscSeqChanging(value);
                ReportPropertyChanging("DiscSeq");
                _DiscSeq = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DiscSeq");
                OnDiscSeqChanged();
            }
        }
        private global::System.String _DiscSeq;
        partial void OnDiscSeqChanging(global::System.String value);
        partial void OnDiscSeqChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ChannelID
        {
            get
            {
                return _ChannelID;
            }
            set
            {
                OnChannelIDChanging(value);
                ReportPropertyChanging("ChannelID");
                _ChannelID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ChannelID");
                OnChannelIDChanged();
            }
        }
        private global::System.String _ChannelID;
        partial void OnChannelIDChanging(global::System.String value);
        partial void OnChannelIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Descr
        {
            get
            {
                return _Descr;
            }
            set
            {
                OnDescrChanging(value);
                ReportPropertyChanging("Descr");
                _Descr = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Descr");
                OnDescrChanged();
            }
        }
        private global::System.String _Descr;
        partial void OnDescrChanging(global::System.String value);
        partial void OnDescrChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] tstamp
        {
            get
            {
                return StructuralObject.GetValidValue(_tstamp);
            }
            set
            {
                OntstampChanging(value);
                ReportPropertyChanging("tstamp");
                _tstamp = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("tstamp");
                OntstampChanged();
            }
        }
        private global::System.Byte[] _tstamp;
        partial void OntstampChanging(global::System.Byte[] value);
        partial void OntstampChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="OM21100Model", Name="OM21100_pgDiscCust_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class OM21100_pgDiscCust_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OM21100_pgDiscCust_Result object.
        /// </summary>
        /// <param name="discID">Initial value of the DiscID property.</param>
        /// <param name="discSeq">Initial value of the DiscSeq property.</param>
        /// <param name="tstamp">Initial value of the tstamp property.</param>
        /// <param name="custID">Initial value of the CustID property.</param>
        /// <param name="branchID">Initial value of the BranchID property.</param>
        public static OM21100_pgDiscCust_Result CreateOM21100_pgDiscCust_Result(global::System.String discID, global::System.String discSeq, global::System.Byte[] tstamp, global::System.String custID, global::System.String branchID)
        {
            OM21100_pgDiscCust_Result oM21100_pgDiscCust_Result = new OM21100_pgDiscCust_Result();
            oM21100_pgDiscCust_Result.DiscID = discID;
            oM21100_pgDiscCust_Result.DiscSeq = discSeq;
            oM21100_pgDiscCust_Result.tstamp = tstamp;
            oM21100_pgDiscCust_Result.CustID = custID;
            oM21100_pgDiscCust_Result.BranchID = branchID;
            return oM21100_pgDiscCust_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DiscID
        {
            get
            {
                return _DiscID;
            }
            set
            {
                OnDiscIDChanging(value);
                ReportPropertyChanging("DiscID");
                _DiscID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DiscID");
                OnDiscIDChanged();
            }
        }
        private global::System.String _DiscID;
        partial void OnDiscIDChanging(global::System.String value);
        partial void OnDiscIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DiscSeq
        {
            get
            {
                return _DiscSeq;
            }
            set
            {
                OnDiscSeqChanging(value);
                ReportPropertyChanging("DiscSeq");
                _DiscSeq = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DiscSeq");
                OnDiscSeqChanged();
            }
        }
        private global::System.String _DiscSeq;
        partial void OnDiscSeqChanging(global::System.String value);
        partial void OnDiscSeqChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] tstamp
        {
            get
            {
                return StructuralObject.GetValidValue(_tstamp);
            }
            set
            {
                OntstampChanging(value);
                ReportPropertyChanging("tstamp");
                _tstamp = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("tstamp");
                OntstampChanged();
            }
        }
        private global::System.Byte[] _tstamp;
        partial void OntstampChanging(global::System.Byte[] value);
        partial void OntstampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CustID
        {
            get
            {
                return _CustID;
            }
            set
            {
                OnCustIDChanging(value);
                ReportPropertyChanging("CustID");
                _CustID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CustID");
                OnCustIDChanged();
            }
        }
        private global::System.String _CustID;
        partial void OnCustIDChanging(global::System.String value);
        partial void OnCustIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BranchID
        {
            get
            {
                return _BranchID;
            }
            set
            {
                OnBranchIDChanging(value);
                ReportPropertyChanging("BranchID");
                _BranchID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BranchID");
                OnBranchIDChanged();
            }
        }
        private global::System.String _BranchID;
        partial void OnBranchIDChanging(global::System.String value);
        partial void OnBranchIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Territory
        {
            get
            {
                return _Territory;
            }
            set
            {
                OnTerritoryChanging(value);
                ReportPropertyChanging("Territory");
                _Territory = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Territory");
                OnTerritoryChanged();
            }
        }
        private global::System.String _Territory;
        partial void OnTerritoryChanging(global::System.String value);
        partial void OnTerritoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TerritoryName
        {
            get
            {
                return _TerritoryName;
            }
            set
            {
                OnTerritoryNameChanging(value);
                ReportPropertyChanging("TerritoryName");
                _TerritoryName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TerritoryName");
                OnTerritoryNameChanged();
            }
        }
        private global::System.String _TerritoryName;
        partial void OnTerritoryNameChanging(global::System.String value);
        partial void OnTerritoryNameChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="OM21100Model", Name="OM21100_pgDiscCustCate_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class OM21100_pgDiscCustCate_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OM21100_pgDiscCustCate_Result object.
        /// </summary>
        /// <param name="discID">Initial value of the DiscID property.</param>
        /// <param name="discSeq">Initial value of the DiscSeq property.</param>
        /// <param name="custCateID">Initial value of the CustCateID property.</param>
        /// <param name="descr">Initial value of the Descr property.</param>
        /// <param name="tstamp">Initial value of the tstamp property.</param>
        public static OM21100_pgDiscCustCate_Result CreateOM21100_pgDiscCustCate_Result(global::System.String discID, global::System.String discSeq, global::System.String custCateID, global::System.String descr, global::System.Byte[] tstamp)
        {
            OM21100_pgDiscCustCate_Result oM21100_pgDiscCustCate_Result = new OM21100_pgDiscCustCate_Result();
            oM21100_pgDiscCustCate_Result.DiscID = discID;
            oM21100_pgDiscCustCate_Result.DiscSeq = discSeq;
            oM21100_pgDiscCustCate_Result.CustCateID = custCateID;
            oM21100_pgDiscCustCate_Result.Descr = descr;
            oM21100_pgDiscCustCate_Result.tstamp = tstamp;
            return oM21100_pgDiscCustCate_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DiscID
        {
            get
            {
                return _DiscID;
            }
            set
            {
                OnDiscIDChanging(value);
                ReportPropertyChanging("DiscID");
                _DiscID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DiscID");
                OnDiscIDChanged();
            }
        }
        private global::System.String _DiscID;
        partial void OnDiscIDChanging(global::System.String value);
        partial void OnDiscIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DiscSeq
        {
            get
            {
                return _DiscSeq;
            }
            set
            {
                OnDiscSeqChanging(value);
                ReportPropertyChanging("DiscSeq");
                _DiscSeq = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DiscSeq");
                OnDiscSeqChanged();
            }
        }
        private global::System.String _DiscSeq;
        partial void OnDiscSeqChanging(global::System.String value);
        partial void OnDiscSeqChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CustCateID
        {
            get
            {
                return _CustCateID;
            }
            set
            {
                OnCustCateIDChanging(value);
                ReportPropertyChanging("CustCateID");
                _CustCateID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CustCateID");
                OnCustCateIDChanged();
            }
        }
        private global::System.String _CustCateID;
        partial void OnCustCateIDChanging(global::System.String value);
        partial void OnCustCateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Descr
        {
            get
            {
                return _Descr;
            }
            set
            {
                OnDescrChanging(value);
                ReportPropertyChanging("Descr");
                _Descr = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Descr");
                OnDescrChanged();
            }
        }
        private global::System.String _Descr;
        partial void OnDescrChanging(global::System.String value);
        partial void OnDescrChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] tstamp
        {
            get
            {
                return StructuralObject.GetValidValue(_tstamp);
            }
            set
            {
                OntstampChanging(value);
                ReportPropertyChanging("tstamp");
                _tstamp = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("tstamp");
                OntstampChanged();
            }
        }
        private global::System.Byte[] _tstamp;
        partial void OntstampChanging(global::System.Byte[] value);
        partial void OntstampChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="OM21100Model", Name="OM21100_pgDiscCustClass_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class OM21100_pgDiscCustClass_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OM21100_pgDiscCustClass_Result object.
        /// </summary>
        /// <param name="crtd_Prog">Initial value of the Crtd_Prog property.</param>
        /// <param name="crtd_User">Initial value of the Crtd_User property.</param>
        /// <param name="discID">Initial value of the DiscID property.</param>
        /// <param name="discSeq">Initial value of the DiscSeq property.</param>
        /// <param name="lUpd_DateTime">Initial value of the LUpd_DateTime property.</param>
        /// <param name="lUpd_Prog">Initial value of the LUpd_Prog property.</param>
        /// <param name="lUpd_User">Initial value of the LUpd_User property.</param>
        /// <param name="classID">Initial value of the ClassID property.</param>
        /// <param name="crtd_DateTime">Initial value of the Crtd_DateTime property.</param>
        /// <param name="tstamp">Initial value of the tstamp property.</param>
        public static OM21100_pgDiscCustClass_Result CreateOM21100_pgDiscCustClass_Result(global::System.String crtd_Prog, global::System.String crtd_User, global::System.String discID, global::System.String discSeq, global::System.DateTime lUpd_DateTime, global::System.String lUpd_Prog, global::System.String lUpd_User, global::System.String classID, global::System.DateTime crtd_DateTime, global::System.Byte[] tstamp)
        {
            OM21100_pgDiscCustClass_Result oM21100_pgDiscCustClass_Result = new OM21100_pgDiscCustClass_Result();
            oM21100_pgDiscCustClass_Result.Crtd_Prog = crtd_Prog;
            oM21100_pgDiscCustClass_Result.Crtd_User = crtd_User;
            oM21100_pgDiscCustClass_Result.DiscID = discID;
            oM21100_pgDiscCustClass_Result.DiscSeq = discSeq;
            oM21100_pgDiscCustClass_Result.LUpd_DateTime = lUpd_DateTime;
            oM21100_pgDiscCustClass_Result.LUpd_Prog = lUpd_Prog;
            oM21100_pgDiscCustClass_Result.LUpd_User = lUpd_User;
            oM21100_pgDiscCustClass_Result.ClassID = classID;
            oM21100_pgDiscCustClass_Result.Crtd_DateTime = crtd_DateTime;
            oM21100_pgDiscCustClass_Result.tstamp = tstamp;
            return oM21100_pgDiscCustClass_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Crtd_Prog
        {
            get
            {
                return _Crtd_Prog;
            }
            set
            {
                OnCrtd_ProgChanging(value);
                ReportPropertyChanging("Crtd_Prog");
                _Crtd_Prog = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Crtd_Prog");
                OnCrtd_ProgChanged();
            }
        }
        private global::System.String _Crtd_Prog;
        partial void OnCrtd_ProgChanging(global::System.String value);
        partial void OnCrtd_ProgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Crtd_User
        {
            get
            {
                return _Crtd_User;
            }
            set
            {
                OnCrtd_UserChanging(value);
                ReportPropertyChanging("Crtd_User");
                _Crtd_User = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Crtd_User");
                OnCrtd_UserChanged();
            }
        }
        private global::System.String _Crtd_User;
        partial void OnCrtd_UserChanging(global::System.String value);
        partial void OnCrtd_UserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DiscID
        {
            get
            {
                return _DiscID;
            }
            set
            {
                OnDiscIDChanging(value);
                ReportPropertyChanging("DiscID");
                _DiscID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DiscID");
                OnDiscIDChanged();
            }
        }
        private global::System.String _DiscID;
        partial void OnDiscIDChanging(global::System.String value);
        partial void OnDiscIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DiscSeq
        {
            get
            {
                return _DiscSeq;
            }
            set
            {
                OnDiscSeqChanging(value);
                ReportPropertyChanging("DiscSeq");
                _DiscSeq = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DiscSeq");
                OnDiscSeqChanged();
            }
        }
        private global::System.String _DiscSeq;
        partial void OnDiscSeqChanging(global::System.String value);
        partial void OnDiscSeqChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LUpd_DateTime
        {
            get
            {
                return _LUpd_DateTime;
            }
            set
            {
                OnLUpd_DateTimeChanging(value);
                ReportPropertyChanging("LUpd_DateTime");
                _LUpd_DateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LUpd_DateTime");
                OnLUpd_DateTimeChanged();
            }
        }
        private global::System.DateTime _LUpd_DateTime;
        partial void OnLUpd_DateTimeChanging(global::System.DateTime value);
        partial void OnLUpd_DateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LUpd_Prog
        {
            get
            {
                return _LUpd_Prog;
            }
            set
            {
                OnLUpd_ProgChanging(value);
                ReportPropertyChanging("LUpd_Prog");
                _LUpd_Prog = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LUpd_Prog");
                OnLUpd_ProgChanged();
            }
        }
        private global::System.String _LUpd_Prog;
        partial void OnLUpd_ProgChanging(global::System.String value);
        partial void OnLUpd_ProgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LUpd_User
        {
            get
            {
                return _LUpd_User;
            }
            set
            {
                OnLUpd_UserChanging(value);
                ReportPropertyChanging("LUpd_User");
                _LUpd_User = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LUpd_User");
                OnLUpd_UserChanged();
            }
        }
        private global::System.String _LUpd_User;
        partial void OnLUpd_UserChanging(global::System.String value);
        partial void OnLUpd_UserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ClassID
        {
            get
            {
                return _ClassID;
            }
            set
            {
                OnClassIDChanging(value);
                ReportPropertyChanging("ClassID");
                _ClassID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ClassID");
                OnClassIDChanged();
            }
        }
        private global::System.String _ClassID;
        partial void OnClassIDChanging(global::System.String value);
        partial void OnClassIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Crtd_DateTime
        {
            get
            {
                return _Crtd_DateTime;
            }
            set
            {
                OnCrtd_DateTimeChanging(value);
                ReportPropertyChanging("Crtd_DateTime");
                _Crtd_DateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Crtd_DateTime");
                OnCrtd_DateTimeChanged();
            }
        }
        private global::System.DateTime _Crtd_DateTime;
        partial void OnCrtd_DateTimeChanging(global::System.DateTime value);
        partial void OnCrtd_DateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] tstamp
        {
            get
            {
                return StructuralObject.GetValidValue(_tstamp);
            }
            set
            {
                OntstampChanging(value);
                ReportPropertyChanging("tstamp");
                _tstamp = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("tstamp");
                OntstampChanged();
            }
        }
        private global::System.Byte[] _tstamp;
        partial void OntstampChanging(global::System.Byte[] value);
        partial void OntstampChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="OM21100Model", Name="OM21100_pgDiscItem_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class OM21100_pgDiscItem_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OM21100_pgDiscItem_Result object.
        /// </summary>
        /// <param name="discID">Initial value of the DiscID property.</param>
        /// <param name="discSeq">Initial value of the DiscSeq property.</param>
        /// <param name="tstamp">Initial value of the tstamp property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        /// <param name="bundleAmt">Initial value of the BundleAmt property.</param>
        /// <param name="bundleNbr">Initial value of the BundleNbr property.</param>
        /// <param name="bundleQty">Initial value of the BundleQty property.</param>
        /// <param name="invtID">Initial value of the InvtID property.</param>
        /// <param name="requiredValue">Initial value of the RequiredValue property.</param>
        /// <param name="coefficientCnv">Initial value of the CoefficientCnv property.</param>
        /// <param name="priorityInvt">Initial value of the PriorityInvt property.</param>
        /// <param name="qtyType">Initial value of the QtyType property.</param>
        public static OM21100_pgDiscItem_Result CreateOM21100_pgDiscItem_Result(global::System.String discID, global::System.String discSeq, global::System.Byte[] tstamp, global::System.Int16 active, global::System.Double bundleAmt, global::System.Int16 bundleNbr, global::System.Double bundleQty, global::System.String invtID, global::System.Int32 requiredValue, global::System.Int32 coefficientCnv, global::System.Int32 priorityInvt, global::System.String qtyType)
        {
            OM21100_pgDiscItem_Result oM21100_pgDiscItem_Result = new OM21100_pgDiscItem_Result();
            oM21100_pgDiscItem_Result.DiscID = discID;
            oM21100_pgDiscItem_Result.DiscSeq = discSeq;
            oM21100_pgDiscItem_Result.tstamp = tstamp;
            oM21100_pgDiscItem_Result.Active = active;
            oM21100_pgDiscItem_Result.BundleAmt = bundleAmt;
            oM21100_pgDiscItem_Result.BundleNbr = bundleNbr;
            oM21100_pgDiscItem_Result.BundleQty = bundleQty;
            oM21100_pgDiscItem_Result.InvtID = invtID;
            oM21100_pgDiscItem_Result.RequiredValue = requiredValue;
            oM21100_pgDiscItem_Result.CoefficientCnv = coefficientCnv;
            oM21100_pgDiscItem_Result.PriorityInvt = priorityInvt;
            oM21100_pgDiscItem_Result.QtyType = qtyType;
            return oM21100_pgDiscItem_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DiscID
        {
            get
            {
                return _DiscID;
            }
            set
            {
                OnDiscIDChanging(value);
                ReportPropertyChanging("DiscID");
                _DiscID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DiscID");
                OnDiscIDChanged();
            }
        }
        private global::System.String _DiscID;
        partial void OnDiscIDChanging(global::System.String value);
        partial void OnDiscIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DiscSeq
        {
            get
            {
                return _DiscSeq;
            }
            set
            {
                OnDiscSeqChanging(value);
                ReportPropertyChanging("DiscSeq");
                _DiscSeq = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DiscSeq");
                OnDiscSeqChanged();
            }
        }
        private global::System.String _DiscSeq;
        partial void OnDiscSeqChanging(global::System.String value);
        partial void OnDiscSeqChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] tstamp
        {
            get
            {
                return StructuralObject.GetValidValue(_tstamp);
            }
            set
            {
                OntstampChanging(value);
                ReportPropertyChanging("tstamp");
                _tstamp = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("tstamp");
                OntstampChanged();
            }
        }
        private global::System.Byte[] _tstamp;
        partial void OntstampChanging(global::System.Byte[] value);
        partial void OntstampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Int16 _Active;
        partial void OnActiveChanging(global::System.Int16 value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double BundleAmt
        {
            get
            {
                return _BundleAmt;
            }
            set
            {
                OnBundleAmtChanging(value);
                ReportPropertyChanging("BundleAmt");
                _BundleAmt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BundleAmt");
                OnBundleAmtChanged();
            }
        }
        private global::System.Double _BundleAmt;
        partial void OnBundleAmtChanging(global::System.Double value);
        partial void OnBundleAmtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 BundleNbr
        {
            get
            {
                return _BundleNbr;
            }
            set
            {
                OnBundleNbrChanging(value);
                ReportPropertyChanging("BundleNbr");
                _BundleNbr = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BundleNbr");
                OnBundleNbrChanged();
            }
        }
        private global::System.Int16 _BundleNbr;
        partial void OnBundleNbrChanging(global::System.Int16 value);
        partial void OnBundleNbrChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BundleOrItem
        {
            get
            {
                return _BundleOrItem;
            }
            set
            {
                OnBundleOrItemChanging(value);
                ReportPropertyChanging("BundleOrItem");
                _BundleOrItem = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BundleOrItem");
                OnBundleOrItemChanged();
            }
        }
        private global::System.String _BundleOrItem;
        partial void OnBundleOrItemChanging(global::System.String value);
        partial void OnBundleOrItemChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double BundleQty
        {
            get
            {
                return _BundleQty;
            }
            set
            {
                OnBundleQtyChanging(value);
                ReportPropertyChanging("BundleQty");
                _BundleQty = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BundleQty");
                OnBundleQtyChanged();
            }
        }
        private global::System.Double _BundleQty;
        partial void OnBundleQtyChanging(global::System.Double value);
        partial void OnBundleQtyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DiscType
        {
            get
            {
                return _DiscType;
            }
            set
            {
                OnDiscTypeChanging(value);
                ReportPropertyChanging("DiscType");
                _DiscType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DiscType");
                OnDiscTypeChanged();
            }
        }
        private global::System.String _DiscType;
        partial void OnDiscTypeChanging(global::System.String value);
        partial void OnDiscTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String InvtID
        {
            get
            {
                return _InvtID;
            }
            set
            {
                OnInvtIDChanging(value);
                ReportPropertyChanging("InvtID");
                _InvtID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("InvtID");
                OnInvtIDChanged();
            }
        }
        private global::System.String _InvtID;
        partial void OnInvtIDChanging(global::System.String value);
        partial void OnInvtIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UnitDesc
        {
            get
            {
                return _UnitDesc;
            }
            set
            {
                OnUnitDescChanging(value);
                ReportPropertyChanging("UnitDesc");
                _UnitDesc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UnitDesc");
                OnUnitDescChanged();
            }
        }
        private global::System.String _UnitDesc;
        partial void OnUnitDescChanging(global::System.String value);
        partial void OnUnitDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RequiredValue
        {
            get
            {
                return _RequiredValue;
            }
            set
            {
                OnRequiredValueChanging(value);
                ReportPropertyChanging("RequiredValue");
                _RequiredValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RequiredValue");
                OnRequiredValueChanged();
            }
        }
        private global::System.Int32 _RequiredValue;
        partial void OnRequiredValueChanging(global::System.Int32 value);
        partial void OnRequiredValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> QtyStockAdvance
        {
            get
            {
                return _QtyStockAdvance;
            }
            set
            {
                OnQtyStockAdvanceChanging(value);
                ReportPropertyChanging("QtyStockAdvance");
                _QtyStockAdvance = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("QtyStockAdvance");
                OnQtyStockAdvanceChanged();
            }
        }
        private Nullable<global::System.Double> _QtyStockAdvance;
        partial void OnQtyStockAdvanceChanging(Nullable<global::System.Double> value);
        partial void OnQtyStockAdvanceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> QtyLimit
        {
            get
            {
                return _QtyLimit;
            }
            set
            {
                OnQtyLimitChanging(value);
                ReportPropertyChanging("QtyLimit");
                _QtyLimit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("QtyLimit");
                OnQtyLimitChanged();
            }
        }
        private Nullable<global::System.Double> _QtyLimit;
        partial void OnQtyLimitChanging(Nullable<global::System.Double> value);
        partial void OnQtyLimitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> PerStockAdvance
        {
            get
            {
                return _PerStockAdvance;
            }
            set
            {
                OnPerStockAdvanceChanging(value);
                ReportPropertyChanging("PerStockAdvance");
                _PerStockAdvance = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PerStockAdvance");
                OnPerStockAdvanceChanged();
            }
        }
        private Nullable<global::System.Double> _PerStockAdvance;
        partial void OnPerStockAdvanceChanging(Nullable<global::System.Double> value);
        partial void OnPerStockAdvanceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CoefficientCnv
        {
            get
            {
                return _CoefficientCnv;
            }
            set
            {
                OnCoefficientCnvChanging(value);
                ReportPropertyChanging("CoefficientCnv");
                _CoefficientCnv = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CoefficientCnv");
                OnCoefficientCnvChanged();
            }
        }
        private global::System.Int32 _CoefficientCnv;
        partial void OnCoefficientCnvChanging(global::System.Int32 value);
        partial void OnCoefficientCnvChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PriorityInvt
        {
            get
            {
                return _PriorityInvt;
            }
            set
            {
                OnPriorityInvtChanging(value);
                ReportPropertyChanging("PriorityInvt");
                _PriorityInvt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PriorityInvt");
                OnPriorityInvtChanged();
            }
        }
        private global::System.Int32 _PriorityInvt;
        partial void OnPriorityInvtChanging(global::System.Int32 value);
        partial void OnPriorityInvtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String QtyType
        {
            get
            {
                return _QtyType;
            }
            set
            {
                OnQtyTypeChanging(value);
                ReportPropertyChanging("QtyType");
                _QtyType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("QtyType");
                OnQtyTypeChanged();
            }
        }
        private global::System.String _QtyType;
        partial void OnQtyTypeChanging(global::System.String value);
        partial void OnQtyTypeChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="OM21100Model", Name="OM21100_pgDiscItemClass_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class OM21100_pgDiscItemClass_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OM21100_pgDiscItemClass_Result object.
        /// </summary>
        /// <param name="discID">Initial value of the DiscID property.</param>
        /// <param name="discSeq">Initial value of the DiscSeq property.</param>
        /// <param name="lUpd_DateTime">Initial value of the LUpd_DateTime property.</param>
        /// <param name="lUpd_Prog">Initial value of the LUpd_Prog property.</param>
        /// <param name="lUpd_User">Initial value of the LUpd_User property.</param>
        /// <param name="tstamp">Initial value of the tstamp property.</param>
        /// <param name="crtd_DateTime">Initial value of the Crtd_DateTime property.</param>
        /// <param name="crtd_Prog">Initial value of the Crtd_Prog property.</param>
        /// <param name="crtd_User">Initial value of the Crtd_User property.</param>
        /// <param name="classID">Initial value of the ClassID property.</param>
        public static OM21100_pgDiscItemClass_Result CreateOM21100_pgDiscItemClass_Result(global::System.String discID, global::System.String discSeq, global::System.DateTime lUpd_DateTime, global::System.String lUpd_Prog, global::System.String lUpd_User, global::System.Byte[] tstamp, global::System.DateTime crtd_DateTime, global::System.String crtd_Prog, global::System.String crtd_User, global::System.String classID)
        {
            OM21100_pgDiscItemClass_Result oM21100_pgDiscItemClass_Result = new OM21100_pgDiscItemClass_Result();
            oM21100_pgDiscItemClass_Result.DiscID = discID;
            oM21100_pgDiscItemClass_Result.DiscSeq = discSeq;
            oM21100_pgDiscItemClass_Result.LUpd_DateTime = lUpd_DateTime;
            oM21100_pgDiscItemClass_Result.LUpd_Prog = lUpd_Prog;
            oM21100_pgDiscItemClass_Result.LUpd_User = lUpd_User;
            oM21100_pgDiscItemClass_Result.tstamp = tstamp;
            oM21100_pgDiscItemClass_Result.Crtd_DateTime = crtd_DateTime;
            oM21100_pgDiscItemClass_Result.Crtd_Prog = crtd_Prog;
            oM21100_pgDiscItemClass_Result.Crtd_User = crtd_User;
            oM21100_pgDiscItemClass_Result.ClassID = classID;
            return oM21100_pgDiscItemClass_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DiscID
        {
            get
            {
                return _DiscID;
            }
            set
            {
                OnDiscIDChanging(value);
                ReportPropertyChanging("DiscID");
                _DiscID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DiscID");
                OnDiscIDChanged();
            }
        }
        private global::System.String _DiscID;
        partial void OnDiscIDChanging(global::System.String value);
        partial void OnDiscIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DiscSeq
        {
            get
            {
                return _DiscSeq;
            }
            set
            {
                OnDiscSeqChanging(value);
                ReportPropertyChanging("DiscSeq");
                _DiscSeq = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DiscSeq");
                OnDiscSeqChanged();
            }
        }
        private global::System.String _DiscSeq;
        partial void OnDiscSeqChanging(global::System.String value);
        partial void OnDiscSeqChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LUpd_DateTime
        {
            get
            {
                return _LUpd_DateTime;
            }
            set
            {
                OnLUpd_DateTimeChanging(value);
                ReportPropertyChanging("LUpd_DateTime");
                _LUpd_DateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LUpd_DateTime");
                OnLUpd_DateTimeChanged();
            }
        }
        private global::System.DateTime _LUpd_DateTime;
        partial void OnLUpd_DateTimeChanging(global::System.DateTime value);
        partial void OnLUpd_DateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LUpd_Prog
        {
            get
            {
                return _LUpd_Prog;
            }
            set
            {
                OnLUpd_ProgChanging(value);
                ReportPropertyChanging("LUpd_Prog");
                _LUpd_Prog = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LUpd_Prog");
                OnLUpd_ProgChanged();
            }
        }
        private global::System.String _LUpd_Prog;
        partial void OnLUpd_ProgChanging(global::System.String value);
        partial void OnLUpd_ProgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LUpd_User
        {
            get
            {
                return _LUpd_User;
            }
            set
            {
                OnLUpd_UserChanging(value);
                ReportPropertyChanging("LUpd_User");
                _LUpd_User = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LUpd_User");
                OnLUpd_UserChanged();
            }
        }
        private global::System.String _LUpd_User;
        partial void OnLUpd_UserChanging(global::System.String value);
        partial void OnLUpd_UserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] tstamp
        {
            get
            {
                return StructuralObject.GetValidValue(_tstamp);
            }
            set
            {
                OntstampChanging(value);
                ReportPropertyChanging("tstamp");
                _tstamp = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("tstamp");
                OntstampChanged();
            }
        }
        private global::System.Byte[] _tstamp;
        partial void OntstampChanging(global::System.Byte[] value);
        partial void OntstampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Crtd_DateTime
        {
            get
            {
                return _Crtd_DateTime;
            }
            set
            {
                OnCrtd_DateTimeChanging(value);
                ReportPropertyChanging("Crtd_DateTime");
                _Crtd_DateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Crtd_DateTime");
                OnCrtd_DateTimeChanged();
            }
        }
        private global::System.DateTime _Crtd_DateTime;
        partial void OnCrtd_DateTimeChanging(global::System.DateTime value);
        partial void OnCrtd_DateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Crtd_Prog
        {
            get
            {
                return _Crtd_Prog;
            }
            set
            {
                OnCrtd_ProgChanging(value);
                ReportPropertyChanging("Crtd_Prog");
                _Crtd_Prog = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Crtd_Prog");
                OnCrtd_ProgChanged();
            }
        }
        private global::System.String _Crtd_Prog;
        partial void OnCrtd_ProgChanging(global::System.String value);
        partial void OnCrtd_ProgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Crtd_User
        {
            get
            {
                return _Crtd_User;
            }
            set
            {
                OnCrtd_UserChanging(value);
                ReportPropertyChanging("Crtd_User");
                _Crtd_User = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Crtd_User");
                OnCrtd_UserChanged();
            }
        }
        private global::System.String _Crtd_User;
        partial void OnCrtd_UserChanging(global::System.String value);
        partial void OnCrtd_UserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ClassID
        {
            get
            {
                return _ClassID;
            }
            set
            {
                OnClassIDChanging(value);
                ReportPropertyChanging("ClassID");
                _ClassID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ClassID");
                OnClassIDChanged();
            }
        }
        private global::System.String _ClassID;
        partial void OnClassIDChanging(global::System.String value);
        partial void OnClassIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UnitDesc
        {
            get
            {
                return _UnitDesc;
            }
            set
            {
                OnUnitDescChanging(value);
                ReportPropertyChanging("UnitDesc");
                _UnitDesc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UnitDesc");
                OnUnitDescChanged();
            }
        }
        private global::System.String _UnitDesc;
        partial void OnUnitDescChanging(global::System.String value);
        partial void OnUnitDescChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="OM21100Model", Name="OM21100_pgDiscSubBreakItem_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class OM21100_pgDiscSubBreakItem_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OM21100_pgDiscSubBreakItem_Result object.
        /// </summary>
        /// <param name="discID">Initial value of the DiscID property.</param>
        /// <param name="discSeq">Initial value of the DiscSeq property.</param>
        /// <param name="invtID">Initial value of the InvtID property.</param>
        /// <param name="unitDesc">Initial value of the UnitDesc property.</param>
        /// <param name="tstamp">Initial value of the tstamp property.</param>
        public static OM21100_pgDiscSubBreakItem_Result CreateOM21100_pgDiscSubBreakItem_Result(global::System.String discID, global::System.String discSeq, global::System.String invtID, global::System.String unitDesc, global::System.Byte[] tstamp)
        {
            OM21100_pgDiscSubBreakItem_Result oM21100_pgDiscSubBreakItem_Result = new OM21100_pgDiscSubBreakItem_Result();
            oM21100_pgDiscSubBreakItem_Result.DiscID = discID;
            oM21100_pgDiscSubBreakItem_Result.DiscSeq = discSeq;
            oM21100_pgDiscSubBreakItem_Result.InvtID = invtID;
            oM21100_pgDiscSubBreakItem_Result.UnitDesc = unitDesc;
            oM21100_pgDiscSubBreakItem_Result.tstamp = tstamp;
            return oM21100_pgDiscSubBreakItem_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DiscID
        {
            get
            {
                return _DiscID;
            }
            set
            {
                OnDiscIDChanging(value);
                ReportPropertyChanging("DiscID");
                _DiscID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DiscID");
                OnDiscIDChanged();
            }
        }
        private global::System.String _DiscID;
        partial void OnDiscIDChanging(global::System.String value);
        partial void OnDiscIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DiscSeq
        {
            get
            {
                return _DiscSeq;
            }
            set
            {
                OnDiscSeqChanging(value);
                ReportPropertyChanging("DiscSeq");
                _DiscSeq = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DiscSeq");
                OnDiscSeqChanged();
            }
        }
        private global::System.String _DiscSeq;
        partial void OnDiscSeqChanging(global::System.String value);
        partial void OnDiscSeqChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String InvtID
        {
            get
            {
                return _InvtID;
            }
            set
            {
                OnInvtIDChanging(value);
                ReportPropertyChanging("InvtID");
                _InvtID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("InvtID");
                OnInvtIDChanged();
            }
        }
        private global::System.String _InvtID;
        partial void OnInvtIDChanging(global::System.String value);
        partial void OnInvtIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UnitDesc
        {
            get
            {
                return _UnitDesc;
            }
            set
            {
                OnUnitDescChanging(value);
                ReportPropertyChanging("UnitDesc");
                _UnitDesc = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UnitDesc");
                OnUnitDescChanged();
            }
        }
        private global::System.String _UnitDesc;
        partial void OnUnitDescChanging(global::System.String value);
        partial void OnUnitDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] tstamp
        {
            get
            {
                return StructuralObject.GetValidValue(_tstamp);
            }
            set
            {
                OntstampChanging(value);
                ReportPropertyChanging("tstamp");
                _tstamp = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("tstamp");
                OntstampChanged();
            }
        }
        private global::System.Byte[] _tstamp;
        partial void OntstampChanging(global::System.Byte[] value);
        partial void OntstampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Descr
        {
            get
            {
                return _Descr;
            }
            set
            {
                OnDescrChanging(value);
                ReportPropertyChanging("Descr");
                _Descr = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Descr");
                OnDescrChanged();
            }
        }
        private global::System.String _Descr;
        partial void OnDescrChanging(global::System.String value);
        partial void OnDescrChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="OM21100Model", Name="OM21100_pgFreeItem_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class OM21100_pgFreeItem_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OM21100_pgFreeItem_Result object.
        /// </summary>
        /// <param name="discID">Initial value of the DiscID property.</param>
        /// <param name="discSeq">Initial value of the DiscSeq property.</param>
        /// <param name="lUpd_DateTime">Initial value of the LUpd_DateTime property.</param>
        /// <param name="lUpd_Prog">Initial value of the LUpd_Prog property.</param>
        /// <param name="lUpd_User">Initial value of the LUpd_User property.</param>
        /// <param name="tstamp">Initial value of the tstamp property.</param>
        /// <param name="crtd_DateTime">Initial value of the Crtd_DateTime property.</param>
        /// <param name="crtd_Prog">Initial value of the Crtd_Prog property.</param>
        /// <param name="crtd_User">Initial value of the Crtd_User property.</param>
        /// <param name="lineRef">Initial value of the LineRef property.</param>
        /// <param name="freeItemID">Initial value of the FreeItemID property.</param>
        /// <param name="freeItemQty">Initial value of the FreeItemQty property.</param>
        /// <param name="priority">Initial value of the Priority property.</param>
        /// <param name="price">Initial value of the Price property.</param>
        public static OM21100_pgFreeItem_Result CreateOM21100_pgFreeItem_Result(global::System.String discID, global::System.String discSeq, global::System.DateTime lUpd_DateTime, global::System.String lUpd_Prog, global::System.String lUpd_User, global::System.Byte[] tstamp, global::System.DateTime crtd_DateTime, global::System.String crtd_Prog, global::System.String crtd_User, global::System.String lineRef, global::System.String freeItemID, global::System.Double freeItemQty, global::System.Int32 priority, global::System.Double price)
        {
            OM21100_pgFreeItem_Result oM21100_pgFreeItem_Result = new OM21100_pgFreeItem_Result();
            oM21100_pgFreeItem_Result.DiscID = discID;
            oM21100_pgFreeItem_Result.DiscSeq = discSeq;
            oM21100_pgFreeItem_Result.LUpd_DateTime = lUpd_DateTime;
            oM21100_pgFreeItem_Result.LUpd_Prog = lUpd_Prog;
            oM21100_pgFreeItem_Result.LUpd_User = lUpd_User;
            oM21100_pgFreeItem_Result.tstamp = tstamp;
            oM21100_pgFreeItem_Result.Crtd_DateTime = crtd_DateTime;
            oM21100_pgFreeItem_Result.Crtd_Prog = crtd_Prog;
            oM21100_pgFreeItem_Result.Crtd_User = crtd_User;
            oM21100_pgFreeItem_Result.LineRef = lineRef;
            oM21100_pgFreeItem_Result.FreeItemID = freeItemID;
            oM21100_pgFreeItem_Result.FreeItemQty = freeItemQty;
            oM21100_pgFreeItem_Result.Priority = priority;
            oM21100_pgFreeItem_Result.Price = price;
            return oM21100_pgFreeItem_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DiscID
        {
            get
            {
                return _DiscID;
            }
            set
            {
                OnDiscIDChanging(value);
                ReportPropertyChanging("DiscID");
                _DiscID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DiscID");
                OnDiscIDChanged();
            }
        }
        private global::System.String _DiscID;
        partial void OnDiscIDChanging(global::System.String value);
        partial void OnDiscIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DiscSeq
        {
            get
            {
                return _DiscSeq;
            }
            set
            {
                OnDiscSeqChanging(value);
                ReportPropertyChanging("DiscSeq");
                _DiscSeq = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DiscSeq");
                OnDiscSeqChanged();
            }
        }
        private global::System.String _DiscSeq;
        partial void OnDiscSeqChanging(global::System.String value);
        partial void OnDiscSeqChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LUpd_DateTime
        {
            get
            {
                return _LUpd_DateTime;
            }
            set
            {
                OnLUpd_DateTimeChanging(value);
                ReportPropertyChanging("LUpd_DateTime");
                _LUpd_DateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LUpd_DateTime");
                OnLUpd_DateTimeChanged();
            }
        }
        private global::System.DateTime _LUpd_DateTime;
        partial void OnLUpd_DateTimeChanging(global::System.DateTime value);
        partial void OnLUpd_DateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LUpd_Prog
        {
            get
            {
                return _LUpd_Prog;
            }
            set
            {
                OnLUpd_ProgChanging(value);
                ReportPropertyChanging("LUpd_Prog");
                _LUpd_Prog = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LUpd_Prog");
                OnLUpd_ProgChanged();
            }
        }
        private global::System.String _LUpd_Prog;
        partial void OnLUpd_ProgChanging(global::System.String value);
        partial void OnLUpd_ProgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LUpd_User
        {
            get
            {
                return _LUpd_User;
            }
            set
            {
                OnLUpd_UserChanging(value);
                ReportPropertyChanging("LUpd_User");
                _LUpd_User = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LUpd_User");
                OnLUpd_UserChanged();
            }
        }
        private global::System.String _LUpd_User;
        partial void OnLUpd_UserChanging(global::System.String value);
        partial void OnLUpd_UserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] tstamp
        {
            get
            {
                return StructuralObject.GetValidValue(_tstamp);
            }
            set
            {
                OntstampChanging(value);
                ReportPropertyChanging("tstamp");
                _tstamp = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("tstamp");
                OntstampChanged();
            }
        }
        private global::System.Byte[] _tstamp;
        partial void OntstampChanging(global::System.Byte[] value);
        partial void OntstampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Crtd_DateTime
        {
            get
            {
                return _Crtd_DateTime;
            }
            set
            {
                OnCrtd_DateTimeChanging(value);
                ReportPropertyChanging("Crtd_DateTime");
                _Crtd_DateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Crtd_DateTime");
                OnCrtd_DateTimeChanged();
            }
        }
        private global::System.DateTime _Crtd_DateTime;
        partial void OnCrtd_DateTimeChanging(global::System.DateTime value);
        partial void OnCrtd_DateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Crtd_Prog
        {
            get
            {
                return _Crtd_Prog;
            }
            set
            {
                OnCrtd_ProgChanging(value);
                ReportPropertyChanging("Crtd_Prog");
                _Crtd_Prog = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Crtd_Prog");
                OnCrtd_ProgChanged();
            }
        }
        private global::System.String _Crtd_Prog;
        partial void OnCrtd_ProgChanging(global::System.String value);
        partial void OnCrtd_ProgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Crtd_User
        {
            get
            {
                return _Crtd_User;
            }
            set
            {
                OnCrtd_UserChanging(value);
                ReportPropertyChanging("Crtd_User");
                _Crtd_User = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Crtd_User");
                OnCrtd_UserChanged();
            }
        }
        private global::System.String _Crtd_User;
        partial void OnCrtd_UserChanging(global::System.String value);
        partial void OnCrtd_UserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LineRef
        {
            get
            {
                return _LineRef;
            }
            set
            {
                OnLineRefChanging(value);
                ReportPropertyChanging("LineRef");
                _LineRef = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LineRef");
                OnLineRefChanged();
            }
        }
        private global::System.String _LineRef;
        partial void OnLineRefChanging(global::System.String value);
        partial void OnLineRefChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FreeITemSiteID
        {
            get
            {
                return _FreeITemSiteID;
            }
            set
            {
                OnFreeITemSiteIDChanging(value);
                ReportPropertyChanging("FreeITemSiteID");
                _FreeITemSiteID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FreeITemSiteID");
                OnFreeITemSiteIDChanged();
            }
        }
        private global::System.String _FreeITemSiteID;
        partial void OnFreeITemSiteIDChanging(global::System.String value);
        partial void OnFreeITemSiteIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FreeItemBudgetID
        {
            get
            {
                return _FreeItemBudgetID;
            }
            set
            {
                OnFreeItemBudgetIDChanging(value);
                ReportPropertyChanging("FreeItemBudgetID");
                _FreeItemBudgetID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FreeItemBudgetID");
                OnFreeItemBudgetIDChanged();
            }
        }
        private global::System.String _FreeItemBudgetID;
        partial void OnFreeItemBudgetIDChanging(global::System.String value);
        partial void OnFreeItemBudgetIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FreeItemID
        {
            get
            {
                return _FreeItemID;
            }
            set
            {
                OnFreeItemIDChanging(value);
                ReportPropertyChanging("FreeItemID");
                _FreeItemID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FreeItemID");
                OnFreeItemIDChanged();
            }
        }
        private global::System.String _FreeItemID;
        partial void OnFreeItemIDChanging(global::System.String value);
        partial void OnFreeItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double FreeItemQty
        {
            get
            {
                return _FreeItemQty;
            }
            set
            {
                OnFreeItemQtyChanging(value);
                ReportPropertyChanging("FreeItemQty");
                _FreeItemQty = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FreeItemQty");
                OnFreeItemQtyChanged();
            }
        }
        private global::System.Double _FreeItemQty;
        partial void OnFreeItemQtyChanging(global::System.Double value);
        partial void OnFreeItemQtyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UnitDescr
        {
            get
            {
                return _UnitDescr;
            }
            set
            {
                OnUnitDescrChanging(value);
                ReportPropertyChanging("UnitDescr");
                _UnitDescr = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UnitDescr");
                OnUnitDescrChanged();
            }
        }
        private global::System.String _UnitDescr;
        partial void OnUnitDescrChanging(global::System.String value);
        partial void OnUnitDescrChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GroupItem
        {
            get
            {
                return _GroupItem;
            }
            set
            {
                OnGroupItemChanging(value);
                ReportPropertyChanging("GroupItem");
                _GroupItem = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GroupItem");
                OnGroupItemChanged();
            }
        }
        private global::System.String _GroupItem;
        partial void OnGroupItemChanging(global::System.String value);
        partial void OnGroupItemChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Priority
        {
            get
            {
                return _Priority;
            }
            set
            {
                OnPriorityChanging(value);
                ReportPropertyChanging("Priority");
                _Priority = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Priority");
                OnPriorityChanged();
            }
        }
        private global::System.Int32 _Priority;
        partial void OnPriorityChanging(global::System.Int32 value);
        partial void OnPriorityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TypeUnit
        {
            get
            {
                return _TypeUnit;
            }
            set
            {
                OnTypeUnitChanging(value);
                ReportPropertyChanging("TypeUnit");
                _TypeUnit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TypeUnit");
                OnTypeUnitChanged();
            }
        }
        private Nullable<global::System.Int32> _TypeUnit;
        partial void OnTypeUnitChanging(Nullable<global::System.Int32> value);
        partial void OnTypeUnitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.Double _Price;
        partial void OnPriceChanging(global::System.Double value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FreeITemSiteWhseLoc
        {
            get
            {
                return _FreeITemSiteWhseLoc;
            }
            set
            {
                OnFreeITemSiteWhseLocChanging(value);
                ReportPropertyChanging("FreeITemSiteWhseLoc");
                _FreeITemSiteWhseLoc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FreeITemSiteWhseLoc");
                OnFreeITemSiteWhseLocChanged();
            }
        }
        private global::System.String _FreeITemSiteWhseLoc;
        partial void OnFreeITemSiteWhseLocChanging(global::System.String value);
        partial void OnFreeITemSiteWhseLocChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="OM21100Model", Name="OM21100_pgPromotionsCopy_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class OM21100_pgPromotionsCopy_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OM21100_pgPromotionsCopy_Result object.
        /// </summary>
        /// <param name="discID">Initial value of the DiscID property.</param>
        /// <param name="discSeq">Initial value of the DiscSeq property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        /// <param name="startDate">Initial value of the StartDate property.</param>
        /// <param name="endDate">Initial value of the EndDate property.</param>
        /// <param name="tstamp">Initial value of the tstamp property.</param>
        public static OM21100_pgPromotionsCopy_Result CreateOM21100_pgPromotionsCopy_Result(global::System.String discID, global::System.String discSeq, global::System.Int16 active, global::System.DateTime startDate, global::System.DateTime endDate, global::System.Byte[] tstamp)
        {
            OM21100_pgPromotionsCopy_Result oM21100_pgPromotionsCopy_Result = new OM21100_pgPromotionsCopy_Result();
            oM21100_pgPromotionsCopy_Result.DiscID = discID;
            oM21100_pgPromotionsCopy_Result.DiscSeq = discSeq;
            oM21100_pgPromotionsCopy_Result.Active = active;
            oM21100_pgPromotionsCopy_Result.StartDate = startDate;
            oM21100_pgPromotionsCopy_Result.EndDate = endDate;
            oM21100_pgPromotionsCopy_Result.tstamp = tstamp;
            return oM21100_pgPromotionsCopy_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Selected
        {
            get
            {
                return _Selected;
            }
            set
            {
                OnSelectedChanging(value);
                ReportPropertyChanging("Selected");
                _Selected = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Selected");
                OnSelectedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Selected;
        partial void OnSelectedChanging(Nullable<global::System.Boolean> value);
        partial void OnSelectedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DiscID
        {
            get
            {
                return _DiscID;
            }
            set
            {
                OnDiscIDChanging(value);
                ReportPropertyChanging("DiscID");
                _DiscID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DiscID");
                OnDiscIDChanged();
            }
        }
        private global::System.String _DiscID;
        partial void OnDiscIDChanging(global::System.String value);
        partial void OnDiscIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DiscSeq
        {
            get
            {
                return _DiscSeq;
            }
            set
            {
                OnDiscSeqChanging(value);
                ReportPropertyChanging("DiscSeq");
                _DiscSeq = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DiscSeq");
                OnDiscSeqChanged();
            }
        }
        private global::System.String _DiscSeq;
        partial void OnDiscSeqChanging(global::System.String value);
        partial void OnDiscSeqChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Int16 _Active;
        partial void OnActiveChanging(global::System.Int16 value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Descr
        {
            get
            {
                return _Descr;
            }
            set
            {
                OnDescrChanging(value);
                ReportPropertyChanging("Descr");
                _Descr = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Descr");
                OnDescrChanged();
            }
        }
        private global::System.String _Descr;
        partial void OnDescrChanging(global::System.String value);
        partial void OnDescrChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private global::System.DateTime _StartDate;
        partial void OnStartDateChanging(global::System.DateTime value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private global::System.DateTime _EndDate;
        partial void OnEndDateChanging(global::System.DateTime value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] tstamp
        {
            get
            {
                return StructuralObject.GetValidValue(_tstamp);
            }
            set
            {
                OntstampChanging(value);
                ReportPropertyChanging("tstamp");
                _tstamp = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("tstamp");
                OntstampChanged();
            }
        }
        private global::System.Byte[] _tstamp;
        partial void OntstampChanging(global::System.Byte[] value);
        partial void OntstampChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="OM21100Model", Name="OM21100_ppCheckdDuplicatePriorityPromo_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class OM21100_ppCheckdDuplicatePriorityPromo_Result : ComplexObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Result
        {
            get
            {
                return _Result;
            }
            set
            {
                OnResultChanging(value);
                ReportPropertyChanging("Result");
                _Result = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Result");
                OnResultChanged();
            }
        }
        private global::System.String _Result;
        partial void OnResultChanging(global::System.String value);
        partial void OnResultChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ResultDiscID
        {
            get
            {
                return _ResultDiscID;
            }
            set
            {
                OnResultDiscIDChanging(value);
                ReportPropertyChanging("ResultDiscID");
                _ResultDiscID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ResultDiscID");
                OnResultDiscIDChanged();
            }
        }
        private global::System.String _ResultDiscID;
        partial void OnResultDiscIDChanging(global::System.String value);
        partial void OnResultDiscIDChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="OM21100Model", Name="OM21100_ppCompanyCheck_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class OM21100_ppCompanyCheck_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OM21100_ppCompanyCheck_Result object.
        /// </summary>
        /// <param name="cpnyID">Initial value of the CpnyID property.</param>
        public static OM21100_ppCompanyCheck_Result CreateOM21100_ppCompanyCheck_Result(global::System.String cpnyID)
        {
            OM21100_ppCompanyCheck_Result oM21100_ppCompanyCheck_Result = new OM21100_ppCompanyCheck_Result();
            oM21100_ppCompanyCheck_Result.CpnyID = cpnyID;
            return oM21100_ppCompanyCheck_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CpnyID
        {
            get
            {
                return _CpnyID;
            }
            set
            {
                OnCpnyIDChanging(value);
                ReportPropertyChanging("CpnyID");
                _CpnyID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CpnyID");
                OnCpnyIDChanged();
            }
        }
        private global::System.String _CpnyID;
        partial void OnCpnyIDChanging(global::System.String value);
        partial void OnCpnyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CpnyName
        {
            get
            {
                return _CpnyName;
            }
            set
            {
                OnCpnyNameChanging(value);
                ReportPropertyChanging("CpnyName");
                _CpnyName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CpnyName");
                OnCpnyNameChanged();
            }
        }
        private global::System.String _CpnyName;
        partial void OnCpnyNameChanging(global::System.String value);
        partial void OnCpnyNameChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="OM21100Model", Name="OM21100_ppIN_Inventory_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class OM21100_ppIN_Inventory_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OM21100_ppIN_Inventory_Result object.
        /// </summary>
        /// <param name="invtID">Initial value of the InvtID property.</param>
        public static OM21100_ppIN_Inventory_Result CreateOM21100_ppIN_Inventory_Result(global::System.String invtID)
        {
            OM21100_ppIN_Inventory_Result oM21100_ppIN_Inventory_Result = new OM21100_ppIN_Inventory_Result();
            oM21100_ppIN_Inventory_Result.InvtID = invtID;
            return oM21100_ppIN_Inventory_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String InvtID
        {
            get
            {
                return _InvtID;
            }
            set
            {
                OnInvtIDChanging(value);
                ReportPropertyChanging("InvtID");
                _InvtID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("InvtID");
                OnInvtIDChanged();
            }
        }
        private global::System.String _InvtID;
        partial void OnInvtIDChanging(global::System.String value);
        partial void OnInvtIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Descr
        {
            get
            {
                return _Descr;
            }
            set
            {
                OnDescrChanging(value);
                ReportPropertyChanging("Descr");
                _Descr = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Descr");
                OnDescrChanged();
            }
        }
        private global::System.String _Descr;
        partial void OnDescrChanging(global::System.String value);
        partial void OnDescrChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Stkunit
        {
            get
            {
                return _Stkunit;
            }
            set
            {
                OnStkunitChanging(value);
                ReportPropertyChanging("Stkunit");
                _Stkunit = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Stkunit");
                OnStkunitChanged();
            }
        }
        private global::System.String _Stkunit;
        partial void OnStkunitChanging(global::System.String value);
        partial void OnStkunitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DfltSOUnit
        {
            get
            {
                return _DfltSOUnit;
            }
            set
            {
                OnDfltSOUnitChanging(value);
                ReportPropertyChanging("DfltSOUnit");
                _DfltSOUnit = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DfltSOUnit");
                OnDfltSOUnitChanged();
            }
        }
        private global::System.String _DfltSOUnit;
        partial void OnDfltSOUnitChanging(global::System.String value);
        partial void OnDfltSOUnitChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="OM21100Model", Name="OM21100_ppIN_UnitConversion_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class OM21100_ppIN_UnitConversion_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OM21100_ppIN_UnitConversion_Result object.
        /// </summary>
        /// <param name="fromUnit">Initial value of the FromUnit property.</param>
        /// <param name="classID">Initial value of the ClassID property.</param>
        public static OM21100_ppIN_UnitConversion_Result CreateOM21100_ppIN_UnitConversion_Result(global::System.String fromUnit, global::System.String classID)
        {
            OM21100_ppIN_UnitConversion_Result oM21100_ppIN_UnitConversion_Result = new OM21100_ppIN_UnitConversion_Result();
            oM21100_ppIN_UnitConversion_Result.FromUnit = fromUnit;
            oM21100_ppIN_UnitConversion_Result.ClassID = classID;
            return oM21100_ppIN_UnitConversion_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FromUnit
        {
            get
            {
                return _FromUnit;
            }
            set
            {
                OnFromUnitChanging(value);
                ReportPropertyChanging("FromUnit");
                _FromUnit = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FromUnit");
                OnFromUnitChanged();
            }
        }
        private global::System.String _FromUnit;
        partial void OnFromUnitChanging(global::System.String value);
        partial void OnFromUnitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ClassID
        {
            get
            {
                return _ClassID;
            }
            set
            {
                OnClassIDChanging(value);
                ReportPropertyChanging("ClassID");
                _ClassID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ClassID");
                OnClassIDChanged();
            }
        }
        private global::System.String _ClassID;
        partial void OnClassIDChanging(global::System.String value);
        partial void OnClassIDChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="OM21100Model", Name="OM21100_ppOM_DiscSeq_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class OM21100_ppOM_DiscSeq_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OM21100_ppOM_DiscSeq_Result object.
        /// </summary>
        /// <param name="discSeq">Initial value of the DiscSeq property.</param>
        public static OM21100_ppOM_DiscSeq_Result CreateOM21100_ppOM_DiscSeq_Result(global::System.String discSeq)
        {
            OM21100_ppOM_DiscSeq_Result oM21100_ppOM_DiscSeq_Result = new OM21100_ppOM_DiscSeq_Result();
            oM21100_ppOM_DiscSeq_Result.DiscSeq = discSeq;
            return oM21100_ppOM_DiscSeq_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DiscSeq
        {
            get
            {
                return _DiscSeq;
            }
            set
            {
                OnDiscSeqChanging(value);
                ReportPropertyChanging("DiscSeq");
                _DiscSeq = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DiscSeq");
                OnDiscSeqChanged();
            }
        }
        private global::System.String _DiscSeq;
        partial void OnDiscSeqChanging(global::System.String value);
        partial void OnDiscSeqChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Descr
        {
            get
            {
                return _Descr;
            }
            set
            {
                OnDescrChanging(value);
                ReportPropertyChanging("Descr");
                _Descr = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Descr");
                OnDescrChanged();
            }
        }
        private global::System.String _Descr;
        partial void OnDescrChanging(global::System.String value);
        partial void OnDescrChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="OM21100Model", Name="OM21100_ptChannel_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class OM21100_ptChannel_Result : ComplexObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Channel
        {
            get
            {
                return _Channel;
            }
            set
            {
                OnChannelChanging(value);
                ReportPropertyChanging("Channel");
                _Channel = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Channel");
                OnChannelChanged();
            }
        }
        private global::System.String _Channel;
        partial void OnChannelChanging(global::System.String value);
        partial void OnChannelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Descr
        {
            get
            {
                return _Descr;
            }
            set
            {
                OnDescrChanging(value);
                ReportPropertyChanging("Descr");
                _Descr = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Descr");
                OnDescrChanged();
            }
        }
        private global::System.String _Descr;
        partial void OnDescrChanging(global::System.String value);
        partial void OnDescrChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="OM21100Model", Name="OM21100_ptCompany_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class OM21100_ptCompany_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OM21100_ptCompany_Result object.
        /// </summary>
        /// <param name="cpnyID">Initial value of the CpnyID property.</param>
        public static OM21100_ptCompany_Result CreateOM21100_ptCompany_Result(global::System.String cpnyID)
        {
            OM21100_ptCompany_Result oM21100_ptCompany_Result = new OM21100_ptCompany_Result();
            oM21100_ptCompany_Result.CpnyID = cpnyID;
            return oM21100_ptCompany_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CpnyID
        {
            get
            {
                return _CpnyID;
            }
            set
            {
                OnCpnyIDChanging(value);
                ReportPropertyChanging("CpnyID");
                _CpnyID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CpnyID");
                OnCpnyIDChanged();
            }
        }
        private global::System.String _CpnyID;
        partial void OnCpnyIDChanging(global::System.String value);
        partial void OnCpnyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CpnyName
        {
            get
            {
                return _CpnyName;
            }
            set
            {
                OnCpnyNameChanging(value);
                ReportPropertyChanging("CpnyName");
                _CpnyName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CpnyName");
                OnCpnyNameChanged();
            }
        }
        private global::System.String _CpnyName;
        partial void OnCpnyNameChanging(global::System.String value);
        partial void OnCpnyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Territory
        {
            get
            {
                return _Territory;
            }
            set
            {
                OnTerritoryChanging(value);
                ReportPropertyChanging("Territory");
                _Territory = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Territory");
                OnTerritoryChanged();
            }
        }
        private global::System.String _Territory;
        partial void OnTerritoryChanging(global::System.String value);
        partial void OnTerritoryChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="OM21100Model", Name="OM21100_ptCustClass_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class OM21100_ptCustClass_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OM21100_ptCustClass_Result object.
        /// </summary>
        /// <param name="classID">Initial value of the ClassID property.</param>
        public static OM21100_ptCustClass_Result CreateOM21100_ptCustClass_Result(global::System.String classID)
        {
            OM21100_ptCustClass_Result oM21100_ptCustClass_Result = new OM21100_ptCustClass_Result();
            oM21100_ptCustClass_Result.ClassID = classID;
            return oM21100_ptCustClass_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Channel
        {
            get
            {
                return _Channel;
            }
            set
            {
                OnChannelChanging(value);
                ReportPropertyChanging("Channel");
                _Channel = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Channel");
                OnChannelChanged();
            }
        }
        private global::System.String _Channel;
        partial void OnChannelChanging(global::System.String value);
        partial void OnChannelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ClassID
        {
            get
            {
                return _ClassID;
            }
            set
            {
                OnClassIDChanging(value);
                ReportPropertyChanging("ClassID");
                _ClassID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ClassID");
                OnClassIDChanged();
            }
        }
        private global::System.String _ClassID;
        partial void OnClassIDChanging(global::System.String value);
        partial void OnClassIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Descr
        {
            get
            {
                return _Descr;
            }
            set
            {
                OnDescrChanging(value);
                ReportPropertyChanging("Descr");
                _Descr = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Descr");
                OnDescrChanged();
            }
        }
        private global::System.String _Descr;
        partial void OnDescrChanging(global::System.String value);
        partial void OnDescrChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="OM21100Model", Name="OM21100_ptCustomer_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class OM21100_ptCustomer_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OM21100_ptCustomer_Result object.
        /// </summary>
        /// <param name="custID">Initial value of the CustID property.</param>
        /// <param name="branchID">Initial value of the BranchID property.</param>
        /// <param name="custName">Initial value of the CustName property.</param>
        public static OM21100_ptCustomer_Result CreateOM21100_ptCustomer_Result(global::System.String custID, global::System.String branchID, global::System.String custName)
        {
            OM21100_ptCustomer_Result oM21100_ptCustomer_Result = new OM21100_ptCustomer_Result();
            oM21100_ptCustomer_Result.CustID = custID;
            oM21100_ptCustomer_Result.BranchID = branchID;
            oM21100_ptCustomer_Result.CustName = custName;
            return oM21100_ptCustomer_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CustID
        {
            get
            {
                return _CustID;
            }
            set
            {
                OnCustIDChanging(value);
                ReportPropertyChanging("CustID");
                _CustID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CustID");
                OnCustIDChanged();
            }
        }
        private global::System.String _CustID;
        partial void OnCustIDChanging(global::System.String value);
        partial void OnCustIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Addr1
        {
            get
            {
                return _Addr1;
            }
            set
            {
                OnAddr1Changing(value);
                ReportPropertyChanging("Addr1");
                _Addr1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Addr1");
                OnAddr1Changed();
            }
        }
        private global::System.String _Addr1;
        partial void OnAddr1Changing(global::System.String value);
        partial void OnAddr1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Addr2
        {
            get
            {
                return _Addr2;
            }
            set
            {
                OnAddr2Changing(value);
                ReportPropertyChanging("Addr2");
                _Addr2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Addr2");
                OnAddr2Changed();
            }
        }
        private global::System.String _Addr2;
        partial void OnAddr2Changing(global::System.String value);
        partial void OnAddr2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Terms
        {
            get
            {
                return _Terms;
            }
            set
            {
                OnTermsChanging(value);
                ReportPropertyChanging("Terms");
                _Terms = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Terms");
                OnTermsChanged();
            }
        }
        private global::System.String _Terms;
        partial void OnTermsChanging(global::System.String value);
        partial void OnTermsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BranchID
        {
            get
            {
                return _BranchID;
            }
            set
            {
                OnBranchIDChanging(value);
                ReportPropertyChanging("BranchID");
                _BranchID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BranchID");
                OnBranchIDChanged();
            }
        }
        private global::System.String _BranchID;
        partial void OnBranchIDChanging(global::System.String value);
        partial void OnBranchIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Channel
        {
            get
            {
                return _Channel;
            }
            set
            {
                OnChannelChanging(value);
                ReportPropertyChanging("Channel");
                _Channel = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Channel");
                OnChannelChanged();
            }
        }
        private global::System.String _Channel;
        partial void OnChannelChanging(global::System.String value);
        partial void OnChannelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClassID
        {
            get
            {
                return _ClassID;
            }
            set
            {
                OnClassIDChanging(value);
                ReportPropertyChanging("ClassID");
                _ClassID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ClassID");
                OnClassIDChanged();
            }
        }
        private global::System.String _ClassID;
        partial void OnClassIDChanging(global::System.String value);
        partial void OnClassIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CustName
        {
            get
            {
                return _CustName;
            }
            set
            {
                OnCustNameChanging(value);
                ReportPropertyChanging("CustName");
                _CustName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CustName");
                OnCustNameChanged();
            }
        }
        private global::System.String _CustName;
        partial void OnCustNameChanging(global::System.String value);
        partial void OnCustNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Territory
        {
            get
            {
                return _Territory;
            }
            set
            {
                OnTerritoryChanging(value);
                ReportPropertyChanging("Territory");
                _Territory = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Territory");
                OnTerritoryChanged();
            }
        }
        private global::System.String _Territory;
        partial void OnTerritoryChanging(global::System.String value);
        partial void OnTerritoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TerritoryName
        {
            get
            {
                return _TerritoryName;
            }
            set
            {
                OnTerritoryNameChanging(value);
                ReportPropertyChanging("TerritoryName");
                _TerritoryName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TerritoryName");
                OnTerritoryNameChanged();
            }
        }
        private global::System.String _TerritoryName;
        partial void OnTerritoryNameChanging(global::System.String value);
        partial void OnTerritoryNameChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="OM21100Model", Name="OM21100_ptInventory_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class OM21100_ptInventory_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OM21100_ptInventory_Result object.
        /// </summary>
        /// <param name="invtID">Initial value of the InvtID property.</param>
        /// <param name="nodeLevel">Initial value of the NodeLevel property.</param>
        /// <param name="parentRecordID">Initial value of the ParentRecordID property.</param>
        /// <param name="cnvFact">Initial value of the CnvFact property.</param>
        /// <param name="invtType">Initial value of the InvtType property.</param>
        public static OM21100_ptInventory_Result CreateOM21100_ptInventory_Result(global::System.String invtID, global::System.Int16 nodeLevel, global::System.Int32 parentRecordID, global::System.Double cnvFact, global::System.String invtType)
        {
            OM21100_ptInventory_Result oM21100_ptInventory_Result = new OM21100_ptInventory_Result();
            oM21100_ptInventory_Result.InvtID = invtID;
            oM21100_ptInventory_Result.NodeLevel = nodeLevel;
            oM21100_ptInventory_Result.ParentRecordID = parentRecordID;
            oM21100_ptInventory_Result.CnvFact = cnvFact;
            oM21100_ptInventory_Result.InvtType = invtType;
            return oM21100_ptInventory_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String InvtID
        {
            get
            {
                return _InvtID;
            }
            set
            {
                OnInvtIDChanging(value);
                ReportPropertyChanging("InvtID");
                _InvtID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("InvtID");
                OnInvtIDChanged();
            }
        }
        private global::System.String _InvtID;
        partial void OnInvtIDChanging(global::System.String value);
        partial void OnInvtIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Descr
        {
            get
            {
                return _Descr;
            }
            set
            {
                OnDescrChanging(value);
                ReportPropertyChanging("Descr");
                _Descr = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Descr");
                OnDescrChanged();
            }
        }
        private global::System.String _Descr;
        partial void OnDescrChanging(global::System.String value);
        partial void OnDescrChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Unit
        {
            get
            {
                return _Unit;
            }
            set
            {
                OnUnitChanging(value);
                ReportPropertyChanging("Unit");
                _Unit = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Unit");
                OnUnitChanged();
            }
        }
        private global::System.String _Unit;
        partial void OnUnitChanging(global::System.String value);
        partial void OnUnitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NodeID
        {
            get
            {
                return _NodeID;
            }
            set
            {
                OnNodeIDChanging(value);
                ReportPropertyChanging("NodeID");
                _NodeID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NodeID");
                OnNodeIDChanged();
            }
        }
        private global::System.String _NodeID;
        partial void OnNodeIDChanging(global::System.String value);
        partial void OnNodeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 NodeLevel
        {
            get
            {
                return _NodeLevel;
            }
            set
            {
                OnNodeLevelChanging(value);
                ReportPropertyChanging("NodeLevel");
                _NodeLevel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NodeLevel");
                OnNodeLevelChanged();
            }
        }
        private global::System.Int16 _NodeLevel;
        partial void OnNodeLevelChanging(global::System.Int16 value);
        partial void OnNodeLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ParentRecordID
        {
            get
            {
                return _ParentRecordID;
            }
            set
            {
                OnParentRecordIDChanging(value);
                ReportPropertyChanging("ParentRecordID");
                _ParentRecordID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentRecordID");
                OnParentRecordIDChanged();
            }
        }
        private global::System.Int32 _ParentRecordID;
        partial void OnParentRecordIDChanging(global::System.Int32 value);
        partial void OnParentRecordIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double CnvFact
        {
            get
            {
                return _CnvFact;
            }
            set
            {
                OnCnvFactChanging(value);
                ReportPropertyChanging("CnvFact");
                _CnvFact = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CnvFact");
                OnCnvFactChanged();
            }
        }
        private global::System.Double _CnvFact;
        partial void OnCnvFactChanging(global::System.Double value);
        partial void OnCnvFactChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String InvtType
        {
            get
            {
                return _InvtType;
            }
            set
            {
                OnInvtTypeChanging(value);
                ReportPropertyChanging("InvtType");
                _InvtType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("InvtType");
                OnInvtTypeChanged();
            }
        }
        private global::System.String _InvtType;
        partial void OnInvtTypeChanging(global::System.String value);
        partial void OnInvtTypeChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="OM21100Model", Name="OM21100_ptTerritory_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class OM21100_ptTerritory_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OM21100_ptTerritory_Result object.
        /// </summary>
        /// <param name="territory">Initial value of the Territory property.</param>
        public static OM21100_ptTerritory_Result CreateOM21100_ptTerritory_Result(global::System.String territory)
        {
            OM21100_ptTerritory_Result oM21100_ptTerritory_Result = new OM21100_ptTerritory_Result();
            oM21100_ptTerritory_Result.Territory = territory;
            return oM21100_ptTerritory_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Territory
        {
            get
            {
                return _Territory;
            }
            set
            {
                OnTerritoryChanging(value);
                ReportPropertyChanging("Territory");
                _Territory = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Territory");
                OnTerritoryChanged();
            }
        }
        private global::System.String _Territory;
        partial void OnTerritoryChanging(global::System.String value);
        partial void OnTerritoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Descr
        {
            get
            {
                return _Descr;
            }
            set
            {
                OnDescrChanging(value);
                ReportPropertyChanging("Descr");
                _Descr = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Descr");
                OnDescrChanged();
            }
        }
        private global::System.String _Descr;
        partial void OnDescrChanging(global::System.String value);
        partial void OnDescrChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="OM21100Model", Name="OM21100_ptTreeNode_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class OM21100_ptTreeNode_Result : ComplexObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Descr
        {
            get
            {
                return _Descr;
            }
            set
            {
                OnDescrChanging(value);
                ReportPropertyChanging("Descr");
                _Descr = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Descr");
                OnDescrChanged();
            }
        }
        private global::System.String _Descr;
        partial void OnDescrChanging(global::System.String value);
        partial void OnDescrChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ParentID
        {
            get
            {
                return _ParentID;
            }
            set
            {
                OnParentIDChanging(value);
                ReportPropertyChanging("ParentID");
                _ParentID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ParentID");
                OnParentIDChanged();
            }
        }
        private global::System.String _ParentID;
        partial void OnParentIDChanging(global::System.String value);
        partial void OnParentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LevelID
        {
            get
            {
                return _LevelID;
            }
            set
            {
                OnLevelIDChanging(value);
                ReportPropertyChanging("LevelID");
                _LevelID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LevelID");
                OnLevelIDChanged();
            }
        }
        private Nullable<global::System.Int32> _LevelID;
        partial void OnLevelIDChanging(Nullable<global::System.Int32> value);
        partial void OnLevelIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="OM21100Model", Name="OM21100_ptTreeNodeCustomer_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class OM21100_ptTreeNodeCustomer_Result : ComplexObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Descr
        {
            get
            {
                return _Descr;
            }
            set
            {
                OnDescrChanging(value);
                ReportPropertyChanging("Descr");
                _Descr = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Descr");
                OnDescrChanged();
            }
        }
        private global::System.String _Descr;
        partial void OnDescrChanging(global::System.String value);
        partial void OnDescrChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ParentID
        {
            get
            {
                return _ParentID;
            }
            set
            {
                OnParentIDChanging(value);
                ReportPropertyChanging("ParentID");
                _ParentID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ParentID");
                OnParentIDChanged();
            }
        }
        private global::System.String _ParentID;
        partial void OnParentIDChanging(global::System.String value);
        partial void OnParentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LevelID
        {
            get
            {
                return _LevelID;
            }
            set
            {
                OnLevelIDChanging(value);
                ReportPropertyChanging("LevelID");
                _LevelID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LevelID");
                OnLevelIDChanged();
            }
        }
        private Nullable<global::System.Int32> _LevelID;
        partial void OnLevelIDChanging(Nullable<global::System.Int32> value);
        partial void OnLevelIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();

        #endregion

    }

    #endregion

    
}
