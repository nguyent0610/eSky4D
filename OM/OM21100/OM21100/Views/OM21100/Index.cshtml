@using Ext.Net;
@using Ext.Net.MVC;
@using HQ.eSkyFramework;
@using HQ.eSkyFramework.HQControl;
@using OM21100;

@model System.Collections.IEnumerable
  
@{
    Layout = null;
    var X = Html.X();
    ViewBag.Title = "OM21100";
    var acc = Session["OM21100"] as AccessRight;
    
}
<!DOCTYPE html>
<html>
    <head>
        <meta name="viewport" content="width=device-width" />
        <link href="~/Content/ComboXTemplate.css" rel="stylesheet" />
        <script src='@Url.Content("Scripts/hq.language"+Current.LangID+".js?"+DateTime.Now.ToString("yyyyMMddss"))' type="text/javascript"></script>
        <script src='@Url.Content("Scripts/hq.common.js?"+DateTime.Now.ToString("yyyyMMddss"))' type="text/javascript"></script>
        <script src='@Url.Content("Scripts/Screen/OM21100.js?" + DateTime.Now.ToString("yyyyMMddss"))' type="text/javascript"></script>

        <script type="text/javascript">
            HQ.cpnyID = '@Current.CpnyID';
            HQ.langID = '@Current.LangID';
            HQ.userName = '@Current.UserName';
            HQ.isUpdate = HQ.util.toBool('@acc.Update.ToString()');
            HQ.isInsert = HQ.util.toBool('@acc.Insert.ToString()');
            HQ.isDelete = HQ.util.toBool('@acc.Delete.ToString()');
            HQ.addSameKind = HQ.util.toBool('@ViewBag.addSameKind.ToString()');
            var _dateNow = new Date('@DateTime.Now.Date');
        </script>

        <title>@ViewBag.Title</title>
    </head>
    <body>
        @(X.ResourceManager().Theme((Theme)Enum.Parse(typeof(Theme), Current.Theme.PassNull() == "" ? "Default" : Current.Theme.PassNull())))

        @(
            X.Store().ID("stoDiscInfo")
            .AutoLoad(false)
            .Model(Util.GenerateModel(typeof(OM_Discount), "mdlDiscInfo", "DiscID"))
            .Proxy(
                X.AjaxProxy()
                .Url(Url.Action("GetDiscInfo", "OM21100"))
                .ActionMethods(action =>
                {
                    action.Read = HttpMethod.POST;
                })
                .Reader(X.JsonReader().Root("data").TotalProperty("totaldata"))
            )
            .Parameters(ps =>
            {
                ps.Add(new StoreParameter("discID", "App.cboDiscID.getValue()", ParameterMode.Raw));
            })
            .Listeners(x =>
            {
                x.Load.Fn = "DiscDefintion.Event.stoDiscInfo_load";
            })
                // Store: stoDiscSeqInfo
        )

        @(
            X.Store().ID("stoDiscSeqInfo")
            .AutoLoad(false)
            .Model(Util.GenerateModel(typeof(OM_DiscSeq), "mdlDiscSeqInfo", "DiscSeq",true,"Active,Promo"))
            .Proxy(
                X.AjaxProxy()
                .Url(Url.Action("GetDiscSeqInfo", "OM21100"))
                .ActionMethods(action =>
                {
                    action.Read = HttpMethod.POST;
                })
                .Reader(X.JsonReader().Root("data").TotalProperty("totaldata"))
            )
            .Parameters(ps =>
            {
                ps.Add(new StoreParameter("discID", "App.cboDiscID.getValue()", ParameterMode.Raw));
                ps.Add(new StoreParameter("discSeq", "App.cboDiscSeq.getValue()", ParameterMode.Raw));
            })
            .Listeners(x =>
            {
                x.Load.Fn = "DiscDefintion.Event.stoDiscSeqInfo_load";
                x.BeforeLoad.Handler = "HQ.common.showBusy(true, HQ.common.getLang('LoadingData'));";
            })
                // Store: stoDiscSeqInfo
        )

        @(
            X.Store().ID("stoDiscBreak")
            .AutoLoad(false)
            .Model(Util.GenerateModel(typeof(OM21100_pgDiscBreak_Result), "mdlDiscBreak", "DiscID,DiscSeq,LineRef"))
            .Proxy(
                X.AjaxProxy()
                .Url(Url.Action("GetDiscBreak", "OM21100"))
                .ActionMethods(action =>
                {
                    action.Read = HttpMethod.POST;
                })
                .Reader(X.JsonReader().Root("data").TotalProperty("totaldata"))
            )
            .Parameters(ps =>
            {
                ps.Add(new StoreParameter("discID", "App.cboDiscID.getValue()", ParameterMode.Raw));
                ps.Add(new StoreParameter("discSeq", "App.cboDiscSeq.getValue()", ParameterMode.Raw));
            })
            .Listeners(l =>
            {
                l.BeforeLoad.Handler = "this.HQFieldKeys=['DiscID', 'DiscSeq', 'LineRef'];";
                l.Load.Fn = "Main.Event.sto_load";
                l.Update.Handler = "Main.Event.frmMain_fieldChange()";
                l.DataChanged.Handler = "Main.Event.frmMain_fieldChange()";
            })
                // Store: stoDiscBreak
        )

        @(X.Store().ID("stoFreeItem")
            .AutoLoad(false)
            .Model(Util.GenerateModel(typeof(OM21100_pgFreeItem_Result), "mdlFreeItem", "DiscID,DiscSeq,LineRef,FreeItemID"))
            .Proxy(
                X.AjaxProxy()
                .Url(Url.Action("GetFreeItem", "OM21100"))
                .ActionMethods(action =>
                {
                    action.Read = HttpMethod.POST;
                })
                .Reader(X.JsonReader().Root("data").TotalProperty("totaldata"))
            )
            .Parameters(ps =>
            {
                ps.Add(new StoreParameter("discID", "App.cboDiscID.getValue()", ParameterMode.Raw));
                ps.Add(new StoreParameter("discSeq", "App.cboDiscSeq.getValue()", ParameterMode.Raw));
            })
            .Listeners(l =>
            {
                l.BeforeLoad.Handler = "this.HQFieldKeys=['DiscID', 'DiscSeq', 'LineRef', 'FreeItemID'];";
                l.Load.Fn = "Main.Event.sto_load";
                l.Update.Handler = "Main.Event.frmMain_fieldChange()";
                l.DataChanged.Handler = "Main.Event.frmMain_fieldChange()";
            })
                // Store: stoFreeItem
        )

        @(X.Store().ID("stoCompany")
            .AutoLoad(false)
            .Model(Util.GenerateModel(typeof(OM21100_pgCompany_Result), "mdlCompany", "DiscID,DiscSeq,CpnyID"))
            .Proxy(
                X.AjaxProxy()
                .Url(Url.Action("GetCompany", "OM21100"))
                .ActionMethods(action =>
                {
                    action.Read = HttpMethod.POST;
                })
                .Reader(X.JsonReader().Root("data").TotalProperty("totaldata"))
            )
            .Parameters(ps =>
            {
                ps.Add(new StoreParameter("discID", "App.cboDiscID.getValue()", ParameterMode.Raw));
                ps.Add(new StoreParameter("discSeq", "App.cboDiscSeq.getValue()", ParameterMode.Raw));
            })
            .Listeners(l =>
            {
                l.BeforeLoad.Handler = "this.HQFieldKeys=['DiscID', 'DiscSeq', 'CpnyID'];";
                //l.Load.Fn = "Main.Event.sto_load"; 
                l.Update.Handler = "Main.Event.frmMain_fieldChange()";
                l.DataChanged.Handler = "Main.Event.frmMain_fieldChange()";
            })
                // Store: stoCompany
        )      

         @(X.Store().ID("stoDiscCustClass")
            .AutoLoad(false)
            .Model(Util.GenerateModel(typeof(OM21100_pgDiscCustClass_Result), "mdlDiscCustClass", "DiscID,DiscSeq,ClassID"))
            .Proxy(
                X.AjaxProxy()
                .Url(Url.Action("GetDiscCustClass", "OM21100"))
                .ActionMethods(action =>
                {
                    action.Read = HttpMethod.POST;
                })
                .Reader(X.JsonReader().Root("data").TotalProperty("totaldata"))
            )
            .Parameters(ps =>
            {
                ps.Add(new StoreParameter("discID", "App.cboDiscID.getValue()", ParameterMode.Raw));
                ps.Add(new StoreParameter("discSeq", "App.cboDiscSeq.getValue()", ParameterMode.Raw));
            })
            .Listeners(l =>
            {
                l.BeforeLoad.Handler = "this.HQFieldKeys=['DiscID', 'DiscSeq', 'ClassID'];";
                l.Load.Fn = "Main.Event.sto_load";
                l.Update.Handler = "Main.Event.frmMain_fieldChange()";
                l.DataChanged.Handler = "Main.Event.frmMain_fieldChange()";
            })
                 // Store: stoDiscCustClass
        )
       
        @(X.Store().ID("stoDiscItemClass")
            .AutoLoad(false)
            .Model(Util.GenerateModel(typeof(OM21100_pgDiscItemClass_Result), "mdlDiscItemClass", "DiscID,DiscSeq,ClassID"))
            .Proxy(
                X.AjaxProxy()
                .Url(Url.Action("GetDiscItemClass", "OM21100"))
                .ActionMethods(action =>
                {
                    action.Read = HttpMethod.POST;
                })
                .Reader(X.JsonReader().Root("data").TotalProperty("totaldata"))
            )
            .Parameters(ps =>
            {
                ps.Add(new StoreParameter("discID", "App.cboDiscID.getValue()", ParameterMode.Raw));
                ps.Add(new StoreParameter("discSeq", "App.cboDiscSeq.getValue()", ParameterMode.Raw));
            })
            .Listeners(l =>
            {
                l.BeforeLoad.Handler = "this.HQFieldKeys=['DiscID', 'DiscSeq', 'ClassID'];";
                l.Load.Fn = "Main.Event.sto_load";
                l.Update.Handler = "Main.Event.frmMain_fieldChange()";
                l.DataChanged.Handler = "Main.Event.frmMain_fieldChange()";
            })
                // Store: stoDiscItemClass
        )
        
        @X.GridFilters() <!--Khi cache cho grid-->
        @X.ProgressBarPager() <!--Khi cache cho grid -->

        <!-- Gọi hàm Body trong OM21100Controller để dựng view Body.cshtml, mục đích tạo cache. -->
        @{ Html.RenderAction("Body", new { lang = Current.LangID }); }
    </body>
</html>