@using Ext.Net;
@using Ext.Net.MVC;
@using HQ.eSkyFramework;
@using HQ.eSkyFramework.HQControl;
@using OM23600;
@{
    Layout = null;
    var X = Html.X();
    var HQ = Html.HQ();
}

@(X.Viewport()
.Layout(LayoutType.Fit)
.Items(
     X.FormPanel()    .ID("frmMain")
    .BodyPadding(0)  
    .TrackResetOnLoad(true)
    .KeyMap(Util.SetupKeyMap())
    //.TopBar(Util.SetupToolbar("Print", true, ""))
    .TopBar(Util.SetupToolbar( new AbstractComponent[]{
        X.FileUploadField()
        .ID("btnImport")
        .ButtonText("Import")
        .ButtonOnly(true)
        .Icon(Icon.BookAdd)
        .Listeners(p=>{
            p.Change.Fn = "btnImport_Click";              
        })          
        , X.Button()
        .ID("btnExport")
        .Text(Util.GetLang("Export"))
        .Icon(Icon.ArrowTurnRight)
        .Listeners(p=>{
            p.Click.Fn = "btnExport_Click";
        })
    },"Print",true,""))
    .Layout(LayoutType.Border)
    .FieldDefaults(act => { act.LabelAlign = LabelAlign.Right; act.LabelWidth = 150; })
    .Items(
        ////Thiet ke giao dien o day
        X.Panel().ID("pnlHeader")      ////////////////Header////////////////         .Region(Region.North)
        .Layout(LayoutType.VBox)
         .Region(Region.North)
        .AutoScroll(true)
        .Items(
		//Field header o day
            X.Container().Layout(LayoutType.HBox).MarginSpec("5 0 0 0")
            .Items(
                HQ.Combo().ID("cboPosmID").Name("cboPosmID").HQProcedure("OM23600_pcPosmID").HQLangCode("POSMID")
                .HQColumnShow("PosmID,FromDate,ToDate").DisplayField("PosmID").ValueField("PosmID")
                .Width(300).HQHeightWidth(400,300).ForceSelection(true)
                .AllowBlank(false).HQAutoLoad(true).HQDBSys(false)
                .HQParam(new StoreParameterCollection() 
                { 
                    new StoreParameter() { Name = "@UserID", Value = "HQ.userName", Mode = ParameterMode.Raw },
                    new StoreParameter() { Name = "@CpnyID", Value = "HQ.cpnyID", Mode = ParameterMode.Raw },
                    new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw }
                })
                .Listeners(l =>
                    {
                        l.Change.Fn = "cboPosmID_Change";
                        l.Select.Fn = "cboPosmID_Select";
                        l.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                })
                .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                .LoadData()
                            
                ,HQ.Combo().ID("cboProgID").Name("cboProgID").Width(300).AllowBlank(false).HQAutoLoad(true)
                .HQLangCode("OM23600ProgType").HQProcedure("OM23600_pcProgramType")
                .HQColumnShow("Descr").ForceSelection(true)
                .DisplayField("Descr").ValueField("Code").HQHeightWidth(400, 400)
                .HQParam(new StoreParameterCollection() 
                { 
                    new StoreParameter() { Name = "@UserID", Value = "HQ.userName", Mode = ParameterMode.Raw },
                    new StoreParameter() { Name = "@LogCpnyID", Value = "HQ.cpnyID", Mode = ParameterMode.Raw },
                    new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw }
                })
                .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                .Listeners(lst =>
                {
                    lst.Change.Fn = "cboProgID_Change";
                    //lst.Select.Fn = "cboProgID_Select";
                    lst.TriggerClick.Handler = "if (index == 0) { this.focus(true); this.clearValue();}";
                }).LoadData() 
            )
            , X.Container().Layout(LayoutType.HBox).MarginSpec("0 0 5 0")
                .Items(
                HQ.DateField().ID("dteFromDate").MarginSpec("5 0 0 0").HQLangCode("FromDate").Width(300).AllowBlank(false).Value(DateTime.Now)
                ,HQ.DateField().ID("dteToDate").MarginSpec("5 0 0 0").HQLangCode("ToDate").Width(300).AllowBlank(false).Value(DateTime.Now)
            )
        )
        .Listeners(lss =>
        {
            lss.Render.Handler = "HQ.common.control_render(this,'header')";
        })
 
        , X.Panel().ID("pnlDet") ////////////////Grid////////////////
        .Region(Region.Center)
        .Layout(LayoutType.Border)
        .Items(
            //Grid Panel o day        
                X.GridPanel()
                .Scroll(ScrollMode.Both)
                .View(X.GridView().TrackOver(false).LoadMask(true))
                .Region(Region.Center).Flex(1)
                .SelectionMemory(false)
                .ID("grdDet")
                .Store(
                    X.Store()
                    .ID("stoData")
                    .PageSize(50)
                    .Model(Util.GenerateModel(typeof(OM23600_pgPosmID_Result), "mdlOM23600_pgPosmID", ""))
                    .Parameters(ps =>
                    {
                        ps.Add(new StoreParameter("posmID", "App.cboPosmID.getValue()", ParameterMode.Raw));
                        ps.Add(new StoreParameter("progType", "App.cboProgID.getValue()", ParameterMode.Raw)); 
                    })
                    .ServerProxy(X.AjaxProxy().Url(Url.Action("GetData"))).AutoLoad(false)
                    .Listeners(l =>
                    {
                        l.BeforeLoad.Fn = "stoData_beforeLoad";
                        l.Load.Fn = "stoData_load";
                        l.Update.Fn = "stoData_changed";             
                    })
                )
                .Listeners(p =>
                {
                    p.BoxReady.Handler = "firstLoad();";
                })
                .SortableColumns(false)
                .ColumnModel(
                    X.RowNumbererColumn().Width(40),
                    //X.Column().Text(Util.GetLang("PosmID")).DataIndex("PosmID").Width(100)
                    //    .Editor(
                    //        HQ.Combo().ID("cboPosmID").Name("cboPosmID").HQProcedure("OM23600_pcPosmID")
                    //        .HQColumnShow("PosmID,FromDate,ToDate").DisplayField("PosmID").ValueField("PosmID")
                    //        .Width(200).HQHeightWidth(200, 200)
                    //        .AllowBlank(true).HQAutoLoad(true).HQDBSys(false)
                    //        .HQParam(new StoreParameterCollection() 
                    //        { 
                    //            new StoreParameter() { Name = "@UserID", Value = "HQ.userName", Mode = ParameterMode.Raw },
                    //            new StoreParameter() { Name = "@CpnyID", Value = "HQ.cpnyID", Mode = ParameterMode.Raw },
                    //            new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw }
                    //        })
                    //        .Listeners(l =>
                    //            {
                    //                l.Change.Fn = "cboPosmID_Change";
                    //                l.Select.Fn = "cboPosmID_Select";
                    //                l.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                    //        })
                    //        .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                    //        .LoadData()
                    //        ),
                    X.Column().Text(Util.GetLang("BranchID")).DataIndex("BranchID").Width(110)
                        .Editor(
                                HQ.Combo().ID("cboBranchID").Name("cboBranchID")
                                .HQProcedure("OM23600_pcBranchID")
                                .Width(200).HQHeightWidth(500, 400)
                                .HQColumnShow("BranchID,CpnyName").DisplayField("BranchID").ValueField("BranchID")
                                .AllowBlank(true).ForceSelection(true).HQDBSys(false)
                                .HQParam(new StoreParameterCollection() 
                                { 
                                    new StoreParameter() { Name = "@PosmID", Value = "App.cboPosmID.getValue()", Mode = ParameterMode.Raw },
                                    new StoreParameter() { Name = "@UserID", Value = "HQ.userName", Mode = ParameterMode.Raw },
                                    new StoreParameter() { Name = "@CpnyID", Value = "HQ.cpnyID", Mode = ParameterMode.Raw },
                                    new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw }
                                })
                                .Listeners(l =>
                                {
                                    l.Change.Fn = "cboBranchID_Change";
                                    l.Select.Fn = "cboBranchID_Select";
                                    l.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                                })
                                .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                                .LoadData()
                                    ),
                    X.Column().ID("CustId").Text(Util.GetLang("CustId")).DataIndex("CustId").Width(110)
                         .Editor(
                            HQ.Combo().ID("cboCustId").Name("cboCustId")
                            .HQProcedure("OM23600_pcCustId")
                            .Width(300).HQHeightWidth(500, 400)
                            .HQColumnShow("CustId,CustName").DisplayField("CustId").ValueField("CustId")
                            .AllowBlank(true).ForceSelection(true).HQDBSys(false)
                            .Listeners(l =>
                                    {
                                        l.Change.Fn = "cboCustId_Change";
                                        l.Select.Fn = "cboCustId_Select";
                                        l.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                                    })
                            .HQParam(new StoreParameterCollection() 
                            { 
                                new StoreParameter() { Name = "@UserID", Value = "HQ.userName", Mode = ParameterMode.Raw },
                                new StoreParameter() { Name = "@CpnyID", Value = "_branchID", Mode = ParameterMode.Raw },
                                new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw }
                            })
                            .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                            .LoadData()
                                ),

                    X.Column().Text(Util.GetLang("CustName")).DataIndex("CustName").Width(150),
            
                    X.Column().ID("ClassID").Text(Util.GetLang("ClassID")).DataIndex("ClassID").Width(100)
                             .Editor(
                                HQ.Combo().ID("cboClassID").Name("cboClassID")
                                .HQProcedure("OM23600_pcClassID")
                                .Width(200).HQHeightWidth(500, 400)
                                .HQColumnShow("ClassID,Descr").DisplayField("ClassID").ValueField("ClassID")
                                .AllowBlank(true).ForceSelection(true).HQDBSys(false)

                                .HQParam(new StoreParameterCollection() 
                                { 
                                    new StoreParameter() { Name = "@UserID", Value = "HQ.userName", Mode = ParameterMode.Raw },
                                    new StoreParameter() { Name = "@CpnyID", Value = "HQ.cpnyID", Mode = ParameterMode.Raw },
                                    new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw }
                                })
                                .Listeners(l =>
                                {
                                    l.Change.Fn = "cboClassID_Change";
                                    l.Select.Fn = "cboClassID_Select";
                                    l.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                                })
                                .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                                .LoadData()
                                    ),
                    X.Column().ID("SiteId").Text(Util.GetLang("SiteId")).DataIndex("SiteID").Width(100)
                                 .Editor(
                                    HQ.Combo().ID("cboSiteId").Name("cboSiteId")
                                    .HQProcedure("OM23600_pcSiteID")
                                    .Width(200).HQHeightWidth(500, 400)
                                    .HQColumnShow("SiteId,Name").DisplayField("SiteId").ValueField("SiteId")
                                    .AllowBlank(true).ForceSelection(true).HQDBSys(false)

                                    .HQParam(new StoreParameterCollection() 
                                    { 
                                        new StoreParameter() { Name = "@UserID", Value = "HQ.userName", Mode = ParameterMode.Raw },
                                        new StoreParameter() { Name = "@CpnyID", Value = "HQ.cpnyID", Mode = ParameterMode.Raw },
                                        new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw },
                                        new StoreParameter() { Name = "@BranchID", Value = "_branchID", Mode = ParameterMode.Raw }
                                    })
                                    .Listeners(l =>
                                    {
                                        l.Change.Fn = "cboSiteId_Change";
                                        l.Select.Fn = "cboSiteId_Select";
                                        l.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                                    })
                                    .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                                    .LoadData()
                                        ),                
                    X.Column().ID("InvtID").Text(Util.GetLang("InvtID")).DataIndex("InvtID").Width(100)
                                .Editor(
                                HQ.Combo().ID("cboInvtID").Name("cboInvtID")
                                .HQProcedure("OM23600_pcInvtID")
                                .Width(200).HQHeightWidth(500, 400)
                                .HQColumnShow("InvtID,Descr").DisplayField("InvtID").ValueField("InvtID")
                                .AllowBlank(true).ForceSelection(true).HQDBSys(false)

                                .HQParam(new StoreParameterCollection() 
                                { 
                                    new StoreParameter() { Name = "@ClassID", Value = "_classID", Mode = ParameterMode.Raw },
                                    new StoreParameter() { Name = "@UserID", Value = "HQ.userName", Mode = ParameterMode.Raw },
                                    new StoreParameter() { Name = "@CpnyID", Value = "HQ.cpnyID", Mode = ParameterMode.Raw },
                                    new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw }
                                })
                                .Listeners(l =>
                                    {
                                        l.Change.Fn = "cboInvtID_Change";
                                        l.Select.Fn = "cboInvtID_Select";
                                        l.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                                    })
                                .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                                .LoadData()
                                    ),
                    X.Column().Text(Util.GetLang("InvtName")).DataIndex("Descr").Width(150),

                        HQ.DateColumn().ID("ExpDate").Text(Util.GetLang("ExpDate")).DataIndex("Date").Width(100)//.Renderer("dateTime_Renderer")
                                .Editor(
                                    HQ.Combo().ID("cboExpDate").Name("cboExpDate")
                                .HQProcedure("OM23600_pcExpDate")
                                .Width(100).HQHeightWidth(500, 400)
                                .HQColumnShow("dExpDate").DisplayField("dExpDate").ValueField("vExpDate")
                                .AllowBlank(true).ForceSelection(false).HQDBSys(false)                     
                                .HQParam(new StoreParameterCollection() 
                                {                             
                                    new StoreParameter() { Name = "@UserID", Value = "HQ.userName", Mode = ParameterMode.Raw },
                                    new StoreParameter() { Name = "@CpnyID", Value = "HQ.cpnyID", Mode = ParameterMode.Raw },
                                    new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw },
                                    new StoreParameter() { Name = "@SiteID", Value = "_siteId", Mode = ParameterMode.Raw },
                                    new StoreParameter() { Name = "@InvtID", Value = "_invtID", Mode = ParameterMode.Raw },
                                    new StoreParameter() { Name = "@CustID", Value = "_custID", Mode = ParameterMode.Raw }
                                })

                                .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                                .LoadData()
                                    ),
                    X.NumberColumn().ID("Qty").Text(Util.GetLang("Qty")).DataIndex("Qty").Width(100).StyleSpec("text-align:left")
                    .Align(Alignment.Right).Format("#,###")
                    .Editor(X.NumberField().MinValue(0).DecimalPrecision(0)),    
                    //.Editor(X.NumberField().DecimalPrecision(0).MinValue(0)),          
                    X.CommandColumn()
                    .Width(150)
                    .Commands(
                        X.GridCommand()
                        .Text(Util.GetLang("Reject"))
                        .ToolTip(t => t.Text = Util.GetLang("Rejectrowchanges"))
                        .CommandName("reject")
                        .Icon(Icon.ArrowUndo)
                    )
                    .PrepareToolbar(t => t.Handler = "toolbar.items.get(0).setVisible(record.dirty);")
                    .Listeners(l => l.Command.Handler = "grdDet_Reject(record);")
                )
                .SelectionModel(X.RowSelectionModel().ID("slmData").Mode(SelectionMode.Multi))
                .BottomBar(
                    X.PagingToolbar()
                    .Items(
                        X.Label("Page size:"),
                        X.ToolbarSpacer(10),
                        X.ComboBox()
                        .Width(80)
                        .Items("1", "2", "10", "20", "30", "50")
                        .SelectedItems("50")
                        .Listeners(l =>
                            {
                                l.Select.Fn = "HQ.grid.onPageSelect";                   
                            })
                    )
                    .Plugins(X.ProgressBarPager())
                )
                .Plugins(
                    X.CellEditing()
                    .ClicksToEdit(1)
                    .Listeners(ls =>
                    {
                        ls.BeforeEdit.Fn = "grdDet_BeforeEdit";
                        ls.Edit.Fn = "grdDet_Edit";
                        ls.ValidateEdit.Fn = "grdDet_ValidateEdit";

                    })
                )

                .Features(
                    X.GridFilters()
                        .Local(true)
                        .Filters(
                            X.StringFilter().DataIndex("PosmID"),
                            X.StringFilter().DataIndex("BranchID"),
                            X.StringFilter().DataIndex("CustId"),
                            X.StringFilter().DataIndex("CustName"),
                            X.StringFilter().DataIndex("ClassID"),
                            X.StringFilter().DataIndex("SiteID"),
                            X.StringFilter().DataIndex("InvtID"),
                            X.StringFilter().DataIndex("Descr"),
                            X.DateFilter().DataIndex("Date"),                    
                            X.NumericFilter().DataIndex("Qty")
                        )
                )
            )
        .Listeners(lss =>
        {
            lss.Render.Handler = "HQ.common.control_render(this,'grdDet')";

        }) 
        )
    )
)
