@using Ext.Net;
@using Ext.Net.MVC;
@using HQ.eSkyFramework;
@using HQ.eSkyFramework.HQControl;
@using OM23800;
@{
    Layout = null;
    var X = Html.X();
    var HQ = Html.HQ();
}

@(
X.Window().ID("winMcpCusts")
.Title(Util.GetLang("UpdateToMcp"))
.Icon(Icon.BookOpen).Layout(LayoutType.Fit)
.Hidden(true).Maximizable(true)
.Height(400)
.Width(700)
.Modal(true)
.Items(
    X.FormPanel().ID("frmMcpCusts")
    .Layout(LayoutType.Border)
    .TrackResetOnLoad(true)
    .DefaultAnchor("100%")
    .BodyPadding(5)
    .BodyBorder(0)
    .FieldDefaults(act => { act.LabelAlign = LabelAlign.Right; act.LabelWidth = 100; })
    .Items(
        X.FieldSet()
        .Title(Util.GetLang("CustList"))
        .Region(Region.Center)
        .Layout(LayoutType.Border)
        .Items(
            X.GridPanel().ID("grdMCPCusts").MarginSpec("5 0 0 0")
            .Frame(false).Scroll(ScrollMode.Both)
            .Region(Region.Center)
            .View(
                X.GridView().TrackOver(false).EnableTextSelection(true)
                //.GetRowClass(grc => grc.Fn = "Event.Grid.grdMCL_viewGetRowClass")
            )
            .StoreID("stoMCPCusts")
            .SortableColumns(false)
            .ColumnModel(
                //X.RowNumbererColumn().Width(30).Listeners(x => x.AfterRender.Handler = "this.resizable = true")
                X.Column().Text(Util.GetLang("BranchID")).DataIndex("BranchID")
                , X.Column().Text(Util.GetLang("CustID")).DataIndex("CustId")
                , X.Column().Text(Util.GetLang("CustName")).DataIndex("CustName")
                , X.Column().Text(Util.GetLang("SlsperID")).DataIndex("SlsperId")
                , X.Column().Text(Util.GetLang("SlsFreq")).DataIndex("SlsFreq")
                , X.Column().Text(Util.GetLang("WeekofVisit")).DataIndex("WeekofVisit")
                , X.NumberColumn().Text(Util.GetLang("VisitSort")).DataIndex("VisitSort").Format("0,000").Align(Alignment.Right)
                , X.CheckColumn().Text(Util.GetLang("Mon")).DataIndex("Mon").Width(50)
                , X.CheckColumn().Text(Util.GetLang("Tue")).DataIndex("Tue").Width(50)
                , X.CheckColumn().Text(Util.GetLang("Wed")).DataIndex("Wed").Width(50)
                , X.CheckColumn().Text(Util.GetLang("Thu")).DataIndex("Thu").Width(50)
                , X.CheckColumn().Text(Util.GetLang("Fri")).DataIndex("Fri").Width(50)
                , X.CheckColumn().Text(Util.GetLang("Sat")).DataIndex("Sat").Width(50)
                , X.CheckColumn().Text(Util.GetLang("Sun")).DataIndex("Sun").Width(50)
            )
            .SelectionModel(
                X.CheckboxSelectionModel().ID("slmMCPCusts").Mode(SelectionMode.Multi)
                //.Listeners(l => l.Select.Fn = "Event.Grid.slmMCP_Select")
            )// GridPanel: grdMCL
        ) // fdsHeaderMcp
                    
        ,X.FieldSet().Region(Region.South)
        .Title(Util.GetLang("MCP"))
        .Layout(LayoutType.VBox)
        .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Stretch })
        //.Disabled(true)//.Flex(1)
        .Items(
            X.Container()
            .Layout(LayoutType.HBox).MarginSpec("5 5 5 5")
            .LayoutConfig(new HBoxLayoutConfig { Align = HBoxAlign.Top })
            .Items(
                HQ.Combo().ID("cboRouteIDMcpCusts")
                .Flex(1).ForceSelection(true).AllowBlank(false)
                .HQAutoLoad(false).HQLangCode("RouteID").HQProcedure("OM23800_pcRouteID")
                .HQColumnShow("Code,Descr").DisplayField("Descr").ValueField("Code").HQFirstDefault(true)
                .HQParam(new StoreParameterCollection() { 
                    new StoreParameter("@UserID", "HQ.userName", ParameterMode.Raw)
                    , new StoreParameter("@CpnyID", "HQ.cpnyID", ParameterMode.Raw)
                    , new StoreParameter("@LangID", "HQ.langID", ParameterMode.Raw)
                    , new StoreParameter("@BranchID", "App.cboDistributorMCL.getValue()", ParameterMode.Raw)
                })
                .LoadData()
                //.Listeners(x => x.Change.Handler = "App.cboWeekofVisitMcpCusts.store.reload()")

                , X.DisplayField().Flex(1)
            )
            
            , X.Container()
            .Layout(LayoutType.HBox).MarginSpec("5 5 5 5")
            .LayoutConfig(new HBoxLayoutConfig { Align = HBoxAlign.Top })
            .Items(
                HQ.Combo().ID("cboSlsFreqMcpCusts")
                .Flex(1).ForceSelection(true).AllowBlank(false)
                .DataIndex("SlsFreq").HQAutoLoad(false)
                .HQLangCode("SLSFREQ").HQProcedure("OM23800_pcSlsFreq")
                .HQColumnShow("Descr").DisplayField("Descr").ValueField("Code")
                .HQParam(new StoreParameterCollection() { 
                    new StoreParameter("@langid", "HQ.langID", ParameterMode.Raw)
                })
                .LoadData()
                .Listeners(x => x.Change.Handler = "App.cboWeekofVisitMcpCusts.store.reload()")

                , HQ.Combo().ID("cboWeekofVisitMcpCusts")
                .Flex(1).ForceSelection(true).AllowBlank(false)
                .HQFirstDefault(true).DataIndex("WeekofVisit").HQAutoLoad(false)
                .HQLangCode("WEEKOFVISIT").HQProcedure("OM23800_pcWeekofVisitMCL")
                .HQColumnShow("Descr").DisplayField("Descr").ValueField("Code")
                .HQParam(new StoreParameterCollection() { 
                    new StoreParameter("@SlsFreq", "App.cboSlsFreqMcpCusts.getValue()", ParameterMode.Raw)
                    ,new StoreParameter("@SlsFreqType", "R", ParameterMode.Value)
                    ,new StoreParameter("@langid", "HQ.langID", ParameterMode.Raw)
                })
                .LoadData()
            )
            
            , X.Container()
            .Layout(LayoutType.HBox).MarginSpec("5 5 5 5")
            .LayoutConfig(new HBoxLayoutConfig { Align = HBoxAlign.Top })
            .Items(
                HQ.DateField().ID("dtpStartDateMcpCusts")
                .HQLangCode("StartDate").Flex(1).AllowBlank(false)
                .Listeners(lst=>lst.Change.Fn="McpCusts.dtpStartDateMcpCusts_change")

                , HQ.DateField().ID("dtpEndDateMcpCusts")
                .HQLangCode("EndDate").Flex(1).AllowBlank(false)
            )

            , X.Container()
            .Layout(LayoutType.HBox).MarginSpec("5 5 5 5")
            .LayoutConfig(new HBoxLayoutConfig { Align = HBoxAlign.Top })
            .Items(
                HQ.NumberField().ID("numVisitSortMcpCusts")
                .HQLangCode("VisitSort").DataIndex("VisitSort").Hidden(true)
                .DecimalPrecision(0).Width(150).MinValue(1)//.AllowBlank(false)

                , X.Container().Layout(LayoutType.HBox).Flex(1)
                .LayoutConfig(new HBoxLayoutConfig { Align = HBoxAlign.Top, Pack = BoxPack.Center })
                .Items(
                    HQ.Checkbox().ID("chkSunMcpCusts")
                    .HQLangCode("Sun").DataIndex("Sun")
                    .MarginSpec("0 0 0 10").Flex(1)

                    , HQ.Checkbox().ID("chkMonMcpCusts")
                    .HQLangCode("Mon").DataIndex("Mon")
                    .MarginSpec("0 0 0 5").Flex(1)

                    , HQ.Checkbox().ID("chkTueMcpCusts")
                    .HQLangCode("Tue").DataIndex("Tue")
                    .MarginSpec("0 0 0 5").Flex(1)

                    , HQ.Checkbox().ID("chkWedMcpCusts")
                    .HQLangCode("Wed").DataIndex("Wed")
                    .MarginSpec("0 0 0 5").Flex(1)

                    , HQ.Checkbox().ID("chkThuMcpCusts")
                    .HQLangCode("Thu").DataIndex("Thu")
                    .MarginSpec("0 0 0 5").Flex(1)

                    , HQ.Checkbox().ID("chkFriMcpCusts")
                    .HQLangCode("Fri").DataIndex("Fri")
                    .MarginSpec("0 0 0 5").Flex(1)

                    , HQ.Checkbox().ID("chkSatMcpCusts")
                    .HQLangCode("Sat").DataIndex("Sat")
                    .MarginSpec("0 0 0 5").Flex(1)
                )
            )                    
        ) // fdsContentMcp
                    
        , X.Container()
        .Region(Region.South)
        .Layout(LayoutType.HBox).MarginSpec("5 5 5 5")
        .LayoutConfig(new HBoxLayoutConfig { Align = HBoxAlign.Top, Pack = BoxPack.Center })
        .Items(
            HQ.Button().ID("btnSaveMcpCusts")
            .HQLangCode("Save").Icon(Icon.Disk)
            .Handler("McpCusts.btnSaveMcpCusts_click")
                            
            , HQ.Button().ID("btnCancelMcpCusts")
            .HQLangCode("Cancel").Icon(Icon.Decline)
            .MarginSpec("0 0 0 5")
            .Handler("McpCusts.btnCancelMcpCusts_click")
        ) // buttons
    )// FormPanel: frmMcpCusts
)
.Listeners(l =>
{
    l.Show.Fn = "McpCusts.winMcpCusts_show";
    //l.BeforeClose.Fn = "EmailQuotation.winEmail_beforeClose";
    //l.Close.Fn = "EmailQuotation.winEmail_close";
}) // Window: winMcpInfo
)