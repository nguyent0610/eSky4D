@using Ext.Net;
@using Ext.Net.MVC;
@using HQ.eSkyFramework;
@using HQ.eSkyFramework.HQControl;
@using OM22003;
@{
    Layout = null;
    var X = Html.X();
    var HQ = Html.HQ();
}

@(
 Html.X().Viewport().Layout(LayoutType.Fit)
    .Items(
        X.FormPanel()
        .Layout(LayoutType.Border)
        .ID("frmMain")
        .TrackResetOnLoad(true)
        //.DefaultAnchor("100%")
        .BodyPadding(10)
        .BodyBorder(0).AutoScroll(true)
        .TopBar(Util.SetupToolbar("save,new,delete,close,print", true, "Event.Form.menuClick"))
        .FieldDefaults(act => { act.LabelAlign = LabelAlign.Right; act.LabelWidth = 100; })
        .Items(
            X.Panel().ID("pnlHeader")
            .Layout(LayoutType.HBox).Region(Region.North).MinWidth(1005)
            .LayoutConfig(new HBoxLayoutConfig { Align = HBoxAlign.Top }).Border(false)
            .Items(

                // First Column
                X.Container().Layout(LayoutType.VBox).MarginSpec("5 0 5 0")
                .MinWidth(200).Flex(1)
                .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Stretch })
                .Items(
                    HQ.Combo().ID("cboZone")
                    .HQLangCode("Zone").HQProcedure("OM22003_pcZone")
                    .HQColumnShow("Code,Descr").ValueField("Code").DisplayField("Code")
                    .HQHeightWidth(400, 300).MultiSelect(true).ForceSelection(true)
                    .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                    .HQParam(new StoreParameterCollection() { 
                        new StoreParameter("@UserID", "HQ.userName", ParameterMode.Raw) 
                    })
                    .LoadData()
                    .Listeners(l =>
                    {
                        l.TriggerClick.Fn = "Event.Form.btnHideTrigger_click";
                        l.Change.Fn = "Event.Form.cboZone_change";
                    })
                    
                    ,HQ.Combo().ID("cboTerritory")
                    .HQLangCode("Territory").HQProcedure("OM22003_pcTerritory")
                    .HQColumnShow("Code,Descr").ValueField("Code").DisplayField("Code")
                    .HQHeightWidth(400, 300).MultiSelect(true).ForceSelection(true)
                    .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                    .HQParam(new StoreParameterCollection() { 
                        new StoreParameter("@UserID", "HQ.userName", ParameterMode.Raw) 
                        , new StoreParameter("@Zone", "Process.joinParams(App.cboZone)", ParameterMode.Raw) 
                    })
                    .LoadData()
                    .Listeners(l =>
                    {
                        l.TriggerClick.Fn = "Event.Form.btnHideTrigger_click";
                        l.Change.Fn = "Event.Form.cboTerritory_change";
                    })
                ) // First Column

                // Second Column
                , X.Container().Layout(LayoutType.VBox).MarginSpec("5 0 5 0")
                .MinWidth(200).Flex(1)
                .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Stretch })
                .Items(
                     HQ.Combo().ID("cboCpny")
                     .HQLangCode("Branch").HQProcedure("OM22003_pcBranchAllByUser")
                    .HQColumnShow("BranchID,BranchName").ValueField("BranchID").DisplayField("BranchID")
                    .HQHeightWidth(400, 300).MultiSelect(true).ForceSelection(true)
                    .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                    .HQParam(new StoreParameterCollection() { 
                        new StoreParameter("@UserID", "HQ.userName", ParameterMode.Raw) 
                        , new StoreParameter("@Territory", "Process.joinParams(App.cboTerritory)", ParameterMode.Raw) 
                    })
                    .LoadData()
                    .Listeners(l =>
                    {
                        l.TriggerClick.Fn = "Event.Form.btnHideTrigger_click";
                        l.Change.Fn = "Event.Form.cboCpny_change";
                    })
                    
                    , HQ.Combo().ID("cboDisplayID")
                    .HQLangCode("DisplayID").HQProcedure("OM22003_pcDisplayID")
                    .HQColumnShow("DisplayID,Descr").ValueField("DisplayID").DisplayField("DisplayID")
                    .HQHeightWidth(400, 300).ForceSelection(true)
                    .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                    .HQParam(new StoreParameterCollection() { 
                        new StoreParameter("@BranchID", "Process.joinParams(App.cboCpny)", ParameterMode.Raw) 
                        ,new StoreParameter("@UserID", "HQ.userName", ParameterMode.Raw) 
                    })
                    .LoadData()
                    .Listeners(l =>
                    {
                        l.TriggerClick.Fn = "Event.Form.btnHideTrigger_click";
                    })
                    
                    //, HQ.Combo().ID("cboStatus")
                    //.HQLangCode("Status").HQProcedure("OM22003_pcStatus")
                    //.HQColumnShow("Code,Descr").ValueField("Code").DisplayField("Code")
                    //.HQHeightWidth(400, 300)
                    //.Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                    //.HQParam(new StoreParameterCollection() { 
                    //    new StoreParameter("@LangID", "HQ.langID", ParameterMode.Raw) 
                    //})
                    //.LoadData()
                    //.Listeners(l =>
                    //{
                    //    l.TriggerClick.Fn = "Event.Form.btnHideTrigger_click";
                    //})
                ) // Second Column
                
                // Third Column
                , X.Container().Layout(LayoutType.VBox).MarginSpec("5 5 5 0")
                .MinWidth(250)//.Flex(1)
                .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Stretch, Pack = BoxPack.Center })
                .Items(
                    HQ.DateField().ID("dtpFromDate")
                    .HQLangCode("FromDate").AllowBlank(false)
                    .Listeners(l => l.Change.Fn = "Event.Form.dtpFromDate_change")
                    
                    , HQ.DateField().ID("dtpToDate")
                    .HQLangCode("ToDate").AllowBlank(false)
                ) // Third Column
                
                 // Forth Column
                , X.Container().Layout(LayoutType.VBox).MarginSpec("5 5 5 0")
                .MinWidth(250).Flex(1)
                .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Stretch, Pack = BoxPack.Center })
                .Items(
                    HQ.Button().ID("btnLoad").MarginSpec("0 0 0 105")
                    .HQLangCode("LoadData").Icon(Icon.ArrowRefresh)
                    .Handler("Event.Form.btnLoad_click")
                ) // Forth Column
            ) // pnlHeader

            , X.GridPanel().ID("grdDet")
            .Region(Region.Center)
            .Scroll(ScrollMode.Both).MinWidth(1005)
            .View(X.GridView().TrackOver(false))
            .SortableColumns(false)
            .StoreID("stoDet")
            .ColumnModel(
                X.RowNumbererColumn()
                , X.CommandColumn().Align(Alignment.Center).Width(25)
                .Commands(
                    X.GridCommand()
                    .CommandName("View")
                    .Icon(Icon.ImageEdit)
                    .ToolTip(tt => tt.Text = Util.GetLang("View"))
                )
                .Listeners(ls => ls.Command.Handler = "Event.Grid.colBtnView_click(command, record);")
                , X.Column().Text(Util.GetLang("Result")).DataIndex("Pass")
                .Renderer("Process.renderAppraise").Width(75)
                
                , X.Column().Text(Util.GetLang("Zone")).DataIndex("Zone")      
                , X.Column().Text(Util.GetLang("Territory")).DataIndex("Territory")      
                , X.Column().Text(Util.GetLang("BranchID")).DataIndex("BranchID")
                , X.Column().Text(Util.GetLang("SlsperID")).DataIndex("SlsperID")      
                , X.Column().Text(Util.GetLang("SlsName")).DataIndex("SlsName")      
                , X.Column().Text(Util.GetLang("CustID")).DataIndex("CustID")
                , X.Column().Text(Util.GetLang("CustName")).DataIndex("CustName")      
                , X.Column().Text(Util.GetLang("DisplayID")).DataIndex("DisplayID")      
                , X.Column().Text(Util.GetLang("TDisplayName")).DataIndex("Descr").Flex(1).MinWidth(100)
                , X.Column().Text(Util.GetLang("LevelNbr")).DataIndex("LevelID")
                , X.Column().Text(Util.GetLang("SoMatTB")).DataIndex("SoMatTB").Renderer("Process.renderAppraise")
                , X.Column().Text(Util.GetLang("Position")).DataIndex("LocID").Renderer("Process.renderAppraise")
                , X.Column().Text(Util.GetLang("Type")).DataIndex("DisplayType").Renderer("Process.renderAppraise")
            )
            .SelectionModel(X.RowSelectionModel().ID("slmDet").Mode(SelectionMode.Single))
            .Plugins(
                X.CellEditing()
                .ClicksToEdit(1)
            )
            .Features(
                X.GridFilters().Local(true)
                .Filters(
                    X.StringFilter().DataIndex("Pass")
                    , X.StringFilter().DataIndex("Zone")
                    , X.StringFilter().DataIndex("Territory")
                    , X.StringFilter().DataIndex("BranchID")
                    , X.StringFilter().DataIndex("SlsperID")
                    , X.StringFilter().DataIndex("SlsName")
                    , X.StringFilter().DataIndex("CustID")
                    , X.StringFilter().DataIndex("CustName")
                    , X.StringFilter().DataIndex("DisplayID")
                    , X.StringFilter().DataIndex("Descr")
                    , X.StringFilter().DataIndex("LevelID")
                    , X.StringFilter().DataIndex("SoMatTB")
                    , X.StringFilter().DataIndex("LocID")
                    , X.StringFilter().DataIndex("DisplayType")
                )
            ) // grdDet
        )
        .Listeners(lst =>
        {
            lst.BoxReady.Fn = "Event.Form.frmMain_boxReady";
            //lst.FieldChange.Fn = "Event.Form.frmMain_fieldChange";
        })// Form: frmMain
    )
)

@(
 X.Window().ID("winImgAppraise")
    .Title(Util.GetLang("ImgAppraise"))
    .Icon(Icon.UserAdd).Layout(LayoutType.Fit)
    .Hidden(true).Maximizable(true)
    .Height(350)
    .Width(700)
    .Modal(true)
    .Items(
        X.FormPanel().ID("frmImage")
        .Layout(LayoutType.Border)
        .TrackResetOnLoad(true)
        .DefaultAnchor("100%")
        .BodyPadding(5)
        .BodyBorder(0)
        .FieldDefaults(act => { act.LabelAlign = LabelAlign.Right; act.LabelWidth = 100; })
        .Items(
            X.Panel().Region(Region.Center)
            .Layout(LayoutType.Border)
            .Cls("images-view")
            .TopBar(
                X.Toolbar().Items(
                    HQ.Combo().ID("cboImageSize")
                    .HQLangCode("ImageSize").HQProcedure("OM22003_pcImageSize")
                    .HQColumnShow("Code,Descr,Width,Height").HQHeightWidth(400,300)
                    .ValueField("Code").DisplayField("Descr").Editable(false)
                    .HQParam(new StoreParameterCollection() { 
                        new StoreParameter("@UserID", "HQ.userName", ParameterMode.Raw)
                        , new StoreParameter("@LangID", "HQ.langID", ParameterMode.Raw)
                    })
                    .LoadData()
                    .Listeners(ls=>ls.Change.Fn="Event.Form.cboImageSize_change")
                )
            )
            .Items(
                Html.X().DataView()
                .ID("grdImage")
                .StoreID("stoImage")
                .MultiSelect(true)
                .OverItemCls("x-item-over")
                .ItemSelector("div.thumb-wrap")
                .EmptyText("No images to display")
                .TrackOver(true).AutoScroll(true)
                .Tpl(
                    Html.X().XTemplate()
                        .Html(
                            @<text>
                                <tpl for=".">
								    <div class="thumb-wrap" id="{ImageName}">
									    <div class="thumb"><a target="_blank" href="OM22003/Download?fileName={ImageName}">{ImageSrc}</a></div>
									    <span class="x-editable">{CreateDate}</span>
								    </div>
							    </tpl>
							    <div class="x-clear"></div>
                            </text>
                        )
                )
                .PrepareData("Process.prepareData")
            )

            , X.Panel().Region(Region.West).Width(300)
            .Layout(LayoutType.VBox).Split(true).AutoScroll(true)
            .LayoutConfig(new VBoxLayoutConfig() { Align = VBoxAlign.Stretch, Pack = BoxPack.Start })
            .Items(
                X.Container().Layout(LayoutType.VBox)
                .LayoutConfig(new VBoxLayoutConfig() { Align = VBoxAlign.Stretch, Pack = BoxPack.Center })
                .Items(
                    X.DisplayField().ID("dspPicAmt")
                    .MarginSpec("5 5 0 0")
                    .FieldLabel(Util.GetLang("PicAmt"))
                    .Value(0)

                    , X.DisplayField()
                    .MarginSpec("5 5 0 0")
                    .FieldLabel(Util.GetLang("LevelNbr"))
                    .DataIndex("LevelID")

                    , HQ.Combo().ID("cboSoMatTB")
                    .MarginSpec("5 5 0 0").ReadOnly(true)
                    .HQLangCode("SoMatTB").DataIndex("SoMatTB")
                    .HQProcedure("OM22003_pcPPTB").HQColumnShow("Code,Descr")
                    .ValueField("Code").DisplayField("Descr")
                    .HQParam(new StoreParameterCollection() { 
                        new StoreParameter("@UserID", "HQ.userName", ParameterMode.Raw)
                        , new StoreParameter("@LangID", "HQ.langID", ParameterMode.Raw)
                    })
                    .LoadData()

                    , HQ.Combo().ID("cboLocID")
                    .MarginSpec("5 5 0 0").ReadOnly(true)
                    .HQLangCode("Position").DataIndex("LocID")
                    .HQProcedure("OM22003_pcLocID").HQColumnShow("Code,Descr")
                    .ValueField("Code").DisplayField("Descr")
                    .HQParam(new StoreParameterCollection() { 
                        new StoreParameter("@UserID", "HQ.userName", ParameterMode.Raw)
                        , new StoreParameter("@LangID", "HQ.langID", ParameterMode.Raw)
                    })
                    .LoadData()

                    , HQ.Combo().ID("cboDisplayType")
                    .MarginSpec("5 5 0 0").ReadOnly(true)
                    .HQLangCode("DisplayType").DataIndex("DisplayType")
                    .HQProcedure("OM22003_pcDisplayType").HQColumnShow("Code,Descr")
                    .ValueField("Code").DisplayField("Descr")
                    .HQParam(new StoreParameterCollection() { 
                        new StoreParameter("@UserID", "HQ.userName", ParameterMode.Raw)
                        , new StoreParameter("@LangID", "HQ.langID", ParameterMode.Raw)
                    })
                    .LoadData()
                )

                , X.Container().Layout(LayoutType.VBox)
                .LayoutConfig(new VBoxLayoutConfig() { Align = VBoxAlign.Stretch, Pack = BoxPack.Center })
                .Items(
                    X.RadioGroup().ID("rdgPass")
                    .FieldLabel(Util.GetLang("Result"))
                    .MarginSpec("15 5 0 0").AllowBlank(false)
                    .Items(
                        X.Radio().ID("radDat")
                        .BoxLabel(Util.GetLang("Dat"))

                        , X.Radio().ID("radKhongDat")
                        .BoxLabel(Util.GetLang("KhongDat"))
                        .Handler("Event.Form.radKhongDat_change")
                    )

                    , X.TextArea().ID("txtRemark")
                    .MarginSpec("5 5 0 0")
                    .FieldLabel(Util.GetLang("Note")).DataIndex("Remark")
                    .MaxLength(200).EnforceMaxLength(true).AllowOnlyWhitespace(false)
                )

                , X.Container().Layout(LayoutType.VBox)
                .LayoutConfig(new VBoxLayoutConfig() { Align = VBoxAlign.Stretch, Pack = BoxPack.Center })
                .Items(
                    HQ.Button().ID("btnConfirm")
                    .HQLangCode("Confirm").MarginSpec("15 5 0 105")
                    .Icon(Icon.Tick).Handler("Event.Form.btnConfirm_click")

                    , HQ.Button().ID("btnCancel")
                    .HQLangCode("Cancel").MarginSpec("5 5 0 105")
                    .Icon(Icon.Decline).Handler("Event.Form.btnCancel_click")
                )
            )
        )// FormPanel: frmChoose
    )
    .Listeners(ls =>
    {
        ls.BoxReady.Handler = "this.maximize();";
        ls.Close.Handler = "App.grdImage.store.removeAll();";
    })// Window: winRef
)