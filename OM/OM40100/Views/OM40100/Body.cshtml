@using Ext.Net;
@using Ext.Net.MVC;
@using HQ.eSkyFramework
@using HQ.eSkyFramework.HQControl;
@using OM40100;

@{
    Layout = null;
    var X = Html.X();
    var HQ = Html.HQ();
}

@(
 X.Viewport()
    .Layout(LayoutType.Fit)
    .Items(

        X.FormPanel().ID("frmMain")
        .Layout(LayoutType.Border)
        .TrackResetOnLoad(true)
        .DefaultAnchor("100%")
        .KeyMap(Util.SetupKeyMap())
        .DefaultButton("btnLoad")
        .TopBar(Util.SetupToolbar(tools: new AbstractComponent[] { }, buttonHidden: "print,new,save,delete,refresh", isShowNavigationButtons: true, handlerName: "menuClick"))
        .FieldDefaults(a => { a.LabelAlign = LabelAlign.Right; a.LabelWidth = 120; })
        .Listeners(p =>
        {
            p.BoxReady.Fn = "frmMain_BoxReady";
        })
        .Items(

            X.Panel()
            .Border(false)
            .Region(Region.North)
            .Layout(LayoutType.VBox)
            .Items(
                X.FieldContainer()
                .MarginSpec("10 0 5 0")
                .Layout(LayoutType.HBox)
                .Items(

                    HQ.Combo().ID("cboProcessType")
                    .Name("ProcessType")
                    .HQLangCode("Type")
                    .HQProcedure("OM40100_pcProcessType")
                    .HQColumnShow("Code,Descr")
                    .DisplayField("Descr")
                    .ValueField("Code")
                    .Width(250)
                    .HQHeightWidth(400, 300)
                    .BlankText(Util.GetLangPrefix("Input", "Type"))
                    .AllowBlank(false)
                    .ForceSelection(true)
                    .HQParam(new StoreParameterCollection(){
                        new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw }
                    })
                    .HQControlFocus("txtFromDate")
                    .LoadData()
                    .Listeners(lst =>
                    {
                        lst.Change.Fn = "cboProcessType_Change";
                    }),     

                    HQ.Combo().ID("cboBranchID").Name("BranchID").HQLangCode("BranchName")
                    .HQProcedure("OM40100_pcBranch").HQColumnShow("BranchID,BranchName,Addr")
                    .DisplayField("BranchName").ValueField("BranchID")
                    .Width(290).LabelWidth(120).HQHeightWidth(400, 300)
                    .AllowBlank(false).BlankText(Util.GetLangPrefix("Input", "BranchID"))
                    .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                    .HQParam(new StoreParameterCollection(){
                        new StoreParameter() { Name = "@UserID", Value = "HQ.userName", Mode = ParameterMode.Raw },
                    })
                    .Listeners(p => {
                        p.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                        p.Change.Fn = "cboBranchID_Change";
                    })
                    .ForceSelection(true)
                    .LoadData()
                    .HQControlFocus("cboCustomer"),

                    HQ.Combo().ID("cboDeliveryID")
                    .HQLangCode("DeliveryMan")
                    .HQProcedure("OM40100_pcDeliveryID")
                    .HQColumnShow("SlsperID,Name")
                    .DisplayField("Name")
                    .ValueField("SlsperID")
                    .Width(290)
                    .LabelWidth(140)
                    .HQHeightWidth(400, 300)
                    .ForceSelection(true)
                    .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                    .HQParam(new StoreParameterCollection(){
                        new StoreParameter() { Name = "@BranchID", Value = "App.cboBranchID.getValue()", Mode = ParameterMode.Raw }
                    })
                    .HQControlFocus("cboProcessType")
                    .LoadData()
                    .Listeners(lst =>
                    {
                        lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                    })

                ),

                X.FieldContainer()
                .Layout(LayoutType.HBox)
                .Items(
                    HQ.DateField().ID("txtFromDate")
                    .HQLangCode("FromDate")
                    .AllowBlank(false)
                    .BlankText(Util.GetLangPrefix("Input", "FromDate"))
                    .Width(250)
                    .HQControlFocus("txtToDate")
                    .Format(Current.FormatDate),

                    HQ.Combo().ID("cboCustomer")
                    .HQLangCode("CustName")
                    .HQProcedure("OM40100_pcCustomer")
                    .HQColumnShow("CustID,Name")
                    .DisplayField("Name")
                    .ValueField("CustID")
                    .Width(290)
                    .LabelWidth(120)
                    .HQHeightWidth(400, 300)
                    .ForceSelection(true)
                    .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                    .HQParam(new StoreParameterCollection(){
                        new StoreParameter() { Name = "@BranchID", Value = "App.cboBranchID.getValue()", Mode = ParameterMode.Raw }
                    })
                    .HQControlFocus("cboSlsperID")
                    .LoadData()
                    .Listeners(lst =>
                    {
                        lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                    }),

                    X.Button()
                    .ID("btnLoad")
                    .Text(Util.GetLang("LoadData"))
                    .Width(145)
                    .Icon(Icon.ArrowRefresh)
                    .MarginSpec("0 0 0 145")
                    .Listeners(l => l.Click.Fn = "btnLoad_Click")
                ),

                X.FieldContainer()
                .Layout(LayoutType.HBox)
                .Items(
                     HQ.DateField().ID("txtToDate")
                    .HQLangCode("ToDate")
                    .AllowBlank(false)
                    .BlankText(Util.GetLangPrefix("Input", "ToDate"))
                    .Width(250)
                    .HQControlFocus("cboBranchID")
                    .Format(Current.FormatDate)
                    .Listeners(p => p.Focus.Handler = "HQ.focus='batch';"),

                    HQ.Combo().ID("cboSlsperID")
                    .HQLangCode("SlsName")
                    .HQProcedure("OM40100_pcSalesPerson")
                    .HQColumnShow("SlsperID,Name")
                    .DisplayField("Name")
                    .ValueField("SlsperID")
                    .Width(290)
                    .LabelWidth(120)
                    .HQHeightWidth(400, 300)
                    .ForceSelection(true)
                    .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                    .HQParam(new StoreParameterCollection(){
                        new StoreParameter() { Name = "@BranchID", Value = "App.cboBranchID.getValue()", Mode = ParameterMode.Raw }
                    })
                    .HQControlFocus("cboDeliveryID")
                    .LoadData()
                    .Listeners(lst =>
                    {
                        lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                    })
                    ,

                    X.Button()
                    .ID("btnProcess")
                    .Text(Util.GetLang("Handle"))
                    .Width(145)
                    .MarginSpec("0 0 10 145")
                    .Icon(Icon.Disk)
                    .Listeners(l => l.Click.Fn = "btnProcess_Click")
                )
            ),

            X.GridPanel().ID("grdOrder")
            .Region(Region.Center)
            .ColumnLines(true)
            .RowLines(true)
            .Border(true)
            .BorderSpec("1 0 0 0")
            .StoreID("stoOrder")
            .ColumnModel(
                X.RowNumbererColumn(),

                X.CheckColumn()
                .RenderTpl(
                    X.XTemplate().Html(
                        @"<div id=""{id}-titleEl"" {tipMarkup}class=""x-column-header-inner"">
                            <span id=""{id}-textEl"" class=""x-column-header-text"">
                                <input id=""my-header-checkbox-{id}"" type=""checkbox"" class=""my-header-checkbox""></input>
                                {text}
                            </span>
                            <tpl if=""!menuDisabled"">
                                <div id=""{id}-triggerEl"" class=""x-column-header-trigger""></div>
                            </tpl>
                        </div>
                        {%this.renderContainer(out,values)%}"
                    )
                )
                .DataIndex("Sel")
                .Editable(true)
                .Width(45),

                X.Column()
                .DataIndex("OrderNbr")
                .Width(100)
                .Text(Util.GetLang("OrderNbr")),

                HQ.DateColumn()
                .DataIndex("OrderDate")
                .Width(100)
                .Text(Util.GetLang("OrderDate"))
                .Format(Current.FormatDate),

                X.Column()
                .DataIndex("OrigOrderNbr")
                .Width(100)
                .Text(Util.GetLang("OrderPDA")),

                HQ.DateColumn()
                .DataIndex("ShipDate")
                .Width(100)
                .Text(Util.GetLang("ShipDate"))
                .Format(Current.FormatDate),

                X.Column()
                .DataIndex("CustID")
                .Text(Util.GetLang("CustID")),

                X.Column()
                .DataIndex("CustName")
                .Text(Util.GetLang("CustName")),

                X.Column()
                .DataIndex("SlsPerID")
                .Text(Util.GetLang("SlsperID")),

                X.Column()
                .DataIndex("DeliveryID")
                .Text(Util.GetLang("DeliveryID")),

                X.Column()
                .Align(Alignment.Right)
                .DataIndex("DocAmt")
                .Text(Util.GetLang("InvcAmt"))
                .Renderer("rdrTrans_QtyAmt"),

                HQ.DateColumn()
                .DataIndex("DocDate")
                .Width(100)
                .Text(Util.GetLang("DocDate"))
                .Format(Current.FormatDate),

                X.Column()
                .DataIndex("RefNbr")
                .Text(Util.GetLang("RefNbr")),

                X.Column()
                .DataIndex("Terms")
                .Text(Util.GetLang("Term"))


            )
            .ColumnModel(act => { act.Listeners.HeaderClick.Fn = "grdOrder_HeaderClick"; })
        //.Listeners(lst =>
        //{
        //    lst.SelectionChange.Fn = "grdTrans_SelectionChange";
        //    lst.Edit.Fn = "grdTrans_Edit";
        //    lst.ValidateEdit.Fn = "grdTrans_ValidateEdit";
        //    lst.BeforeEdit.Fn = "grdTrans_BeforeEdit";
        //})
            .SelectionModel(X.RowSelectionModel().ID("smlOrder").Mode(SelectionMode.Single))
            .View(X.GridView().TrackOver(false))
            .Plugins(X.CellEditing().ClicksToEdit(1))
        )
    )
)

    