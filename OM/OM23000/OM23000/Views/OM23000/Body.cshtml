@using Ext.Net;
@using Ext.Net.MVC;
@using HQ.eSkyFramework;
@using HQ.eSkyFramework.HQControl;
@using OM23000;
@{
    Layout = null;
    var X = Html.X();
    var HQ = Html.HQ();
}

@(X.Viewport()
.Layout(LayoutType.Fit)
.Items(
    X.FormPanel()
    .ID("frmMain")
    .BodyPadding(0)
    .KeyMap(Util.SetupKeyMap())
    .TopBar(Util.SetupToolbar("Print", true, ""))
    .Layout(LayoutType.Border)
    .Listeners(l =>
    {
        l.BoxReady.Handler = "firstLoad()";
    })
    .Items(
        X.Panel().ID("pnlGrid")
        .Region(Region.Center)
        .Layout(LayoutType.Fit)
        .Items(
            X.FileUploadField().Hidden(true).ID("FileUpLoad")
                .Listeners(l =>
                {
                    l.Change.Fn = "fupPPCStorePicReq_Change";
                })
        
            , X.GridPanel()
            .Scroll(ScrollMode.Both)
            .View(X.GridView().TrackOver(false).LoadMask(true))
            .ID("grdOM_Advertise")
            .SelectionMemory(false)
            .Store(
                X.Store()
                .ID("stoOM_Advertise")
                .PageSize(50)
                .Model(Util.GenerateModel(typeof(OM23000_pgOM_Advertise_Result), "mdlOM23000_pgOM_Advertise", ""))
                .Parameters(ps =>
                {
                    ps.Add(new StoreParameter("CpnyID", "HQ.cpnyID", ParameterMode.Raw));
                    ps.Add(new StoreParameter("UserID", "HQ.userName", ParameterMode.Raw));
                })
                .ServerProxy(X.AjaxProxy().Url(Url.Action("GetOM_Advertise"))).AutoLoad(false)
                .Listeners(l =>
                {
                    l.BeforeLoad.Fn = "stoBeforeLoad";
                    l.Load.Fn = "stoLoad";
                    l.Update.Fn = "stoChanged";
                })
            )
            .SortableColumns(false)
            .ColumnModel(
                X.RowNumbererColumn().Width(40).Listeners(x => x.AfterRender.Handler = "this.resizable = true"),

                X.Column().Text(Util.GetLang("ClassID")).DataIndex("ClassID").Width(100).Renderer("renderClassID")
                    .Editor(
                        HQ.Combo().ID("cboClassID").Name("cboClassID")
                        .HQDBSys(false).HQProcedure("OM23000_pcClassID").ForceSelection(true)
                        .HQColumnShow("ClassID,Descr").DisplayField("Descr").ValueField("ClassID").HQHeightWidth(400, 300)
                        .HQParam(new StoreParameterCollection() {
                            new StoreParameter() { Name = "@CpnyID", Value ="HQ.cpnyID", Mode = ParameterMode.Raw},
                            new StoreParameter() { Name = "@UserID", Value ="HQ.userName", Mode = ParameterMode.Raw}
                        })
                        .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                        .Listeners(lst =>
                        {
                            lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                        })
                        .LoadData()
                    ),

                X.Column().Text(Util.GetLang("OM23000AdverID")).DataIndex("AdverID").Width(100)
                    .Editor(X.TextField().MaxLength(50).EnforceMaxLength(true)),

                X.Column().Text(Util.GetLang("OM23000Descr")).DataIndex("Descr").Width(200)
                    .Editor(X.TextField()),

                X.Column().Text(Util.GetLang("OM23000Video")).DataIndex("Video").Width(150),
                    //.Editor(X.TextField().MaxLength(200).EnforceMaxLength(true)),

                X.CommandColumn().Align(Alignment.Center).Width(23)
                    .Commands(
                        X.GridCommand().Icon(Icon.DiskUpload).CommandName("Edit_Click")
                    )
                    .Listeners(l => { 
                        l.Command.Handler = "btnImage1_Click(record);"; 
                    }),

                X.Column().Text(Util.GetLang("OM23000Profile")).DataIndex("Profile").Width(150),
                    //.Editor(X.TextField().MaxLength(200).EnforceMaxLength(true)),

                X.CommandColumn().Align(Alignment.Center).Width(23)
                    .Commands(
                        X.GridCommand().Icon(Icon.DiskUpload).CommandName("Edit_Click")
                    )
                    .Listeners(l => { 
                        l.Command.Handler = "btnImage2_Click(record);"; 
                    }),
                    
                X.CheckColumn().Text(Util.GetLang("OM23000Status")).DataIndex("Status").Width(70).Editable(true)

                //X.CommandColumn().Width(150)
        //.Commands(
        //    X.GridCommand()
        //    .Text(Util.GetLang("Reject"))
        //    .ToolTip(t => t.Text = Util.GetLang("Rejectrowchanges"))
        //    .CommandName("reject")
        //    .Icon(Icon.ArrowUndo)
        //)
        //.PrepareToolbar(t => t.Handler = "toolbar.items.get(0).setVisible(record.dirty);")
        //.Listeners(l => l.Command.Handler = "grdOM_Advertise_Reject(record);")
            )
            .SelectionModel(X.RowSelectionModel().ID("slmOM_Advertise").Mode(SelectionMode.Multi))
            .BottomBar(
                X.PagingToolbar()
                .Items(
                    X.Label("Page size:"),
                    X.ToolbarSpacer(10),
                    X.ComboBox()
                    .Width(80)
                    .Items("1", "2", "10", "20", "30", "50")
                    .SelectedItems("50")
                    .Listeners(l =>
                        {
                            l.Select.Fn = "HQ.grid.onPageSelect";
                        })
                )
                .Plugins(X.ProgressBarPager())
            )
            .Plugins(
                X.CellEditing()
                .ClicksToEdit(1)
                .Listeners(ls =>
                {
                    ls.BeforeEdit.Fn = "grdOM_Advertise_BeforeEdit";
                    ls.Edit.Fn = "grdOM_Advertise_Edit";
                    ls.ValidateEdit.Fn = "grdOM_Advertise_ValidateEdit";
                })
            )
            .Features(
                X.GridFilters()
                    .Local(true)
                    .Filters(
                        X.StringFilter().DataIndex("ClassID").ValidateRecord(p => p.Fn = "stringFilter"),
                        X.StringFilter().DataIndex("AdverID"),
                        X.StringFilter().DataIndex("Descr"),
                        X.StringFilter().DataIndex("Video"),
                        X.StringFilter().DataIndex("Profile"),
                        X.BooleanFilter().DataIndex("Status")
                    )
            )

        )
    )
))
