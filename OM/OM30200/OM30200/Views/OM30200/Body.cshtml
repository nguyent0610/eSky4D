
@using Ext.Net;
@using Ext.Net.MVC;
@using HQ.eSkyFramework;
@using HQ.eSkyFramework.HQControl;
@using OM30200;
@{
    Layout = null;
    var X = Html.X();
    var HQ = Html.HQ();
}

@(
 X.Viewport()
.Layout(LayoutType.Fit)
.Items(
        X.FormPanel()
        .ID("frmMain")
        .BodyPadding(0)
        .KeyMap(Util.SetupKeyMap())
        .TopBar(Util.SetupToolbar("Print,Save,New,Delete", true, ""))
        .Layout(LayoutType.Border)
        .FieldDefaults(act => { act.LabelAlign = LabelAlign.Right; act.LabelWidth = 150; })
        .Listeners(l =>
        {
            //l.BoxReady.Handler = "firstLoad();";
            //l.FieldChange.Fn = "frmChange";
        })
        .Items(
            X.Panel().ID("pnlHeader")
            .Region(Region.North)
            .Layout(LayoutType.HBox)
            .AutoScroll(true)
            .Items(
                X.Container().Layout(LayoutType.VBox).MarginSpec("0 0 0 0")
                .Items(
                    HQ.Combo().ID("cboCustID").Name("cboCustID").MarginSpec("5 0 0 0").Width(300)
                        .HQLangCode("CustID").HQDBSys(false).HQProcedure("OM30200_pcCustomer")
                        .HQColumnShow("CustId,CustName,Addr1,Addr2").ForceSelection(true)
                        .DisplayField("CustId").ValueField("CustId").HQHeightWidth(400, 300)
                        .HQParam(new StoreParameterCollection() {
                            new StoreParameter() { Name = "@BranchID", Value ="HQ.cpnyID", Mode = ParameterMode.Raw}
                        })
                        .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                        .Listeners(lst =>
                        {
                            //lst.Change.Fn = "cboBranchID_Change";
                            lst.TriggerClick.Handler = "if (index == 0) { this.focus(true);this.clearValue(); }";
                            lst.Focus.Handler = "this.forceSelection=true;";
                           
                        })  
                        .LoadData()
               
                    , HQ.Combo().ID("cboInvtID").Name("cboInvtID").MarginSpec("5 0 0 0").Width(300)
                        .HQLangCode("InvtID").HQDBSys(false).HQProcedure("OM30200_pcInventoryActiveByBranch")
                        .HQColumnShow("InvtID,Descr").ForceSelection(true)
                        .DisplayField("InvtID").ValueField("InvtID").HQHeightWidth(400, 300)
                        .HQParam(new StoreParameterCollection() {
                            new StoreParameter() { Name = "@BranchID", Value ="HQ.cpnyID", Mode = ParameterMode.Raw}
                        })
                        .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                        .Listeners(lst =>
                        {
                            //lst.Change.Fn = "cboInvtID_Change";
                            lst.TriggerClick.Handler = "if (index == 0) { this.focus(true);this.clearValue(); }";
                            lst.Focus.Handler = "this.forceSelection=true;";
                        })  
                        .LoadData()
                        
                    , HQ.Combo().ID("cboSiteID").Name("cboSiteID").MarginSpec("5 0 5 0").Width(300)
                        .HQLangCode("SiteID").HQDBSys(false).HQProcedure("OM30200_pcSiteAll")
                        .HQColumnShow("SiteID,Name").ForceSelection(true)
                        .DisplayField("SiteID").ValueField("SiteID").HQHeightWidth(400, 300)
                        .HQParam(new StoreParameterCollection() {
                            new StoreParameter() { Name = "@BranchID", Value ="HQ.cpnyID", Mode = ParameterMode.Raw},
                            new StoreParameter() { Name = "@ScreenNbr", Value ="OM30200", Mode = ParameterMode.Value},
                            new StoreParameter() { Name = "@UserName", Value ="HQ.userName", Mode = ParameterMode.Raw}
                        })
                        .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                        .Listeners(lst =>
                        {
                            //lst.Change.Fn = "cboInvtID_Change";
                            lst.TriggerClick.Handler = "if (index == 0) { this.focus(true);this.clearValue(); }";
                            lst.Focus.Handler = "this.forceSelection=true;";
                        })  
                        .LoadData()
                        
                    
                )
           
                , X.Container().Layout(LayoutType.VBox)
                    .Items(
                        //HQ.TextBox().ID("txtCusPO").Name("txtCusPO").DataIndex("CustOrderNbr").HQLangCode("CUSTORDERNBR").MarginSpec("5 0 0 0").Width(300)
                        //, HQ.TextBox().ID("txtInvoiceNbr").Name("txtInvoiceNbr").DataIndex("ClassID").HQLangCode("INVOICENBR").MarginSpec("5 0 0 0").Width(300)

                        HQ.Combo().ID("cboStatus").Name("cboStatus").MarginSpec("5 0 0 0").Width(300)
                        .HQLangCode("STATUS").HQDBSys(false).HQProcedure("OM30200_pcStatus")
                        .HQColumnShow("Descr").ForceSelection(true).HQValue("%",false)
                        .DisplayField("Descr").ValueField("Code").HQHeightWidth(400, 300)
                        .HQParam(new StoreParameterCollection() {
                            new StoreParameter() { Name = "@LangID", Value ="HQ.langID", Mode = ParameterMode.Raw}
                        })
                        .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                        .Listeners(lst =>
                        {
                            //lst.Change.Fn = "cboInvtID_Change";
                            lst.TriggerClick.Handler = "if (index == 0) { this.focus(true);this.clearValue(); }";
                            lst.Focus.Handler = "this.forceSelection=true;";
                        })  
                        .LoadData()
                        
                        , HQ.TextBox().ID("txtCusPO").Name("txtCusPO").HQLangCode("CUSTORDERNBR").MarginSpec("5 0 0 0").Width(300)

                        , HQ.DateField().ID("lblOrderDate").MarginSpec("5 0 5 0").HQLangCode("ORDDATE").Width(300)
                        .Format("dd/MM/yyyy").Value(DateTime.Now.ToString("dd/MM/yyyy"))
                    )
                , X.Container().Layout(LayoutType.VBox)
                .Items(
                    HQ.Combo().ID("cboTerritory").Name("cboTerritory").MarginSpec("5 0 0 0").Width(300)
                        .HQLangCode("TERRITORY").HQDBSys(false).HQProcedure("OM30200_pcTerritory")
                        .HQColumnShow("Territory,Descr").ForceSelection(true)
                        .DisplayField("Territory").ValueField("Territory").HQHeightWidth(400, 300)
                        .HQParam(new StoreParameterCollection() {
                        })
                        .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                        .Listeners(lst =>
                        {
                            //lst.Change.Fn = "cboInvtID_Change";
                            lst.TriggerClick.Handler = "if (index == 0) { this.focus(true);this.clearValue(); }";
                            lst.Focus.Handler = "this.forceSelection=true;";
                        })  
                        .LoadData()
                    
                    , HQ.TextBox().ID("txtInvoiceNbr").Name("txtInvoiceNbr").HQLangCode("INVOICENBR").MarginSpec("5 0 0 0").Width(300)

                    , HQ.DateField().ID("lblTo").MarginSpec("5 0 5 0").HQLangCode("TO").Width(300)
                    .Format("dd/MM/yyyy").Value(DateTime.Now.ToString("dd/MM/yyyy"))
                )
                
            )//pnl Header

            , X.Panel().ID("pnlGrid")
            .Region(Region.Center)
            .Layout(LayoutType.Border)
            .Items(
                X.GridPanel().ID("grdHeader")
                    .Scroll(ScrollMode.Both)
                    .View(X.GridView().TrackOver(false).LoadMask(true))
                    .Region(Region.Center).Flex(1)
                    .SelectionMemory(false)
                        .Store(
                            X.Store()
                            .ID("stoHeader")
                            .PageSize(50)
                            .Model(Util.GenerateModel(typeof(OM30200_SalesInquiryHeader_Result), "mdlOM30200_SalesInquiryHeader", ""))
                            .ServerProxy(X.AjaxProxy().Url(Url.Action("GetHeader"))).AutoLoad(false)
                            .Parameters(ps =>
                            {
                                ps.Add(new StoreParameter("CustID", "App.cboCustID.getValue()", ParameterMode.Raw));
                                ps.Add(new StoreParameter("InvtID", "App.cboInvtID.getValue()", ParameterMode.Raw));
                                ps.Add(new StoreParameter("SiteID", "App.cboSiteID.getValue()", ParameterMode.Raw));
                                ps.Add(new StoreParameter("CustPO", "App.txtCusPO.getValue()", ParameterMode.Raw));
                                ps.Add(new StoreParameter("invoice", "App.txtInvoiceNbr.getValue()", ParameterMode.Raw));
                                ps.Add(new StoreParameter("Status", "App.cboStatus.getValue()", ParameterMode.Raw));
                                ps.Add(new StoreParameter("BranchID", "HQ.cpnyID", ParameterMode.Raw));
                                ps.Add(new StoreParameter("FromDate", "App.lblOrderDate.getValue()", ParameterMode.Raw));
                                ps.Add(new StoreParameter("ToDate", "App.lblTo.getValue()", ParameterMode.Raw));
                                ps.Add(new StoreParameter("SlsRoute", "App.cboTerritory.getValue()", ParameterMode.Raw));
                            })
                        )
                    .Listeners(lst => lst.Render.Handler = "HQ.common.control_render(this,'grdHeader');")
                    .SortableColumns(false)
                    .ColumnModel(
                        X.RowNumbererColumn().Width(40)

                        , X.Column().Text(Util.GetLang("InvtID")).DataIndex("InvtID").Width(100)
                        , X.Column().Text(Util.GetLang("Descr")).DataIndex("Descr").Width(100)
                        , X.NumberColumn().Text(Util.GetLang("Qty")).DataIndex("Qty").Width(150).Align(Alignment.Right).Format("0,000")
                        , X.Column().Text(Util.GetLang("StkUnit")).DataIndex("StkUnit").Width(100)
                        , X.Column().Text(Util.GetLang("SlsRoute")).DataIndex("SlsRoute").Width(100)
              
                        , X.CommandColumn().Width(150)
                        .Commands(
                            X.GridCommand()
                            .Text(Util.GetLang("Reject"))
                            .ToolTip(t => t.Text = Util.GetLang("Rejectrowchanges"))
                            .CommandName("reject")
                            .Icon(Icon.ArrowUndo)
                        )
                        .PrepareToolbar(t => t.Handler = "toolbar.items.get(0).setVisible(record.dirty);")
                        .Listeners(l => l.Command.Handler = "grdHeader_Reject(record);")
                    )
                    .SelectionModel(X.RowSelectionModel().ID("slmHeader").Mode(SelectionMode.Multi))
                    .BottomBar(
                            X.PagingToolbar()
                            .Items(
                                X.Label("Page size:"),
                                X.ToolbarSpacer(10),
                                X.ComboBox()
                                .Width(80)
                                .Items("1", "2", "10", "20", "30", "50")
                                .SelectedItems("50")
                                .Listeners(l => l.Select.Fn = "HQ.grid.onPageSelect")
                            )
                            .Plugins(X.ProgressBarPager())
                        )
                    .Plugins(
                        X.RowExpander().ID("Ctrl_Expand")
                        .Listeners(l=>l.Expand.Fn="Ctrl_Expand")
                        .Component(
                            X.FormPanel()
                            .Items(                           
                                X.GridPanel().Height(300).ID("grdDetail")
                                .Store(
                                    X.Store()
                                    .ID("stoDetail")
                                    .PageSize(50)
                                    .Model(Util.GenerateModel(typeof(OM30200_SalesInquiryDetail_Result), "mdlOM30200_SalesInquiryDetail", ""))
                                    .ServerProxy(X.AjaxProxy().Url(Url.Action("GetDetail"))).AutoLoad(false)
                                    .Parameters(ps =>
                                        {
                                            ps.Add(new StoreParameter("CustID", "App.cboCustID.getValue()", ParameterMode.Raw));
                                            ps.Add(new StoreParameter("InvtID", "HQ_InvtID", ParameterMode.Raw));
                                            ps.Add(new StoreParameter("SiteID", "App.cboSiteID.getValue()", ParameterMode.Raw));
                                            ps.Add(new StoreParameter("CustPO", "App.txtCusPO.getValue()", ParameterMode.Raw));
                                            ps.Add(new StoreParameter("invoice", "App.txtInvoiceNbr.getValue()", ParameterMode.Raw));
                                            ps.Add(new StoreParameter("Status", "App.cboStatus.getValue()", ParameterMode.Raw));
                                            ps.Add(new StoreParameter("BranchID", "HQ.cpnyID", ParameterMode.Raw));
                                            ps.Add(new StoreParameter("FromDate", "App.lblOrderDate.getValue()", ParameterMode.Raw));
                                            ps.Add(new StoreParameter("ToDate", "App.lblTo.getValue()", ParameterMode.Raw));
                                            ps.Add(new StoreParameter("SlsRoute", "App.cboTerritory.getValue()", ParameterMode.Raw));
                                        })
                                )
                                .ColumnModel(
                                    X.Column().Text(Util.GetLang("OrderNbr")).DataIndex("OrderNbr")
                                    , X.Column().Text(Util.GetLang("InvcNbr")).DataIndex("InvcNbr")
                                    , X.DateColumn().Text(Util.GetLang("OrderDate")).DataIndex("OrderDate").Format("dd/MM/yyyy")
                                    , X.Column().Text(Util.GetLang("CustID")).DataIndex("CustID")
                                    , X.Column().Text(Util.GetLang("Name")).DataIndex("CustName")
                                    , X.NumberColumn().Text(Util.GetLang("Qty")).DataIndex("Qty").Align(Alignment.Right).Format("0,000")
                                    , X.Column().Text(Util.GetLang("SOUnit")).DataIndex("SlsUnit")
                                )
                                .Features(
                                X.GridFilters()
                                .Local(true)
                                .Filters(
                                    X.StringFilter().DataIndex("OrderNbr"),
                                    X.StringFilter().DataIndex("InvcNbr"),
                                    X.DateFilter().DataIndex("OrderDate"),
                                    X.StringFilter().DataIndex("CustID"),
                                    X.StringFilter().DataIndex("CustName"),
                                    X.NumericFilter().DataIndex("Qty"),
                                    X.StringFilter().DataIndex("SlsUnit")
                                )
                    )
                                
                            )
                        )
                    )

                    .Features(
                        X.GridFilters()
                            .Local(true)
                            .Filters(
                                X.StringFilter().DataIndex("InvtID"),
                                X.StringFilter().DataIndex("Descr"),
                                X.NumericFilter().DataIndex("Qty"),
                                X.StringFilter().DataIndex("StkUnit"),
                                X.StringFilter().DataIndex("SlsRoute")
                                
                            )
                    )
                    
            )//pnl Grid

        )//frm Main
)//View port
)
