//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
namespace OM30200
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class OM30200Entities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new OM30200Entities object using the connection string found in the 'OM30200Entities' section of the application configuration file.
        /// </summary>
        public OM30200Entities() : base("name=OM30200Entities", "OM30200Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new OM30200Entities object.
        /// </summary>
        public OM30200Entities(string connectionString) : base(connectionString, "OM30200Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new OM30200Entities object.
        /// </summary>
        public OM30200Entities(EntityConnection connection) : base(connection, "OM30200Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="custID">No Metadata Documentation available.</param>
        /// <param name="invtID">No Metadata Documentation available.</param>
        /// <param name="siteID">No Metadata Documentation available.</param>
        /// <param name="custPO">No Metadata Documentation available.</param>
        /// <param name="invoice">No Metadata Documentation available.</param>
        /// <param name="status">No Metadata Documentation available.</param>
        /// <param name="branchID">No Metadata Documentation available.</param>
        /// <param name="fromDate">No Metadata Documentation available.</param>
        /// <param name="toDate">No Metadata Documentation available.</param>
        /// <param name="slsRoute">No Metadata Documentation available.</param>
        public ObjectResult<OM30200_SalesInquiryDetail_Result> OM30200_SalesInquiryDetail(global::System.String custID, global::System.String invtID, global::System.String siteID, global::System.String custPO, global::System.String invoice, global::System.String status, global::System.String branchID, Nullable<global::System.DateTime> fromDate, Nullable<global::System.DateTime> toDate, global::System.String slsRoute)
        {
            ObjectParameter custIDParameter;
            if (custID != null)
            {
                custIDParameter = new ObjectParameter("CustID", custID);
            }
            else
            {
                custIDParameter = new ObjectParameter("CustID", typeof(global::System.String));
            }
    
            ObjectParameter invtIDParameter;
            if (invtID != null)
            {
                invtIDParameter = new ObjectParameter("InvtID", invtID);
            }
            else
            {
                invtIDParameter = new ObjectParameter("InvtID", typeof(global::System.String));
            }
    
            ObjectParameter siteIDParameter;
            if (siteID != null)
            {
                siteIDParameter = new ObjectParameter("SiteID", siteID);
            }
            else
            {
                siteIDParameter = new ObjectParameter("SiteID", typeof(global::System.String));
            }
    
            ObjectParameter custPOParameter;
            if (custPO != null)
            {
                custPOParameter = new ObjectParameter("CustPO", custPO);
            }
            else
            {
                custPOParameter = new ObjectParameter("CustPO", typeof(global::System.String));
            }
    
            ObjectParameter invoiceParameter;
            if (invoice != null)
            {
                invoiceParameter = new ObjectParameter("invoice", invoice);
            }
            else
            {
                invoiceParameter = new ObjectParameter("invoice", typeof(global::System.String));
            }
    
            ObjectParameter statusParameter;
            if (status != null)
            {
                statusParameter = new ObjectParameter("Status", status);
            }
            else
            {
                statusParameter = new ObjectParameter("Status", typeof(global::System.String));
            }
    
            ObjectParameter branchIDParameter;
            if (branchID != null)
            {
                branchIDParameter = new ObjectParameter("BranchID", branchID);
            }
            else
            {
                branchIDParameter = new ObjectParameter("BranchID", typeof(global::System.String));
            }
    
            ObjectParameter fromDateParameter;
            if (fromDate.HasValue)
            {
                fromDateParameter = new ObjectParameter("FromDate", fromDate);
            }
            else
            {
                fromDateParameter = new ObjectParameter("FromDate", typeof(global::System.DateTime));
            }
    
            ObjectParameter toDateParameter;
            if (toDate.HasValue)
            {
                toDateParameter = new ObjectParameter("ToDate", toDate);
            }
            else
            {
                toDateParameter = new ObjectParameter("ToDate", typeof(global::System.DateTime));
            }
    
            ObjectParameter slsRouteParameter;
            if (slsRoute != null)
            {
                slsRouteParameter = new ObjectParameter("SlsRoute", slsRoute);
            }
            else
            {
                slsRouteParameter = new ObjectParameter("SlsRoute", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<OM30200_SalesInquiryDetail_Result>("OM30200_SalesInquiryDetail", custIDParameter, invtIDParameter, siteIDParameter, custPOParameter, invoiceParameter, statusParameter, branchIDParameter, fromDateParameter, toDateParameter, slsRouteParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="custID">No Metadata Documentation available.</param>
        /// <param name="invtID">No Metadata Documentation available.</param>
        /// <param name="siteID">No Metadata Documentation available.</param>
        /// <param name="custPO">No Metadata Documentation available.</param>
        /// <param name="invoice">No Metadata Documentation available.</param>
        /// <param name="status">No Metadata Documentation available.</param>
        /// <param name="branchID">No Metadata Documentation available.</param>
        /// <param name="fromDate">No Metadata Documentation available.</param>
        /// <param name="toDate">No Metadata Documentation available.</param>
        /// <param name="slsRoute">No Metadata Documentation available.</param>
        public ObjectResult<OM30200_SalesInquiryHeader_Result> OM30200_SalesInquiryHeader(global::System.String custID, global::System.String invtID, global::System.String siteID, global::System.String custPO, global::System.String invoice, global::System.String status, global::System.String branchID, Nullable<global::System.DateTime> fromDate, Nullable<global::System.DateTime> toDate, global::System.String slsRoute)
        {
            ObjectParameter custIDParameter;
            if (custID != null)
            {
                custIDParameter = new ObjectParameter("CustID", custID);
            }
            else
            {
                custIDParameter = new ObjectParameter("CustID", typeof(global::System.String));
            }
    
            ObjectParameter invtIDParameter;
            if (invtID != null)
            {
                invtIDParameter = new ObjectParameter("InvtID", invtID);
            }
            else
            {
                invtIDParameter = new ObjectParameter("InvtID", typeof(global::System.String));
            }
    
            ObjectParameter siteIDParameter;
            if (siteID != null)
            {
                siteIDParameter = new ObjectParameter("SiteID", siteID);
            }
            else
            {
                siteIDParameter = new ObjectParameter("SiteID", typeof(global::System.String));
            }
    
            ObjectParameter custPOParameter;
            if (custPO != null)
            {
                custPOParameter = new ObjectParameter("CustPO", custPO);
            }
            else
            {
                custPOParameter = new ObjectParameter("CustPO", typeof(global::System.String));
            }
    
            ObjectParameter invoiceParameter;
            if (invoice != null)
            {
                invoiceParameter = new ObjectParameter("invoice", invoice);
            }
            else
            {
                invoiceParameter = new ObjectParameter("invoice", typeof(global::System.String));
            }
    
            ObjectParameter statusParameter;
            if (status != null)
            {
                statusParameter = new ObjectParameter("Status", status);
            }
            else
            {
                statusParameter = new ObjectParameter("Status", typeof(global::System.String));
            }
    
            ObjectParameter branchIDParameter;
            if (branchID != null)
            {
                branchIDParameter = new ObjectParameter("BranchID", branchID);
            }
            else
            {
                branchIDParameter = new ObjectParameter("BranchID", typeof(global::System.String));
            }
    
            ObjectParameter fromDateParameter;
            if (fromDate.HasValue)
            {
                fromDateParameter = new ObjectParameter("FromDate", fromDate);
            }
            else
            {
                fromDateParameter = new ObjectParameter("FromDate", typeof(global::System.DateTime));
            }
    
            ObjectParameter toDateParameter;
            if (toDate.HasValue)
            {
                toDateParameter = new ObjectParameter("ToDate", toDate);
            }
            else
            {
                toDateParameter = new ObjectParameter("ToDate", typeof(global::System.DateTime));
            }
    
            ObjectParameter slsRouteParameter;
            if (slsRoute != null)
            {
                slsRouteParameter = new ObjectParameter("SlsRoute", slsRoute);
            }
            else
            {
                slsRouteParameter = new ObjectParameter("SlsRoute", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<OM30200_SalesInquiryHeader_Result>("OM30200_SalesInquiryHeader", custIDParameter, invtIDParameter, siteIDParameter, custPOParameter, invoiceParameter, statusParameter, branchIDParameter, fromDateParameter, toDateParameter, slsRouteParameter);
        }

        #endregion

    }

    #endregion

    #region ComplexTypes
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="OM30200Model", Name="OM30200_SalesInquiryDetail_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class OM30200_SalesInquiryDetail_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OM30200_SalesInquiryDetail_Result object.
        /// </summary>
        /// <param name="orderNbr">Initial value of the OrderNbr property.</param>
        /// <param name="orderDate">Initial value of the OrderDate property.</param>
        /// <param name="custName">Initial value of the CustName property.</param>
        /// <param name="qty">Initial value of the Qty property.</param>
        /// <param name="slsPrice">Initial value of the SlsPrice property.</param>
        public static OM30200_SalesInquiryDetail_Result CreateOM30200_SalesInquiryDetail_Result(global::System.String orderNbr, global::System.DateTime orderDate, global::System.String custName, global::System.Double qty, global::System.Double slsPrice)
        {
            OM30200_SalesInquiryDetail_Result oM30200_SalesInquiryDetail_Result = new OM30200_SalesInquiryDetail_Result();
            oM30200_SalesInquiryDetail_Result.OrderNbr = orderNbr;
            oM30200_SalesInquiryDetail_Result.OrderDate = orderDate;
            oM30200_SalesInquiryDetail_Result.CustName = custName;
            oM30200_SalesInquiryDetail_Result.Qty = qty;
            oM30200_SalesInquiryDetail_Result.SlsPrice = slsPrice;
            return oM30200_SalesInquiryDetail_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OrderNbr
        {
            get
            {
                return _OrderNbr;
            }
            set
            {
                OnOrderNbrChanging(value);
                ReportPropertyChanging("OrderNbr");
                _OrderNbr = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("OrderNbr");
                OnOrderNbrChanged();
            }
        }
        private global::System.String _OrderNbr;
        partial void OnOrderNbrChanging(global::System.String value);
        partial void OnOrderNbrChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InvcNbr
        {
            get
            {
                return _InvcNbr;
            }
            set
            {
                OnInvcNbrChanging(value);
                ReportPropertyChanging("InvcNbr");
                _InvcNbr = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("InvcNbr");
                OnInvcNbrChanged();
            }
        }
        private global::System.String _InvcNbr;
        partial void OnInvcNbrChanging(global::System.String value);
        partial void OnInvcNbrChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime OrderDate
        {
            get
            {
                return _OrderDate;
            }
            set
            {
                OnOrderDateChanging(value);
                ReportPropertyChanging("OrderDate");
                _OrderDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrderDate");
                OnOrderDateChanged();
            }
        }
        private global::System.DateTime _OrderDate;
        partial void OnOrderDateChanging(global::System.DateTime value);
        partial void OnOrderDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CustID
        {
            get
            {
                return _CustID;
            }
            set
            {
                OnCustIDChanging(value);
                ReportPropertyChanging("CustID");
                _CustID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CustID");
                OnCustIDChanged();
            }
        }
        private global::System.String _CustID;
        partial void OnCustIDChanging(global::System.String value);
        partial void OnCustIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CustName
        {
            get
            {
                return _CustName;
            }
            set
            {
                OnCustNameChanging(value);
                ReportPropertyChanging("CustName");
                _CustName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CustName");
                OnCustNameChanged();
            }
        }
        private global::System.String _CustName;
        partial void OnCustNameChanging(global::System.String value);
        partial void OnCustNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Qty
        {
            get
            {
                return _Qty;
            }
            set
            {
                OnQtyChanging(value);
                ReportPropertyChanging("Qty");
                _Qty = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Qty");
                OnQtyChanged();
            }
        }
        private global::System.Double _Qty;
        partial void OnQtyChanging(global::System.Double value);
        partial void OnQtyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double SlsPrice
        {
            get
            {
                return _SlsPrice;
            }
            set
            {
                OnSlsPriceChanging(value);
                ReportPropertyChanging("SlsPrice");
                _SlsPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SlsPrice");
                OnSlsPriceChanged();
            }
        }
        private global::System.Double _SlsPrice;
        partial void OnSlsPriceChanging(global::System.Double value);
        partial void OnSlsPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SlsUnit
        {
            get
            {
                return _SlsUnit;
            }
            set
            {
                OnSlsUnitChanging(value);
                ReportPropertyChanging("SlsUnit");
                _SlsUnit = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SlsUnit");
                OnSlsUnitChanged();
            }
        }
        private global::System.String _SlsUnit;
        partial void OnSlsUnitChanging(global::System.String value);
        partial void OnSlsUnitChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="OM30200Model", Name="OM30200_SalesInquiryHeader_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class OM30200_SalesInquiryHeader_Result : ComplexObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InvtID
        {
            get
            {
                return _InvtID;
            }
            set
            {
                OnInvtIDChanging(value);
                ReportPropertyChanging("InvtID");
                _InvtID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("InvtID");
                OnInvtIDChanged();
            }
        }
        private global::System.String _InvtID;
        partial void OnInvtIDChanging(global::System.String value);
        partial void OnInvtIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Descr
        {
            get
            {
                return _Descr;
            }
            set
            {
                OnDescrChanging(value);
                ReportPropertyChanging("Descr");
                _Descr = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Descr");
                OnDescrChanged();
            }
        }
        private global::System.String _Descr;
        partial void OnDescrChanging(global::System.String value);
        partial void OnDescrChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Qty
        {
            get
            {
                return _Qty;
            }
            set
            {
                OnQtyChanging(value);
                ReportPropertyChanging("Qty");
                _Qty = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Qty");
                OnQtyChanged();
            }
        }
        private Nullable<global::System.Double> _Qty;
        partial void OnQtyChanging(Nullable<global::System.Double> value);
        partial void OnQtyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StkUnit
        {
            get
            {
                return _StkUnit;
            }
            set
            {
                OnStkUnitChanging(value);
                ReportPropertyChanging("StkUnit");
                _StkUnit = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StkUnit");
                OnStkUnitChanged();
            }
        }
        private global::System.String _StkUnit;
        partial void OnStkUnitChanging(global::System.String value);
        partial void OnStkUnitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SlsRoute
        {
            get
            {
                return _SlsRoute;
            }
            set
            {
                OnSlsRouteChanging(value);
                ReportPropertyChanging("SlsRoute");
                _SlsRoute = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SlsRoute");
                OnSlsRouteChanged();
            }
        }
        private global::System.String _SlsRoute;
        partial void OnSlsRouteChanging(global::System.String value);
        partial void OnSlsRouteChanged();

        #endregion

    }

    #endregion

    
}
