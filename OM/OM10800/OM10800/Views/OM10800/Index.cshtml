@using Ext.Net;
@using Ext.Net.MVC;
@using HQ.eSkyFramework;
@using HQ.eSkyFramework.HQControl;
@using OM10800;

@model System.Collections.IEnumerable
@{
    Layout = null;
    var X = Html.X();
    ViewBag.Title = "OM10800";
    var acc = Session["OM10800"] as AccessRight;
}
<!DOCTYPE html>
<html>
 <!--Không thay đổi phần head Đổi mã màn hình OM10800.js tùy theo màn hình đổi lại-->
<head>
    <meta name="viewport" content="width=device-width" />
    <script src='@Url.Content("Scripts/hq.language"+Current.LangID+".js?"+DateTime.Now.ToString("yyyyMMddss"))' type="text/javascript"></script>
    <script src='@Url.Content("Scripts/hq.common.js?"+DateTime.Now.ToString("yyyyMMddss"))' type="text/javascript"></script>
    <script src='@Url.Content("Scripts/screen/OM10800.js?"+DateTime.Now.ToString("yyyyMMddss"))' type="text/javascript"></script>
    <style>
        .x-grid-row-over .x-grid-cell-inner {
            font-weight : bold;
        }
    </style>
    <script>
       
        HQ.cpnyID = '@Current.CpnyID';
        HQ.langID = '@Current.LangID';
        HQ.userName = '@Current.UserName';
        HQ.isUpdate = HQ.util.toBool('@acc.Update.ToString()');
        HQ.isInsert = HQ.util.toBool('@acc.Insert.ToString()');
        HQ.isDelete = HQ.util.toBool('@acc.Delete.ToString()');
        HQ.bussinessDate = new Date('@DateTime.Now.Date');
        HQ.branchID = '@ViewBag.branchID';
    </script>  
    <title>@ViewBag.Title</title>
</head>
<body>   
    @(X.ResourceManager().Theme((Theme)Enum.Parse(typeof(Theme),Current.Theme.PassNull()==""?"Gray":Current.Theme.PassNull())))
   
        @(X.Store().ID("stoHeader")
                .AutoLoad(false)
                .Model(Util.GenerateModel(typeof(OM10800_pdHeader_Result), "mdlHeader", ""))
                .ServerProxy(
                    X.AjaxProxy()
                    .Url(Url.Action("GetHeader", "OM10800"))
                    .ActionMethods(action =>
                    {
                        action.Read = HttpMethod.POST;
                    })
                    .Reader(X.JsonReader().Root("data").TotalProperty("totaldata"))
                )
                .Parameters(ps =>
                {
                    ps.Add(new StoreParameter("branchID", "App.txtBranchID.getValue()", ParameterMode.Raw));
                    ps.Add(new StoreParameter("batNbr", "App.cboBatNbr.getValue()", ParameterMode.Raw));
                })
                        .Listeners(p => { p.Load.Fn = "stoData_Load"; p.Update.Fn = "frmChange"; })
        )
    
    
        @(
            X.Store().ID("stoDet")
            .AutoLoad(false)
            .Model(Util.GenerateModel(typeof(OM10800_pgDet_Result), "mdlDet", ""))
            .Proxy(
                X.AjaxProxy()
                .Url(Url.Action("GetDet", "OM10800"))
                .ActionMethods(action =>
                {
                    action.Read = HttpMethod.POST;
                })
                .Reader(X.JsonReader().Root("data").TotalProperty("totaldata"))
            )
            .Parameters(ps =>
            {
                ps.Add(new StoreParameter("branchID", "App.txtBranchID.getValue()", ParameterMode.Raw));
                ps.Add(new StoreParameter("batNbr", "App.cboBatNbr.getValue()", ParameterMode.Raw));               
                ps.Add(new StoreParameter("startDate", "App.dteStartDate.getValue()", ParameterMode.Raw));
                ps.Add(new StoreParameter("endDate", "App.dteEndDate.getValue()", ParameterMode.Raw));
            })
            .Listeners(p => {
                p.Load.Fn = "stoData_Load";

            })

        )
    @(
            X.Store().ID("stoDelivery")
            .AutoLoad(false)
            .Model(Util.GenerateModel(typeof(OM10800_pgDelivery_Result), "mdlDelivery", ""))
            .Proxy(
                X.AjaxProxy()
                .Url(Url.Action("GetDelivery", "OM10800"))
                .ActionMethods(action =>
                {
                    action.Read = HttpMethod.POST;
                })
                .Reader(X.JsonReader().Root("data").TotalProperty("totaldata"))
            )
            .Parameters(ps =>
            {
                ps.Add(new StoreParameter("branchID", "App.txtBranchID.getValue()", ParameterMode.Raw));
                ps.Add(new StoreParameter("batNbr", "App.cboBatNbr.getValue()", ParameterMode.Raw));               
            })
            .Listeners(p => {
                p.Load.Fn = "stoData_Load";

            })

        )
        @X.GridFilters()<!--Khi cache cho grid-->
        @X.ProgressBarPager()<!--Khi cache cho grid -->   
        <!-- Gọi hàm Body trong OM10800Controller để dựng view Body.cshtml, mục đích tạo cache. -->    
       
                
        @{Html.RenderAction("Body", new { lang=Current.LangID});}   
    
</body>
</html>
 