@using Ext.Net;
@using Ext.Net.MVC;
@using HQ.eSkyFramework;
@using HQ.eSkyFramework.HQControl;
@using OM22002;
@{
    Layout = null;
    var X = Html.X();
    var HQ = Html.HQ();
}

@(
 Html.X().Viewport().Layout(LayoutType.Fit)
    .Items(
        X.FormPanel()
        .Layout(LayoutType.Border)
        .ID("frmMain")
        .TrackResetOnLoad(true)
        //.DefaultAnchor("100%")
        .BodyPadding(10)
        .BodyBorder(0).AutoScroll(true)
        .TopBar(Util.SetupToolbar("new,delete,close,print", true, "Event.Form.menuClick"))
        .FieldDefaults(act => { act.LabelAlign = LabelAlign.Right; act.LabelWidth = 150; })
        .Items(
            X.Panel().ID("pnlHeader").Layout(LayoutType.HBox).Region(Region.North)
            .LayoutConfig(new HBoxLayoutConfig { Align = HBoxAlign.Top }).Border(false)
            .Items(

                // First Column
                X.Container().Layout(LayoutType.VBox).MarginSpec("5 0 5 0")
                .MinWidth(250).Flex(1)
                .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Stretch })
                .Items(
                    HQ.Combo().ID("cboZone")
                    .HQLangCode("Zone").HQProcedure("OM22002_pcZone")
                    .HQColumnShow("Code,Descr").ValueField("Code").DisplayField("Code")
                    .HQHeightWidth(400, 300).MultiSelect(true)
                    .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                    .HQParam(new StoreParameterCollection() { 
                        new StoreParameter("@UserID", "HQ.userName", ParameterMode.Raw) 
                    })
                    .LoadData()
                    .Listeners(l =>
                    {
                        l.TriggerClick.Fn = "Event.Form.btnHideTrigger_click";
                        l.Change.Handler = "App.cboTerritory.store.reload()";
                    })
                    
                    ,HQ.Combo().ID("cboTerritory")
                    .HQLangCode("Territory").HQProcedure("OM22002_pcTerritory")
                    .HQColumnShow("Code,Descr").ValueField("Code").DisplayField("Code")
                    .HQHeightWidth(400, 300).MultiSelect(true)
                    .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                    .HQParam(new StoreParameterCollection() { 
                        new StoreParameter("@UserID", "HQ.userName", ParameterMode.Raw) 
                        , new StoreParameter("@Zone", "App.cboZone.getValue().join(',')", ParameterMode.Raw)
                    })
                    .LoadData()
                    .Listeners(l =>
                    {
                        l.TriggerClick.Fn = "Event.Form.btnHideTrigger_click";
                        l.Change.Handler = "App.cboCpny.store.reload()";
                    })
                ) // First Column

                // Second Column
                , X.Container().Layout(LayoutType.VBox).MarginSpec("5 0 5 0")
                .MinWidth(250).Flex(1)
                .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Stretch })
                .Items(
                    HQ.Combo().ID("cboCpny")
                     .HQLangCode("Branch").HQProcedure("OM22002_pcBranchAllByUser")
                    .HQColumnShow("BranchID,BranchName").ValueField("BranchID").DisplayField("BranchID")
                    .HQHeightWidth(400, 300).AllowBlank(false)
                    .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                    .HQParam(new StoreParameterCollection() { 
                        new StoreParameter("@UserID", "HQ.userName", ParameterMode.Raw) 
                        , new StoreParameter("@Territory", "App.cboTerritory.getValue().join(',')", ParameterMode.Raw)
                    })
                    .LoadData()
                    .Listeners(l =>
                    {
                        l.TriggerClick.Fn = "Event.Form.btnHideTrigger_click";
                        l.Change.Fn = "Event.Form.cboCpny_change";
                    })

                    , HQ.Combo().ID("cboTradeType")
                    .HQLangCode("TradeType").HQProcedure("OM22002_pcTradeType")
                    .HQColumnShow("Code,Descr").ValueField("Code").DisplayField("Descr")
                    .HQHeightWidth(400, 300).AllowBlank(false).ForceSelection(true)
                    .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                    .HQParam(new StoreParameterCollection() { 
                        new StoreParameter("@UserID", "HQ.userName", ParameterMode.Raw)
                        , new StoreParameter("@LangID", "HQ.langID", ParameterMode.Raw) 
                    })
                    .LoadData()
                    .Listeners(l =>
                    {
                        l.TriggerClick.Fn = "Event.Form.btnHideTrigger_click";
                        l.Change.Fn = "Event.Form.cboTradeType_change";
                    })
                ) // Second Column
                
                // Second Column
                , X.Container().Layout(LayoutType.VBox).MarginSpec("5 0 5 0")
                .MinWidth(250).Flex(1)
                .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Stretch })
                .Items(
                    HQ.Combo().ID("cboObjectID")
                    .HQLangCode("Display/Bonus").HQProcedure("OM22002_pcObjectID")
                    .HQColumnShow("Code,Descr").ValueField("Code").DisplayField("Descr")
                    .HQHeightWidth(400, 300).AllowBlank(false).ForceSelection(true)
                    .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                    .HQParam(new StoreParameterCollection() { 
                        new StoreParameter("@UserID", "HQ.userName", ParameterMode.Raw)
                        , new StoreParameter("@CpnyID", "App.cboCpny.getValue()", ParameterMode.Raw) 
                        , new StoreParameter("@TradeType", "App.cboTradeType.getValue()", ParameterMode.Raw)
                    })
                    .LoadData()
                    .Listeners(l =>
                    {
                        l.TriggerClick.Fn = "Event.Form.btnHideTrigger_click";
                        l.Change.Fn = "Event.Form.cboObjectID_change";
                    })
                )
                
                // Third Column
                , X.Container().Layout(LayoutType.VBox).MarginSpec("5 5 5 105")
                //.MinWidth(250)//.Flex(1)
                .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Stretch, Pack = BoxPack.Center })
                .Items(
                     HQ.Button().ID("btnLoad")
                     .HQLangCode("LoadData").Icon(Icon.ArrowRefresh)
                     .Handler("Event.Form.btnLoad_click")
                     
                     ,HQ.Button().ID("btnImport")
                     .MarginSpec("5 0 0 0").Hidden(true)
                     .HQLangCode("ImportExcel").Icon(Icon.DiskDownload)
                     .Handler("Event.Form.btnImport_click")
                ) // Third Column
            ) // pnlHeader

            , X.GridPanel().ID("grdDet")
            .Region(Region.Center)
            .Scroll(ScrollMode.Both)
            .View(X.GridView().TrackOver(false))
            .SortableColumns(false)
            .Store(
                 X.Store().ID("stoDet")
                .AutoLoad(false).PageSize(50)//.RemotePaging(true)
                .Model(Util.GenerateModel(typeof(OM22002_pgCust_Result), "mdlDet", ""))       
                .ServerProxy(
                    X.AjaxProxy()                
                    .Url(Url.Action("GetDet", "OM22002"))
                ) 
                .Parameters(ps =>
                {
                    ps.Add(new StoreParameter("cpnyID", "App.cboCpny.getValue()", ParameterMode.Raw));
                    ps.Add(new StoreParameter("objectID", "App.cboObjectID.getValue()", ParameterMode.Raw));
                    ps.Add(new StoreParameter("tradeType", "App.cboTradeType.getValue()", ParameterMode.Raw));
                })      
                //.Listeners(p=>p.Load.Fn="Store.stoDet_load" )
                // Store: stoDet
            )
            .ColumnModel(
                X.RowNumbererColumn()
                , X.CheckColumn().Text(Util.GetLang("Register")).DataIndex("Selected")
                .Editable(true).Align(Alignment.Center)
                
                , X.Column().Text(Util.GetLang("Zone")).DataIndex("Zone")      
                , X.Column().Text(Util.GetLang("Territory")).DataIndex("Territory")      
                , X.Column().Text(Util.GetLang("BranchID")).DataIndex("BranchID")
                , X.Column().Text(Util.GetLang("SlsperID")).DataIndex("SlsperID")      
                , X.Column().Text(Util.GetLang("SlsName")).DataIndex("SlsName")      
                , X.Column().Text(Util.GetLang("CustID")).DataIndex("CustID")
                , X.Column().Text(Util.GetLang("CustName")).DataIndex("CustName")      
                , X.Column().Text(Util.GetLang("ObjectID")).DataIndex("ObjectID")
                , X.Column().Text(Util.GetLang("LevelID")).DataIndex("LevelID")
                .Editor(
                    HQ.Combo().ID("cboColLevelID")
                    .HQProcedure("OM22002_pcLevel")
                    .HQColumnShow("Code").ValueField("Code").DisplayField("Code")
                    .HQHeightWidth(400, 300)
                    .HQParam(new StoreParameterCollection() { 
                        new StoreParameter("@ObjectID", 
                            "App.slmDet.selected.items[0] ? App.slmDet.selected.items[0].data.ObjectID : Ext.String.empty", 
                            ParameterMode.Raw) 
                        , new StoreParameter("@TradeType", "App.cboTradeType.getValue()", ParameterMode.Raw) 
                    })
                    .LoadData()
                )
                //, X.NumberColumn().Text(Util.GetLang("Rate2")).DataIndex("Rate")
                //.Align(Alignment.Right)
                //.Editor(
                //    HQ.NumberField().SelectOnFocus(true)
                //)

                , X.CommandColumn()
                .Commands(
                    X.GridCommand()
                    .Text(Util.GetLang("Reject"))
                    .ToolTip(t => t.Text = Util.GetLang("Rejectrowchanges"))
                    .CommandName("reject")
                    .Icon(Icon.ArrowUndo)
                )
                .PrepareToolbar(t => t.Handler = "toolbar.items.get(0).setVisible(record.dirty);")
                .Listeners(l => l.Command.Handler = "Event.Grid.grd_reject(this, record);")
            )
            .SelectionModel(X.RowSelectionModel().ID("slmDet").Mode(SelectionMode.Single))
            .Plugins(
                X.CellEditing()
                .ClicksToEdit(1)
                .Listeners(ls =>
                {
                    ls.BeforeEdit.Fn = "Event.Grid.grdDet_beforeEdit";
                    //ls.Edit.Fn = "Event.Grid.grd_edit";
                    //ls.ValidateEdit.Fn = "Event.Grid.grd_validateEdit";
                })
            )
            .Features(
                X.GridFilters().Local(true)
                .Filters(
                    X.StringFilter().DataIndex("Zone")
                    , X.StringFilter().DataIndex("Territory")
                    , X.StringFilter().DataIndex("BranchID")
                    , X.StringFilter().DataIndex("SlsperID")
                    , X.StringFilter().DataIndex("SlsName")
                    , X.StringFilter().DataIndex("CustID")
                    , X.StringFilter().DataIndex("CustName")
                    , X.StringFilter().DataIndex("ObjectID")
                )
            )
            .BottomBar(
                X.PagingToolbar().ID("pag")
                .Items(
                    X.Label(Util.GetLang("PageSize")),
                    X.ToolbarSpacer(10),
                    X.ComboBox()
                    .Width(80)
                    .Items("1", "2", "10", "20", "30", "50")
                    .SelectedItems("50")
                    .Listeners(l =>
                        {
                            l.Select.Fn = "HQ.grid.onPageSelect";
                        })
                )
                .Plugins(X.ProgressBarPager())
            )// grdDet
        )
        .Listeners(lst =>
        {
            //lst.BoxReady.Fn = "Event.Form.frmMain_boxReady";
            //lst.FieldChange.Fn = "Event.Form.frmMain_fieldChange";
        })// Form: frmMain
    )
)