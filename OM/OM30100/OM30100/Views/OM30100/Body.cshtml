
@using Ext.Net;
@using Ext.Net.MVC;
@using HQ.eSkyFramework;
@using HQ.eSkyFramework.HQControl;
@using OM30100;
@{
    Layout = null;
    var X = Html.X();
    var HQ = Html.HQ();
}

@(
 X.Viewport()
.Layout(LayoutType.Fit)
.Items(
        X.FormPanel()
        .ID("frmMain")
        .BodyPadding(0)
        .KeyMap(Util.SetupKeyMap())
        .TopBar(Util.SetupToolbar("Print,Save,New,Delete", true, ""))
        .Layout(LayoutType.Border)
        .FieldDefaults(act => { act.LabelAlign = LabelAlign.Right; act.LabelWidth = 150; })
        .Listeners(l =>
        {
            //l.BoxReady.Handler = "firstLoad();";
            //l.FieldChange.Fn = "frmChange";
        })
        .Items(
            X.Panel().ID("pnlHeader")
            .Region(Region.North)
            .Layout(LayoutType.HBox)
            .AutoScroll(true)
            .Items(           
                X.Container().Layout(LayoutType.VBox).MarginSpec("0 0 0 0")
                .Items(
                 HQ.Combo().ID("cboBranchID").Name("cboBranchID").MarginSpec("3 0 0 0").Width(300)
                                        .HQLangCode("BranchID").HQDBSys(false).HQProcedure("OM30100_pcBranchAllByUser")
                                        .HQColumnShow("BranchID,BranchName").ForceSelection(true).Tag("X")
                                        .HQValue("HQ.cpnyID", true)
                                        .DisplayField("BranchID")
                                        .ValueField("BranchID")
                                        .HQHeightWidth(400, 300)
                                        .HQParam(new StoreParameterCollection() {
                                                        new StoreParameter() { Name = "@UserID", Value ="HQ.userName", Mode = ParameterMode.Raw}
                                                })
                                        .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                                        .Listeners(lst =>
                                                {
                                                    lst.Change.Fn = "cboBranchID_Change";
                                                    lst.Select.Fn = "cboBranchID_Select";
                                                    lst.TriggerClick.Handler = "if (index == 0) { this.focus(true);this.clearValue(); }";

                                                })
                                        .LoadData()
                    ,HQ.Combo().ID("cboCustID").Name("cboCustID").MarginSpec("5 0 0 0").Width(300)
                        .HQLangCode("CustID").HQDBSys(false).HQProcedure("OM30100_Customer")
                        .HQColumnShow("CustId,CustName,Addr1,Addr2").ForceSelection(true)
                        .DisplayField("CustId").ValueField("CustId").HQHeightWidth(400, 300)
                        .HQParam(new StoreParameterCollection() {
                            new StoreParameter() { Name = "@BranchID", Value ="_cpnyID", Mode = ParameterMode.Raw}
                        })
                        .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                        .Listeners(lst =>
                        {
                            //lst.Change.Fn = "cboBranchID_Change";
                            lst.TriggerClick.Handler = "if (index == 0) { this.focus(true);this.clearValue(); }";
                            lst.Focus.Handler = "this.forceSelection=true;";
                           
                        })  
                        .LoadData()
               
                    , HQ.Combo().ID("cboInvtID").Name("cboInvtID").MarginSpec("5 0 0 0").Width(300)
                        .HQLangCode("InvtID").HQDBSys(false).HQProcedure("OM30100_InventoryActiveByBranch")
                        .HQColumnShow("InvtID,Descr").ForceSelection(true)
                        .DisplayField("InvtID").ValueField("InvtID").HQHeightWidth(400, 300)
                        .HQParam(new StoreParameterCollection() {
                            new StoreParameter() { Name = "@BranchID", Value ="_cpnyID", Mode = ParameterMode.Raw}
                        })
                        .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                        .Listeners(lst =>
                        {
                            //lst.Change.Fn = "cboInvtID_Change";
                            lst.TriggerClick.Handler = "if (index == 0) { this.focus(true);this.clearValue(); }";
                            lst.Focus.Handler = "this.forceSelection=true;";
                        })  
                        .LoadData()
                        
                    , HQ.Combo().ID("cboSiteID").Name("cboSiteID").MarginSpec("5 0 0 0").Width(300)
                        .HQLangCode("SiteID").HQDBSys(false).HQProcedure("OM30100_pcSiteAll")
                        .HQColumnShow("SiteID,Name").ForceSelection(true)
                        .DisplayField("SiteID").ValueField("SiteID").HQHeightWidth(400, 300)
                        .HQParam(new StoreParameterCollection() {
                            new StoreParameter() { Name = "@BranchID", Value ="_cpnyID", Mode = ParameterMode.Raw},
                            new StoreParameter() { Name = "@ScreenNbr", Value ="OM30100", Mode = ParameterMode.Value},
                            new StoreParameter() { Name = "@UserName", Value ="HQ.userName", Mode = ParameterMode.Raw}
                        })
                        .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                        .Listeners(lst =>
                        {
                            //lst.Change.Fn = "cboInvtID_Change";
                            lst.TriggerClick.Handler = "if (index == 0) { this.focus(true);this.clearValue(); }";
                            lst.Focus.Handler = "this.forceSelection=true;";
                        })  
                        .LoadData()
                    , HQ.DateField().ID("lblOrderDate").MarginSpec("5 0 5 0").HQLangCode("ORDDATE").Width(300)
                        .Format("dd/MM/yyyy").Value(DateTime.Now.ToString("dd/MM/yyyy"))
                )
           
                , X.Container().Layout(LayoutType.VBox)
                    .Items(
                        HQ.TextBox().ID("txtBranchName").Name("txtBranchName").ReadOnly(true).MaxLength(400).HQLangCode("BranchName").Width(300).MarginSpec("3 0 0 0")
                    
                        ,HQ.TextBox().ID("txtCusPO").Name("txtCusPO").DataIndex("CustOrderNbr").HQLangCode("CUSTORDERNBR").MarginSpec("5 0 0 0").Width(300)
                        , HQ.TextBox().ID("txtInvoiceNbr").Name("txtInvoiceNbr").DataIndex("ClassID").HQLangCode("INVOICENBR").MarginSpec("5 0 0 0").Width(300)

                        , HQ.Combo().ID("cboStatus").Name("cboStatus").MarginSpec("5 0 0 0").Width(300)
                        .HQLangCode("STATUS").HQDBSys(false).HQProcedure("OM30100_pcStatus")
                        .HQColumnShow("Descr").ForceSelection(true)
                        .DisplayField("Descr").ValueField("Code").HQHeightWidth(400, 300)
                        .HQParam(new StoreParameterCollection() {
                            new StoreParameter() { Name = "@LangID", Value ="HQ.langID", Mode = ParameterMode.Raw}
                        })
                        .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                        .Listeners(lst =>
                        {
                            //lst.Change.Fn = "cboInvtID_Change";
                            lst.TriggerClick.Handler = "if (index == 0) { this.focus(true);this.clearValue(); }";
                            lst.Focus.Handler = "this.forceSelection=true;";
                        })  
                        .LoadData()
                        
                        , HQ.DateField().ID("lblTo").MarginSpec("5 0 5 0").HQLangCode("TO").Width(300)
                        .Format("dd/MM/yyyy").Value(DateTime.Now.ToString("dd/MM/yyyy"))
                    )
                
                
            )//pnl Header

            , X.Panel().ID("pnlGrid")
            .Region(Region.Center)
            .Layout(LayoutType.Border)
            .Items(
                X.GridPanel().ID("grdHeader")
                    .Scroll(ScrollMode.Both)
                    .View(X.GridView().TrackOver(false).LoadMask(true))
                    .Region(Region.Center).Flex(1)
                    .SelectionMemory(false)
                    .Store(
                        X.Store()
                        .ID("stoHeader")
                        .PageSize(50)
                        .Model(Util.GenerateModel(typeof(OM30100_open_close_Header_Result), "mdlOM30100_open_close_Header", ""))
                        .ServerProxy(X.AjaxProxy().Url(Url.Action("GetHeader"))).AutoLoad(false)
                        .Parameters(ps =>
                        {
                            ps.Add(new StoreParameter("CustID", "App.cboCustID.getValue()", ParameterMode.Raw));
                            ps.Add(new StoreParameter("InvenID", "App.cboInvtID.getValue()", ParameterMode.Raw));
                            ps.Add(new StoreParameter("SiteID", "App.cboSiteID.getValue()", ParameterMode.Raw));
                            ps.Add(new StoreParameter("CusPO", "App.txtCusPO.getValue()", ParameterMode.Raw));
                            ps.Add(new StoreParameter("invoice", "App.txtInvoiceNbr.getValue()", ParameterMode.Raw));
                            ps.Add(new StoreParameter("Status", "App.cboStatus.getValue()", ParameterMode.Raw));
                            ps.Add(new StoreParameter("BranchID", "_cpnyID", ParameterMode.Raw));
                            ps.Add(new StoreParameter("FromDate", "App.lblOrderDate.getValue()", ParameterMode.Raw));
                            ps.Add(new StoreParameter("ToDate", "App.lblTo.getValue()", ParameterMode.Raw));
                        })
    //.Listeners(p => p.Load.Fn = "stoHeader_Load")
                    )
                    .Listeners(lst => lst.Render.Handler = "HQ.common.control_render(this,'grdHeader');")
                    .SortableColumns(false)
                    .ColumnModel(
                        X.RowNumbererColumn().Width(40)

                        , X.Column().Text(Util.GetLang("OrderNbr")).DataIndex("OrderNbr").Width(100)
                        , X.Column().Text(Util.GetLang("OrderType")).DataIndex("OrderType").Width(100)
                        , X.DateColumn().Text(Util.GetLang("OrderDate")).DataIndex("OrderDate").Width(150).Format("dd/MM/yyyy")
                        , X.Column().Text(Util.GetLang("Status")).DataIndex("Status").Width(100)
                        , X.NumberColumn().Text(Util.GetLang("OrdAmt")).DataIndex("OrdAmt").Width(150).Align(Alignment.Right).Format("0,000")
                        , X.Column().Text(Util.GetLang("CustID")).DataIndex("CustID").Width(100)
                        , X.Column().Text(Util.GetLang("CustOrderNbr")).DataIndex("CustOrderNbr").Width(100)
                        , X.Column().Text(Util.GetLang("ShipName")).DataIndex("ShipName").Width(100)
                        , X.Column().Text(Util.GetLang("ContactNumb")).DataIndex("ShipPhone").Width(100)
              
                        , X.CommandColumn().Width(150)
                        .Commands(
                            X.GridCommand()
                            .Text(Util.GetLang("Reject"))
                            .ToolTip(t => t.Text = Util.GetLang("Rejectrowchanges"))
                            .CommandName("reject")
                            .Icon(Icon.ArrowUndo)
                        )
                        .PrepareToolbar(t => t.Handler = "toolbar.items.get(0).setVisible(record.dirty);")
                        .Listeners(l => l.Command.Handler = "grdHeader_Reject(record);")
                    )
                    .SelectionModel(X.RowSelectionModel().ID("slmHeader").Mode(SelectionMode.Multi))
                    .BottomBar(
                            X.PagingToolbar()
                            .Items(
                                X.Label("Page size:"),
                                X.ToolbarSpacer(10),
                                X.ComboBox()
                                .Width(80)
                                .Items("1", "2", "10", "20", "30", "50")
                                .SelectedItems("50")
                                .Listeners(l => l.Select.Fn = "HQ.grid.onPageSelect")
                            )
                            .Plugins(X.ProgressBarPager())
                        )
                    .Plugins(
                        X.RowExpander().ID("Ctrl_Expand")
                        .Listeners(l=>l.Expand.Fn="Ctrl_Expand")
                        .Component(
                            X.FormPanel()
                            .Items(                           
                                X.GridPanel().Height(300).ID("grdDetail")
                                .Store(
                                X.Store()
                                .ID("stoDetail")
                                .PageSize(50)
                                .Model(Util.GenerateModel(typeof(OM30100_open_close_Detail_Result), "mdlOM30100_open_close_Detail", ""))
                                .ServerProxy(X.AjaxProxy().Url(Url.Action("GetDetail"))).AutoLoad(false)
                                .Parameters(ps =>
                                {
                                    ps.Add(new StoreParameter("CustID", "App.cboCustID.getValue()", ParameterMode.Raw));
                                    ps.Add(new StoreParameter("InvenID", "App.cboInvtID.getValue()", ParameterMode.Raw));
                                    ps.Add(new StoreParameter("SiteID", "App.cboSiteID.getValue()", ParameterMode.Raw));
                                    ps.Add(new StoreParameter("CusPO", "App.txtCusPO.getValue()", ParameterMode.Raw));
                                    ps.Add(new StoreParameter("invoice", "App.txtInvoiceNbr.getValue()", ParameterMode.Raw));
                                    ps.Add(new StoreParameter("Status", "App.cboStatus.getValue()", ParameterMode.Raw));
                                    ps.Add(new StoreParameter("BranchID", "_cpnyID", ParameterMode.Raw));
                                    ps.Add(new StoreParameter("FromDate", "App.lblOrderDate.getValue()", ParameterMode.Raw));
                                    ps.Add(new StoreParameter("ToDate", "App.lblTo.getValue()", ParameterMode.Raw));
                                    ps.Add(new StoreParameter("OrdNbrBranch", "HQ_OrdNbrBranch", ParameterMode.Raw));
                                })
                                    //.Listeners(p => p.Load.Fn = "stoLoad")
                                )
                                .ColumnModel(
                                    X.Column().Text(Util.GetLang("lineref")).DataIndex("lineref")
                                    , X.Column().Text(Util.GetLang("InvtID")).DataIndex("InvtID")
                                    , X.Column().Text(Util.GetLang("Descr")).DataIndex("Descr")
                                    , X.NumberColumn().Text(Util.GetLang("Qty")).DataIndex("lineQty").Align(Alignment.Right).Format("0,000")
                                    , X.Column().Text(Util.GetLang("PurUnit")).DataIndex("slsUnit")
                                    , X.NumberColumn().Text(Util.GetLang("UnitPrice")).DataIndex("slsPrice").Align(Alignment.Right).Format("0,000")
                                    , X.NumberColumn().Text(Util.GetLang("DiscPct")).DataIndex("DiscPct").Align(Alignment.Right).Format("0,000")
                                    , X.NumberColumn().Text(Util.GetLang("DiscAmt")).DataIndex("DiscAmt").Align(Alignment.Right).Format("0,000")
                                    , X.NumberColumn().Text(Util.GetLang("Total")).DataIndex("LineAmt").Align(Alignment.Right).Format("0,000")
                                    , X.DateColumn().Text(Util.GetLang("PromDate")).DataIndex("PromiseDate").Format("dd/MM/yyyy")
                                    , X.Column().Text(Util.GetLang("ShipViaID")).DataIndex("ShipViaID")
                                    , X.Column().Text(Util.GetLang("SiteID")).DataIndex("SiteID")
                                    , X.Column().Text(Util.GetLang("BranchID")).DataIndex("BranchID")
                                    , X.Column().Text(Util.GetLang("Promotion")).DataIndex("FreeItem")
                                )
                                .Features(
                                X.GridFilters()
                                    .Local(true)
                                    .Filters(
                                        X.StringFilter().DataIndex("lineref"),
                                        X.StringFilter().DataIndex("InvtID"),
                                        X.StringFilter().DataIndex("Descr"),
                                        X.NumericFilter().DataIndex("lineQty"),
                                        X.StringFilter().DataIndex("slsUnit"),
                                        X.NumericFilter().DataIndex("slsPrice"),
                                        X.NumericFilter().DataIndex("DiscPct"),
                                        X.NumericFilter().DataIndex("DiscAmt"),
                                        X.NumericFilter().DataIndex("LineAmt"),
                                        X.DateFilter().DataIndex("PromiseDate"),
                                        X.StringFilter().DataIndex("ShipViaID"),
                                        X.StringFilter().DataIndex("SiteID"),
                                        X.StringFilter().DataIndex("BranchID"),
                                        X.StringFilter().DataIndex("FreeItem")
               
                                    )
                    )
                                
                            )
                        )
                    )

                    .Features(
                        X.GridFilters()
                            .Local(true)
                            .Filters(
                                X.StringFilter().DataIndex("OrderNbr"),
                                X.StringFilter().DataIndex("OrderType"),
                                X.DateFilter().DataIndex("OrderDate"),
                                X.StringFilter().DataIndex("Status"),
                                X.NumericFilter().DataIndex("OrdAmt"),
                                X.StringFilter().DataIndex("CustID"),
                                X.StringFilter().DataIndex("CustOrderNbr"),
                                X.StringFilter().DataIndex("ShipName"),
                                X.StringFilter().DataIndex("ShipPhone")
               
                            )
                    )
                    
            )//pnl Grid

        )//frm Main
)//View port
)
