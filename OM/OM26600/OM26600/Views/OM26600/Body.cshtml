@using Ext.Net;
@using Ext.Net.MVC;
@using HQ.eSkyFramework;
@using HQ.eSkyFramework.HQControl;
@using OM26600;
@{
    Layout = null;
    var X = Html.X();
    var HQ = Html.HQ();
}

@(X.Viewport()
.Layout(LayoutType.Fit)
.Items(
    X.FormPanel()
    .ID("frmMain")
    .BodyPadding(0)
    .KeyMap(Util.SetupKeyMap())
    .TopBar(Util.SetupToolbar("Print", true, ""))
    .Layout(LayoutType.Fit)
    .Items(
        ////Thiet ke giao dien o day
        X.GridPanel()
        .Scroll(ScrollMode.Both)
        .View(X.GridView().TrackOver(false))
        .ID("grdOM_Truck")
        .Store(
            X.Store()
            .ID("stoOM_Truck")
            .PageSize(50)
            .Model(Util.GenerateModel(typeof(OM26600_pgOM_Truck_Result), "mdlOM26600_pgOM_Truck", ""))
            .ServerProxy(X.AjaxProxy().Url(Url.Action("GetData"))).AutoLoad(false)
            .Listeners(l =>
            {
                l.BeforeLoad.Fn = "stoOM_Truck_beforeLoad";
                l.Load.Fn = "stoOM_Truck_load";
                l.Update.Fn = "stoOM_Truck_changed";             
            })
        )
        .Listeners(p =>
        {
            p.BoxReady.Handler = "firstLoad();";
        })
        .SortableColumns(false)
        .ColumnModel(
            X.RowNumbererColumn().Width(40),
           
            X.Column().ID("BranchID").Text(Util.GetLang("BranchID")).DataIndex("BranchID").Width(150).Renderer("renderBranchName")
            .Editor(
                    HQ.Combo().ID("cboBranchID").Name("cboBranchID").HQProcedure("OM26600_pcBranchID").HQAutoLoad(true).HQDBSys(false)
                    .HQColumnShow("BranchID,BranchName").DisplayField("BranchName").ValueField("BranchID").DataIndex("BranchID").ForceSelection(true)
                    .Width(500).HQHeightWidth(500, 400)
                    .HQParam(new StoreParameterCollection() 
                    {
                        new StoreParameter() { Name = "@UserID", Value = "HQ.userName", Mode = ParameterMode.Raw },  
                        new StoreParameter() { Name = "@CpnyID", Value = "HQ.cpnyID", Mode = ParameterMode.Raw },                                        
                        new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw }
                    })
                    .AllowBlank(true).ForceSelection(true)
                    .LoadData()
                    .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                    .Listeners(lst =>
                    {
                        lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";                       
                    })
                )    
            ,
                X.Column().ID("TypeVehicle").Text(Util.GetLang("OM26600TypeVehicle")).DataIndex("TypeOfVehicle").Width(150).Renderer("renderTypeVehicle")//.Hidden(true)
                .Editor(
                        HQ.Combo().ID("cboTypeVehicle").Name("cboTypeVehicle").HQProcedure("OM26600_pcTypeVehicle").HQAutoLoad(true).HQDBSys(false)
                        .HQColumnShow("Code,Descr").DisplayField("Descr").ValueField("Code").ForceSelection(true)
                        .Width(500).HQHeightWidth(500, 400)
                        .HQParam(new StoreParameterCollection() 
                    {
                        new StoreParameter() { Name = "@UserName", Value = "HQ.userName", Mode = ParameterMode.Raw },  
                        new StoreParameter() { Name = "@CpnyID", Value = "HQ.cpnyID", Mode = ParameterMode.Raw },                                        
                        new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw }
                    })
                        .AllowBlank(true).ForceSelection(true)
                        .LoadData()
                        .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                        .Listeners(lst =>
                        {
                            lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                        })
                    )
            , X.Column().ID("Code").Text(Util.GetLang("OM26600Code")).DataIndex("Code").Width(150)//.Hidden(true)
                .Editor(Html.X().TextField().MaxLength(10).EnforceMaxLength(true).MaskRe(@"/(\w*(\d|[a-zA-Z\-.]))[\-]*$/"))

            , X.Column().ID("SlsperID").Text(Util.GetLang("SlsperID")).DataIndex("SlsperID").Width(150).Renderer("renderSlsperID")
            .Editor(
                HQ.Combo().ID("cboSlsperID").Name("cboSlsperID").HQProcedure("OM26600_pcSlsperID").HQAutoLoad(true).HQDBSys(false)
                .HQColumnShow("SlsperID,Name").DisplayField("Name").ValueField("SlsperID").ForceSelection(true)
                .Width(500).HQHeightWidth(500, 400)
                .HQParam(new StoreParameterCollection() 
                {
                    new StoreParameter() { Name = "@UserName", Value = "HQ.userName", Mode = ParameterMode.Raw },  
                    new StoreParameter() { Name = "@CpnyID", Value = "HQ.cpnyID", Mode = ParameterMode.Raw },                                        
                    new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw }
                })
                .AllowBlank(true).ForceSelection(true)
                .LoadData()
                .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                .Listeners(lst =>
                {
                    lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                })
                )                            
                
            , X.Column().ID("Descr").Text(Util.GetLang("Descr")).DataIndex("Descr").Width(150)//.Hidden(true)
                .Editor(Html.X().TextField().MaxLength(250).EnforceMaxLength(true))
                
            , X.NumberColumn().Text(Util.GetLang("OM26600WeightMax")).DataIndex("WeightMax").Width(100).Format("0,000.0").Align(Alignment.Right)
                .Editor(X.NumberField().DecimalPrecision(1).MinValue(0))     
            
            , X.NumberColumn().Text(Util.GetLang("OM26600ValueMax")).DataIndex("ValueMax").Width(100).Format("0,000.0").Align(Alignment.Right)
                .Editor(X.NumberField().DecimalPrecision(1).MinValue(0))  
                
            ,X.CommandColumn()
            .Width(150)
            .Commands(
                X.GridCommand()
                .Text(Util.GetLang("Reject"))
                .ToolTip(t => t.Text = Util.GetLang("Rejectrowchanges"))
                .CommandName("reject")
                .Icon(Icon.ArrowUndo)
            )
            .PrepareToolbar(t => t.Handler = "toolbar.items.get(0).setVisible(record.dirty);")
            .Listeners(l => l.Command.Handler = "grdOM_Truck_Reject(record);")
        )
        .SelectionModel(X.RowSelectionModel().ID("slmData").Mode(SelectionMode.Multi))
        .BottomBar(
            X.PagingToolbar()
            .Items(
                X.Label("Page size:"),
                X.ToolbarSpacer(10),
                X.ComboBox()
                .Width(80)
                .Items("1", "2", "10", "20", "30", "50")
                .SelectedItems("50")
                .Listeners(l =>
                    {
                        l.Select.Fn = "HQ.grid.onPageSelect";                   
                    })
            )
            .Plugins(X.ProgressBarPager())
        )
        .Plugins(
            X.CellEditing()
            .ClicksToEdit(1)
            .Listeners(ls =>
            {
                ls.BeforeEdit.Fn = "grdOM_Truck_BeforeEdit";
                ls.Edit.Fn = "grdOM_Truck_Edit";
                ls.ValidateEdit.Fn = "grdOM_Truck_ValidateEdit";

            })
        )

        .Features(
            X.GridFilters()
                .Local(true)
                .Filters(
                        X.StringFilter().DataIndex("BranchID").ValidateRecord(p => p.Fn = "stringFilter"),
                        X.StringFilter().DataIndex("Code"),
                        X.StringFilter().DataIndex("SlsperID").ValidateRecord(p => p.Fn = "stringFilter"),
                        X.StringFilter().DataIndex("Descr"),
                        X.StringFilter().DataIndex("TypeOfVehicle").ValidateRecord(p=>p.Fn="stringFilter"),
                        X.NumericFilter().DataIndex("WeightMax"),
                        X.NumericFilter().DataIndex("ValueMax")
                )
        )
    )
))
