@using Ext.Net;
@using Ext.Net.MVC;
@using HQ.eSkyFramework;
@using HQ.eSkyFramework.HQControl;
@using AP10100;

@model System.Collections.IEnumerable
@{
    Layout = null;
    var X = Html.X();
    var HQ = Html.HQ();
    ViewBag.Title = "AP10100";
    var acc = Session["AP10100"] as AccessRight;
}
<!DOCTYPE html>
<html>
 <!--Không thay đổi phần head Đổi mã màn hình AP10100.js tùy theo màn hình đổi lại -->
<head>
    <meta name="viewport" content="width=device-width" />
   <script src='@Url.Content("Scripts/hq.language"+Current.LangID+".js?"+DateTime.Now.ToString("yyyyMMddss"))' type="text/javascript"></script>
    <script src='@Url.Content("Scripts/hq.common.js?"+DateTime.Now.ToString("yyyyMMddss"))' type="text/javascript"></script>
    <script src='@Url.Content("Scripts/screen/AP10100.js?"+DateTime.Now.ToString("yyyyMMddss"))' type="text/javascript"></script>
    <style>
        .x-grid-row-over .x-grid-cell-inner {
            font-weight : bold;
        }
    </style>
    <script>
        HQ.cpnyID = '@ViewBag.BranchID';
        HQ.langID = '@Current.LangID';
        HQ.userName = '@Current.UserName';
        HQ.businessDate = new Date()
        HQ.isUpdate = HQ.util.toBool('@acc.Update.ToString()');
        HQ.isInsert = HQ.util.toBool('@acc.Insert.ToString()');
        HQ.isDelete = HQ.util.toBool('@acc.Delete.ToString()');      
    </script>  
    <title>@ViewBag.Title</title>
</head>
<body>   
    @(X.ResourceManager().Theme((Theme)Enum.Parse(typeof(Theme),Current.Theme.PassNull()==""?"Gray":Current.Theme.PassNull())))
  
      
        @(Html.X().Store().ID("stoAP10100_pdHeader").AutoLoad(false)
        .Model(Util.GenerateModel(typeof(AP10100_pdHeader_Result), "AP10100_pdHeaderModel", "RefNbr"))
        .Proxy(
            X.AjaxProxy()
            .Url(Url.Action("GetHeader", "AP10100"))
            .ActionMethods(action =>
            {
                action.Read = HttpMethod.POST;
            })
            .Reader(X.JsonReader().Root("data").TotalProperty("totaldata"))
        )
        .Parameters(ps =>
        {
            ps.Add(new StoreParameter("BranchID", "App.txtBranchID.value", ParameterMode.Raw));
            ps.Add(new StoreParameter("BatNbr", "App.cboBatNbr.value", ParameterMode.Raw));
            
        })

        .Listeners(p =>
            {
                p.BeforeLoad.Fn = "stoAP10100_pdHeader_BeforeLoad";
                p.Load.Fn = "stoAP10100_pdHeader_Load";


            })
  )


    @(Html.X().Store().ID("stoAP10100_pgLoadTaxTrans").AutoLoad(false)   
                                .Model(Util.GenerateModel(typeof(AP10100_pgLoadTaxTrans_Result), "ModelAP10100_pgLoadTaxTrans_Result", ""))                                 
                                .Proxy(
                                        X.AjaxProxy()                
                                        .Url(Url.Action("GetTaxTrans", "AP10100"))                
                                        .ActionMethods(action =>
                                        {
                                            action.Read = HttpMethod.POST;
                                        })
                                        .Reader(X.JsonReader().Root("data").TotalProperty("totaldata"))
                                    ) 
                                .Parameters(ps =>
                                                {
                                                    ps.Add(new StoreParameter("branchID", "App.txtBranchID.getValue()", ParameterMode.Raw));
                                                    ps.Add(new StoreParameter("batNbr", "App.cboBatNbr.getValue()", ParameterMode.Raw));
                                                    ps.Add(new StoreParameter("refNbr", "App.txtRefNbr.getValue()", ParameterMode.Raw));
                                                })
                            .Listeners(p => p.Load.Handler = "stoTaxTrans_Load();")       
   
        )
        @(HQ.Store().ID("stoAP10100_pdSI_Tax").HQProcedure("AP10100_pdSI_Tax").HQDBSys(false).HQParam(new StoreParameterCollection() {
											                            new StoreParameter() { Name = "@UserID", Value ="HQ.userName", Mode = ParameterMode.Raw}
                                                                
						                            }).LoadData().AutoLoad(true))
        @X.GridFilters()<!--Khi cache cho grid-->
        @X.ProgressBarPager()<!--Khi cache cho grid -->   
        <!-- Gọi hàm Body trong AP10100Controller để dựng view Body.cshtml, mục đích tạo cache. -->            
        @{Html.RenderAction("Body", new { lang=@Current.LangID});}   
    
</body>
</html>
 