@using Ext.Net;
@using Ext.Net.MVC;
@using HQ.eSkyFramework;
@using HQ.eSkyFramework.HQControl;
@using AP10400;
@{
    Layout = null;
    var X = Html.X();
    var HQ = Html.HQ();
}

@(X.Viewport()
.Layout(LayoutType.Fit)
.Items(
    X.FormPanel()
    .ID("frmMain")  
    .TrackResetOnLoad(true)
    .KeyMap(Util.SetupKeyMap())
    .TopBar(Util.SetupToolbar("Print", true, ""))
    .Layout(LayoutType.Border)
    .FieldDefaults(act => { act.LabelAlign = LabelAlign.Right; act.LabelWidth = 150; })
    .Listeners(l=>{
        l.BoxReady.Handler = "firstLoad()";
        l.FieldChange.Fn = "frmChange";
    })
    .Items(
        ////Thiet ke giao dien o day
        
        X.FormPanel().ID("pnlBatch")
        .Title(Util.GetLang("Batch"))
        .Layout(LayoutType.HBox).Region(Region.North).Layout(LayoutType.VBox)
        .Items(
            X.Container().Layout(LayoutType.HBox)
                .Items(
                    HQ.Combo().ID("cboBatNbr").Name("cboBatNbr").HQLangCode("BATNBR")
                        .HQProcedure("AP10400_pcBatch").HQColumnShow("BatNbr,TotAmt,Descr,Status")
                        .DisplayField("BatNbr").ValueField("BatNbr").ForceSelection(true).MarginSpec("5 0 0 0")
                        .Width(300).HQHeightWidth(400, 300)
                        .HQParam(new StoreParameterCollection()
                        {
                            new StoreParameter() { Name = "@BranchID", Value = "HQ.cpnyID", Mode = ParameterMode.Raw },
                            new StoreParameter() { Name = "@ScreenNbr", Value = "AP10400", Mode = ParameterMode.Value }
                        })
                        .LoadData()
                        .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                        .Listeners(lst =>
                        {
                            lst.Change.Fn = "cboBatNbr_Change";
                            lst.Select.Fn = "cboBatNbr_Select";
                            lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                        })
                        
                    , HQ.TextBox().ID("txtBranchID").Name("txtBranchID").HQLangCode("BRANCHID").ReadOnly(true).Tag("X").Width(300).MarginSpec("5 0 0 0")

                    , HQ.Combo().ID("cboStatus").ReadOnly(true).Tag("X").DataIndex("Status")
                        .Name("cboStatus").HQLangCode("Status").HQProcedure("AP10400_pcGetStatus")
                        .HQColumnShow("Code,Descr").DisplayField("Descr").ValueField("Code")
                        .Width(300).HQHeightWidth(400, 300).MarginSpec("5 0 0 0").ForceSelection(true)
                        .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                        .HQParam(new StoreParameterCollection() 
                        {
                            //new StoreParameter() { Name = "@UserID", Value = "HQ.userName", Mode = ParameterMode.Raw },
                            new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw }   
                        })
                        .LoadData()
                        .Listeners(lst =>
                        {
                            lst.Change.Handler = "App.cboHandle.setValue(''); App.cboHandle.store.reload();";
                            lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                        })
                    
                )
                
            , X.Container().Layout(LayoutType.HBox)
                .Items(
                    //HQ.TextBox().ID("txtOrigRefNbr").Name("txtOrigRefNbr").HQLangCode("INTREFNBR").DataIndex("IntRefNbr")
                    //    .Width(300).MaxLength(10).EnforceMaxLength(true).MarginSpec("5 0 5 0")
                        
                    //, 
                    HQ.Combo().ID("cboHandle").Tag("X")
                        .Name("cboHandle").HQLangCode("Handle").HQProcedure("AP10400_pcGetHandle")
                        .HQColumnShow("Code,Descr").DisplayField("Descr").ValueField("Code")
                        .Width(300).HQHeightWidth(400, 300).MarginSpec("5 0 5 300")
                        .ForceSelection(true).HQAutoLoad(false)
                        .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                        .HQParam(new StoreParameterCollection()
                        {
                            new StoreParameter() { Name = "@Status", Value = "App.cboStatus.getValue()", Mode = ParameterMode.Raw },
                            new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw }
                        })
                        .LoadData()
                        .Listeners(lst =>
                        {
                            lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                        }) 
                        
                        , HQ.NumberField().ID("txtCuryCrTot").Name("txtCuryCrTot").HQLangCode("TOTAMT").DataIndex("TotAmt")
                        .Width(300).ReadOnly(true).Tag("X").MarginSpec("5 0 5 0")

                  
                    
                )
            
                
        ).Listeners(lss =>
        {
            lss.Render.Handler = "HQ.common.control_render(this,'header')";
        })
            
       ,X.Container().Layout(LayoutType.HBox).Region(Region.North)//.MarginSpec("0 0 0 0").AnchorHorizontal("100%").AnchorVertical("72%")
                   .Items(
                   X.FormPanel().ID("frmBotLeft")
        .Title(Util.GetLang("Filter"))
        .Region(Region.North).Layout(LayoutType.HBox)
      
        .Items(
                 //X.FormPanel()
                 //           .ID("frmBotLeft")
                 //           .Layout(LayoutType.Anchor)
                 //           .Title(Util.GetLang("LocRa"))
                 //           .AnchorVertical("30%")
                 //           //.AnchorHorizontal("30%")
                 //           .ColumnWidth(0.24)
                 //           
                 //           .Items(
                                 //Vendor
                                 X.Container().Layout(LayoutType.Anchor).MarginSpec("0 10 0 0").AnchorHorizontal("100%")
                                 .Items(
                                 
                                 
                                HQ.Combo().ID("cboVendID").Name("cboVendID").HQLangCode("VENDID").HQProcedure("AP10400_pcGetVendor").LabelWidth(80)
                                .HQColumnShow("VendID,name,Address").DisplayField("VendID").ValueField("VendID").DataIndex("")//.AllowBlank(false)
                                .Width(300).HQHeightWidth(400, 500).MarginSpec("5 0 0 0")//.Disabled(true)//.LabelWidth(90)//.Disabled(true)
                                .HQDBSys(false).ForceSelection(true)
                                .HQParam(new StoreParameterCollection()
                                {

                                })
                                .LoadData()
                                .Listeners(lst =>
                                    {

                                        lst.Change.Fn = "cboVendID_Change";
                                        //lst.Focus.Fn = "Focus1_Change";
                                    })
                            
                                //From Date
                                ,HQ.DateField().ID("dteFromDate").Name("dteFromDate").HQLangCode("FROMDATE").DataIndex("").LabelWidth(80)
                                .Width(300).MarginSpec("5 0 0 0").Value(DateTime.Now)//.Format("yyyy-MM-dd")
                                .Listeners(lst =>
                                 {
                                     lst.Change.Fn = "txtFromDate_Change";
                                 })
                                
                                //To Date
                                ,HQ.DateField().ID("dteToDate").Name("dteToDate").HQLangCode("TODATE").DataIndex("").LabelWidth(80)
                                .Width(300).MarginSpec("5 0 0 0").Value(DateTime.Now)//.Format("yyyy-MM-dd")
                                .Listeners(lst =>
                                 {
                                     lst.Change.Fn = "txtToDate_Change";
                                 })
                                 //cboDateType
                                 ,HQ.Combo().ID("cboDateType").Name("cboDateType").HQLangCode("DATE").HQProcedure("AP10400_pcDateType").LabelWidth(80)
                                .HQColumnShow("Code,Descr").DisplayField("Descr").ValueField("Code").DataIndex("Code")
                                .Width(300).HQHeightWidth(400, 500).MarginSpec("5 0 0 0")//.Disabled(true)//.LabelWidth(90)//.Disabled(true)
                                .HQDBSys(false).ForceSelection(true)//.HQValue("0",false)
                                .HQParam(new StoreParameterCollection()
                                {
                                    new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw }
                                })
                                .LoadData()
                                .Listeners(lst =>
                                    {
                          
                                        lst.Change.Fn = "cboVendID_Change";
                                        //lst.Focus.Fn = "Focus1_Change";
                                    })
                                 //nut Load data
                                 , HQ.Button().ID("btnSearch").MarginSpec("5 0 32 155").Width(145)
                                 .HQLangCode("LOADDATA").Listeners(p =>
                                 {
                                     p.Click.Fn = "btnSearch_Click";
                                 })
                                 )
                             )//ngoac ket thuc frmBotLeft       
                        
                   
        ,X.FormPanel().ID("pnlDoc")
        .Title(Util.GetLang("DOC"))
       // .Layout(LayoutType.HBox).Region(Region.North).Layout(LayoutType.VBox)
     .Title(Util.GetLang("DOC"))
        .Region(Region.North).Layout(LayoutType.VBox)
        .Items(
            X.Container().Layout(LayoutType.HBox).AnchorHorizontal("100%").MarginSpec("0 10 0 0").AnchorVertical("100%")
                .Items(
                    //HQ.Combo().ID("cboDocType").Name("cboDocType").HQLangCode("DOCTYPE").DataIndex("DocType")
                    //    .HQProcedure("AP10400_pcDocType").HQColumnShow("Code,Descr")
                    //    .DisplayField("Descr").ValueField("Code").MarginSpec("5 0 0 0")
                    //    .Width(300).HQHeightWidth(400, 300).AllowBlank(false)
                    //    .HQParam(new StoreParameterCollection()
                    //    {
                    //        new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw }
                    //    })
                    //    .LoadData()
                    //    .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                    //    .Listeners(lst =>
                    //    {
                    //        lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                    //        lst.Focus.Handler = "this.forceSelection = true;";  
                    //    })
                    
                    //, 
                    HQ.TextBox().ID("cboRefNbr").Name("cboRefNbr").HQLangCode("REFNBR").DataIndex("RefNbr")
                        .ReadOnly(true).Tag("X").Width(300).MarginSpec("5 0 0 0")
 
                    //, HQ.Combo().ID("cboRefNbr").Name("cboRefNbr").HQLangCode("REFNBR").DataIndex("RefNbr")
                    //    .HQProcedure("AP10400_pcRefNbr").HQColumnShow("RefNbr,DocType,OrigDocAmt,DocDesc")
                    //    .DisplayField("RefNbr").ValueField("RefNbr").ForceSelection(true).MarginSpec("5 0 0 0")
                    //    .Width(300).HQHeightWidth(400, 300)
                    //    .HQParam(new StoreParameterCollection()
                    //    {
                    //        new StoreParameter() { Name = "@BranchID", Value = "HQ.cpnyID", Mode = ParameterMode.Raw },
                    //        new StoreParameter() { Name = "@BatNbr", Value = "App.cboBatNbr.getValue()", Mode = ParameterMode.Raw }
                    //    })
                    //    .LoadData()
                    //    .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                    //    .Listeners(lst =>
                    //    {
                    //        lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                    //    })
                        
                    , HQ.NumberField().ID("txtOrigDocAmt").Name("txtOrigDocAmt").HQLangCode("ORIGDOCAMT").DataIndex("OrigDocAmt")
                        .Width(300).MarginSpec("5 0 0 0").ReadOnly(true).Tag("X")
                )
                
                 , X.Container().Layout(LayoutType.HBox)
                    .Items(
                        HQ.TextBox().ID("txtInvcNbr").Name("txtInvcNbr").HQLangCode("INVCNBR").DataIndex("InvcNbr")
                            .EnforceMaxLength(true).MaxLength(15).Width(300).MarginSpec("5 0 0 0")
                        
                            //Paid Amount
                                , HQ.NumberField().ID("txtPaid").Name("txtPaid").HQLangCode("PAIDAMT").DataIndex("")
                                .Width(300).MarginSpec("5 0 0 0").ReadOnly(true).Tag("X").MarginSpec("5 500 0 0")
                                .Listeners(lst =>
                                {
                                  //  lst.Change.Fn = "txtPaid_Change";
                                })
                                
                                )
                              
                
                , X.Container().Layout(LayoutType.HBox)
                    .Items(
                        HQ.DateField().ID("txtDocDate").Name("txtDocDate").HQLangCode("DOCDATE").DataIndex("DocDate")
                            .AllowBlank(false).Width(300).MarginSpec("5 0 0 0")

                      
                        //, HQ.NumberField().ID("txtCuryDocBal").Name("txtCuryDocBal").HQLangCode("CURYDOCBAL").DataIndex("DocBal")
                        //    .Width(300).MarginSpec("5 0 0 0").ReadOnly(true).Tag("X")
                         ,HQ.NumberField().ID("txtUnTotPayment").Name("txtUnTotPayment").HQLangCode("UNTOTAPPLY").DataIndex("")
                               .Width(300).ReadOnly(true).MarginSpec("5 0 0 0")

                    )
               
                    ,
                    
                    X.Container().Layout(LayoutType.HBox)
                .Items(
                    HQ.TextBox().ID("txtDocDescr").Name("txtDocDescr").HQLangCode("DOCDESC").DataIndex("DocDesc")
                        .Width(600).MarginSpec("5 0 5 0").MaxLength(100).EnforceMaxLength(true).AllowBlank(false)
                )
                
                 ,X.Container().Layout(LayoutType.HBox)//.MarginSpec("0 0 0 0").AnchorHorizontal("100%")
                            .Items(
                            
                                //Apply Amount (Auto Apply)
                                HQ.NumberField().ID("txtPayment").Name("txtPayment").HQLangCode("AUTOAPPL").DataIndex("")
                               .Width(300).MarginSpec("5 0 0 0")//.LabelWidth(130)
                               .Listeners(lst =>
                                {
                                    //lst.Change.Fn = "txtPayment_Change";
                                })
                        
                               //BankAcct
                              , HQ.Combo().ID("cboBankAcct").Name("cboBankAcct").HQLangCode("BANKACCT").HQProcedure("AP10400_pcBankAcctCA").DataIndex("ReasonCD")
                                .HQColumnShow("BankAcct,CashAcctName,AcctNbr").DisplayField("BankAcct").ValueField("BankAcct").AllowBlank(false)
                                .Width(300).HQHeightWidth(400, 500).MarginSpec("5 0 0 0")//.LabelWidth(90)//.Disabled(true)
                                .HQDBSys(false).ForceSelection(true)
                                //.MaxLength(30).EnforceMaxLength(true)
                                //.Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                                .HQParam(new StoreParameterCollection()
                                {
                                   // new StoreParameter() { Name = "@UserID", Value = Current.UserName.ToString(), Mode = ParameterMode.Value }
                                   new StoreParameter() { Name = "@BranchID", Value = "HQ.cpnyID", Mode = ParameterMode.Raw },
                                    //new StoreParameter() { Name = "@BatNbr", Value = "App.cboBatNbr.value", Mode = ParameterMode.Raw }
                                })
                                .LoadData()
                                .Listeners(lst =>
                                 {
                                     //lst.Change.Fn = "cboBankAcct_Change";
                                 })
                            )
                            
                              ,X.Container().Layout(LayoutType.Column).MarginSpec("0 0 5 0").AnchorHorizontal("100%")
                            .Items(
                            
                                //Balance
                                HQ.NumberField().ID("txtOdd").Name("txtOdd").HQLangCode("BALANCE").DataIndex("")
                               .Width(300).MarginSpec("5 0 0 0").ReadOnly(true)//.LabelWidth(130)
                               .Listeners(p =>
                                 {
                                     p.Change.Fn = "txtOdd_Change";
                                 })
                        
                                  //nut Auto Apply
                                 , HQ.Button().ID("btnAutoAssign").MarginSpec("5 0 5 155").Width(145)
                                 .HQLangCode("AUTOAPPL").Listeners(p =>
                                 {
                                     p.Click.Fn = "AutoAssign_Click";
                                 })
                            )     
                
            //, X.Container().Layout(LayoutType.HBox)
            //    .Items(
            //     HQ.Combo().ID("cboBankAcct").Name("cboBankAcct").HQLangCode("BANKACCT").DataIndex("ReasonCD")
            //            .HQProcedure("AP10400_pcBankAcctCA").HQColumnShow("BankAcct,CashAcctName,AcctNbr")
            //            .DisplayField("BankAcct").ValueField("BankAcct").MarginSpec("5 0 0 0")
            //            .Width(300).HQHeightWidth(400, 300)
            //            .HQParam(new StoreParameterCollection()
            //            {
            //                new StoreParameter() { Name = "@BranchID", Value = "HQ.cpnyID", Mode = ParameterMode.Raw }
            //            })
            //            .LoadData()
            //            .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
            //            .Listeners(lst =>
            //            {
            //                lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
            //                lst.Focus.Handler = "this.forceSelection = true;";  
            //            })
                    
            //    )
                
            
        ).Listeners(lss =>
        {
            lss.Render.Handler = "HQ.common.control_render(this,'header')";
        })
      )//end container filter

        , X.Panel().ID("pnlDetail") 
        .Region(Region.Center)
        .Layout(LayoutType.Border)
        .Items(
            X.GridPanel()
                .Scroll(ScrollMode.Both)
                .View(X.GridView().TrackOver(false))
                .ID("grdDetail")
                .Region(Region.Center).Flex(1)
                .Store(
                    X.Store()
                    .ID("stoDetail")
                    .PageSize(50).AutoLoad(false)
                    .Model(Util.GenerateModel(typeof(AP10400_pgLoadGridTrans_Result), "mdlAP10400_pgLoadGridTrans", ""))
                    //.Parameters(ps =>
                    //{
                    //    ps.Add(new StoreParameter("BranchID", "HQ.cpnyID", ParameterMode.Raw));
                    //    ps.Add(new StoreParameter("BatNbr", "App.cboBatNbr.getValue()", ParameterMode.Raw));
                    //})
                     .Parameters(ps =>
                                        {
                                            ps.Add(new StoreParameter("BatNbr", "App.cboBatNbr.value", ParameterMode.Raw));
                                            ps.Add(new StoreParameter("BranchID", "App.txtBranchID.value", ParameterMode.Raw));
                                            ps.Add(new StoreParameter("VendID", "App.cboVendID.value", ParameterMode.Raw));
                                            ps.Add(new StoreParameter("RefNbr", "App.cboRefNbr.value", ParameterMode.Raw));
                                            ps.Add(new StoreParameter("FromDate", "App.dteFromDate.getValue()", ParameterMode.Raw));
                                            ps.Add(new StoreParameter("ToDate", "App.dteToDate.getValue()", ParameterMode.Raw));
                                            ps.Add(new StoreParameter("DateType", "App.cboDateType.value", ParameterMode.Raw));
                                            ps.Add(new StoreParameter("IsGridF3", "0", ParameterMode.Value));
                                        })
                    .ServerProxy(X.AjaxProxy().Url(Url.Action("GetDetail")))
                    .Listeners(l =>
                    {
                        l.Load.Fn = "stoDetail_Load";
                    })
                )
                .Listeners(lst => lst.Render.Handler = "HQ.common.control_render(this,'grdDetail');")
                .SortableColumns(false)
                .ColumnModel(
                    X.RowNumbererColumn()
                    
                    //, X.NumberColumn().Text(Util.GetLang("ExtAmt")).DataIndex("TranAmt")
                    //     .Width(100).Align(Alignment.Right).Format("0,000")
                    //     .Editor( X.NumberField().DecimalPrecision(0).MinValue(0))
                         
                    //, X.Column().Text(Util.GetLang("Descr")).DataIndex("TranDesc").Width(200)
                    //    .Editor(X.TextField().MaxLength(100).EnforceMaxLength(true))
                    , X.CheckColumn().ID("chkSelectAdjusted").DataIndex("Selected").Width(30).Editable(true).HideTitleEl(true)
                                              .HeaderItems(
                                                HQ.Checkbox().ID("AdjustedCheckAll").MarginSpec("0 0 0 8")
                                                .Listeners(l => l.Change.Fn = "AdjustedCheckAll_Change")//bat thay doi khi check vao o tren header
                                                )
                                                .Listeners(l => l.CheckChange.Fn = "AdjustedCheckEveryRow_Change") // bat thay doi khi check vao tung o ben duoi
                                                
                                                
                                                , Html.X().DateColumn().Text(Util.GetLang("DocDate")).DataIndex("DocDate").Width(100).Format("dd-MM-yyyy")
                                                .Editor(Html.X().DateField().ID("dteDocDateGrid1").Format("dd-MM-yyyy").Editable(false)
                                                .Listeners(lst =>
                                                {

                                                    //lst.Change.Fn = "ExpiryDate_Change";

                                                }))
                                                
                             , X.Column().Text(Util.GetLang("InvcNbr")).Width(150).DataIndex("InvcNbr")
                                                .Editor(
                                                    HQ.Combo().ID("cboInvcNbr").Name("cboInvcNbr").HQProcedure("AP10400_pcBindingGrid")
                                                .HQColumnShow("InvcNbr,DocBal,VendID,Descr,DocDate").DisplayField("InvcNbr").ValueField("InvcNbr")
                                                .Width(300).HQHeightWidth(500, 400).MarginSpec("5 0 0 0").ForceSelection(true)
                                                .HQDBSys(false).AllowBlank(true)
                                                .HQParam(new StoreParameterCollection() { 
                                                        new StoreParameter("@BatNbr", "App.cboBatNbr.value", ParameterMode.Raw),
                                                        new StoreParameter("@BranchID", "App.txtBranchID.value", ParameterMode.Raw),
                                                        new StoreParameter("@VendID", "App.cboVendID.value", ParameterMode.Raw),
                                                        new StoreParameter("@RefNbr", "App.cboRefNbr.value", ParameterMode.Raw),
                                                        new StoreParameter("@FromDate", "App.dteFromDate.getValue()", ParameterMode.Raw),
                                                        new StoreParameter("@ToDate", "App.dteToDate.getValue()", ParameterMode.Raw),
                                                        new StoreParameter("@DateType", "App.cboDateType.value", ParameterMode.Raw),
                                                        new StoreParameter("@IsGridF3", "1", ParameterMode.Value),
                                                    })
                                                .Triggers(new FieldTrigger() {Icon = TriggerIcon.Clear, HideTrigger = false })
                                                     .Listeners(lst =>
                                                     {
                                                         lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                              
                                                     })    
                                                .LoadData()
                                                .Listeners(lst =>
                                                {
                                                    lst.Change.Fn = "cboInvcNbr_change";
                                                })
                                                )

                                                                       
                       , Html.X().NumberColumn().Format("0,000").ID("txtPaymentGrid").Text(Util.GetLang("Payment")).DataIndex("Payment").Width(150)
                                            .Editor(Html.X().TextField()
                                            .Listeners(lst =>
                                                {
                                                    lst.Change.Fn = "txtPaymentGrid_change";
                                                })
                                                )
                                            
                                            
                                              , Html.X().NumberColumn().Format("0,000").ID("txtDocBalGrid").Text(Util.GetLang("DocBal")).DataIndex("DocBal").Width(150)
                                            //.Editor(Html.X().TextField())
                                            
                                            , Html.X().Column().ID("txtVendIDGrid1").Text(Util.GetLang("VENDID")).DataIndex("VendID").Width(150)
                                              .Editor(Html.X().TextField())
                                              
                                              , Html.X().Column().ID("txtVendName1").Text(Util.GetLang("VendName")).DataIndex("Name").Width(150)
                                              .Editor(Html.X().TextField())
                                              
                                              , Html.X().Column().ID("txtDescrGrid1").Text(Util.GetLang("Descr")).DataIndex("Descr").Width(150)
                                              .Editor(Html.X().TextField())
                                                
                    , X.CommandColumn().Width(150)
                    .Commands(
                        X.GridCommand()
                        .Text(("Reject"))
                        .ToolTip(t =>
                        {
                            t.Text = ("Rejectrowchanges");
                        })
                        .CommandName("reject")
                        .Icon(Icon.ArrowUndo)
                    )
                    .PrepareToolbar(t =>
                    {
                        t.Handler = "toolbar.items.get(0).setVisible(record.dirty);";
                    })
                    .Listeners(l =>
                    {
                        l.Command.Handler = "grdDetail_Reject(record);";
                    })
                )
                .SelectionModel(X.RowSelectionModel().ID("slmDetail").Mode(SelectionMode.Multi))
                .BottomBar(
                    X.PagingToolbar()
                    .Items(
                        X.Label("Page size:"),
                        X.ToolbarSpacer(10),
                        X.ComboBox()
                        .Width(80)
                        .Items("1", "2", "10", "20", "30", "50")
                        .SelectedItems("50")
                        .Listeners(l => l.Select.Fn = "HQ.grid.onPageSelect")
                    )
                    .Plugins(X.ProgressBarPager())
                )
                .Plugins(
                    X.CellEditing()
                    .ClicksToEdit(1)
                    .Listeners(ls =>
                    {
                        ls.BeforeEdit.Fn = "grdDetail_BeforeEdit";
                        ls.Edit.Fn = "grdDetail_Edit";
                        ls.ValidateEdit.Fn = "grdDetail_ValidateEdit";
                    })
                )
                .Features(
                    X.GridFilters()
                        .Local(true)
                        .Filters(
                            X.NumericFilter().DataIndex("TranAmt"),
                            X.StringFilter().DataIndex("TranDesc")
                        )
                )

        )//Tab hang muc dau tu
        .Listeners(lss =>
        {
            lss.Render.Handler = "HQ.common.control_render(this,'pnlDetail')";
        })

           
            
    )// frmMain
)
)
